android.support.v4.app.ActionBarDrawerToggle -> a:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> a
    android.app.Activity mActivity -> b
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> c
    android.support.v4.widget.DrawerLayout mDrawerLayout -> d
    boolean mDrawerIndicatorEnabled -> e
    android.graphics.drawable.Drawable mThemeImage -> f
    android.graphics.drawable.Drawable mDrawerImage -> g
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> h
    int mDrawerImageResource -> i
    int mOpenDrawerContentDescRes -> j
    int mCloseDrawerContentDescRes -> k
    java.lang.Object mSetIndicatorInfo -> l
    void syncState() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> b
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> b
android.support.v4.app.ActionBarDrawerToggle$1 -> b:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> c:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> d:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> e:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$Delegate -> f:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> g:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> a
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> h:
    android.graphics.drawable.Drawable mWrapped -> a
    float mOffset -> b
    float mOffsetBy -> c
    android.graphics.Rect mTmpRect -> d
    void setOffset(float) -> a
    float getOffset() -> a
    void setOffsetBy(float) -> b
    void draw(android.graphics.Canvas) -> draw
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    boolean onStateChange(int[]) -> onStateChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> i:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> j:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v4.app.ActivityCompatHoneycomb -> k:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> l:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> m:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> n:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> o:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void setStyle(int,int) -> a
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    void dismiss() -> a
    void dismissInternal(boolean) -> a
    int getTheme() -> b
    void setCancelable(boolean) -> b
    void onAttach(android.app.Activity) -> a
    void onDetach() -> c
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> c_
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> e
    void onDestroyView() -> f
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> f
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> g
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String getTag() -> h
    void setArguments(android.os.Bundle) -> g
    android.os.Bundle getArguments() -> i
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> j
    android.content.res.Resources getResources() -> k
    java.lang.String getString(int) -> a
    android.support.v4.app.FragmentManager getFragmentManager() -> l
    android.support.v4.app.FragmentManager getChildFragmentManager() -> m
    android.support.v4.app.Fragment getParentFragment() -> n
    boolean isAdded() -> o
    boolean isDetached() -> p
    boolean isVisible() -> q
    boolean isHidden() -> r
    void onHiddenChanged(boolean) -> c
    void setRetainInstance(boolean) -> d
    void setMenuVisibility(boolean) -> e
    void setUserVisibleHint(boolean) -> f
    void startActivity(android.content.Intent) -> a
    void startActivityForResult(android.content.Intent,int) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> s
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> h
    void onStart() -> c_
    void onResume() -> t
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> u
    void onStop() -> e
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> f
    void onDestroy() -> v
    void initState() -> w
    void onDetach() -> c
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> x
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> y
    void performCreate(android.os.Bundle) -> i
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> j
    void performStart() -> z
    void performResume() -> A
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> B
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> k
    void performPause() -> C
    void performStop() -> D
    void performReallyStop() -> E
    void performDestroyView() -> F
    void performDestroy() -> G
android.support.v4.app.Fragment$1 -> p:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> q:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> r:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> a_
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> s:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> t:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> u:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> v:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> w:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> x:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack() -> c
    boolean popBackStackImmediate() -> d
    boolean popBackStackImmediate(java.lang.String,int) -> a
    void popBackStack(int,int) -> a
    int getBackStackEntryCount() -> e
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> b
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$BackStackEntry -> y:
    java.lang.String getName() -> c
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> z:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> aa:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    void popBackStack() -> c
    boolean popBackStackImmediate() -> d
    boolean popBackStackImmediate(java.lang.String,int) -> a
    void popBackStack(int,int) -> a
    int getBackStackEntryCount() -> e
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> b
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> f
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> v
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> c
    boolean execPendingActions() -> g
    void reportBackStackChanged() -> h
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> i
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> j
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> k
    void dispatchCreate() -> l
    void dispatchActivityCreated() -> m
    void dispatchStart() -> n
    void dispatchResume() -> o
    void dispatchPause() -> p
    void dispatchStop() -> q
    void dispatchReallyStop() -> r
    void dispatchDestroyView() -> s
    void dispatchDestroy() -> t
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> u
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> d
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> ab:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> ac:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> ad:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> ae:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> af:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> ag:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    long getItemId(int) -> b
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> ah:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> ai:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> aj:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> ak:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> al:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> am:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.ListFragment -> an:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> Y
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> Z
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onDestroyView() -> f
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> a
android.support.v4.app.ListFragment$1 -> ao:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> ap:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> aq:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> ar:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> as:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> at:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> au:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> av:
android.support.v4.app.Watson -> android.support.v4.app.Watson:
    java.util.ArrayList mCreatedMenus -> n
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> a
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> f
android.support.v4.app.Watson$OnCreateOptionsMenuListener -> aw:
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> a
android.support.v4.app.Watson$OnOptionsItemSelectedListener -> ax:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
android.support.v4.app.Watson$OnPrepareOptionsMenuListener -> ay:
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> a
android.support.v4.app._HoloActivity -> android.support.v4.app._HoloActivity:
    android.content.Context mActionBarContext -> n
    android.support.v4.app._HoloActivity$Holo mConfig -> o
    java.util.Map mContextMenuListeners -> p
    org.holoeverywhere.internal.WindowDecorView mDecorView -> q
    boolean mInited -> r
    int mLastThemeResourceId -> s
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> t
    java.util.List mOnWindowFocusChangeListeners -> u
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void addOnWindowFocusChangeListener(android.support.v4.app._HoloActivity$OnWindowFocusChangeListener) -> a
    android.support.v4.app._HoloActivity$Holo createConfig(android.os.Bundle) -> a
    void forceInit(android.os.Bundle) -> b
    com.actionbarsherlock.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> a
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> g
    org.holoeverywhere.preference.SharedPreferences getSharedPreferences(java.lang.String,int) -> a
    android.content.Context getSupportActionBarContext() -> h
    org.holoeverywhere.app.Application getSupportApplication() -> i
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> f
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    android.content.res.Resources$Theme getTheme() -> getTheme
    org.holoeverywhere.LayoutInflater getThemedLayoutInflater() -> j
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void onBackPressed() -> onBackPressed
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onContextItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    void onContextMenuClosed(android.view.Menu) -> onContextMenuClosed
    void onContextMenuClosed(com.actionbarsherlock.view.ContextMenu) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.support.v4.app._HoloActivity$Holo onCreateConfig(android.os.Bundle) -> c
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onCreateContextMenu(com.actionbarsherlock.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    void onDestroy() -> onDestroy
    void onInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onPostInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> b
    void onPreInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> c
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void registerForContextMenu(android.view.View,com.actionbarsherlock.internal.view.menu.ContextMenuListener) -> a
    boolean requestDecorView(android.view.View,android.view.ViewGroup$LayoutParams,int) -> a
    void requestWindowFeature(long) -> a
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setTheme(int) -> setTheme
    void setTheme(int,boolean) -> a
    void startActivities(android.content.Intent[]) -> startActivities
    void startActivities(android.content.Intent[],android.os.Bundle) -> startActivities
    void startActivity(android.content.Intent) -> startActivity
    void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    java.lang.Object superGetSystemService(java.lang.String) -> b
    void superStartActivity(android.content.Intent,int,android.os.Bundle) -> a
    void supportInvalidateOptionsMenu() -> c
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
    org.holoeverywhere.internal.WindowDecorView access$2(android.support.v4.app._HoloActivity) -> a
android.support.v4.app._HoloActivity$1 -> az:
    android.support.v4.app._HoloActivity this$0 -> a
    android.view.ViewGroup$LayoutParams val$p -> b
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> a
    boolean action(java.lang.Object) -> a
android.support.v4.app._HoloActivity$ActivityDecorView -> ba:
    android.support.v4.app._HoloActivity this$0 -> a
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
android.support.v4.app._HoloActivity$Holo -> android.support.v4.app._HoloActivity$Holo:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean ignoreApplicationInstanceCheck -> a
    boolean ignoreThemeCheck -> b
    boolean requireRoboguice -> c
    boolean requireSherlock -> d
    boolean requireSlider -> e
    boolean requireTabber -> f
    org.holoeverywhere.util.SparseIntArray windowFeatures -> g
    android.support.v4.app._HoloActivity$Holo defaultConfig() -> a
    int describeContents() -> describeContents
    void requestWindowFeature(int) -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    org.holoeverywhere.util.SparseIntArray access$0(android.support.v4.app._HoloActivity$Holo) -> a
android.support.v4.app._HoloActivity$Holo$1 -> bb:
    android.support.v4.app._HoloActivity$Holo createFromParcel(android.os.Parcel) -> a
    android.support.v4.app._HoloActivity$Holo[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.app._HoloActivity$HoloThemeException -> bc:
android.support.v4.app._HoloActivity$OnWindowFocusChangeListener -> bd:
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.app._HoloFragment -> be:
    org.holoeverywhere.app.Activity mActivity -> b
    boolean mDetachChildFragments -> a
    void fixClassloader(android.os.Bundle) -> l
    com.actionbarsherlock.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> a
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> a
    org.holoeverywhere.LayoutInflater getLayoutInflater(android.os.Bundle) -> c
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> b
    org.holoeverywhere.app.Activity getSupportActivity() -> H
    void onAttach(org.holoeverywhere.app.Activity) -> a
    void onAttach(android.app.Activity) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> b
    boolean onContextItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    void onContextMenuClosed(com.actionbarsherlock.view.ContextMenu) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onCreateContextMenu(com.actionbarsherlock.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.view.View onCreateView(org.holoeverywhere.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroyView() -> f
    void onInflate(org.holoeverywhere.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    void onViewCreated(android.view.View) -> b
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void performActivityCreated(android.os.Bundle) -> j
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    void setUserVisibleHint(boolean) -> f
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
android.support.v4.app._HoloFragmentInflater -> bf:
    android.view.View inflate(android.util.AttributeSet,android.view.View,android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    android.view.View inflate(org.holoeverywhere.LayoutInflater,android.util.AttributeSet,android.view.View,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManagerImpl obtainFragmentManager(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    int modeToMode(java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    java.lang.String[] copyOf(java.lang.String[],int) -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
android.support.v4.content.FileProvider$PathStrategy -> bg:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> bh:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.Loader -> bi:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> bj:
android.support.v4.content.LocalBroadcastManager -> bk:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void unregisterReceiver(android.content.BroadcastReceiver) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> bl:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> bm:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> bn:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.os.ParcelableCompat -> bo:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> bp:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> bq:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> br:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> bs:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> bt:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> bu:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LongSparseArray -> bv:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    long[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.LongSparseArray clone() -> a
    java.lang.Object get(long) -> a
    java.lang.Object get(long,java.lang.Object) -> a
    void delete(long) -> b
    void gc() -> d
    void put(long,java.lang.Object) -> b
    int size() -> b
    long keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    int binarySearch(long[],int,int,long) -> a
    int idealByteArraySize(int) -> c
    int idealLongArraySize(int) -> d
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> bw:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> bx:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.AccessibilityDelegateCompat -> by:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> bz:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> ca:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> cb:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> cc:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> cd:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> ce:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> cf:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> cg:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> ch:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> ci:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> cj:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> ck:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> cl:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> cm:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> cn:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> co:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> cp:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> cq:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> cr:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> cs:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> ct:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> cu:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> cv:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> cw:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> cx:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> cy:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> cz:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> da:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> db:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> dc:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void notifyDataSetChanged() -> b
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> c
    float getPageWidth(int) -> d
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> dd:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> de:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> df:
android.support.v4.view.PagerTitleStrip$PageListener -> dg:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> c_
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> dh:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> di:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> dj:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> dk:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> dl:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> dm:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> dn:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> do:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> dp:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> dq:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> dr:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> ds:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> dt:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> du:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> dv:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> dw:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> dx:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> dy:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$ViewCompatImpl -> dz:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> ea:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> eb:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> ec:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> ed:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> ee:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> ef:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> eg:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> eh:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> ei:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> ej:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> ek:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> el:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> em:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> en:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> eo:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> ep:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> eq:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    long mFakeDragBeginTime -> Q
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> R
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> S
    boolean mFirstLayout -> T
    boolean mNeedCalculatePageOffsets -> U
    boolean mCalledSuper -> V
    int mDecorChildCount -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ab
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ac
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ad
    int mDrawingOrder -> ae
    java.util.ArrayList mDrawingOrderedChildren -> af
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ag
    java.lang.Runnable mEndScrollRunnable -> ah
    int mScrollState -> ai
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> j
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> b_
    void sortChildDrawingOrder() -> k
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> c
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> l
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> d
    void endFakeDrag() -> e
    void fakeDragBy(float) -> b
    boolean isFakeDragging() -> f
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> m
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> g
    boolean pageRight() -> h
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> i
android.support.v4.view.ViewPager$1 -> er:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> es:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> et:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> eu:
android.support.v4.view.ViewPager$ItemInfo -> ev:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> ew:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> ex:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> ey:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> c_
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> ez:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> fa:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> fb:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> fc:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> fd:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> d
    boolean isChecked() -> e
    boolean isFocusable() -> f
    void setFocusable(boolean) -> a
    boolean isFocused() -> g
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> h
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> i
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> j
    void setSelected(boolean) -> e
    boolean isClickable() -> k
    void setClickable(boolean) -> f
    boolean isLongClickable() -> l
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> m
    void setEnabled(boolean) -> h
    boolean isPassword() -> n
    boolean isScrollable() -> o
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> p
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> q
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> r
    java.lang.CharSequence getContentDescription() -> s
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> t
    java.lang.String getViewIdResourceName() -> u
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> fe:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> ff:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> fg:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> fh:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> fi:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> s
    boolean isAccessibilityFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> fj:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> fk:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    void setMovementGranularities(java.lang.Object,int) -> a
    int getMovementGranularities(java.lang.Object) -> b
    boolean isAccessibilityFocused(java.lang.Object) -> c
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> fl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> fm:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> fn:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> fo:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> fp:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> fq:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> fr:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> fs:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> ft:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> fu:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> fv:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> fw:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> fx:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> fy:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> fz:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> ga:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.CursorAdapter -> gb:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$1 -> gc:
android.support.v4.widget.CursorAdapter$ChangeObserver -> gd:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> ge:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> gf:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> gg:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerOpen(android.view.View) -> j
    boolean isDrawerOpen(int) -> c
    boolean isDrawerVisible(android.view.View) -> k
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> d
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> gh:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> gi:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> gj:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> gk:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> gl:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> gm:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> gn:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> go:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> gp:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> gq:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> gr:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
android.support.v4.widget.ScrollerCompat -> gs:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> gt:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> gu:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> gv:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> gw:
android.support.v4.widget.ScrollerCompatGingerbread -> gx:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> gy:
    int[] mFrom -> j
    int[] mTo -> k
    int mStringConversionColumn -> m
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> n
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> o
    java.lang.String[] mOriginalFrom -> l
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void setViewImage(android.widget.ImageView,java.lang.String) -> a
    void setViewText(android.widget.TextView,java.lang.String) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> gz:
    java.lang.CharSequence convertToString(android.database.Cursor) -> a
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> ha:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> a
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelOpened(android.view.View) -> b
    void dispatchOnPanelClosed(android.view.View) -> c
    void updateObscuredViewsVisibility(android.view.View) -> d
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void onPanelDragged(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> g
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> f
android.support.v4.widget.SlidingPaneLayout$1 -> hb:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> hc:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> hd:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> he:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    void onEdgeDragStarted(int,int) -> b
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> hf:
    void onPanelSlide(android.view.View,float) -> a
    void onPanelOpened(android.view.View) -> a
    void onPanelClosed(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> hg:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> hh:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> hi:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> hj:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> hk:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> hl:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> hm:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> hn:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> ho:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.view.MyLayoutInflater -> hp:
    android.view.LayoutInflater mLayoutInflater -> a
    android.view.MyLayoutInflater cloneInContext(android.content.Context) -> a
    android.content.Context getContext() -> getContext
    android.view.LayoutInflater$Filter getFilter() -> getFilter
    android.view.View inflate(int,android.view.ViewGroup,boolean) -> inflate
    android.view.View inflate(int,android.view.ViewGroup) -> inflate
    android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean) -> inflate
    android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup) -> inflate
    android.view.View onCreateView(java.lang.String,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet) -> onCreateView
    void setFactory(android.view.LayoutInflater$Factory) -> setFactory
    void setFactory2(android.view.LayoutInflater$Factory2) -> setFactory2
    void setFilter(android.view.LayoutInflater$Filter) -> setFilter
    android.view.LayoutInflater cloneInContext(android.content.Context) -> cloneInContext
android.view.RobotoActivity -> android.view.RobotoActivity:
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    android.view.LayoutInflater getOrigInflater() -> i
biz.source_code.base64Coder.Base64Coder -> hq:
    java.lang.String systemLineSeparator -> a
    char[] map1 -> b
    byte[] map2 -> c
    byte[] decode(java.lang.String) -> a
    byte[] decode(char[]) -> a
    byte[] decode(char[],int,int) -> a
ch.boye.httpclientandroidlib.ConnectionClosedException -> hr:
ch.boye.httpclientandroidlib.ConnectionReuseStrategy -> hs:
    boolean keepAlive(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.Consts -> ht:
    java.nio.charset.Charset UTF_8 -> a
    java.nio.charset.Charset ASCII -> b
    java.nio.charset.Charset ISO_8859_1 -> c
ch.boye.httpclientandroidlib.FormattedHeader -> hu:
    ch.boye.httpclientandroidlib.util.CharArrayBuffer getBuffer() -> a
    int getValuePos() -> b
ch.boye.httpclientandroidlib.Header -> hv:
    java.lang.String getName() -> c
    java.lang.String getValue() -> d
    ch.boye.httpclientandroidlib.HeaderElement[] getElements() -> e
ch.boye.httpclientandroidlib.HeaderElement -> hw:
    java.lang.String getName() -> a
    java.lang.String getValue() -> b
    ch.boye.httpclientandroidlib.NameValuePair[] getParameters() -> c
    ch.boye.httpclientandroidlib.NameValuePair getParameterByName(java.lang.String) -> a
    int getParameterCount() -> d
    ch.boye.httpclientandroidlib.NameValuePair getParameter(int) -> a
ch.boye.httpclientandroidlib.HeaderElementIterator -> hx:
    boolean hasNext() -> hasNext
    ch.boye.httpclientandroidlib.HeaderElement nextElement() -> a
ch.boye.httpclientandroidlib.HeaderIterator -> hy:
    boolean hasNext() -> hasNext
    ch.boye.httpclientandroidlib.Header nextHeader() -> a
ch.boye.httpclientandroidlib.HttpClientConnection -> hz:
    boolean isResponseAvailable(int) -> a
    void sendRequestHeader(ch.boye.httpclientandroidlib.HttpRequest) -> a
    void sendRequestEntity(ch.boye.httpclientandroidlib.HttpEntityEnclosingRequest) -> a
    ch.boye.httpclientandroidlib.HttpResponse receiveResponseHeader() -> a
    void receiveResponseEntity(ch.boye.httpclientandroidlib.HttpResponse) -> a
    void flush() -> b
ch.boye.httpclientandroidlib.HttpConnection -> ia:
    void close() -> close
    boolean isOpen() -> c
    boolean isStale() -> d
    void setSocketTimeout(int) -> b
    void shutdown() -> e
ch.boye.httpclientandroidlib.HttpEntity -> ib:
    boolean isRepeatable() -> a
    boolean isChunked() -> b
    long getContentLength() -> c
    ch.boye.httpclientandroidlib.Header getContentType() -> d
    ch.boye.httpclientandroidlib.Header getContentEncoding() -> e
    java.io.InputStream getContent() -> f
    void writeTo(java.io.OutputStream) -> a
    boolean isStreaming() -> g
ch.boye.httpclientandroidlib.HttpEntityEnclosingRequest -> ic:
    boolean expectContinue() -> a
    void setEntity(ch.boye.httpclientandroidlib.HttpEntity) -> a
    ch.boye.httpclientandroidlib.HttpEntity getEntity() -> b
ch.boye.httpclientandroidlib.HttpException -> id:
ch.boye.httpclientandroidlib.HttpHost -> ie:
    java.lang.String hostname -> a
    java.lang.String lcHostname -> b
    int port -> c
    java.lang.String schemeName -> d
    java.lang.String getHostName() -> a
    int getPort() -> b
    java.lang.String getSchemeName() -> c
    java.lang.String toURI() -> d
    java.lang.String toHostString() -> e
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.HttpInetConnection -> if:
    java.net.InetAddress getRemoteAddress() -> f
    int getRemotePort() -> g
ch.boye.httpclientandroidlib.HttpMessage -> ig:
    ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion() -> c
    boolean containsHeader(java.lang.String) -> a
    ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String) -> b
    ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String) -> c
    ch.boye.httpclientandroidlib.Header[] getAllHeaders() -> d
    void addHeader(ch.boye.httpclientandroidlib.Header) -> a
    void addHeader(java.lang.String,java.lang.String) -> a
    void setHeader(ch.boye.httpclientandroidlib.Header) -> b
    void setHeader(java.lang.String,java.lang.String) -> b
    void setHeaders(ch.boye.httpclientandroidlib.Header[]) -> a
    void removeHeader(ch.boye.httpclientandroidlib.Header) -> c
    void removeHeaders(java.lang.String) -> d
    ch.boye.httpclientandroidlib.HeaderIterator headerIterator() -> e
    ch.boye.httpclientandroidlib.HeaderIterator headerIterator(java.lang.String) -> e
    ch.boye.httpclientandroidlib.params.HttpParams getParams() -> f
    void setParams(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.HttpRequest -> ih:
    ch.boye.httpclientandroidlib.RequestLine getRequestLine() -> g
ch.boye.httpclientandroidlib.HttpRequestInterceptor -> ii:
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.HttpResponse -> ij:
    ch.boye.httpclientandroidlib.StatusLine getStatusLine() -> a
    ch.boye.httpclientandroidlib.HttpEntity getEntity() -> b
    void setEntity(ch.boye.httpclientandroidlib.HttpEntity) -> a
ch.boye.httpclientandroidlib.HttpResponseFactory -> ik:
    ch.boye.httpclientandroidlib.HttpResponse newHttpResponse(ch.boye.httpclientandroidlib.StatusLine,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.HttpResponseInterceptor -> il:
    void process(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.HttpVersion -> im:
    ch.boye.httpclientandroidlib.HttpVersion HTTP_0_9 -> a
    ch.boye.httpclientandroidlib.HttpVersion HTTP_1_0 -> b
    ch.boye.httpclientandroidlib.HttpVersion HTTP_1_1 -> c
    ch.boye.httpclientandroidlib.ProtocolVersion forVersion(int,int) -> a
ch.boye.httpclientandroidlib.MalformedChunkCodingException -> in:
ch.boye.httpclientandroidlib.NameValuePair -> io:
    java.lang.String getName() -> a
    java.lang.String getValue() -> b
ch.boye.httpclientandroidlib.NoHttpResponseException -> ip:
ch.boye.httpclientandroidlib.ParseException -> iq:
ch.boye.httpclientandroidlib.ProtocolException -> ir:
ch.boye.httpclientandroidlib.ProtocolVersion -> is:
    java.lang.String protocol -> d
    int major -> e
    int minor -> f
    java.lang.String getProtocol() -> a
    int getMajor() -> b
    int getMinor() -> c
    ch.boye.httpclientandroidlib.ProtocolVersion forVersion(int,int) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isComparable(ch.boye.httpclientandroidlib.ProtocolVersion) -> a
    int compareToVersion(ch.boye.httpclientandroidlib.ProtocolVersion) -> b
    boolean lessEquals(ch.boye.httpclientandroidlib.ProtocolVersion) -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.ReasonPhraseCatalog -> it:
ch.boye.httpclientandroidlib.RequestLine -> iu:
    java.lang.String getMethod() -> a
    ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion() -> b
    java.lang.String getUri() -> c
ch.boye.httpclientandroidlib.StatusLine -> iv:
    ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion() -> a
    int getStatusCode() -> b
    java.lang.String getReasonPhrase() -> c
ch.boye.httpclientandroidlib.TokenIterator -> iw:
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> a
ch.boye.httpclientandroidlib.TruncatedChunkException -> ix:
ch.boye.httpclientandroidlib.androidextra.Base64 -> iy:
    boolean $assertionsDisabled -> a
    byte[] decode(byte[],int) -> a
    byte[] decode(byte[],int,int,int) -> a
    byte[] encode(byte[],int) -> b
    byte[] encode(byte[],int,int,int) -> b
ch.boye.httpclientandroidlib.androidextra.Base64$Coder -> iz:
    byte[] output -> a
    int op -> b
ch.boye.httpclientandroidlib.androidextra.Base64$Decoder -> ja:
    int[] DECODE -> c
    int[] DECODE_WEBSAFE -> d
    int state -> e
    int value -> f
    int[] alphabet -> g
    boolean process(byte[],int,int,boolean) -> a
ch.boye.httpclientandroidlib.androidextra.Base64$Encoder -> jb:
    byte[] ENCODE -> h
    byte[] ENCODE_WEBSAFE -> i
    byte[] tail -> j
    int tailLen -> c
    int count -> k
    boolean do_padding -> d
    boolean do_newline -> e
    boolean do_cr -> f
    byte[] alphabet -> l
    boolean $assertionsDisabled -> g
    boolean process(byte[],int,int,boolean) -> a
ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog -> jc:
    java.lang.String logTag -> a
    boolean debugEnabled -> b
    boolean errorEnabled -> c
    boolean traceEnabled -> d
    boolean warnEnabled -> e
    boolean infoEnabled -> f
    void enableDebug(boolean) -> a
    boolean isDebugEnabled() -> a
    void debug(java.lang.Object) -> a
    void debug(java.lang.Object,java.lang.Throwable) -> a
    void enableError(boolean) -> b
    boolean isErrorEnabled() -> b
    void error(java.lang.Object) -> b
    void error(java.lang.Object,java.lang.Throwable) -> b
    void enableWarn(boolean) -> c
    boolean isWarnEnabled() -> c
    void warn(java.lang.Object) -> c
    void warn(java.lang.Object,java.lang.Throwable) -> c
    void enableInfo(boolean) -> d
    boolean isInfoEnabled() -> d
    void info(java.lang.Object) -> d
    void enableTrace(boolean) -> e
    boolean isTraceEnabled() -> e
    void trace(java.lang.Object) -> e
ch.boye.httpclientandroidlib.auth.AuthOption -> jd:
    ch.boye.httpclientandroidlib.auth.AuthScheme authScheme -> a
    ch.boye.httpclientandroidlib.auth.Credentials creds -> b
    ch.boye.httpclientandroidlib.auth.AuthScheme getAuthScheme() -> a
    ch.boye.httpclientandroidlib.auth.Credentials getCredentials() -> b
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.auth.AuthProtocolState -> je:
    ch.boye.httpclientandroidlib.auth.AuthProtocolState UNCHALLENGED -> a
    ch.boye.httpclientandroidlib.auth.AuthProtocolState CHALLENGED -> b
    ch.boye.httpclientandroidlib.auth.AuthProtocolState HANDSHAKE -> c
    ch.boye.httpclientandroidlib.auth.AuthProtocolState FAILURE -> d
    ch.boye.httpclientandroidlib.auth.AuthProtocolState SUCCESS -> e
    ch.boye.httpclientandroidlib.auth.AuthProtocolState[] $VALUES -> f
    ch.boye.httpclientandroidlib.auth.AuthProtocolState[] values() -> values
    ch.boye.httpclientandroidlib.auth.AuthProtocolState valueOf(java.lang.String) -> valueOf
ch.boye.httpclientandroidlib.auth.AuthScheme -> jf:
    void processChallenge(ch.boye.httpclientandroidlib.Header) -> a
    java.lang.String getSchemeName() -> a
    java.lang.String getRealm() -> b
    boolean isConnectionBased() -> c
    boolean isComplete() -> d
    ch.boye.httpclientandroidlib.Header authenticate(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest) -> a
ch.boye.httpclientandroidlib.auth.AuthSchemeFactory -> jg:
    ch.boye.httpclientandroidlib.auth.AuthScheme newInstance(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.auth.AuthSchemeRegistry -> jh:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> a
    void register(java.lang.String,ch.boye.httpclientandroidlib.auth.AuthSchemeFactory) -> a
    ch.boye.httpclientandroidlib.auth.AuthScheme getAuthScheme(java.lang.String,ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.auth.AuthScope -> ji:
    java.lang.String ANY_HOST -> a
    java.lang.String ANY_REALM -> b
    java.lang.String ANY_SCHEME -> c
    ch.boye.httpclientandroidlib.auth.AuthScope ANY -> d
    java.lang.String scheme -> e
    java.lang.String realm -> f
    java.lang.String host -> g
    int port -> h
    int match(ch.boye.httpclientandroidlib.auth.AuthScope) -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
ch.boye.httpclientandroidlib.auth.AuthState -> jj:
    ch.boye.httpclientandroidlib.auth.AuthProtocolState state -> a
    ch.boye.httpclientandroidlib.auth.AuthScheme authScheme -> b
    ch.boye.httpclientandroidlib.auth.AuthScope authScope -> c
    ch.boye.httpclientandroidlib.auth.Credentials credentials -> d
    java.util.Queue authOptions -> e
    void reset() -> a
    ch.boye.httpclientandroidlib.auth.AuthProtocolState getState() -> b
    void setState(ch.boye.httpclientandroidlib.auth.AuthProtocolState) -> a
    ch.boye.httpclientandroidlib.auth.AuthScheme getAuthScheme() -> c
    ch.boye.httpclientandroidlib.auth.Credentials getCredentials() -> d
    void update(ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.auth.Credentials) -> a
    java.util.Queue getAuthOptions() -> e
    void update(java.util.Queue) -> a
    void setAuthScheme(ch.boye.httpclientandroidlib.auth.AuthScheme) -> a
    void setCredentials(ch.boye.httpclientandroidlib.auth.Credentials) -> a
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.auth.AuthenticationException -> jk:
ch.boye.httpclientandroidlib.auth.BasicUserPrincipal -> jl:
    java.lang.String username -> a
    java.lang.String getName() -> getName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.auth.ChallengeState -> jm:
    ch.boye.httpclientandroidlib.auth.ChallengeState TARGET -> a
    ch.boye.httpclientandroidlib.auth.ChallengeState PROXY -> b
    ch.boye.httpclientandroidlib.auth.ChallengeState[] $VALUES -> c
    ch.boye.httpclientandroidlib.auth.ChallengeState[] values() -> values
    ch.boye.httpclientandroidlib.auth.ChallengeState valueOf(java.lang.String) -> valueOf
ch.boye.httpclientandroidlib.auth.ContextAwareAuthScheme -> jn:
    ch.boye.httpclientandroidlib.Header authenticate(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.auth.Credentials -> jo:
    java.security.Principal getUserPrincipal() -> a
    java.lang.String getPassword() -> b
ch.boye.httpclientandroidlib.auth.InvalidCredentialsException -> jp:
ch.boye.httpclientandroidlib.auth.MalformedChallengeException -> jq:
ch.boye.httpclientandroidlib.auth.NTCredentials -> jr:
    ch.boye.httpclientandroidlib.auth.NTUserPrincipal principal -> a
    java.lang.String password -> b
    java.lang.String workstation -> c
    java.security.Principal getUserPrincipal() -> a
    java.lang.String getUserName() -> c
    java.lang.String getPassword() -> b
    java.lang.String getDomain() -> d
    java.lang.String getWorkstation() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.auth.NTUserPrincipal -> js:
    java.lang.String username -> a
    java.lang.String domain -> b
    java.lang.String ntname -> c
    java.lang.String getName() -> getName
    java.lang.String getDomain() -> a
    java.lang.String getUsername() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.auth.UsernamePasswordCredentials -> jt:
    ch.boye.httpclientandroidlib.auth.BasicUserPrincipal principal -> a
    java.lang.String password -> b
    java.security.Principal getUserPrincipal() -> a
    java.lang.String getPassword() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.auth.params.AuthParams -> ju:
    java.lang.String getCredentialCharset(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.client.AuthCache -> jv:
    void put(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme) -> a
    ch.boye.httpclientandroidlib.auth.AuthScheme get(ch.boye.httpclientandroidlib.HttpHost) -> a
    void remove(ch.boye.httpclientandroidlib.HttpHost) -> b
ch.boye.httpclientandroidlib.client.AuthenticationHandler -> jw:
    boolean isAuthenticationRequested(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.util.Map getChallenges(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    ch.boye.httpclientandroidlib.auth.AuthScheme selectScheme(java.util.Map,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.AuthenticationStrategy -> jx:
    boolean isAuthenticationRequested(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.util.Map getChallenges(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    java.util.Queue select(java.util.Map,ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void authSucceeded(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void authFailed(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
ch.boye.httpclientandroidlib.client.BackoffManager -> jy:
    void backOff(ch.boye.httpclientandroidlib.conn.routing.HttpRoute) -> a
    void probe(ch.boye.httpclientandroidlib.conn.routing.HttpRoute) -> b
ch.boye.httpclientandroidlib.client.CircularRedirectException -> jz:
ch.boye.httpclientandroidlib.client.ClientProtocolException -> ka:
ch.boye.httpclientandroidlib.client.ConnectionBackoffStrategy -> kb:
    boolean shouldBackoff(java.lang.Throwable) -> a
    boolean shouldBackoff(ch.boye.httpclientandroidlib.HttpResponse) -> a
ch.boye.httpclientandroidlib.client.CookieStore -> kc:
    void addCookie(ch.boye.httpclientandroidlib.cookie.Cookie) -> a
    java.util.List getCookies() -> a
    void clear() -> b
ch.boye.httpclientandroidlib.client.CredentialsProvider -> kd:
    void setCredentials(ch.boye.httpclientandroidlib.auth.AuthScope,ch.boye.httpclientandroidlib.auth.Credentials) -> a
    ch.boye.httpclientandroidlib.auth.Credentials getCredentials(ch.boye.httpclientandroidlib.auth.AuthScope) -> a
ch.boye.httpclientandroidlib.client.HttpClient -> ke:
    ch.boye.httpclientandroidlib.HttpResponse execute(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.HttpResponse execute(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.HttpRequestRetryHandler -> kf:
    boolean retryRequest(java.io.IOException,int,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.NonRepeatableRequestException -> kg:
ch.boye.httpclientandroidlib.client.RedirectException -> kh:
ch.boye.httpclientandroidlib.client.RedirectHandler -> ki:
    boolean isRedirectRequested(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.net.URI getLocationURI(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
ch.boye.httpclientandroidlib.client.RedirectStrategy -> kj:
    boolean isRedirected(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.client.methods.HttpUriRequest getRedirect(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
ch.boye.httpclientandroidlib.client.RequestDirector -> kk:
    ch.boye.httpclientandroidlib.HttpResponse execute(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.UserTokenHandler -> kl:
    java.lang.Object getUserToken(ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.cache.CacheResponseStatus -> km:
    ch.boye.httpclientandroidlib.client.cache.CacheResponseStatus CACHE_MODULE_RESPONSE -> a
    ch.boye.httpclientandroidlib.client.cache.CacheResponseStatus CACHE_HIT -> b
    ch.boye.httpclientandroidlib.client.cache.CacheResponseStatus CACHE_MISS -> c
    ch.boye.httpclientandroidlib.client.cache.CacheResponseStatus VALIDATED -> d
    ch.boye.httpclientandroidlib.client.cache.CacheResponseStatus[] $VALUES -> e
    ch.boye.httpclientandroidlib.client.cache.CacheResponseStatus[] values() -> values
    ch.boye.httpclientandroidlib.client.cache.CacheResponseStatus valueOf(java.lang.String) -> valueOf
ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry -> kn:
    java.util.Date requestDate -> a
    java.util.Date responseDate -> b
    ch.boye.httpclientandroidlib.StatusLine statusLine -> c
    ch.boye.httpclientandroidlib.message.HeaderGroup responseHeaders -> d
    ch.boye.httpclientandroidlib.client.cache.Resource resource -> e
    java.util.Map variantMap -> f
    ch.boye.httpclientandroidlib.StatusLine getStatusLine() -> a
    java.lang.String getReasonPhrase() -> b
    int getStatusCode() -> c
    java.util.Date getRequestDate() -> d
    java.util.Date getResponseDate() -> e
    ch.boye.httpclientandroidlib.Header[] getAllHeaders() -> f
    ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String) -> a
    ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String) -> b
    ch.boye.httpclientandroidlib.client.cache.Resource getResource() -> g
    boolean hasVariants() -> h
    java.util.Map getVariantMap() -> i
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.client.cache.HttpCacheEntrySerializationException -> ko:
ch.boye.httpclientandroidlib.client.cache.HttpCacheStorage -> kp:
    void putEntry(java.lang.String,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry getEntry(java.lang.String) -> a
    void removeEntry(java.lang.String) -> b
    void updateEntry(java.lang.String,ch.boye.httpclientandroidlib.client.cache.HttpCacheUpdateCallback) -> a
ch.boye.httpclientandroidlib.client.cache.HttpCacheUpdateCallback -> kq:
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry update(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
ch.boye.httpclientandroidlib.client.cache.HttpCacheUpdateException -> kr:
ch.boye.httpclientandroidlib.client.cache.InputLimit -> ks:
    long value -> a
    boolean reached -> b
    long getValue() -> a
    void reached() -> b
    boolean isReached() -> c
ch.boye.httpclientandroidlib.client.cache.Resource -> kt:
    java.io.InputStream getInputStream() -> a
    long length() -> b
    void dispose() -> c
ch.boye.httpclientandroidlib.client.cache.ResourceFactory -> ku:
    ch.boye.httpclientandroidlib.client.cache.Resource generate(java.lang.String,java.io.InputStream,ch.boye.httpclientandroidlib.client.cache.InputLimit) -> a
    ch.boye.httpclientandroidlib.client.cache.Resource copy(java.lang.String,ch.boye.httpclientandroidlib.client.cache.Resource) -> a
ch.boye.httpclientandroidlib.client.entity.DecompressingEntity -> kv:
    java.io.InputStream content -> a
    java.io.InputStream decorate(java.io.InputStream) -> a
    java.io.InputStream getDecompressingStream() -> h
    java.io.InputStream getContent() -> f
    void writeTo(java.io.OutputStream) -> a
ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity -> kw:
    java.io.InputStream decorate(java.io.InputStream) -> a
    ch.boye.httpclientandroidlib.Header getContentEncoding() -> e
    long getContentLength() -> c
    void writeTo(java.io.OutputStream) -> a
    java.io.InputStream getContent() -> f
ch.boye.httpclientandroidlib.client.entity.GzipDecompressingEntity -> kx:
    java.io.InputStream decorate(java.io.InputStream) -> a
    ch.boye.httpclientandroidlib.Header getContentEncoding() -> e
    long getContentLength() -> c
    void writeTo(java.io.OutputStream) -> a
    java.io.InputStream getContent() -> f
ch.boye.httpclientandroidlib.client.entity.UrlEncodedFormEntity -> ky:
ch.boye.httpclientandroidlib.client.methods.AbortableHttpRequest -> kz:
    void setConnectionRequest(ch.boye.httpclientandroidlib.conn.ClientConnectionRequest) -> a
    void setReleaseTrigger(ch.boye.httpclientandroidlib.conn.ConnectionReleaseTrigger) -> a
ch.boye.httpclientandroidlib.client.methods.HttpDelete -> la:
    java.lang.String getMethod() -> d_
ch.boye.httpclientandroidlib.client.methods.HttpEntityEnclosingRequestBase -> lb:
    ch.boye.httpclientandroidlib.HttpEntity entity -> c
    ch.boye.httpclientandroidlib.HttpEntity getEntity() -> b
    void setEntity(ch.boye.httpclientandroidlib.HttpEntity) -> a
    boolean expectContinue() -> a
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.client.methods.HttpGet -> lc:
    java.lang.String getMethod() -> d_
ch.boye.httpclientandroidlib.client.methods.HttpHead -> ld:
    java.lang.String getMethod() -> d_
ch.boye.httpclientandroidlib.client.methods.HttpOptions -> le:
    java.lang.String getMethod() -> d_
ch.boye.httpclientandroidlib.client.methods.HttpPatch -> lf:
    java.lang.String getMethod() -> d_
ch.boye.httpclientandroidlib.client.methods.HttpPost -> lg:
    java.lang.String getMethod() -> d_
ch.boye.httpclientandroidlib.client.methods.HttpPut -> lh:
    java.lang.String getMethod() -> d_
ch.boye.httpclientandroidlib.client.methods.HttpRequestBase -> li:
    java.util.concurrent.locks.Lock abortLock -> c
    boolean aborted -> d
    java.net.URI uri -> e
    ch.boye.httpclientandroidlib.conn.ClientConnectionRequest connRequest -> f
    ch.boye.httpclientandroidlib.conn.ConnectionReleaseTrigger releaseTrigger -> g
    java.lang.String getMethod() -> d_
    ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion() -> c
    java.net.URI getURI() -> h
    ch.boye.httpclientandroidlib.RequestLine getRequestLine() -> g
    void setURI(java.net.URI) -> a
    void setConnectionRequest(ch.boye.httpclientandroidlib.conn.ClientConnectionRequest) -> a
    void setReleaseTrigger(ch.boye.httpclientandroidlib.conn.ConnectionReleaseTrigger) -> a
    boolean isAborted() -> i
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.client.methods.HttpTrace -> lj:
    java.lang.String getMethod() -> d_
ch.boye.httpclientandroidlib.client.methods.HttpUriRequest -> lk:
    java.lang.String getMethod() -> d_
    java.net.URI getURI() -> h
    boolean isAborted() -> i
ch.boye.httpclientandroidlib.client.params.HttpClientParams -> ll:
    boolean isRedirecting(ch.boye.httpclientandroidlib.params.HttpParams) -> a
    boolean isAuthenticating(ch.boye.httpclientandroidlib.params.HttpParams) -> b
    java.lang.String getCookiePolicy(ch.boye.httpclientandroidlib.params.HttpParams) -> c
    long getConnectionManagerTimeout(ch.boye.httpclientandroidlib.params.HttpParams) -> d
ch.boye.httpclientandroidlib.client.protocol.RequestAcceptEncoding -> lm:
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.protocol.RequestAddCookies -> ln:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.protocol.RequestAuthCache -> lo:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void doPreemptiveAuth(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.auth.AuthState,ch.boye.httpclientandroidlib.client.CredentialsProvider) -> a
ch.boye.httpclientandroidlib.client.protocol.RequestAuthenticationBase -> lp:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    void process(ch.boye.httpclientandroidlib.auth.AuthState,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void ensureAuthScheme(ch.boye.httpclientandroidlib.auth.AuthScheme) -> a
    ch.boye.httpclientandroidlib.Header authenticate(ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.protocol.RequestAuthenticationBase$1 -> lq:
    int[] $SwitchMap$ch$boye$httpclientandroidlib$auth$AuthProtocolState -> a
ch.boye.httpclientandroidlib.client.protocol.RequestClientConnControl -> lr:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.protocol.RequestDefaultHeaders -> ls:
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.protocol.RequestProxyAuthentication -> lt:
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.protocol.RequestTargetAuthentication -> lu:
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.protocol.ResponseContentEncoding -> lv:
    void process(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.client.protocol.ResponseProcessCookies -> lw:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    void process(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void processCookies(ch.boye.httpclientandroidlib.HeaderIterator,ch.boye.httpclientandroidlib.cookie.CookieSpec,ch.boye.httpclientandroidlib.cookie.CookieOrigin,ch.boye.httpclientandroidlib.client.CookieStore) -> a
ch.boye.httpclientandroidlib.client.utils.CloneUtils -> lx:
    java.lang.Object clone(java.lang.Object) -> a
ch.boye.httpclientandroidlib.client.utils.URIBuilder -> ly:
    java.lang.String scheme -> a
    java.lang.String encodedSchemeSpecificPart -> b
    java.lang.String encodedAuthority -> c
    java.lang.String userInfo -> d
    java.lang.String encodedUserInfo -> e
    java.lang.String host -> f
    int port -> g
    java.lang.String path -> h
    java.lang.String encodedPath -> i
    java.lang.String encodedQuery -> j
    java.util.List queryParams -> k
    java.lang.String fragment -> l
    java.lang.String encodedFragment -> m
    java.util.List parseQuery(java.lang.String,java.nio.charset.Charset) -> a
    java.net.URI build() -> a
    java.lang.String buildString() -> c
    void digestURI(java.net.URI) -> a
    java.lang.String encodeUserInfo(java.lang.String) -> f
    java.lang.String encodePath(java.lang.String) -> g
    java.lang.String encodeQuery(java.util.List) -> a
    java.lang.String encodeFragment(java.lang.String) -> h
    ch.boye.httpclientandroidlib.client.utils.URIBuilder setScheme(java.lang.String) -> a
    ch.boye.httpclientandroidlib.client.utils.URIBuilder setUserInfo(java.lang.String) -> b
    ch.boye.httpclientandroidlib.client.utils.URIBuilder setHost(java.lang.String) -> c
    ch.boye.httpclientandroidlib.client.utils.URIBuilder setPort(int) -> a
    ch.boye.httpclientandroidlib.client.utils.URIBuilder setPath(java.lang.String) -> d
    ch.boye.httpclientandroidlib.client.utils.URIBuilder setFragment(java.lang.String) -> e
    java.lang.String getPath() -> b
    java.lang.String toString() -> toString
    java.lang.String normalizePath(java.lang.String) -> i
ch.boye.httpclientandroidlib.client.utils.URIUtils -> lz:
    java.net.URI rewriteURI(java.net.URI,ch.boye.httpclientandroidlib.HttpHost,boolean) -> a
    java.net.URI rewriteURI(java.net.URI) -> a
    java.net.URI resolve(java.net.URI,java.net.URI) -> a
    java.net.URI resolveReferenceStartingWithQueryString(java.net.URI,java.net.URI) -> b
    java.net.URI removeDotSegments(java.net.URI) -> c
    ch.boye.httpclientandroidlib.HttpHost extractHost(java.net.URI) -> b
ch.boye.httpclientandroidlib.client.utils.URLEncodedUtils -> ma:
    char[] DELIM -> a
    java.util.BitSet UNRESERVED -> b
    java.util.BitSet PUNCT -> c
    java.util.BitSet USERINFO -> d
    java.util.BitSet PATHSAFE -> e
    java.util.BitSet FRAGMENT -> f
    java.util.BitSet RESERVED -> g
    java.util.BitSet URLENCODER -> h
    java.util.List parse(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String format(java.util.List,java.lang.String) -> a
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> a
    java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> a
    java.lang.String urldecode(java.lang.String,java.nio.charset.Charset,boolean) -> a
    java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> e
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> a
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> f
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> b
    java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> c
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> d
ch.boye.httpclientandroidlib.concurrent.FutureCallback -> mb:
    void completed(java.lang.Object) -> a
    void failed(java.lang.Exception) -> a
    void cancelled() -> a
ch.boye.httpclientandroidlib.conn.BasicManagedEntity -> mc:
    ch.boye.httpclientandroidlib.conn.ManagedClientConnection managedConn -> a
    boolean attemptReuse -> b
    boolean isRepeatable() -> a
    java.io.InputStream getContent() -> f
    void ensureConsumed() -> k
    void writeTo(java.io.OutputStream) -> a
    void releaseConnection() -> h
    void abortConnection() -> i
    boolean eofDetected(java.io.InputStream) -> a
    boolean streamClosed(java.io.InputStream) -> b
    boolean streamAbort(java.io.InputStream) -> c
    void releaseManagedConnection() -> j
ch.boye.httpclientandroidlib.conn.ClientConnectionManager -> md:
    ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry getSchemeRegistry() -> a
    ch.boye.httpclientandroidlib.conn.ClientConnectionRequest requestConnection(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,java.lang.Object) -> a
    void releaseConnection(ch.boye.httpclientandroidlib.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> a
ch.boye.httpclientandroidlib.conn.ClientConnectionManagerFactory -> me:
    ch.boye.httpclientandroidlib.conn.ClientConnectionManager newInstance(ch.boye.httpclientandroidlib.params.HttpParams,ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry) -> a
ch.boye.httpclientandroidlib.conn.ClientConnectionOperator -> mf:
    ch.boye.httpclientandroidlib.conn.OperatedClientConnection createConnection() -> a
    void openConnection(ch.boye.httpclientandroidlib.conn.OperatedClientConnection,ch.boye.httpclientandroidlib.HttpHost,java.net.InetAddress,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void updateSecureConnection(ch.boye.httpclientandroidlib.conn.OperatedClientConnection,ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.conn.ClientConnectionRequest -> mg:
    ch.boye.httpclientandroidlib.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> a
ch.boye.httpclientandroidlib.conn.ConnectTimeoutException -> mh:
ch.boye.httpclientandroidlib.conn.ConnectionKeepAliveStrategy -> mi:
    long getKeepAliveDuration(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.conn.ConnectionPoolTimeoutException -> mj:
ch.boye.httpclientandroidlib.conn.ConnectionReleaseTrigger -> mk:
    void releaseConnection() -> h
    void abortConnection() -> i
ch.boye.httpclientandroidlib.conn.DnsResolver -> ml:
    java.net.InetAddress[] resolve(java.lang.String) -> a
ch.boye.httpclientandroidlib.conn.EofSensorInputStream -> mm:
    java.io.InputStream wrappedStream -> a
    boolean selfClosed -> b
    ch.boye.httpclientandroidlib.conn.EofSensorWatcher eofWatcher -> c
    boolean isReadAllowed() -> a
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int available() -> available
    void close() -> close
    void checkEOF(int) -> a
    void checkClose() -> b
    void checkAbort() -> c
    void releaseConnection() -> h
    void abortConnection() -> i
ch.boye.httpclientandroidlib.conn.EofSensorWatcher -> mn:
    boolean eofDetected(java.io.InputStream) -> a
    boolean streamClosed(java.io.InputStream) -> b
    boolean streamAbort(java.io.InputStream) -> c
ch.boye.httpclientandroidlib.conn.HttpHostConnectException -> mo:
    ch.boye.httpclientandroidlib.HttpHost host -> a
ch.boye.httpclientandroidlib.conn.HttpInetSocketAddress -> mp:
    ch.boye.httpclientandroidlib.HttpHost httphost -> a
    ch.boye.httpclientandroidlib.HttpHost getHttpHost() -> a
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.conn.HttpRoutedConnection -> mq:
    boolean isSecure() -> j
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute getRoute() -> k
    javax.net.ssl.SSLSession getSSLSession() -> l
ch.boye.httpclientandroidlib.conn.ManagedClientConnection -> mr:
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute getRoute() -> k
    void open(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void tunnelTarget(boolean,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void tunnelProxy(ch.boye.httpclientandroidlib.HttpHost,boolean,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void layerProtocol(ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void markReusable() -> m
    void setState(java.lang.Object) -> a
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> a
ch.boye.httpclientandroidlib.conn.OperatedClientConnection -> ms:
    boolean isSecure() -> h
    java.net.Socket getSocket() -> i
    void opening(java.net.Socket,ch.boye.httpclientandroidlib.HttpHost) -> a
    void openCompleted(boolean,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void update(java.net.Socket,ch.boye.httpclientandroidlib.HttpHost,boolean,ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.conn.params.ConnRouteParams -> mt:
    ch.boye.httpclientandroidlib.HttpHost NO_HOST -> a
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute NO_ROUTE -> b
    ch.boye.httpclientandroidlib.HttpHost getDefaultProxy(ch.boye.httpclientandroidlib.params.HttpParams) -> a
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute getForcedRoute(ch.boye.httpclientandroidlib.params.HttpParams) -> b
    java.net.InetAddress getLocalAddress(ch.boye.httpclientandroidlib.params.HttpParams) -> c
ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector -> mu:
    int nextStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo,ch.boye.httpclientandroidlib.conn.routing.RouteInfo) -> a
    int firstStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo) -> a
    int directStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo,ch.boye.httpclientandroidlib.conn.routing.RouteInfo) -> b
    int proxiedStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo,ch.boye.httpclientandroidlib.conn.routing.RouteInfo) -> c
ch.boye.httpclientandroidlib.conn.routing.HttpRoute -> mv:
    ch.boye.httpclientandroidlib.HttpHost[] EMPTY_HTTP_HOST_ARRAY -> a
    ch.boye.httpclientandroidlib.HttpHost targetHost -> b
    java.net.InetAddress localAddress -> c
    ch.boye.httpclientandroidlib.HttpHost[] proxyChain -> d
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$TunnelType tunnelled -> e
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$LayerType layered -> f
    boolean secure -> g
    ch.boye.httpclientandroidlib.HttpHost[] toChain(ch.boye.httpclientandroidlib.HttpHost) -> a
    ch.boye.httpclientandroidlib.HttpHost[] toChain(ch.boye.httpclientandroidlib.HttpHost[]) -> a
    ch.boye.httpclientandroidlib.HttpHost getTargetHost() -> a
    java.net.InetAddress getLocalAddress() -> b
    int getHopCount() -> c
    ch.boye.httpclientandroidlib.HttpHost getHopTarget(int) -> a
    ch.boye.httpclientandroidlib.HttpHost getProxyHost() -> d
    boolean isTunnelled() -> e
    boolean isLayered() -> f
    boolean isSecure() -> g
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.conn.routing.HttpRouteDirector -> mw:
    int nextStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo,ch.boye.httpclientandroidlib.conn.routing.RouteInfo) -> a
ch.boye.httpclientandroidlib.conn.routing.HttpRoutePlanner -> mx:
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute determineRoute(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.conn.routing.RouteInfo -> my:
    ch.boye.httpclientandroidlib.HttpHost getTargetHost() -> a
    java.net.InetAddress getLocalAddress() -> b
    int getHopCount() -> c
    ch.boye.httpclientandroidlib.HttpHost getHopTarget(int) -> a
    boolean isTunnelled() -> e
    boolean isLayered() -> f
    boolean isSecure() -> g
ch.boye.httpclientandroidlib.conn.routing.RouteInfo$LayerType -> mz:
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$LayerType PLAIN -> a
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$LayerType LAYERED -> b
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$LayerType[] $VALUES -> c
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$LayerType[] values() -> values
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$LayerType valueOf(java.lang.String) -> valueOf
ch.boye.httpclientandroidlib.conn.routing.RouteInfo$TunnelType -> na:
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$TunnelType PLAIN -> a
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$TunnelType TUNNELLED -> b
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$TunnelType[] $VALUES -> c
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$TunnelType[] values() -> values
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$TunnelType valueOf(java.lang.String) -> valueOf
ch.boye.httpclientandroidlib.conn.routing.RouteTracker -> nb:
    ch.boye.httpclientandroidlib.HttpHost targetHost -> a
    java.net.InetAddress localAddress -> b
    boolean connected -> c
    ch.boye.httpclientandroidlib.HttpHost[] proxyChain -> d
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$TunnelType tunnelled -> e
    ch.boye.httpclientandroidlib.conn.routing.RouteInfo$LayerType layered -> f
    boolean secure -> g
    void reset() -> d
    void connectTarget(boolean) -> a
    void connectProxy(ch.boye.httpclientandroidlib.HttpHost,boolean) -> a
    void tunnelTarget(boolean) -> b
    void tunnelProxy(ch.boye.httpclientandroidlib.HttpHost,boolean) -> b
    void layerProtocol(boolean) -> c
    ch.boye.httpclientandroidlib.HttpHost getTargetHost() -> a
    java.net.InetAddress getLocalAddress() -> b
    int getHopCount() -> c
    ch.boye.httpclientandroidlib.HttpHost getHopTarget(int) -> a
    boolean isConnected() -> h
    boolean isTunnelled() -> e
    boolean isLayered() -> f
    boolean isSecure() -> g
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute toRoute() -> i
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.conn.scheme.HostNameResolver -> nc:
ch.boye.httpclientandroidlib.conn.scheme.LayeredSchemeSocketFactory -> nd:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> a
ch.boye.httpclientandroidlib.conn.scheme.PlainSocketFactory -> ne:
    ch.boye.httpclientandroidlib.conn.scheme.HostNameResolver nameResolver -> a
    ch.boye.httpclientandroidlib.conn.scheme.PlainSocketFactory getSocketFactory() -> a
    java.net.Socket createSocket(ch.boye.httpclientandroidlib.params.HttpParams) -> a
    java.net.Socket createSocket() -> b
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    boolean isSecure(java.net.Socket) -> a
ch.boye.httpclientandroidlib.conn.scheme.Scheme -> nf:
    java.lang.String name -> a
    ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory socketFactory -> b
    int defaultPort -> c
    boolean layered -> d
    java.lang.String stringRep -> e
    int getDefaultPort() -> a
    ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory getSchemeSocketFactory() -> b
    java.lang.String getName() -> c
    boolean isLayered() -> d
    int resolvePort(int) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
ch.boye.httpclientandroidlib.conn.scheme.SchemeLayeredSocketFactory -> ng:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.conn.scheme.SchemeLayeredSocketFactoryAdaptor2 -> nh:
    ch.boye.httpclientandroidlib.conn.scheme.LayeredSchemeSocketFactory factory -> a
    java.net.Socket createSocket(ch.boye.httpclientandroidlib.params.HttpParams) -> a
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    boolean isSecure(java.net.Socket) -> a
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry -> ni:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> a
    ch.boye.httpclientandroidlib.conn.scheme.Scheme getScheme(java.lang.String) -> a
    ch.boye.httpclientandroidlib.conn.scheme.Scheme getScheme(ch.boye.httpclientandroidlib.HttpHost) -> a
    ch.boye.httpclientandroidlib.conn.scheme.Scheme get(java.lang.String) -> b
    ch.boye.httpclientandroidlib.conn.scheme.Scheme register(ch.boye.httpclientandroidlib.conn.scheme.Scheme) -> a
ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory -> nj:
    java.net.Socket createSocket(ch.boye.httpclientandroidlib.params.HttpParams) -> a
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    boolean isSecure(java.net.Socket) -> a
ch.boye.httpclientandroidlib.conn.ssl.AbstractVerifier -> nk:
    java.lang.String[] BAD_COUNTRY_2LDS -> a
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> a
    void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean) -> a
    boolean acceptableCountryWildcard(java.lang.String) -> a
    java.lang.String[] getCNs(java.security.cert.X509Certificate) -> a
    java.lang.String[] getSubjectAlts(java.security.cert.X509Certificate,java.lang.String) -> a
    int countDots(java.lang.String) -> b
    boolean isIPAddress(java.lang.String) -> c
ch.boye.httpclientandroidlib.conn.ssl.AllowAllHostnameVerifier -> nl:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> a
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.conn.ssl.BrowserCompatHostnameVerifier -> nm:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> a
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.conn.ssl.SSLInitializationException -> nn:
ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory -> no:
    ch.boye.httpclientandroidlib.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER -> a
    ch.boye.httpclientandroidlib.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER -> b
    ch.boye.httpclientandroidlib.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER -> c
    char[] EMPTY_PASSWORD -> d
    javax.net.ssl.SSLSocketFactory socketfactory -> e
    ch.boye.httpclientandroidlib.conn.scheme.HostNameResolver nameResolver -> f
    ch.boye.httpclientandroidlib.conn.ssl.X509HostnameVerifier hostnameVerifier -> g
    ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory getSocketFactory() -> a
    javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,ch.boye.httpclientandroidlib.conn.ssl.TrustStrategy) -> a
    javax.net.ssl.SSLContext createDefaultSSLContext() -> b
    java.net.Socket createSocket(ch.boye.httpclientandroidlib.params.HttpParams) -> a
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    boolean isSecure(java.net.Socket) -> a
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> a
    void prepareSocket(javax.net.ssl.SSLSocket) -> a
ch.boye.httpclientandroidlib.conn.ssl.StrictHostnameVerifier -> np:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> a
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.conn.ssl.TrustManagerDecorator -> nq:
    javax.net.ssl.X509TrustManager trustManager -> a
    ch.boye.httpclientandroidlib.conn.ssl.TrustStrategy trustStrategy -> b
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
ch.boye.httpclientandroidlib.conn.ssl.TrustStrategy -> nr:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> a
ch.boye.httpclientandroidlib.conn.ssl.X509HostnameVerifier -> ns:
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> a
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> a
ch.boye.httpclientandroidlib.conn.util.InetAddressUtils -> nt:
    java.util.regex.Pattern IPV4_PATTERN -> a
    java.util.regex.Pattern IPV6_STD_PATTERN -> b
    java.util.regex.Pattern IPV6_HEX_COMPRESSED_PATTERN -> c
    boolean isIPv4Address(java.lang.String) -> a
    boolean isIPv6StdAddress(java.lang.String) -> b
    boolean isIPv6HexCompressedAddress(java.lang.String) -> c
    boolean isIPv6Address(java.lang.String) -> d
ch.boye.httpclientandroidlib.cookie.ClientCookie -> nu:
    java.lang.String getAttribute(java.lang.String) -> a
    boolean containsAttribute(java.lang.String) -> b
ch.boye.httpclientandroidlib.cookie.Cookie -> nv:
    java.lang.String getName() -> a
    java.lang.String getValue() -> b
    java.lang.String getDomain() -> c
    java.lang.String getPath() -> d
    int[] getPorts() -> e
    boolean isSecure() -> f
    int getVersion() -> g
    boolean isExpired(java.util.Date) -> a
ch.boye.httpclientandroidlib.cookie.CookieAttributeHandler -> nw:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.cookie.CookieIdentityComparator -> nx:
    int compare(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.Cookie) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
ch.boye.httpclientandroidlib.cookie.CookieOrigin -> ny:
    java.lang.String host -> a
    int port -> b
    java.lang.String path -> c
    boolean secure -> d
    java.lang.String getHost() -> a
    java.lang.String getPath() -> b
    int getPort() -> c
    boolean isSecure() -> d
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.cookie.CookiePathComparator -> nz:
    java.lang.String normalizePath(ch.boye.httpclientandroidlib.cookie.Cookie) -> a
    int compare(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.Cookie) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
ch.boye.httpclientandroidlib.cookie.CookieRestrictionViolationException -> oa:
ch.boye.httpclientandroidlib.cookie.CookieSpec -> ob:
    int getVersion() -> a
    java.util.List parse(ch.boye.httpclientandroidlib.Header,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
    java.util.List formatCookies(java.util.List) -> a
    ch.boye.httpclientandroidlib.Header getVersionHeader() -> b
ch.boye.httpclientandroidlib.cookie.CookieSpecFactory -> oc:
    ch.boye.httpclientandroidlib.cookie.CookieSpec newInstance(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.cookie.CookieSpecRegistry -> od:
    java.util.concurrent.ConcurrentHashMap registeredSpecs -> a
    void register(java.lang.String,ch.boye.httpclientandroidlib.cookie.CookieSpecFactory) -> a
    ch.boye.httpclientandroidlib.cookie.CookieSpec getCookieSpec(java.lang.String,ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.cookie.MalformedCookieException -> oe:
ch.boye.httpclientandroidlib.cookie.SetCookie -> of:
    void setComment(java.lang.String) -> c
    void setExpiryDate(java.util.Date) -> b
    void setDomain(java.lang.String) -> d
    void setPath(java.lang.String) -> e
    void setSecure(boolean) -> a
    void setVersion(int) -> a
ch.boye.httpclientandroidlib.cookie.SetCookie2 -> og:
    void setCommentURL(java.lang.String) -> a_
    void setPorts(int[]) -> a
    void setDiscard(boolean) -> b
ch.boye.httpclientandroidlib.entity.AbstractHttpEntity -> oh:
    ch.boye.httpclientandroidlib.Header contentType -> a
    ch.boye.httpclientandroidlib.Header contentEncoding -> b
    boolean chunked -> c
    ch.boye.httpclientandroidlib.Header getContentType() -> d
    ch.boye.httpclientandroidlib.Header getContentEncoding() -> e
    boolean isChunked() -> b
    void setContentType(ch.boye.httpclientandroidlib.Header) -> a
    void setContentType(java.lang.String) -> a
    void setContentEncoding(ch.boye.httpclientandroidlib.Header) -> b
    void setChunked(boolean) -> a
ch.boye.httpclientandroidlib.entity.BasicHttpEntity -> oi:
    java.io.InputStream content -> d
    long length -> e
    long getContentLength() -> c
    java.io.InputStream getContent() -> f
    boolean isRepeatable() -> a
    void setContentLength(long) -> a
    void setContent(java.io.InputStream) -> a
    void writeTo(java.io.OutputStream) -> a
    boolean isStreaming() -> g
ch.boye.httpclientandroidlib.entity.BufferedHttpEntity -> oj:
    byte[] buffer -> a
    long getContentLength() -> c
    java.io.InputStream getContent() -> f
    boolean isChunked() -> b
    boolean isRepeatable() -> a
    void writeTo(java.io.OutputStream) -> a
    boolean isStreaming() -> g
ch.boye.httpclientandroidlib.entity.ByteArrayEntity -> ok:
    byte[] content -> d
    byte[] b -> e
    int off -> f
    int len -> g
    boolean isRepeatable() -> a
    long getContentLength() -> c
    java.io.InputStream getContent() -> f
    void writeTo(java.io.OutputStream) -> a
    boolean isStreaming() -> g
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.entity.ContentLengthStrategy -> ol:
    long determineLength(ch.boye.httpclientandroidlib.HttpMessage) -> a
ch.boye.httpclientandroidlib.entity.ContentType -> om:
    ch.boye.httpclientandroidlib.entity.ContentType APPLICATION_ATOM_XML -> a
    ch.boye.httpclientandroidlib.entity.ContentType APPLICATION_FORM_URLENCODED -> b
    ch.boye.httpclientandroidlib.entity.ContentType APPLICATION_JSON -> c
    ch.boye.httpclientandroidlib.entity.ContentType APPLICATION_OCTET_STREAM -> d
    ch.boye.httpclientandroidlib.entity.ContentType APPLICATION_SVG_XML -> e
    ch.boye.httpclientandroidlib.entity.ContentType APPLICATION_XHTML_XML -> f
    ch.boye.httpclientandroidlib.entity.ContentType APPLICATION_XML -> g
    ch.boye.httpclientandroidlib.entity.ContentType MULTIPART_FORM_DATA -> h
    ch.boye.httpclientandroidlib.entity.ContentType TEXT_HTML -> i
    ch.boye.httpclientandroidlib.entity.ContentType TEXT_PLAIN -> j
    ch.boye.httpclientandroidlib.entity.ContentType TEXT_XML -> k
    ch.boye.httpclientandroidlib.entity.ContentType WILDCARD -> l
    ch.boye.httpclientandroidlib.entity.ContentType DEFAULT_TEXT -> m
    ch.boye.httpclientandroidlib.entity.ContentType DEFAULT_BINARY -> n
    java.lang.String mimeType -> o
    java.nio.charset.Charset charset -> p
    java.lang.String getMimeType() -> a
    java.nio.charset.Charset getCharset() -> b
    java.lang.String toString() -> toString
    boolean valid(java.lang.String) -> a
    ch.boye.httpclientandroidlib.entity.ContentType create(java.lang.String,java.nio.charset.Charset) -> a
    ch.boye.httpclientandroidlib.entity.ContentType create(java.lang.String,java.lang.String) -> a
    ch.boye.httpclientandroidlib.entity.ContentType create(ch.boye.httpclientandroidlib.HeaderElement) -> a
    ch.boye.httpclientandroidlib.entity.ContentType get(ch.boye.httpclientandroidlib.HttpEntity) -> a
    ch.boye.httpclientandroidlib.entity.ContentType getOrDefault(ch.boye.httpclientandroidlib.HttpEntity) -> b
ch.boye.httpclientandroidlib.entity.HttpEntityWrapper -> on:
    ch.boye.httpclientandroidlib.HttpEntity wrappedEntity -> c
    boolean isRepeatable() -> a
    boolean isChunked() -> b
    long getContentLength() -> c
    ch.boye.httpclientandroidlib.Header getContentType() -> d
    ch.boye.httpclientandroidlib.Header getContentEncoding() -> e
    java.io.InputStream getContent() -> f
    void writeTo(java.io.OutputStream) -> a
    boolean isStreaming() -> g
ch.boye.httpclientandroidlib.entity.StringEntity -> oo:
    byte[] content -> d
    boolean isRepeatable() -> a
    long getContentLength() -> c
    java.io.InputStream getContent() -> f
    void writeTo(java.io.OutputStream) -> a
    boolean isStreaming() -> g
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.impl.AbstractHttpClientConnection -> op:
    ch.boye.httpclientandroidlib.impl.entity.EntitySerializer entityserializer -> a
    ch.boye.httpclientandroidlib.impl.entity.EntityDeserializer entitydeserializer -> b
    ch.boye.httpclientandroidlib.io.SessionInputBuffer inbuffer -> c
    ch.boye.httpclientandroidlib.io.SessionOutputBuffer outbuffer -> d
    ch.boye.httpclientandroidlib.io.EofSensor eofSensor -> e
    ch.boye.httpclientandroidlib.io.HttpMessageParser responseParser -> f
    ch.boye.httpclientandroidlib.io.HttpMessageWriter requestWriter -> g
    ch.boye.httpclientandroidlib.impl.HttpConnectionMetricsImpl metrics -> h
    void assertOpen() -> j
    ch.boye.httpclientandroidlib.impl.entity.EntityDeserializer createEntityDeserializer() -> k
    ch.boye.httpclientandroidlib.impl.entity.EntitySerializer createEntitySerializer() -> l
    ch.boye.httpclientandroidlib.HttpResponseFactory createHttpResponseFactory() -> m
    ch.boye.httpclientandroidlib.io.HttpMessageParser createResponseParser(ch.boye.httpclientandroidlib.io.SessionInputBuffer,ch.boye.httpclientandroidlib.HttpResponseFactory,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    ch.boye.httpclientandroidlib.io.HttpMessageWriter createRequestWriter(ch.boye.httpclientandroidlib.io.SessionOutputBuffer,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    ch.boye.httpclientandroidlib.impl.HttpConnectionMetricsImpl createConnectionMetrics(ch.boye.httpclientandroidlib.io.HttpTransportMetrics,ch.boye.httpclientandroidlib.io.HttpTransportMetrics) -> a
    void init(ch.boye.httpclientandroidlib.io.SessionInputBuffer,ch.boye.httpclientandroidlib.io.SessionOutputBuffer,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    boolean isResponseAvailable(int) -> a
    void sendRequestHeader(ch.boye.httpclientandroidlib.HttpRequest) -> a
    void sendRequestEntity(ch.boye.httpclientandroidlib.HttpEntityEnclosingRequest) -> a
    void doFlush() -> n
    void flush() -> b
    ch.boye.httpclientandroidlib.HttpResponse receiveResponseHeader() -> a
    void receiveResponseEntity(ch.boye.httpclientandroidlib.HttpResponse) -> a
    boolean isEof() -> o
    boolean isStale() -> d
ch.boye.httpclientandroidlib.impl.DefaultConnectionReuseStrategy -> oq:
    boolean keepAlive(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.TokenIterator createTokenIterator(ch.boye.httpclientandroidlib.HeaderIterator) -> a
    boolean canResponseHaveBody(ch.boye.httpclientandroidlib.HttpResponse) -> a
ch.boye.httpclientandroidlib.impl.DefaultHttpResponseFactory -> or:
    ch.boye.httpclientandroidlib.ReasonPhraseCatalog reasonCatalog -> a
    ch.boye.httpclientandroidlib.HttpResponse newHttpResponse(ch.boye.httpclientandroidlib.StatusLine,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.util.Locale determineLocale(ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.impl.EnglishReasonPhraseCatalog -> os:
    ch.boye.httpclientandroidlib.impl.EnglishReasonPhraseCatalog INSTANCE -> a
    java.lang.String[][] REASON_PHRASES -> b
    void setReason(int,java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.HttpConnectionMetricsImpl -> ot:
    ch.boye.httpclientandroidlib.io.HttpTransportMetrics inTransportMetric -> a
    ch.boye.httpclientandroidlib.io.HttpTransportMetrics outTransportMetric -> b
    long requestCount -> c
    long responseCount -> d
    void incrementRequestCount() -> a
    void incrementResponseCount() -> b
ch.boye.httpclientandroidlib.impl.SocketHttpClientConnection -> ou:
    boolean open -> a
    java.net.Socket socket -> b
    void assertNotOpen() -> p
    void assertOpen() -> j
    ch.boye.httpclientandroidlib.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    ch.boye.httpclientandroidlib.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,ch.boye.httpclientandroidlib.params.HttpParams) -> b
    void bind(java.net.Socket,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    boolean isOpen() -> c
    java.net.Socket getSocket() -> i
    java.net.InetAddress getRemoteAddress() -> f
    int getRemotePort() -> g
    void setSocketTimeout(int) -> b
    void shutdown() -> e
    void close() -> close
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> a
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.auth.AuthSchemeBase -> ov:
    ch.boye.httpclientandroidlib.auth.ChallengeState challengeState -> a
    void processChallenge(ch.boye.httpclientandroidlib.Header) -> a
    ch.boye.httpclientandroidlib.Header authenticate(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void parseChallenge(ch.boye.httpclientandroidlib.util.CharArrayBuffer,int,int) -> a
    boolean isProxy() -> e
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.auth.BasicScheme -> ow:
    boolean complete -> a
    java.lang.String getSchemeName() -> a
    void processChallenge(ch.boye.httpclientandroidlib.Header) -> a
    boolean isComplete() -> d
    boolean isConnectionBased() -> c
    ch.boye.httpclientandroidlib.Header authenticate(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest) -> a
    ch.boye.httpclientandroidlib.Header authenticate(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.Header authenticate(ch.boye.httpclientandroidlib.auth.Credentials,java.lang.String,boolean) -> a
ch.boye.httpclientandroidlib.impl.auth.BasicSchemeFactory -> ox:
    ch.boye.httpclientandroidlib.auth.AuthScheme newInstance(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.impl.auth.DigestScheme -> oy:
    char[] HEXADECIMAL -> a
    boolean complete -> b
    java.lang.String lastNonce -> c
    long nounceCount -> d
    java.lang.String cnonce -> e
    java.lang.String a1 -> f
    java.lang.String a2 -> g
    void processChallenge(ch.boye.httpclientandroidlib.Header) -> a
    boolean isComplete() -> d
    java.lang.String getSchemeName() -> a
    boolean isConnectionBased() -> c
    ch.boye.httpclientandroidlib.Header authenticate(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest) -> a
    ch.boye.httpclientandroidlib.Header authenticate(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.security.MessageDigest createMessageDigest(java.lang.String) -> b
    ch.boye.httpclientandroidlib.Header createDigestHeader(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest) -> b
    java.lang.String encode(byte[]) -> a
    java.lang.String createCnonce() -> f
ch.boye.httpclientandroidlib.impl.auth.DigestSchemeFactory -> oz:
    ch.boye.httpclientandroidlib.auth.AuthScheme newInstance(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.impl.auth.HttpEntityDigester -> pa:
    java.security.MessageDigest digester -> a
    boolean closed -> b
    byte[] digest -> c
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    byte[] getDigest() -> a
ch.boye.httpclientandroidlib.impl.auth.NTLMEngine -> pb:
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> a
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.auth.NTLMEngineException -> pc:
ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl -> pd:
    java.security.SecureRandom RND_GEN -> a
    java.lang.String credentialCharset -> b
    byte[] SIGNATURE -> c
    java.lang.String getType1Message(java.lang.String,java.lang.String) -> b
    java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],int,java.lang.String,byte[]) -> a
    java.lang.String stripDotSuffix(java.lang.String) -> e
    java.lang.String convertHost(java.lang.String) -> f
    java.lang.String convertDomain(java.lang.String) -> g
    int readULong(byte[],int) -> d
    int readUShort(byte[],int) -> e
    byte[] readSecurityBuffer(byte[],int) -> f
    byte[] makeRandomChallenge() -> d
    byte[] makeSecondaryKey() -> e
    byte[] hmacMD5(byte[],byte[]) -> a
    byte[] RC4(byte[],byte[]) -> b
    byte[] ntlm2SessionResponse(byte[],byte[],byte[]) -> a
    byte[] lmHash(java.lang.String) -> h
    byte[] ntlmHash(java.lang.String) -> i
    byte[] ntlmv2Hash(java.lang.String,java.lang.String,java.lang.String) -> b
    byte[] lmResponse(byte[],byte[]) -> d
    byte[] lmv2Response(byte[],byte[],byte[]) -> d
    byte[] createBlob(byte[],byte[],byte[]) -> e
    java.security.Key createDESKey(byte[],int) -> g
    void oddParity(byte[]) -> a
    void writeULong(byte[],int,int) -> a
    int F(int,int,int) -> a
    int G(int,int,int) -> b
    int H(int,int,int) -> c
    int rotintlft(int,int) -> a
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> a
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    byte[] access$000() -> a
    byte[] access$100() -> b
    byte[] access$200(java.lang.String) -> a
    byte[] access$300(byte[],byte[]) -> c
    byte[] access$400(java.lang.String) -> b
    byte[] access$500(java.lang.String,java.lang.String,java.lang.String) -> a
    byte[] access$600(byte[],byte[],byte[]) -> b
    byte[] access$700(byte[],byte[],byte[]) -> c
    java.security.Key access$800(byte[],int) -> a
    byte[] access$900() -> c
    int access$1100(byte[],int) -> b
    byte[] access$1200(byte[],int) -> c
    java.lang.String access$1300(java.lang.String) -> c
    java.lang.String access$1400(java.lang.String) -> d
ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$CipherGen -> pe:
    java.lang.String target -> a
    java.lang.String user -> b
    java.lang.String password -> c
    byte[] challenge -> d
    byte[] targetInformation -> e
    byte[] clientChallenge -> f
    byte[] secondaryKey -> g
    byte[] timestamp -> h
    byte[] lmHash -> i
    byte[] lmResponse -> j
    byte[] ntlmHash -> k
    byte[] ntlmResponse -> l
    byte[] ntlmv2Hash -> m
    byte[] lmv2Response -> n
    byte[] ntlmv2Blob -> o
    byte[] ntlmv2Response -> p
    byte[] ntlm2SessionResponse -> q
    byte[] lm2SessionResponse -> r
    byte[] lmUserSessionKey -> s
    byte[] ntlmUserSessionKey -> t
    byte[] ntlmv2UserSessionKey -> u
    byte[] ntlm2SessionResponseUserSessionKey -> v
    byte[] lanManagerSessionKey -> w
    byte[] getClientChallenge() -> a
    byte[] getSecondaryKey() -> b
    byte[] getLMHash() -> c
    byte[] getLMResponse() -> d
    byte[] getNTLMHash() -> e
    byte[] getNTLMResponse() -> f
    byte[] getNTLMv2Hash() -> g
    byte[] getTimestamp() -> h
    byte[] getNTLMv2Blob() -> i
    byte[] getNTLMv2Response() -> j
    byte[] getLMv2Response() -> k
    byte[] getNTLM2SessionResponse() -> l
    byte[] getLM2SessionResponse() -> m
    byte[] getLMUserSessionKey() -> n
    byte[] getNTLMUserSessionKey() -> o
    byte[] getNTLMv2UserSessionKey() -> p
    byte[] getNTLM2SessionResponseUserSessionKey() -> q
    byte[] getLanManagerSessionKey() -> r
ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$HMACMD5 -> pf:
    byte[] ipad -> a
    byte[] opad -> b
    java.security.MessageDigest md5 -> c
    byte[] getOutput() -> a
    void update(byte[]) -> a
ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$MD4 -> pg:
    int A -> a
    int B -> b
    int C -> c
    int D -> d
    long count -> e
    byte[] dataBuffer -> f
    void update(byte[]) -> a
    byte[] getOutput() -> a
    void processBuffer() -> b
    void round1(int[]) -> a
    void round2(int[]) -> b
    void round3(int[]) -> c
ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$NTLMMessage -> ph:
    byte[] messageContents -> a
    int currentOutputPosition -> b
    int getMessageLength() -> a
    void readBytes(byte[],int) -> a
    int readULong(int) -> a
    byte[] readSecurityBuffer(int) -> b
    void prepareResponse(int,int) -> a
    void addByte(byte) -> a
    void addBytes(byte[]) -> a
    void addUShort(int) -> c
    void addULong(int) -> d
    java.lang.String getResponse() -> b
ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$Type1Message -> pi:
    byte[] hostBytes -> a
    byte[] domainBytes -> b
    java.lang.String getResponse() -> b
ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$Type2Message -> pj:
    byte[] challenge -> a
    java.lang.String target -> b
    byte[] targetInfo -> c
    int flags -> d
    byte[] getChallenge() -> c
    java.lang.String getTarget() -> d
    byte[] getTargetInfo() -> e
    int getFlags() -> f
ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$Type3Message -> pk:
    int type2Flags -> a
    byte[] domainBytes -> b
    byte[] hostBytes -> c
    byte[] userBytes -> d
    byte[] lmResp -> e
    byte[] ntResp -> f
    byte[] sessionKey -> g
    java.lang.String getResponse() -> b
ch.boye.httpclientandroidlib.impl.auth.NTLMScheme -> pl:
    ch.boye.httpclientandroidlib.impl.auth.NTLMEngine engine -> a
    ch.boye.httpclientandroidlib.impl.auth.NTLMScheme$State state -> b
    java.lang.String challenge -> c
    java.lang.String getSchemeName() -> a
    java.lang.String getRealm() -> b
    boolean isConnectionBased() -> c
    void parseChallenge(ch.boye.httpclientandroidlib.util.CharArrayBuffer,int,int) -> a
    ch.boye.httpclientandroidlib.Header authenticate(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest) -> a
    boolean isComplete() -> d
ch.boye.httpclientandroidlib.impl.auth.NTLMScheme$State -> pm:
    ch.boye.httpclientandroidlib.impl.auth.NTLMScheme$State UNINITIATED -> a
    ch.boye.httpclientandroidlib.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED -> b
    ch.boye.httpclientandroidlib.impl.auth.NTLMScheme$State MSG_TYPE1_GENERATED -> c
    ch.boye.httpclientandroidlib.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED -> d
    ch.boye.httpclientandroidlib.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED -> e
    ch.boye.httpclientandroidlib.impl.auth.NTLMScheme$State FAILED -> f
    ch.boye.httpclientandroidlib.impl.auth.NTLMScheme$State[] $VALUES -> g
    ch.boye.httpclientandroidlib.impl.auth.NTLMScheme$State[] values() -> values
    ch.boye.httpclientandroidlib.impl.auth.NTLMScheme$State valueOf(java.lang.String) -> valueOf
ch.boye.httpclientandroidlib.impl.auth.NTLMSchemeFactory -> pn:
    ch.boye.httpclientandroidlib.auth.AuthScheme newInstance(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.impl.auth.RFC2617Scheme -> po:
    java.util.Map params -> a
    void parseChallenge(ch.boye.httpclientandroidlib.util.CharArrayBuffer,int,int) -> a
    java.util.Map getParameters() -> g
    java.lang.String getParameter(java.lang.String) -> a
    java.lang.String getRealm() -> b
ch.boye.httpclientandroidlib.impl.auth.UnsupportedDigestAlgorithmException -> pp:
ch.boye.httpclientandroidlib.impl.client.AbstractHttpClient -> pq:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    ch.boye.httpclientandroidlib.params.HttpParams defaultParams -> b
    ch.boye.httpclientandroidlib.protocol.HttpRequestExecutor requestExec -> c
    ch.boye.httpclientandroidlib.conn.ClientConnectionManager connManager -> d
    ch.boye.httpclientandroidlib.ConnectionReuseStrategy reuseStrategy -> e
    ch.boye.httpclientandroidlib.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> f
    ch.boye.httpclientandroidlib.cookie.CookieSpecRegistry supportedCookieSpecs -> g
    ch.boye.httpclientandroidlib.auth.AuthSchemeRegistry supportedAuthSchemes -> h
    ch.boye.httpclientandroidlib.protocol.BasicHttpProcessor mutableProcessor -> i
    ch.boye.httpclientandroidlib.protocol.ImmutableHttpProcessor protocolProcessor -> j
    ch.boye.httpclientandroidlib.client.HttpRequestRetryHandler retryHandler -> k
    ch.boye.httpclientandroidlib.client.RedirectStrategy redirectStrategy -> l
    ch.boye.httpclientandroidlib.client.AuthenticationStrategy targetAuthStrategy -> m
    ch.boye.httpclientandroidlib.client.AuthenticationStrategy proxyAuthStrategy -> n
    ch.boye.httpclientandroidlib.client.CookieStore cookieStore -> o
    ch.boye.httpclientandroidlib.client.CredentialsProvider credsProvider -> p
    ch.boye.httpclientandroidlib.conn.routing.HttpRoutePlanner routePlanner -> q
    ch.boye.httpclientandroidlib.client.UserTokenHandler userTokenHandler -> r
    ch.boye.httpclientandroidlib.client.ConnectionBackoffStrategy connectionBackoffStrategy -> s
    ch.boye.httpclientandroidlib.client.BackoffManager backoffManager -> t
    ch.boye.httpclientandroidlib.params.HttpParams createHttpParams() -> a
    ch.boye.httpclientandroidlib.protocol.BasicHttpProcessor createHttpProcessor() -> b
    ch.boye.httpclientandroidlib.protocol.HttpContext createHttpContext() -> c
    ch.boye.httpclientandroidlib.conn.ClientConnectionManager createClientConnectionManager() -> d
    ch.boye.httpclientandroidlib.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> e
    ch.boye.httpclientandroidlib.cookie.CookieSpecRegistry createCookieSpecRegistry() -> f
    ch.boye.httpclientandroidlib.protocol.HttpRequestExecutor createRequestExecutor() -> g
    ch.boye.httpclientandroidlib.ConnectionReuseStrategy createConnectionReuseStrategy() -> h
    ch.boye.httpclientandroidlib.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> i
    ch.boye.httpclientandroidlib.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> j
    ch.boye.httpclientandroidlib.client.AuthenticationStrategy createTargetAuthenticationStrategy() -> k
    ch.boye.httpclientandroidlib.client.AuthenticationStrategy createProxyAuthenticationStrategy() -> l
    ch.boye.httpclientandroidlib.client.CookieStore createCookieStore() -> m
    ch.boye.httpclientandroidlib.client.CredentialsProvider createCredentialsProvider() -> n
    ch.boye.httpclientandroidlib.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> o
    ch.boye.httpclientandroidlib.client.UserTokenHandler createUserTokenHandler() -> p
    ch.boye.httpclientandroidlib.params.HttpParams getParams() -> q
    ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager() -> r
    ch.boye.httpclientandroidlib.protocol.HttpRequestExecutor getRequestExecutor() -> s
    ch.boye.httpclientandroidlib.auth.AuthSchemeRegistry getAuthSchemes() -> t
    ch.boye.httpclientandroidlib.client.ConnectionBackoffStrategy getConnectionBackoffStrategy() -> u
    ch.boye.httpclientandroidlib.cookie.CookieSpecRegistry getCookieSpecs() -> v
    ch.boye.httpclientandroidlib.client.BackoffManager getBackoffManager() -> w
    ch.boye.httpclientandroidlib.ConnectionReuseStrategy getConnectionReuseStrategy() -> x
    ch.boye.httpclientandroidlib.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy() -> y
    ch.boye.httpclientandroidlib.client.HttpRequestRetryHandler getHttpRequestRetryHandler() -> z
    void setHttpRequestRetryHandler(ch.boye.httpclientandroidlib.client.HttpRequestRetryHandler) -> a
    ch.boye.httpclientandroidlib.client.RedirectStrategy getRedirectStrategy() -> A
    ch.boye.httpclientandroidlib.client.AuthenticationStrategy getTargetAuthenticationStrategy() -> B
    ch.boye.httpclientandroidlib.client.AuthenticationStrategy getProxyAuthenticationStrategy() -> C
    ch.boye.httpclientandroidlib.client.CookieStore getCookieStore() -> D
    ch.boye.httpclientandroidlib.client.CredentialsProvider getCredentialsProvider() -> E
    ch.boye.httpclientandroidlib.conn.routing.HttpRoutePlanner getRoutePlanner() -> F
    void setRoutePlanner(ch.boye.httpclientandroidlib.conn.routing.HttpRoutePlanner) -> a
    ch.boye.httpclientandroidlib.client.UserTokenHandler getUserTokenHandler() -> G
    ch.boye.httpclientandroidlib.protocol.BasicHttpProcessor getHttpProcessor() -> H
    ch.boye.httpclientandroidlib.protocol.HttpProcessor getProtocolProcessor() -> I
    void addResponseInterceptor(ch.boye.httpclientandroidlib.HttpResponseInterceptor) -> a
    void addRequestInterceptor(ch.boye.httpclientandroidlib.HttpRequestInterceptor) -> a
    void addRequestInterceptor(ch.boye.httpclientandroidlib.HttpRequestInterceptor,int) -> a
    ch.boye.httpclientandroidlib.HttpResponse execute(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.HttpHost determineTarget(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest) -> a
    ch.boye.httpclientandroidlib.HttpResponse execute(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.client.RequestDirector createClientRequestDirector(ch.boye.httpclientandroidlib.protocol.HttpRequestExecutor,ch.boye.httpclientandroidlib.conn.ClientConnectionManager,ch.boye.httpclientandroidlib.ConnectionReuseStrategy,ch.boye.httpclientandroidlib.conn.ConnectionKeepAliveStrategy,ch.boye.httpclientandroidlib.conn.routing.HttpRoutePlanner,ch.boye.httpclientandroidlib.protocol.HttpProcessor,ch.boye.httpclientandroidlib.client.HttpRequestRetryHandler,ch.boye.httpclientandroidlib.client.RedirectStrategy,ch.boye.httpclientandroidlib.client.AuthenticationStrategy,ch.boye.httpclientandroidlib.client.AuthenticationStrategy,ch.boye.httpclientandroidlib.client.UserTokenHandler,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    ch.boye.httpclientandroidlib.params.HttpParams determineParams(ch.boye.httpclientandroidlib.HttpRequest) -> a
ch.boye.httpclientandroidlib.impl.client.AuthenticationStrategyAdaptor -> pr:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    ch.boye.httpclientandroidlib.client.AuthenticationHandler handler -> b
    boolean isAuthenticationRequested(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.util.Map getChallenges(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    java.util.Queue select(java.util.Map,ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void authSucceeded(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void authFailed(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    boolean isCachable(ch.boye.httpclientandroidlib.auth.AuthScheme) -> a
    ch.boye.httpclientandroidlib.client.AuthenticationHandler getHandler() -> a
ch.boye.httpclientandroidlib.impl.client.AuthenticationStrategyImpl -> ps:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    java.util.List DEFAULT_SCHEME_PRIORITY -> b
    int challengeCode -> c
    java.lang.String headerName -> d
    java.lang.String prefParamName -> e
    boolean isAuthenticationRequested(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.util.Map getChallenges(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    java.util.Queue select(java.util.Map,ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void authSucceeded(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    boolean isCachable(ch.boye.httpclientandroidlib.auth.AuthScheme) -> a
    void authFailed(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
ch.boye.httpclientandroidlib.impl.client.BasicAuthCache -> pt:
    java.util.HashMap map -> a
    ch.boye.httpclientandroidlib.HttpHost getKey(ch.boye.httpclientandroidlib.HttpHost) -> c
    void put(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme) -> a
    ch.boye.httpclientandroidlib.auth.AuthScheme get(ch.boye.httpclientandroidlib.HttpHost) -> a
    void remove(ch.boye.httpclientandroidlib.HttpHost) -> b
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.client.BasicCookieStore -> pu:
    java.util.TreeSet cookies -> a
    void addCookie(ch.boye.httpclientandroidlib.cookie.Cookie) -> a
    java.util.List getCookies() -> a
    void clear() -> b
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.client.BasicCredentialsProvider -> pv:
    java.util.concurrent.ConcurrentHashMap credMap -> a
    void setCredentials(ch.boye.httpclientandroidlib.auth.AuthScope,ch.boye.httpclientandroidlib.auth.Credentials) -> a
    ch.boye.httpclientandroidlib.auth.Credentials matchCredentials(java.util.Map,ch.boye.httpclientandroidlib.auth.AuthScope) -> a
    ch.boye.httpclientandroidlib.auth.Credentials getCredentials(ch.boye.httpclientandroidlib.auth.AuthScope) -> a
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.client.ClientParamsStack -> pw:
    ch.boye.httpclientandroidlib.params.HttpParams applicationParams -> a
    ch.boye.httpclientandroidlib.params.HttpParams clientParams -> b
    ch.boye.httpclientandroidlib.params.HttpParams requestParams -> c
    ch.boye.httpclientandroidlib.params.HttpParams overrideParams -> d
    java.lang.Object getParameter(java.lang.String) -> a
    ch.boye.httpclientandroidlib.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> a
ch.boye.httpclientandroidlib.impl.client.DecompressingHttpClient -> px:
    ch.boye.httpclientandroidlib.client.HttpClient backend -> a
    ch.boye.httpclientandroidlib.HttpRequestInterceptor acceptEncodingInterceptor -> b
    ch.boye.httpclientandroidlib.HttpResponseInterceptor contentEncodingInterceptor -> c
    ch.boye.httpclientandroidlib.HttpHost getHttpHost(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest) -> a
    ch.boye.httpclientandroidlib.HttpResponse execute(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.HttpResponse execute(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.impl.client.DefaultConnectionKeepAliveStrategy -> py:
    long getKeepAliveDuration(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.impl.client.DefaultHttpClient -> pz:
    ch.boye.httpclientandroidlib.params.HttpParams createHttpParams() -> a
    void setDefaultHttpParams(ch.boye.httpclientandroidlib.params.HttpParams) -> a
    ch.boye.httpclientandroidlib.protocol.BasicHttpProcessor createHttpProcessor() -> b
ch.boye.httpclientandroidlib.impl.client.DefaultHttpRequestRetryHandler -> qa:
    int retryCount -> a
    boolean requestSentRetryEnabled -> b
    boolean retryRequest(java.io.IOException,int,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    boolean handleAsIdempotent(ch.boye.httpclientandroidlib.HttpRequest) -> a
    boolean requestIsAborted(ch.boye.httpclientandroidlib.HttpRequest) -> b
ch.boye.httpclientandroidlib.impl.client.DefaultRedirectStrategy -> qb:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    java.lang.String[] REDIRECT_METHODS -> b
    boolean isRedirected(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.net.URI getLocationURI(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> c
    java.net.URI createLocationURI(java.lang.String) -> a
    boolean isRedirectable(java.lang.String) -> b
    ch.boye.httpclientandroidlib.client.methods.HttpUriRequest getRedirect(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    ch.boye.httpclientandroidlib.client.methods.HttpUriRequest copyEntity(ch.boye.httpclientandroidlib.client.methods.HttpEntityEnclosingRequestBase,ch.boye.httpclientandroidlib.HttpRequest) -> a
ch.boye.httpclientandroidlib.impl.client.DefaultRedirectStrategyAdaptor -> qc:
    ch.boye.httpclientandroidlib.client.RedirectHandler handler -> a
    boolean isRedirected(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.client.methods.HttpUriRequest getRedirect(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    ch.boye.httpclientandroidlib.client.RedirectHandler getHandler() -> a
ch.boye.httpclientandroidlib.impl.client.DefaultRequestDirector -> qd:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    ch.boye.httpclientandroidlib.conn.ClientConnectionManager connManager -> b
    ch.boye.httpclientandroidlib.conn.routing.HttpRoutePlanner routePlanner -> c
    ch.boye.httpclientandroidlib.ConnectionReuseStrategy reuseStrategy -> d
    ch.boye.httpclientandroidlib.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> e
    ch.boye.httpclientandroidlib.protocol.HttpRequestExecutor requestExec -> f
    ch.boye.httpclientandroidlib.protocol.HttpProcessor httpProcessor -> g
    ch.boye.httpclientandroidlib.client.HttpRequestRetryHandler retryHandler -> h
    ch.boye.httpclientandroidlib.client.RedirectHandler redirectHandler -> i
    ch.boye.httpclientandroidlib.client.RedirectStrategy redirectStrategy -> j
    ch.boye.httpclientandroidlib.client.AuthenticationHandler targetAuthHandler -> k
    ch.boye.httpclientandroidlib.client.AuthenticationStrategy targetAuthStrategy -> l
    ch.boye.httpclientandroidlib.client.AuthenticationHandler proxyAuthHandler -> m
    ch.boye.httpclientandroidlib.client.AuthenticationStrategy proxyAuthStrategy -> n
    ch.boye.httpclientandroidlib.client.UserTokenHandler userTokenHandler -> o
    ch.boye.httpclientandroidlib.params.HttpParams params -> p
    ch.boye.httpclientandroidlib.conn.ManagedClientConnection managedConn -> q
    ch.boye.httpclientandroidlib.auth.AuthState targetAuthState -> r
    ch.boye.httpclientandroidlib.auth.AuthState proxyAuthState -> s
    ch.boye.httpclientandroidlib.impl.client.HttpAuthenticator authenticator -> t
    int execCount -> u
    int redirectCount -> v
    int maxRedirects -> w
    ch.boye.httpclientandroidlib.HttpHost virtualHost -> x
    ch.boye.httpclientandroidlib.impl.client.RequestWrapper wrapRequest(ch.boye.httpclientandroidlib.HttpRequest) -> a
    void rewriteRequestURI(ch.boye.httpclientandroidlib.impl.client.RequestWrapper,ch.boye.httpclientandroidlib.conn.routing.HttpRoute) -> a
    ch.boye.httpclientandroidlib.HttpResponse execute(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void tryConnect(ch.boye.httpclientandroidlib.impl.client.RoutedRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.HttpResponse tryExecute(ch.boye.httpclientandroidlib.impl.client.RoutedRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    void releaseConnection() -> a
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute determineRoute(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    void establishRoute(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    boolean createTunnelToTarget(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    boolean createTunnelToProxy(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,int,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.HttpRequest createConnectRequest(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,ch.boye.httpclientandroidlib.protocol.HttpContext) -> c
    ch.boye.httpclientandroidlib.impl.client.RoutedRequest handleResponse(ch.boye.httpclientandroidlib.impl.client.RoutedRequest,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void abortConnection() -> b
ch.boye.httpclientandroidlib.impl.client.DefaultUserTokenHandler -> qe:
    java.lang.Object getUserToken(ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.security.Principal getAuthPrincipal(ch.boye.httpclientandroidlib.auth.AuthState) -> a
ch.boye.httpclientandroidlib.impl.client.EntityEnclosingRequestWrapper -> qf:
    ch.boye.httpclientandroidlib.HttpEntity entity -> c
    boolean consumed -> d
    ch.boye.httpclientandroidlib.HttpEntity getEntity() -> b
    void setEntity(ch.boye.httpclientandroidlib.HttpEntity) -> a
    boolean expectContinue() -> a
    boolean isRepeatable() -> j
    boolean access$002(ch.boye.httpclientandroidlib.impl.client.EntityEnclosingRequestWrapper,boolean) -> a
ch.boye.httpclientandroidlib.impl.client.EntityEnclosingRequestWrapper$EntityWrapper -> qg:
    ch.boye.httpclientandroidlib.impl.client.EntityEnclosingRequestWrapper this$0 -> a
    java.io.InputStream getContent() -> f
    void writeTo(java.io.OutputStream) -> a
ch.boye.httpclientandroidlib.impl.client.HttpAuthenticator -> qh:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    boolean isAuthenticationRequested(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.client.AuthenticationStrategy,ch.boye.httpclientandroidlib.auth.AuthState,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    boolean authenticate(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.client.AuthenticationStrategy,ch.boye.httpclientandroidlib.auth.AuthState,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
ch.boye.httpclientandroidlib.impl.client.HttpAuthenticator$1 -> qi:
    int[] $SwitchMap$ch$boye$httpclientandroidlib$auth$AuthProtocolState -> a
ch.boye.httpclientandroidlib.impl.client.ProxyAuthenticationStrategy -> qj:
    void authFailed(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    void authSucceeded(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.util.Queue select(java.util.Map,ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.util.Map getChallenges(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    boolean isAuthenticationRequested(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.impl.client.RedirectLocations -> qk:
    java.util.Set unique -> a
    java.util.List all -> b
    boolean contains(java.net.URI) -> a
    void add(java.net.URI) -> b
ch.boye.httpclientandroidlib.impl.client.RequestWrapper -> ql:
    ch.boye.httpclientandroidlib.HttpRequest original -> c
    java.net.URI uri -> d
    java.lang.String method -> e
    ch.boye.httpclientandroidlib.ProtocolVersion version -> f
    int execCount -> g
    void resetHeaders() -> k
    java.lang.String getMethod() -> d_
    ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion() -> c
    void setProtocolVersion(ch.boye.httpclientandroidlib.ProtocolVersion) -> a
    java.net.URI getURI() -> h
    void setURI(java.net.URI) -> a
    ch.boye.httpclientandroidlib.RequestLine getRequestLine() -> g
    boolean isAborted() -> i
    ch.boye.httpclientandroidlib.HttpRequest getOriginal() -> l
    boolean isRepeatable() -> j
    int getExecCount() -> m
    void incrementExecCount() -> n
ch.boye.httpclientandroidlib.impl.client.RoutedRequest -> qm:
    ch.boye.httpclientandroidlib.impl.client.RequestWrapper request -> a
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute route -> b
    ch.boye.httpclientandroidlib.impl.client.RequestWrapper getRequest() -> a
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute getRoute() -> b
ch.boye.httpclientandroidlib.impl.client.TargetAuthenticationStrategy -> qn:
    void authFailed(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    void authSucceeded(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.auth.AuthScheme,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.util.Queue select(java.util.Map,ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.util.Map getChallenges(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    boolean isAuthenticationRequested(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.impl.client.TunnelRefusedException -> qo:
    ch.boye.httpclientandroidlib.HttpResponse response -> a
    ch.boye.httpclientandroidlib.HttpResponse getResponse() -> a
ch.boye.httpclientandroidlib.impl.client.cache.AsynchronousValidationRequest -> qp:
    ch.boye.httpclientandroidlib.impl.client.cache.AsynchronousValidator parent -> b
    ch.boye.httpclientandroidlib.impl.client.cache.CachingHttpClient cachingClient -> c
    ch.boye.httpclientandroidlib.HttpHost target -> d
    ch.boye.httpclientandroidlib.HttpRequest request -> e
    ch.boye.httpclientandroidlib.protocol.HttpContext context -> f
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry cacheEntry -> g
    java.lang.String identifier -> h
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    void run() -> run
ch.boye.httpclientandroidlib.impl.client.cache.AsynchronousValidator -> qq:
    ch.boye.httpclientandroidlib.impl.client.cache.CachingHttpClient cachingClient -> b
    java.util.concurrent.ExecutorService executor -> c
    java.util.Set queued -> d
    ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator cacheKeyGenerator -> e
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    void revalidateCacheEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    void markComplete(java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.client.cache.BasicHttpCache -> qr:
    ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator uriExtractor -> b
    ch.boye.httpclientandroidlib.client.cache.ResourceFactory resourceFactory -> c
    long maxObjectSizeBytes -> d
    ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater cacheEntryUpdater -> e
    ch.boye.httpclientandroidlib.impl.client.cache.CachedHttpResponseGenerator responseGenerator -> f
    ch.boye.httpclientandroidlib.impl.client.cache.CacheInvalidator cacheInvalidator -> g
    ch.boye.httpclientandroidlib.client.cache.HttpCacheStorage storage -> h
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    void flushCacheEntriesFor(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> a
    void flushInvalidatedCacheEntriesFor(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> a
    void storeInCache(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    void storeNonVariantEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> b
    void storeVariantEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> c
    void reuseVariantEntryFor(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.impl.client.cache.Variant) -> a
    boolean isIncompleteResponse(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.client.cache.Resource) -> a
    ch.boye.httpclientandroidlib.HttpResponse generateIncompleteResponseError(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.client.cache.Resource) -> b
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry doGetUpdatedParentEntry(java.lang.String,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.lang.String,java.lang.String) -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry updateCacheEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.HttpResponse,java.util.Date,java.util.Date) -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry updateVariantCacheEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.HttpResponse,java.util.Date,java.util.Date,java.lang.String) -> a
    ch.boye.httpclientandroidlib.HttpResponse cacheAndReturnResponse(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse,java.util.Date,java.util.Date) -> a
    ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader getResponseReader(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry getCacheEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> b
    void flushInvalidatedCacheEntriesFor(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> c
    java.util.Map getVariantCacheEntriesWithEtags(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> d
    void addVariantWithEtag(java.lang.String,java.lang.String,java.util.Map) -> a
    ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator access$000(ch.boye.httpclientandroidlib.impl.client.cache.BasicHttpCache) -> a
ch.boye.httpclientandroidlib.impl.client.cache.BasicHttpCache$1 -> qs:
    ch.boye.httpclientandroidlib.HttpRequest val$req -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry val$entry -> b
    java.lang.String val$variantURI -> c
    ch.boye.httpclientandroidlib.impl.client.cache.BasicHttpCache this$0 -> d
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry update(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
ch.boye.httpclientandroidlib.impl.client.cache.BasicHttpCache$2 -> qt:
    ch.boye.httpclientandroidlib.HttpRequest val$req -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry val$entry -> b
    java.lang.String val$variantKey -> c
    java.lang.String val$variantCacheKey -> d
    ch.boye.httpclientandroidlib.impl.client.cache.BasicHttpCache this$0 -> e
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry update(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
ch.boye.httpclientandroidlib.impl.client.cache.BasicHttpCacheStorage -> qu:
    ch.boye.httpclientandroidlib.impl.client.cache.CacheMap entries -> a
    void putEntry(java.lang.String,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry getEntry(java.lang.String) -> a
    void removeEntry(java.lang.String) -> b
    void updateEntry(java.lang.String,ch.boye.httpclientandroidlib.client.cache.HttpCacheUpdateCallback) -> a
ch.boye.httpclientandroidlib.impl.client.cache.CacheConfig -> qv:
    long maxObjectSize -> a
    int maxCacheEntries -> b
    int maxUpdateRetries -> c
    boolean heuristicCachingEnabled -> d
    float heuristicCoefficient -> e
    long heuristicDefaultLifetime -> f
    boolean isSharedCache -> g
    int asynchronousWorkersMax -> h
    int asynchronousWorkersCore -> i
    int asynchronousWorkerIdleLifetimeSecs -> j
    int revalidationQueueSize -> k
    long getMaxObjectSize() -> a
    void setMaxObjectSize(long) -> a
    boolean isSharedCache() -> b
    void setSharedCache(boolean) -> a
    int getMaxCacheEntries() -> c
    void setMaxCacheEntries(int) -> a
    boolean isHeuristicCachingEnabled() -> d
    float getHeuristicCoefficient() -> e
    long getHeuristicDefaultLifetime() -> f
    int getAsynchronousWorkersMax() -> g
    int getAsynchronousWorkersCore() -> h
    int getAsynchronousWorkerIdleLifetimeSecs() -> i
    int getRevalidationQueueSize() -> j
ch.boye.httpclientandroidlib.impl.client.cache.CacheEntity -> qw:
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry cacheEntry -> a
    ch.boye.httpclientandroidlib.Header getContentType() -> d
    ch.boye.httpclientandroidlib.Header getContentEncoding() -> e
    boolean isChunked() -> b
    boolean isRepeatable() -> a
    long getContentLength() -> c
    java.io.InputStream getContent() -> f
    void writeTo(java.io.OutputStream) -> a
    boolean isStreaming() -> g
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater -> qx:
    ch.boye.httpclientandroidlib.client.cache.ResourceFactory resourceFactory -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry updateCacheEntry(java.lang.String,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date,java.util.Date,ch.boye.httpclientandroidlib.HttpResponse) -> a
    ch.boye.httpclientandroidlib.Header[] mergeHeaders(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.HttpResponse) -> a
    void removeCacheHeadersThatMatchResponse(java.util.List,ch.boye.httpclientandroidlib.HttpResponse) -> a
    void removeCacheEntry1xxWarnings(java.util.List,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    boolean entryDateHeaderNewerThenResponse(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.HttpResponse) -> b
    boolean entryAndResponseHaveDateHeader(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.HttpResponse) -> c
ch.boye.httpclientandroidlib.impl.client.cache.CacheInvalidator -> qy:
    ch.boye.httpclientandroidlib.client.cache.HttpCacheStorage storage -> b
    ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator cacheKeyGenerator -> c
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    void flushInvalidatedCacheEntries(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> a
    void flushEntry(java.lang.String) -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry getEntry(java.lang.String) -> b
    void flushUriIfSameHost(java.net.URL,java.net.URL) -> a
    void flushRelativeUriFromSameHost(java.net.URL,java.lang.String) -> a
    boolean flushAbsoluteUriFromSameHost(java.net.URL,java.lang.String) -> b
    java.net.URL getAbsoluteURL(java.lang.String) -> c
    java.net.URL getRelativeURL(java.net.URL,java.lang.String) -> c
    boolean requestShouldNotBeCached(ch.boye.httpclientandroidlib.HttpRequest) -> a
    boolean notGetOrHeadRequest(java.lang.String) -> d
    void flushInvalidatedCacheEntries(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> a
    java.net.URL getContentLocationURL(java.net.URL,ch.boye.httpclientandroidlib.HttpResponse) -> a
    boolean responseAndEntryEtagsDiffer(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    boolean responseDateOlderThanEntryDate(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> b
ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator -> qz:
    java.lang.String getURI(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> a
    java.lang.String canonicalizeUri(java.lang.String) -> a
    java.lang.String canonicalizePath(java.lang.String) -> b
    int canonicalizePort(int,java.lang.String) -> a
    boolean isRelativeRequest(ch.boye.httpclientandroidlib.HttpRequest) -> a
    java.lang.String getFullHeaderValue(ch.boye.httpclientandroidlib.Header[]) -> a
    java.lang.String getVariantURI(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    java.lang.String getVariantKey(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
ch.boye.httpclientandroidlib.impl.client.cache.CacheMap -> ra:
    int maxEntries -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy -> rb:
    long getCurrentAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> a
    long getFreshnessLifetimeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    boolean isResponseFresh(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> b
    boolean isResponseHeuristicallyFresh(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date,float,long) -> a
    long getHeuristicFreshnessLifetimeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,float,long) -> a
    boolean isRevalidatable(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> b
    boolean mustRevalidate(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> c
    boolean proxyRevalidate(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> d
    boolean mayReturnStaleWhileRevalidating(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> c
    boolean mayReturnStaleIfError(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> a
    boolean mayReturnStaleIfError(ch.boye.httpclientandroidlib.Header[],long) -> a
    java.util.Date getDateValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> e
    java.util.Date getLastModifiedValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> f
    long getContentLengthValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> g
    boolean hasContentLengthHeader(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> h
    boolean contentLengthHeaderMatchesActualLength(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> i
    long getApparentAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> j
    long getAgeValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> k
    long getCorrectedReceivedAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> l
    long getResponseDelaySecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> m
    long getCorrectedInitialAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> n
    long getResidentTimeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> d
    long getMaxAge(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> o
    java.util.Date getExpirationDate(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> p
    boolean hasCacheControlDirective(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.lang.String) -> a
    long getStalenessSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> e
ch.boye.httpclientandroidlib.impl.client.cache.CacheableRequestPolicy -> rc:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    boolean isServableFromCache(ch.boye.httpclientandroidlib.HttpRequest) -> a
ch.boye.httpclientandroidlib.impl.client.cache.CachedHttpResponseGenerator -> rd:
    ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy validityStrategy -> a
    ch.boye.httpclientandroidlib.HttpResponse generateResponse(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    ch.boye.httpclientandroidlib.HttpResponse generateNotModifiedResponse(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> b
    void addMissingContentLengthHeader(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.HttpEntity) -> a
    boolean transferEncodingIsPresent(ch.boye.httpclientandroidlib.HttpResponse) -> a
ch.boye.httpclientandroidlib.impl.client.cache.CachedResponseSuitabilityChecker -> re:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    boolean sharedCache -> b
    boolean useHeuristicCaching -> c
    float heuristicCoefficient -> d
    long heuristicDefaultLifetime -> e
    ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy validityStrategy -> f
    boolean isFreshEnough(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.HttpRequest,java.util.Date) -> a
    boolean originInsistsOnFreshness(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    long getMaxStale(ch.boye.httpclientandroidlib.HttpRequest) -> b
    boolean canCachedResponseBeUsed(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> a
    boolean isConditional(ch.boye.httpclientandroidlib.HttpRequest) -> a
    boolean allConditionalsMatch(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> a
    boolean hasUnsupportedConditionalHeaders(ch.boye.httpclientandroidlib.HttpRequest) -> c
    boolean hasSupportedEtagValidator(ch.boye.httpclientandroidlib.HttpRequest) -> d
    boolean hasSupportedLastModifiedValidator(ch.boye.httpclientandroidlib.HttpRequest) -> e
    boolean etagValidatorMatches(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    boolean lastModifiedValidatorMatches(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> b
    boolean hasValidDateField(ch.boye.httpclientandroidlib.HttpRequest,java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.client.cache.CachingHttpClient -> rf:
    java.util.concurrent.atomic.AtomicLong cacheHits -> b
    java.util.concurrent.atomic.AtomicLong cacheMisses -> c
    java.util.concurrent.atomic.AtomicLong cacheUpdates -> d
    java.util.Map viaHeaders -> e
    ch.boye.httpclientandroidlib.client.HttpClient backend -> f
    ch.boye.httpclientandroidlib.impl.client.cache.HttpCache responseCache -> g
    ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy validityPolicy -> h
    ch.boye.httpclientandroidlib.impl.client.cache.ResponseCachingPolicy responseCachingPolicy -> i
    ch.boye.httpclientandroidlib.impl.client.cache.CachedHttpResponseGenerator responseGenerator -> j
    ch.boye.httpclientandroidlib.impl.client.cache.CacheableRequestPolicy cacheableRequestPolicy -> k
    ch.boye.httpclientandroidlib.impl.client.cache.CachedResponseSuitabilityChecker suitabilityChecker -> l
    ch.boye.httpclientandroidlib.impl.client.cache.ConditionalRequestBuilder conditionalRequestBuilder -> m
    long maxObjectSizeBytes -> n
    boolean sharedCache -> o
    ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance responseCompliance -> p
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolCompliance requestCompliance -> q
    ch.boye.httpclientandroidlib.impl.client.cache.AsynchronousValidator asynchRevalidator -> r
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    ch.boye.httpclientandroidlib.impl.client.cache.AsynchronousValidator makeAsynchronousValidator(ch.boye.httpclientandroidlib.impl.client.cache.CacheConfig) -> a
    ch.boye.httpclientandroidlib.HttpResponse execute(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.HttpResponse execute(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.HttpResponse handleCacheHit(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> b
    ch.boye.httpclientandroidlib.HttpResponse revalidateCacheEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> a
    ch.boye.httpclientandroidlib.HttpResponse handleCacheMiss(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> c
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry satisfyFromCache(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> a
    ch.boye.httpclientandroidlib.HttpResponse getFatallyNoncompliantResponse(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.util.Map getExistingCacheVariants(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> b
    void recordCacheMiss(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> c
    void recordCacheHit(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> d
    void recordCacheUpdate(ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void flushEntriesInvalidatedByRequest(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> e
    ch.boye.httpclientandroidlib.HttpResponse generateCachedResponse(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> a
    ch.boye.httpclientandroidlib.HttpResponse handleRevalidationFailure(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> b
    ch.boye.httpclientandroidlib.HttpResponse generateGatewayTimeout(ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    ch.boye.httpclientandroidlib.HttpResponse unvalidatedCacheHit(ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    boolean staleResponseNotAllowed(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> a
    boolean mayCallBackend(ch.boye.httpclientandroidlib.HttpRequest) -> b
    boolean explicitFreshnessRequest(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date) -> b
    java.lang.String generateViaHeader(ch.boye.httpclientandroidlib.HttpMessage) -> a
    void setResponseStatus(ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.client.cache.CacheResponseStatus) -> a
    boolean isSharedCache() -> a
    java.util.Date getCurrentDate() -> b
    boolean clientRequestsOurOptions(ch.boye.httpclientandroidlib.HttpRequest) -> a
    ch.boye.httpclientandroidlib.HttpResponse callBackend(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    boolean revalidationResponseIsTooOld(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    ch.boye.httpclientandroidlib.HttpResponse negotiateResponseFromVariants(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext,java.util.Map) -> a
    ch.boye.httpclientandroidlib.HttpResponse retryRequestUnconditionally(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> c
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry getUpdatedVariantEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,java.util.Date,java.util.Date,ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.impl.client.cache.Variant,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    void tryToUpdateVariantMap(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.impl.client.cache.Variant) -> a
    boolean shouldSendNotModifiedResponse(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    ch.boye.httpclientandroidlib.HttpResponse revalidateCacheEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    boolean staleIfErrorAppliesTo(int) -> a
    ch.boye.httpclientandroidlib.HttpResponse handleBackendResponse(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,java.util.Date,java.util.Date,ch.boye.httpclientandroidlib.HttpResponse) -> a
    void storeRequestIfModifiedSinceFor304Response(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> a
    boolean alreadyHaveNewerCacheEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> a
ch.boye.httpclientandroidlib.impl.client.cache.CombinedEntity -> rg:
    ch.boye.httpclientandroidlib.client.cache.Resource resource -> d
    java.io.InputStream combinedStream -> e
    long getContentLength() -> c
    boolean isRepeatable() -> a
    boolean isStreaming() -> g
    java.io.InputStream getContent() -> f
    void writeTo(java.io.OutputStream) -> a
    void dispose() -> h
    void access$000(ch.boye.httpclientandroidlib.impl.client.cache.CombinedEntity) -> a
ch.boye.httpclientandroidlib.impl.client.cache.CombinedEntity$ResourceStream -> rh:
    ch.boye.httpclientandroidlib.impl.client.cache.CombinedEntity this$0 -> a
    void close() -> close
ch.boye.httpclientandroidlib.impl.client.cache.ConditionalRequestBuilder -> ri:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    ch.boye.httpclientandroidlib.HttpRequest buildConditionalRequest(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    ch.boye.httpclientandroidlib.HttpRequest buildConditionalRequestFromVariants(ch.boye.httpclientandroidlib.HttpRequest,java.util.Map) -> a
    ch.boye.httpclientandroidlib.HttpRequest buildUnconditionalRequest(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> b
ch.boye.httpclientandroidlib.impl.client.cache.DBHttpCacheStorage -> rj:
    java.lang.String TAG -> a
    java.lang.Boolean logDebugEnabled -> b
    pt.rocket.framework.network.HttpCacheDatabaseHelper dbHelper -> c
    ch.boye.httpclientandroidlib.impl.client.cache.DefaultHttpCacheEntrySerializer serializer -> d
    ch.boye.httpclientandroidlib.impl.client.cache.CacheMap entries -> e
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry getEntry(java.lang.String) -> a
    void putEntry(java.lang.String,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry) -> a
    void removeEntry(java.lang.String) -> b
    void updateEntry(java.lang.String,ch.boye.httpclientandroidlib.client.cache.HttpCacheUpdateCallback) -> a
ch.boye.httpclientandroidlib.impl.client.cache.DefaultHttpCacheEntrySerializer -> rk:
    void writeTo(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.io.OutputStream) -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry readFrom(java.io.InputStream) -> a
ch.boye.httpclientandroidlib.impl.client.cache.HeapResource -> rl:
    byte[] b -> a
    byte[] getByteArray() -> d
    java.io.InputStream getInputStream() -> a
    long length() -> b
    void dispose() -> c
ch.boye.httpclientandroidlib.impl.client.cache.HeapResourceFactory -> rm:
    ch.boye.httpclientandroidlib.client.cache.Resource generate(java.lang.String,java.io.InputStream,ch.boye.httpclientandroidlib.client.cache.InputLimit) -> a
    ch.boye.httpclientandroidlib.client.cache.Resource copy(java.lang.String,ch.boye.httpclientandroidlib.client.cache.Resource) -> a
ch.boye.httpclientandroidlib.impl.client.cache.HttpCache -> rn:
    void flushCacheEntriesFor(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> a
    void flushInvalidatedCacheEntriesFor(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> c
    void flushInvalidatedCacheEntriesFor(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry getCacheEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> b
    java.util.Map getVariantCacheEntriesWithEtags(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest) -> d
    ch.boye.httpclientandroidlib.HttpResponse cacheAndReturnResponse(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse,java.util.Date,java.util.Date) -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry updateCacheEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.HttpResponse,java.util.Date,java.util.Date) -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry updateVariantCacheEntry(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.HttpResponse,java.util.Date,java.util.Date,java.lang.String) -> a
    void reuseVariantEntryFor(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.impl.client.cache.Variant) -> a
ch.boye.httpclientandroidlib.impl.client.cache.IOUtils -> ro:
    void copy(java.io.InputStream,java.io.OutputStream) -> a
    void closeSilently(java.io.Closeable) -> a
    void copyAndClose(java.io.InputStream,java.io.OutputStream) -> b
ch.boye.httpclientandroidlib.impl.client.cache.OptionsHttp11Response -> rp:
    ch.boye.httpclientandroidlib.StatusLine statusLine -> c
    ch.boye.httpclientandroidlib.ProtocolVersion version -> d
    ch.boye.httpclientandroidlib.StatusLine getStatusLine() -> a
    ch.boye.httpclientandroidlib.HttpEntity getEntity() -> b
    void setEntity(ch.boye.httpclientandroidlib.HttpEntity) -> a
    ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion() -> c
    boolean containsHeader(java.lang.String) -> a
    ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String) -> b
    ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String) -> c
    ch.boye.httpclientandroidlib.Header[] getAllHeaders() -> d
    void addHeader(ch.boye.httpclientandroidlib.Header) -> a
    void addHeader(java.lang.String,java.lang.String) -> a
    void setHeader(ch.boye.httpclientandroidlib.Header) -> b
    void setHeader(java.lang.String,java.lang.String) -> b
    void setHeaders(ch.boye.httpclientandroidlib.Header[]) -> a
    void removeHeader(ch.boye.httpclientandroidlib.Header) -> c
    void removeHeaders(java.lang.String) -> d
    ch.boye.httpclientandroidlib.HeaderIterator headerIterator() -> e
    ch.boye.httpclientandroidlib.HeaderIterator headerIterator(java.lang.String) -> e
    ch.boye.httpclientandroidlib.params.HttpParams getParams() -> f
    void setParams(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolCompliance -> rq:
    java.util.List disallowedWithNoCache -> a
    java.util.List requestIsFatallyNonCompliant(ch.boye.httpclientandroidlib.HttpRequest) -> a
    ch.boye.httpclientandroidlib.HttpRequest makeRequestCompliant(ch.boye.httpclientandroidlib.HttpRequest) -> b
    void stripOtherFreshnessDirectivesWithNoCache(ch.boye.httpclientandroidlib.HttpRequest) -> e
    java.lang.String buildHeaderFromElements(java.util.List) -> a
    boolean requestMustNotHaveEntity(ch.boye.httpclientandroidlib.HttpRequest) -> f
    void decrementOPTIONSMaxForwardsIfGreaterThen0(ch.boye.httpclientandroidlib.HttpRequest) -> g
    void verifyOPTIONSRequestWithBodyHasContentType(ch.boye.httpclientandroidlib.HttpRequest) -> h
    void addContentTypeHeaderIfMissing(ch.boye.httpclientandroidlib.HttpEntityEnclosingRequest) -> a
    void verifyRequestWithExpectContinueFlagHas100continueHeader(ch.boye.httpclientandroidlib.HttpRequest) -> i
    void remove100ContinueHeaderIfExists(ch.boye.httpclientandroidlib.HttpRequest) -> j
    void add100ContinueHeaderIfMissing(ch.boye.httpclientandroidlib.HttpRequest) -> k
    ch.boye.httpclientandroidlib.HttpRequest upgradeRequestTo(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.ProtocolVersion) -> a
    ch.boye.httpclientandroidlib.HttpRequest downgradeRequestTo(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.ProtocolVersion) -> b
    boolean requestMinorVersionIsTooHighMajorVersionsMatch(ch.boye.httpclientandroidlib.HttpRequest) -> c
    boolean requestVersionIsTooLow(ch.boye.httpclientandroidlib.HttpRequest) -> d
    ch.boye.httpclientandroidlib.HttpResponse getErrorForRequest(ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError) -> a
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError requestHasWeakETagAndRange(ch.boye.httpclientandroidlib.HttpRequest) -> l
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError requestHasWeekETagForPUTOrDELETEIfMatch(ch.boye.httpclientandroidlib.HttpRequest) -> m
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError requestContainsNoCacheDirectiveWithFieldName(ch.boye.httpclientandroidlib.HttpRequest) -> n
ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolCompliance$1 -> rr:
    int[] $SwitchMap$ch$boye$httpclientandroidlib$impl$client$cache$RequestProtocolError -> a
ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError -> rs:
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError UNKNOWN -> a
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError BODY_BUT_NO_LENGTH_ERROR -> b
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError WEAK_ETAG_ON_PUTDELETE_METHOD_ERROR -> c
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError WEAK_ETAG_AND_RANGE_ERROR -> d
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError NO_CACHE_DIRECTIVE_WITH_FIELD_NAME -> e
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError[] $VALUES -> f
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError[] values() -> values
    ch.boye.httpclientandroidlib.impl.client.cache.RequestProtocolError valueOf(java.lang.String) -> valueOf
ch.boye.httpclientandroidlib.impl.client.cache.ResponseCachingPolicy -> rt:
    long maxObjectSizeBytes -> b
    boolean sharedCache -> c
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    java.util.Set cacheableStatuses -> d
    java.util.Set uncacheableStatuses -> e
    boolean isResponseCacheable(java.lang.String,ch.boye.httpclientandroidlib.HttpResponse) -> a
    boolean unknownStatusCode(int) -> a
    boolean isExplicitlyNonCacheable(ch.boye.httpclientandroidlib.HttpResponse) -> a
    boolean hasCacheControlParameterFrom(ch.boye.httpclientandroidlib.HttpMessage,java.lang.String[]) -> a
    boolean isExplicitlyCacheable(ch.boye.httpclientandroidlib.HttpResponse) -> b
    boolean isResponseCacheable(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> a
    boolean expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(ch.boye.httpclientandroidlib.HttpResponse) -> c
    boolean from1_0Origin(ch.boye.httpclientandroidlib.HttpResponse) -> d
    boolean requestProtocolGreaterThanAccepted(ch.boye.httpclientandroidlib.HttpRequest) -> a
ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance -> ru:
    void ensureProtocolCompliance(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> a
    void consumeBody(ch.boye.httpclientandroidlib.HttpResponse) -> a
    void warningsWithNonMatchingWarnDatesAreRemoved(ch.boye.httpclientandroidlib.HttpResponse) -> b
    void identityIsNotUsedInContentEncoding(ch.boye.httpclientandroidlib.HttpResponse) -> c
    void ensure206ContainsDateHeader(ch.boye.httpclientandroidlib.HttpResponse) -> d
    void ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> b
    void ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> c
    void ensure304DoesNotContainExtraEntityHeaders(ch.boye.httpclientandroidlib.HttpResponse) -> e
    boolean backendResponseMustNotHaveBody(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> d
    void requestDidNotExpect100ContinueButResponseIsOne(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> e
    void transferEncodingIsNotReturnedTo1_0Client(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> f
    void removeResponseTransferEncoding(ch.boye.httpclientandroidlib.HttpResponse) -> f
    ch.boye.httpclientandroidlib.ProtocolVersion getOriginalRequestProtocol(ch.boye.httpclientandroidlib.impl.client.RequestWrapper) -> a
    boolean requestWasWrapped(ch.boye.httpclientandroidlib.HttpRequest) -> a
ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader -> rv:
    ch.boye.httpclientandroidlib.client.cache.ResourceFactory resourceFactory -> a
    long maxResponseSizeBytes -> b
    ch.boye.httpclientandroidlib.HttpRequest request -> c
    ch.boye.httpclientandroidlib.HttpResponse response -> d
    java.io.InputStream instream -> e
    ch.boye.httpclientandroidlib.client.cache.InputLimit limit -> f
    ch.boye.httpclientandroidlib.client.cache.Resource resource -> g
    boolean consumed -> h
    void readResponse() -> a
    void ensureNotConsumed() -> e
    void ensureConsumed() -> f
    void doConsume() -> g
    boolean isLimitReached() -> b
    ch.boye.httpclientandroidlib.client.cache.Resource getResource() -> c
    ch.boye.httpclientandroidlib.HttpResponse getReconstructedResponse() -> d
ch.boye.httpclientandroidlib.impl.client.cache.Variant -> rw:
    java.lang.String variantKey -> a
    java.lang.String cacheKey -> b
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry entry -> c
    java.lang.String getCacheKey() -> a
    ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry getEntry() -> b
ch.boye.httpclientandroidlib.impl.client.cache.WarningValue -> rx:
    int offs -> a
    int init_offs -> b
    java.lang.String src -> c
    int warnCode -> d
    java.lang.String warnAgent -> e
    java.lang.String warnText -> f
    java.util.Date warnDate -> g
    java.util.regex.Pattern HOSTPORT_PATTERN -> h
    java.util.regex.Pattern WARN_DATE_PATTERN -> i
    ch.boye.httpclientandroidlib.impl.client.cache.WarningValue[] getWarningValues(ch.boye.httpclientandroidlib.Header) -> a
    void consumeLinearWhitespace() -> a
    boolean isChar(char) -> b
    boolean isControl(char) -> c
    boolean isSeparator(char) -> d
    void consumeToken() -> b
    boolean isTokenChar(char) -> e
    void consumeHostPort() -> c
    void consumeWarnAgent() -> d
    void consumeQuotedString() -> e
    void consumeWarnText() -> f
    void consumeWarnDate() -> g
    void consumeWarnValue() -> h
    void consumeCharacter(char) -> a
    void consumeWarnCode() -> i
    void parseError() -> k
    java.util.Date getWarnDate() -> j
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.conn.BasicClientConnectionManager -> ry:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    java.util.concurrent.atomic.AtomicLong COUNTER -> b
    ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry schemeRegistry -> c
    ch.boye.httpclientandroidlib.conn.ClientConnectionOperator connOperator -> d
    ch.boye.httpclientandroidlib.impl.conn.HttpPoolEntry poolEntry -> e
    ch.boye.httpclientandroidlib.impl.conn.ManagedClientConnectionImpl conn -> f
    boolean shutdown -> g
    void finalize() -> finalize
    ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry getSchemeRegistry() -> a
    ch.boye.httpclientandroidlib.conn.ClientConnectionOperator createConnectionOperator(ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry) -> a
    ch.boye.httpclientandroidlib.conn.ClientConnectionRequest requestConnection(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,java.lang.Object) -> a
    void assertNotShutdown() -> c
    ch.boye.httpclientandroidlib.conn.ManagedClientConnection getConnection(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,java.lang.Object) -> b
    void shutdownConnection(ch.boye.httpclientandroidlib.HttpClientConnection) -> a
    void releaseConnection(ch.boye.httpclientandroidlib.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> a
    void shutdown() -> b
ch.boye.httpclientandroidlib.impl.conn.BasicClientConnectionManager$1 -> rz:
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute val$route -> a
    java.lang.Object val$state -> b
    ch.boye.httpclientandroidlib.impl.conn.BasicClientConnectionManager this$0 -> c
    ch.boye.httpclientandroidlib.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> a
ch.boye.httpclientandroidlib.impl.conn.ConnectionShutdownException -> sa:
ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnection -> sb:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog headerLog -> b
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog wireLog -> c
    java.net.Socket socket -> d
    ch.boye.httpclientandroidlib.HttpHost targetHost -> e
    boolean connSecure -> f
    boolean shutdown -> g
    java.util.Map attributes -> h
    boolean isSecure() -> h
    java.net.Socket getSocket() -> i
    void opening(java.net.Socket,ch.boye.httpclientandroidlib.HttpHost) -> a
    void openCompleted(boolean,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void shutdown() -> e
    void close() -> close
    ch.boye.httpclientandroidlib.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    ch.boye.httpclientandroidlib.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,ch.boye.httpclientandroidlib.params.HttpParams) -> b
    ch.boye.httpclientandroidlib.io.HttpMessageParser createResponseParser(ch.boye.httpclientandroidlib.io.SessionInputBuffer,ch.boye.httpclientandroidlib.HttpResponseFactory,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void update(java.net.Socket,ch.boye.httpclientandroidlib.HttpHost,boolean,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    ch.boye.httpclientandroidlib.HttpResponse receiveResponseHeader() -> a
    void sendRequestHeader(ch.boye.httpclientandroidlib.HttpRequest) -> a
    java.lang.Object getAttribute(java.lang.String) -> a
    void setAttribute(java.lang.String,java.lang.Object) -> a
ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator -> sc:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry schemeRegistry -> b
    ch.boye.httpclientandroidlib.conn.DnsResolver dnsResolver -> c
    ch.boye.httpclientandroidlib.conn.OperatedClientConnection createConnection() -> a
    void openConnection(ch.boye.httpclientandroidlib.conn.OperatedClientConnection,ch.boye.httpclientandroidlib.HttpHost,java.net.InetAddress,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void updateSecureConnection(ch.boye.httpclientandroidlib.conn.OperatedClientConnection,ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void prepareSocket(java.net.Socket,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    java.net.InetAddress[] resolveHostname(java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.conn.DefaultHttpResponseParser -> sd:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    ch.boye.httpclientandroidlib.HttpResponseFactory responseFactory -> c
    ch.boye.httpclientandroidlib.util.CharArrayBuffer lineBuf -> d
    ch.boye.httpclientandroidlib.HttpResponse parseHead(ch.boye.httpclientandroidlib.io.SessionInputBuffer) -> a
    boolean reject(ch.boye.httpclientandroidlib.util.CharArrayBuffer,int) -> a
    ch.boye.httpclientandroidlib.HttpMessage parseHead(ch.boye.httpclientandroidlib.io.SessionInputBuffer) -> b
ch.boye.httpclientandroidlib.impl.conn.DefaultHttpRoutePlanner -> se:
    ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry schemeRegistry -> a
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute determineRoute(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.impl.conn.HttpConnPool -> sf:
    java.util.concurrent.atomic.AtomicLong COUNTER -> b
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    long timeToLive -> c
    java.util.concurrent.TimeUnit tunit -> d
    ch.boye.httpclientandroidlib.impl.conn.HttpPoolEntry createEntry(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,ch.boye.httpclientandroidlib.conn.OperatedClientConnection) -> a
    ch.boye.httpclientandroidlib.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> a
ch.boye.httpclientandroidlib.impl.conn.HttpConnPool$InternalConnFactory -> sg:
    ch.boye.httpclientandroidlib.conn.OperatedClientConnection create(ch.boye.httpclientandroidlib.conn.routing.HttpRoute) -> a
    java.lang.Object create(java.lang.Object) -> a
ch.boye.httpclientandroidlib.impl.conn.HttpPoolEntry -> sh:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    ch.boye.httpclientandroidlib.conn.routing.RouteTracker tracker -> b
    boolean isExpired(long) -> a
    ch.boye.httpclientandroidlib.conn.routing.RouteTracker getTracker() -> a
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute getPlannedRoute() -> b
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute getEffectiveRoute() -> c
    boolean isClosed() -> d
    void close() -> e
ch.boye.httpclientandroidlib.impl.conn.LoggingSessionInputBuffer -> si:
    ch.boye.httpclientandroidlib.io.SessionInputBuffer in -> a
    ch.boye.httpclientandroidlib.io.EofSensor eofSensor -> b
    ch.boye.httpclientandroidlib.impl.conn.Wire wire -> c
    java.lang.String charset -> d
    boolean isDataAvailable(int) -> a
    int read(byte[],int,int) -> a
    int read() -> a
    int readLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer) -> a
    ch.boye.httpclientandroidlib.io.HttpTransportMetrics getMetrics() -> b
    boolean isEof() -> c
ch.boye.httpclientandroidlib.impl.conn.LoggingSessionOutputBuffer -> sj:
    ch.boye.httpclientandroidlib.io.SessionOutputBuffer out -> a
    ch.boye.httpclientandroidlib.impl.conn.Wire wire -> b
    java.lang.String charset -> c
    void write(byte[],int,int) -> a
    void write(int) -> a
    void flush() -> a
    void writeLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer) -> a
    void writeLine(java.lang.String) -> a
    ch.boye.httpclientandroidlib.io.HttpTransportMetrics getMetrics() -> b
ch.boye.httpclientandroidlib.impl.conn.ManagedClientConnectionImpl -> sk:
    ch.boye.httpclientandroidlib.conn.ClientConnectionManager manager -> a
    ch.boye.httpclientandroidlib.conn.ClientConnectionOperator operator -> b
    ch.boye.httpclientandroidlib.impl.conn.HttpPoolEntry poolEntry -> c
    boolean reusable -> d
    long duration -> e
    ch.boye.httpclientandroidlib.impl.conn.HttpPoolEntry getPoolEntry() -> n
    ch.boye.httpclientandroidlib.impl.conn.HttpPoolEntry detach() -> o
    ch.boye.httpclientandroidlib.conn.ClientConnectionManager getManager() -> p
    ch.boye.httpclientandroidlib.conn.OperatedClientConnection getConnection() -> r
    ch.boye.httpclientandroidlib.conn.OperatedClientConnection ensureConnection() -> s
    ch.boye.httpclientandroidlib.impl.conn.HttpPoolEntry ensurePoolEntry() -> t
    void close() -> close
    void shutdown() -> e
    boolean isOpen() -> c
    boolean isStale() -> d
    void setSocketTimeout(int) -> b
    void flush() -> b
    boolean isResponseAvailable(int) -> a
    void receiveResponseEntity(ch.boye.httpclientandroidlib.HttpResponse) -> a
    ch.boye.httpclientandroidlib.HttpResponse receiveResponseHeader() -> a
    void sendRequestEntity(ch.boye.httpclientandroidlib.HttpEntityEnclosingRequest) -> a
    void sendRequestHeader(ch.boye.httpclientandroidlib.HttpRequest) -> a
    java.net.InetAddress getRemoteAddress() -> f
    int getRemotePort() -> g
    boolean isSecure() -> j
    javax.net.ssl.SSLSession getSSLSession() -> l
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute getRoute() -> k
    void open(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void tunnelTarget(boolean,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void tunnelProxy(ch.boye.httpclientandroidlib.HttpHost,boolean,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void layerProtocol(ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void setState(java.lang.Object) -> a
    void markReusable() -> m
    boolean isMarkedReusable() -> q
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> a
    void releaseConnection() -> h
    void abortConnection() -> i
ch.boye.httpclientandroidlib.impl.conn.PoolingClientConnectionManager -> sl:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry schemeRegistry -> b
    ch.boye.httpclientandroidlib.impl.conn.HttpConnPool pool -> c
    ch.boye.httpclientandroidlib.conn.ClientConnectionOperator operator -> d
    ch.boye.httpclientandroidlib.conn.DnsResolver dnsResolver -> e
    void finalize() -> finalize
    ch.boye.httpclientandroidlib.conn.ClientConnectionOperator createConnectionOperator(ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry) -> a
    ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry getSchemeRegistry() -> a
    java.lang.String format(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,java.lang.Object) -> b
    java.lang.String formatStats(ch.boye.httpclientandroidlib.conn.routing.HttpRoute) -> a
    java.lang.String format(ch.boye.httpclientandroidlib.impl.conn.HttpPoolEntry) -> a
    ch.boye.httpclientandroidlib.conn.ClientConnectionRequest requestConnection(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,java.lang.Object) -> a
    ch.boye.httpclientandroidlib.conn.ManagedClientConnection leaseConnection(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> a
    void releaseConnection(ch.boye.httpclientandroidlib.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> a
    void shutdown() -> b
ch.boye.httpclientandroidlib.impl.conn.PoolingClientConnectionManager$1 -> sm:
    java.util.concurrent.Future val$future -> a
    ch.boye.httpclientandroidlib.impl.conn.PoolingClientConnectionManager this$0 -> b
    ch.boye.httpclientandroidlib.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> a
ch.boye.httpclientandroidlib.impl.conn.SchemeRegistryFactory -> sn:
    ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry createDefault() -> a
ch.boye.httpclientandroidlib.impl.conn.SystemDefaultDnsResolver -> so:
    java.net.InetAddress[] resolve(java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.conn.Wire -> sp:
    ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log -> a
    void wire(java.lang.String,java.io.InputStream) -> a
    boolean enabled() -> a
    void output(byte[],int,int) -> a
    void input(byte[],int,int) -> b
    void output(byte[]) -> a
    void input(byte[]) -> b
    void output(int) -> a
    void input(int) -> b
ch.boye.httpclientandroidlib.impl.cookie.AbstractCookieAttributeHandler -> sq:
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.cookie.AbstractCookieSpec -> sr:
    java.util.Map attribHandlerMap -> a
    void registerAttribHandler(java.lang.String,ch.boye.httpclientandroidlib.cookie.CookieAttributeHandler) -> a
    ch.boye.httpclientandroidlib.cookie.CookieAttributeHandler findAttribHandler(java.lang.String) -> a
    java.util.Collection getAttribHandlers() -> c
ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie -> ss:
    java.lang.String name -> a
    java.util.Map attribs -> b
    java.lang.String value -> c
    java.lang.String cookieComment -> d
    java.lang.String cookieDomain -> e
    java.util.Date cookieExpiryDate -> f
    java.lang.String cookiePath -> g
    boolean isSecure -> h
    int cookieVersion -> i
    java.lang.String getName() -> a
    java.lang.String getValue() -> b
    void setComment(java.lang.String) -> c
    void setExpiryDate(java.util.Date) -> b
    java.lang.String getDomain() -> c
    void setDomain(java.lang.String) -> d
    java.lang.String getPath() -> d
    void setPath(java.lang.String) -> e
    boolean isSecure() -> f
    void setSecure(boolean) -> a
    int[] getPorts() -> e
    int getVersion() -> g
    void setVersion(int) -> a
    boolean isExpired(java.util.Date) -> a
    void setAttribute(java.lang.String,java.lang.String) -> a
    java.lang.String getAttribute(java.lang.String) -> a
    boolean containsAttribute(java.lang.String) -> b
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie2 -> st:
    java.lang.String commentURL -> a
    int[] ports -> b
    boolean discard -> c
    int[] getPorts() -> e
    void setPorts(int[]) -> a
    void setCommentURL(java.lang.String) -> a_
    void setDiscard(boolean) -> b
    boolean isExpired(java.util.Date) -> a
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.impl.cookie.BasicCommentHandler -> su:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.cookie.BasicDomainHandler -> sv:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.cookie.BasicExpiresHandler -> sw:
    java.lang.String[] datepatterns -> a
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.cookie.BasicMaxAgeHandler -> sx:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.cookie.BasicPathHandler -> sy:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.cookie.BasicSecureHandler -> sz:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.cookie.BestMatchSpec -> ta:
    java.lang.String[] datepatterns -> a
    boolean oneHeader -> b
    ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec strict -> c
    ch.boye.httpclientandroidlib.impl.cookie.RFC2109Spec obsoleteStrict -> d
    ch.boye.httpclientandroidlib.impl.cookie.BrowserCompatSpec compat -> e
    ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec getStrict() -> c
    ch.boye.httpclientandroidlib.impl.cookie.RFC2109Spec getObsoleteStrict() -> d
    ch.boye.httpclientandroidlib.impl.cookie.BrowserCompatSpec getCompat() -> e
    java.util.List parse(ch.boye.httpclientandroidlib.Header,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
    java.util.List formatCookies(java.util.List) -> a
    int getVersion() -> a
    ch.boye.httpclientandroidlib.Header getVersionHeader() -> b
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.cookie.BestMatchSpecFactory -> tb:
    ch.boye.httpclientandroidlib.cookie.CookieSpec newInstance(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.impl.cookie.BrowserCompatSpec -> tc:
    java.lang.String[] DEFAULT_DATE_PATTERNS -> a
    java.lang.String[] datepatterns -> b
    java.util.List parse(ch.boye.httpclientandroidlib.Header,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    java.util.List formatCookies(java.util.List) -> a
    int getVersion() -> a
    ch.boye.httpclientandroidlib.Header getVersionHeader() -> b
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.cookie.BrowserCompatSpecFactory -> td:
    ch.boye.httpclientandroidlib.cookie.CookieSpec newInstance(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.impl.cookie.BrowserCompatVersionAttributeHandler -> te:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.cookie.CookieSpecBase -> tf:
    java.lang.String getDefaultPath(ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    java.lang.String getDefaultDomain(ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
    java.util.List parse(ch.boye.httpclientandroidlib.HeaderElement[],ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.cookie.DateParseException -> tg:
ch.boye.httpclientandroidlib.impl.cookie.DateUtils -> th:
    java.lang.String[] DEFAULT_PATTERNS -> b
    java.util.Date DEFAULT_TWO_DIGIT_YEAR_START -> c
    java.util.TimeZone GMT -> a
    java.util.Date parseDate(java.lang.String) -> a
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> a
    java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> a
    java.lang.String formatDate(java.util.Date) -> a
    java.lang.String formatDate(java.util.Date,java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.cookie.DateUtils$DateFormatHolder -> ti:
    java.lang.ThreadLocal THREADLOCAL_FORMATS -> a
    java.text.SimpleDateFormat formatFor(java.lang.String) -> a
ch.boye.httpclientandroidlib.impl.cookie.DateUtils$DateFormatHolder$1 -> tj:
    java.lang.ref.SoftReference initialValue() -> a
    java.lang.Object initialValue() -> initialValue
ch.boye.httpclientandroidlib.impl.cookie.IgnoreSpec -> tk:
    int getVersion() -> a
    java.util.List parse(ch.boye.httpclientandroidlib.Header,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    java.util.List formatCookies(java.util.List) -> a
    ch.boye.httpclientandroidlib.Header getVersionHeader() -> b
ch.boye.httpclientandroidlib.impl.cookie.IgnoreSpecFactory -> tl:
    ch.boye.httpclientandroidlib.cookie.CookieSpec newInstance(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.impl.cookie.NetscapeDomainHandler -> tm:
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean isSpecialDomain(java.lang.String) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.cookie.NetscapeDraftHeaderParser -> tn:
    ch.boye.httpclientandroidlib.impl.cookie.NetscapeDraftHeaderParser DEFAULT -> a
    ch.boye.httpclientandroidlib.HeaderElement parseHeader(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> a
    ch.boye.httpclientandroidlib.NameValuePair parseNameValuePair(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> b
ch.boye.httpclientandroidlib.impl.cookie.NetscapeDraftSpec -> to:
    java.lang.String[] datepatterns -> a
    java.util.List parse(ch.boye.httpclientandroidlib.Header,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    java.util.List formatCookies(java.util.List) -> a
    int getVersion() -> a
    ch.boye.httpclientandroidlib.Header getVersionHeader() -> b
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.cookie.NetscapeDraftSpecFactory -> tp:
    ch.boye.httpclientandroidlib.cookie.CookieSpec newInstance(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.impl.cookie.RFC2109DomainHandler -> tq:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.cookie.RFC2109Spec -> tr:
    ch.boye.httpclientandroidlib.cookie.CookiePathComparator PATH_COMPARATOR -> a
    java.lang.String[] DATE_PATTERNS -> b
    java.lang.String[] datepatterns -> c
    boolean oneHeader -> d
    java.util.List parse(ch.boye.httpclientandroidlib.Header,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    java.util.List formatCookies(java.util.List) -> a
    java.util.List doFormatOneHeader(java.util.List) -> b
    java.util.List doFormatManyHeaders(java.util.List) -> c
    void formatParamAsVer(ch.boye.httpclientandroidlib.util.CharArrayBuffer,java.lang.String,java.lang.String,int) -> a
    void formatCookieAsVer(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.cookie.Cookie,int) -> a
    int getVersion() -> a
    ch.boye.httpclientandroidlib.Header getVersionHeader() -> b
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.cookie.RFC2109SpecFactory -> ts:
    ch.boye.httpclientandroidlib.cookie.CookieSpec newInstance(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.impl.cookie.RFC2109VersionHandler -> tt:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
ch.boye.httpclientandroidlib.impl.cookie.RFC2965CommentUrlAttributeHandler -> tu:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.cookie.RFC2965DiscardAttributeHandler -> tv:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.cookie.RFC2965DomainAttributeHandler -> tw:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
    boolean domainMatch(java.lang.String,java.lang.String) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.cookie.RFC2965PortAttributeHandler -> tx:
    int[] parsePortAttribute(java.lang.String) -> a
    boolean portMatch(int,int[]) -> a
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec -> ty:
    java.util.List parse(ch.boye.httpclientandroidlib.Header,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    java.util.List parse(ch.boye.httpclientandroidlib.HeaderElement[],ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    java.util.List createCookies(ch.boye.httpclientandroidlib.HeaderElement[],ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
    void formatCookieAsVer(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.cookie.Cookie,int) -> a
    ch.boye.httpclientandroidlib.cookie.CookieOrigin adjustEffectiveHost(ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> c
    int getVersion() -> a
    ch.boye.httpclientandroidlib.Header getVersionHeader() -> b
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.impl.cookie.RFC2965SpecFactory -> tz:
    ch.boye.httpclientandroidlib.cookie.CookieSpec newInstance(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.impl.cookie.RFC2965VersionAttributeHandler -> ua:
    void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String) -> a
    void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> a
    boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin) -> b
ch.boye.httpclientandroidlib.impl.entity.EntityDeserializer -> ub:
    ch.boye.httpclientandroidlib.entity.ContentLengthStrategy lenStrategy -> a
    ch.boye.httpclientandroidlib.entity.BasicHttpEntity doDeserialize(ch.boye.httpclientandroidlib.io.SessionInputBuffer,ch.boye.httpclientandroidlib.HttpMessage) -> a
    ch.boye.httpclientandroidlib.HttpEntity deserialize(ch.boye.httpclientandroidlib.io.SessionInputBuffer,ch.boye.httpclientandroidlib.HttpMessage) -> b
ch.boye.httpclientandroidlib.impl.entity.EntitySerializer -> uc:
    ch.boye.httpclientandroidlib.entity.ContentLengthStrategy lenStrategy -> a
    java.io.OutputStream doSerialize(ch.boye.httpclientandroidlib.io.SessionOutputBuffer,ch.boye.httpclientandroidlib.HttpMessage) -> a
    void serialize(ch.boye.httpclientandroidlib.io.SessionOutputBuffer,ch.boye.httpclientandroidlib.HttpMessage,ch.boye.httpclientandroidlib.HttpEntity) -> a
ch.boye.httpclientandroidlib.impl.entity.LaxContentLengthStrategy -> ud:
    int implicitLen -> a
    long determineLength(ch.boye.httpclientandroidlib.HttpMessage) -> a
ch.boye.httpclientandroidlib.impl.entity.StrictContentLengthStrategy -> ue:
    int implicitLen -> a
    long determineLength(ch.boye.httpclientandroidlib.HttpMessage) -> a
ch.boye.httpclientandroidlib.impl.io.AbstractMessageParser -> uf:
    ch.boye.httpclientandroidlib.io.SessionInputBuffer sessionBuffer -> a
    int maxHeaderCount -> c
    int maxLineLen -> d
    java.util.List headerLines -> e
    ch.boye.httpclientandroidlib.message.LineParser lineParser -> b
    int state -> f
    ch.boye.httpclientandroidlib.HttpMessage message -> g
    ch.boye.httpclientandroidlib.Header[] parseHeaders(ch.boye.httpclientandroidlib.io.SessionInputBuffer,int,int,ch.boye.httpclientandroidlib.message.LineParser) -> a
    ch.boye.httpclientandroidlib.Header[] parseHeaders(ch.boye.httpclientandroidlib.io.SessionInputBuffer,int,int,ch.boye.httpclientandroidlib.message.LineParser,java.util.List) -> a
    ch.boye.httpclientandroidlib.HttpMessage parseHead(ch.boye.httpclientandroidlib.io.SessionInputBuffer) -> b
    ch.boye.httpclientandroidlib.HttpMessage parse() -> a
ch.boye.httpclientandroidlib.impl.io.AbstractMessageWriter -> ug:
    ch.boye.httpclientandroidlib.io.SessionOutputBuffer sessionBuffer -> a
    ch.boye.httpclientandroidlib.util.CharArrayBuffer lineBuf -> b
    ch.boye.httpclientandroidlib.message.LineFormatter lineFormatter -> c
    void writeHeadLine(ch.boye.httpclientandroidlib.HttpMessage) -> a
    void write(ch.boye.httpclientandroidlib.HttpMessage) -> b
ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer -> uh:
    java.nio.charset.Charset ASCII -> a
    java.io.InputStream instream -> b
    byte[] buffer -> c
    int bufferpos -> d
    int bufferlen -> e
    ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer -> f
    java.nio.charset.Charset charset -> g
    java.nio.charset.CharsetDecoder decoder -> h
    java.nio.CharBuffer cbuf -> i
    boolean ascii -> j
    int maxLineLen -> k
    int minChunkLimit -> l
    ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl metrics -> m
    java.nio.charset.CodingErrorAction onMalformedInputAction -> n
    java.nio.charset.CodingErrorAction onUnMappableInputAction -> o
    void init(java.io.InputStream,int,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> d
    int length() -> e
    int fillBuffer() -> f
    boolean hasBufferedData() -> g
    int read() -> a
    int read(byte[],int,int) -> a
    int locateLF() -> c
    int readLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer) -> a
    int lineFromLineBuffer(ch.boye.httpclientandroidlib.util.CharArrayBuffer) -> b
    int lineFromReadBuffer(ch.boye.httpclientandroidlib.util.CharArrayBuffer,int) -> a
    int appendDecoded(ch.boye.httpclientandroidlib.util.CharArrayBuffer,java.nio.ByteBuffer) -> a
    int handleDecodingResult(java.nio.charset.CoderResult,ch.boye.httpclientandroidlib.util.CharArrayBuffer,java.nio.ByteBuffer) -> a
    ch.boye.httpclientandroidlib.io.HttpTransportMetrics getMetrics() -> b
ch.boye.httpclientandroidlib.impl.io.AbstractSessionOutputBuffer -> ui:
    java.nio.charset.Charset ASCII -> a
    byte[] CRLF -> b
    java.io.OutputStream outstream -> c
    ch.boye.httpclientandroidlib.util.ByteArrayBuffer buffer -> d
    java.nio.charset.Charset charset -> e
    java.nio.charset.CharsetEncoder encoder -> f
    java.nio.ByteBuffer bbuf -> g
    boolean ascii -> h
    int minChunkLimit -> i
    ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl metrics -> j
    java.nio.charset.CodingErrorAction onMalformedInputAction -> k
    java.nio.charset.CodingErrorAction onUnMappableInputAction -> l
    void init(java.io.OutputStream,int,ch.boye.httpclientandroidlib.params.HttpParams) -> a
    ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> c
    int length() -> e
    void flushBuffer() -> d
    void flush() -> a
    void write(byte[],int,int) -> a
    void write(byte[]) -> a
    void write(int) -> a
    void writeLine(java.lang.String) -> a
    void writeLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer) -> a
    void writeEncoded(java.nio.CharBuffer) -> a
    void handleEncodingResult(java.nio.charset.CoderResult) -> a
    ch.boye.httpclientandroidlib.io.HttpTransportMetrics getMetrics() -> b
ch.boye.httpclientandroidlib.impl.io.ChunkedInputStream -> uj:
    ch.boye.httpclientandroidlib.io.SessionInputBuffer in -> a
    ch.boye.httpclientandroidlib.util.CharArrayBuffer buffer -> b
    int state -> c
    int chunkSize -> d
    int pos -> e
    boolean eof -> f
    boolean closed -> g
    ch.boye.httpclientandroidlib.Header[] footers -> h
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void nextChunk() -> a
    int getChunkSize() -> b
    void parseTrailerHeaders() -> c
    void close() -> close
ch.boye.httpclientandroidlib.impl.io.ChunkedOutputStream -> uk:
    ch.boye.httpclientandroidlib.io.SessionOutputBuffer out -> a
    byte[] cache -> b
    int cachePosition -> c
    boolean wroteLastChunk -> d
    boolean closed -> e
    void flushCache() -> a
    void flushCacheWithAppend(byte[],int,int) -> a
    void writeClosingChunk() -> b
    void finish() -> c
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
ch.boye.httpclientandroidlib.impl.io.ContentLengthInputStream -> ul:
    long contentLength -> a
    long pos -> b
    boolean closed -> c
    ch.boye.httpclientandroidlib.io.SessionInputBuffer in -> d
    void close() -> close
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    long skip(long) -> skip
ch.boye.httpclientandroidlib.impl.io.ContentLengthOutputStream -> um:
    ch.boye.httpclientandroidlib.io.SessionOutputBuffer out -> a
    long contentLength -> b
    long total -> c
    boolean closed -> d
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
ch.boye.httpclientandroidlib.impl.io.DefaultHttpResponseParser -> un:
    ch.boye.httpclientandroidlib.HttpResponseFactory responseFactory -> a
    ch.boye.httpclientandroidlib.util.CharArrayBuffer lineBuf -> c
    ch.boye.httpclientandroidlib.HttpResponse parseHead(ch.boye.httpclientandroidlib.io.SessionInputBuffer) -> a
    ch.boye.httpclientandroidlib.HttpMessage parseHead(ch.boye.httpclientandroidlib.io.SessionInputBuffer) -> b
ch.boye.httpclientandroidlib.impl.io.HttpRequestWriter -> uo:
    void writeHeadLine(ch.boye.httpclientandroidlib.HttpRequest) -> a
    void writeHeadLine(ch.boye.httpclientandroidlib.HttpMessage) -> a
ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl -> up:
    long bytesTransferred -> a
    void incrementBytesTransferred(long) -> a
ch.boye.httpclientandroidlib.impl.io.IdentityInputStream -> uq:
    ch.boye.httpclientandroidlib.io.SessionInputBuffer in -> a
    boolean closed -> b
    int available() -> available
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
ch.boye.httpclientandroidlib.impl.io.IdentityOutputStream -> ur:
    ch.boye.httpclientandroidlib.io.SessionOutputBuffer out -> a
    boolean closed -> b
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
ch.boye.httpclientandroidlib.impl.io.SocketInputBuffer -> us:
    java.net.Socket socket -> a
    boolean eof -> b
    int fillBuffer() -> f
    boolean isDataAvailable(int) -> a
    boolean isEof() -> c
ch.boye.httpclientandroidlib.impl.io.SocketOutputBuffer -> ut:
ch.boye.httpclientandroidlib.io.BufferInfo -> uu:
    int length() -> e
ch.boye.httpclientandroidlib.io.EofSensor -> uv:
    boolean isEof() -> c
ch.boye.httpclientandroidlib.io.HttpMessageParser -> uw:
    ch.boye.httpclientandroidlib.HttpMessage parse() -> a
ch.boye.httpclientandroidlib.io.HttpMessageWriter -> ux:
    void write(ch.boye.httpclientandroidlib.HttpMessage) -> b
ch.boye.httpclientandroidlib.io.HttpTransportMetrics -> uy:
ch.boye.httpclientandroidlib.io.SessionInputBuffer -> uz:
    int read(byte[],int,int) -> a
    int read() -> a
    int readLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer) -> a
    boolean isDataAvailable(int) -> a
    ch.boye.httpclientandroidlib.io.HttpTransportMetrics getMetrics() -> b
ch.boye.httpclientandroidlib.io.SessionOutputBuffer -> va:
    void write(byte[],int,int) -> a
    void write(int) -> a
    void writeLine(java.lang.String) -> a
    void writeLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer) -> a
    void flush() -> a
    ch.boye.httpclientandroidlib.io.HttpTransportMetrics getMetrics() -> b
ch.boye.httpclientandroidlib.message.AbstractHttpMessage -> vb:
    ch.boye.httpclientandroidlib.message.HeaderGroup headergroup -> a
    ch.boye.httpclientandroidlib.params.HttpParams params -> b
    boolean containsHeader(java.lang.String) -> a
    ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String) -> b
    ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String) -> c
    ch.boye.httpclientandroidlib.Header[] getAllHeaders() -> d
    void addHeader(ch.boye.httpclientandroidlib.Header) -> a
    void addHeader(java.lang.String,java.lang.String) -> a
    void setHeader(ch.boye.httpclientandroidlib.Header) -> b
    void setHeader(java.lang.String,java.lang.String) -> b
    void setHeaders(ch.boye.httpclientandroidlib.Header[]) -> a
    void removeHeader(ch.boye.httpclientandroidlib.Header) -> c
    void removeHeaders(java.lang.String) -> d
    ch.boye.httpclientandroidlib.HeaderIterator headerIterator() -> e
    ch.boye.httpclientandroidlib.HeaderIterator headerIterator(java.lang.String) -> e
    ch.boye.httpclientandroidlib.params.HttpParams getParams() -> f
    void setParams(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.message.BasicHeader -> vc:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String getName() -> c
    java.lang.String getValue() -> d
    java.lang.String toString() -> toString
    ch.boye.httpclientandroidlib.HeaderElement[] getElements() -> e
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.message.BasicHeaderElement -> vd:
    java.lang.String name -> a
    java.lang.String value -> b
    ch.boye.httpclientandroidlib.NameValuePair[] parameters -> c
    java.lang.String getName() -> a
    java.lang.String getValue() -> b
    ch.boye.httpclientandroidlib.NameValuePair[] getParameters() -> c
    int getParameterCount() -> d
    ch.boye.httpclientandroidlib.NameValuePair getParameter(int) -> a
    ch.boye.httpclientandroidlib.NameValuePair getParameterByName(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.message.BasicHeaderElementIterator -> ve:
    ch.boye.httpclientandroidlib.HeaderIterator headerIt -> a
    ch.boye.httpclientandroidlib.message.HeaderValueParser parser -> b
    ch.boye.httpclientandroidlib.HeaderElement currentElement -> c
    ch.boye.httpclientandroidlib.util.CharArrayBuffer buffer -> d
    ch.boye.httpclientandroidlib.message.ParserCursor cursor -> e
    void bufferHeaderValue() -> b
    void parseNextElement() -> c
    boolean hasNext() -> hasNext
    ch.boye.httpclientandroidlib.HeaderElement nextElement() -> a
    java.lang.Object next() -> next
    void remove() -> remove
ch.boye.httpclientandroidlib.message.BasicHeaderValueFormatter -> vf:
    ch.boye.httpclientandroidlib.message.BasicHeaderValueFormatter DEFAULT -> a
    ch.boye.httpclientandroidlib.util.CharArrayBuffer formatHeaderElement(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.HeaderElement,boolean) -> a
    int estimateHeaderElementLen(ch.boye.httpclientandroidlib.HeaderElement) -> a
    ch.boye.httpclientandroidlib.util.CharArrayBuffer formatNameValuePair(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.NameValuePair,boolean) -> a
    int estimateNameValuePairLen(ch.boye.httpclientandroidlib.NameValuePair) -> a
    void doFormatValue(ch.boye.httpclientandroidlib.util.CharArrayBuffer,java.lang.String,boolean) -> a
    boolean isSeparator(char) -> a
    boolean isUnsafe(char) -> b
ch.boye.httpclientandroidlib.message.BasicHeaderValueParser -> vg:
    ch.boye.httpclientandroidlib.message.BasicHeaderValueParser DEFAULT -> a
    char[] ALL_DELIMITERS -> b
    ch.boye.httpclientandroidlib.HeaderElement[] parseElements(java.lang.String,ch.boye.httpclientandroidlib.message.HeaderValueParser) -> a
    ch.boye.httpclientandroidlib.HeaderElement[] parseElements(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> a
    ch.boye.httpclientandroidlib.HeaderElement parseHeaderElement(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> b
    ch.boye.httpclientandroidlib.HeaderElement createHeaderElement(java.lang.String,java.lang.String,ch.boye.httpclientandroidlib.NameValuePair[]) -> a
    ch.boye.httpclientandroidlib.NameValuePair[] parseParameters(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> c
    ch.boye.httpclientandroidlib.NameValuePair parseNameValuePair(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> d
    boolean isOneOf(char,char[]) -> a
    ch.boye.httpclientandroidlib.NameValuePair parseNameValuePair(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor,char[]) -> a
    ch.boye.httpclientandroidlib.NameValuePair createNameValuePair(java.lang.String,java.lang.String) -> a
ch.boye.httpclientandroidlib.message.BasicHttpRequest -> vh:
    java.lang.String method -> c
    java.lang.String uri -> d
    ch.boye.httpclientandroidlib.RequestLine requestline -> e
    ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion() -> c
    ch.boye.httpclientandroidlib.RequestLine getRequestLine() -> g
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.message.BasicHttpResponse -> vi:
    ch.boye.httpclientandroidlib.StatusLine statusline -> c
    ch.boye.httpclientandroidlib.HttpEntity entity -> d
    ch.boye.httpclientandroidlib.ReasonPhraseCatalog reasonCatalog -> e
    java.util.Locale locale -> f
    ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion() -> c
    ch.boye.httpclientandroidlib.StatusLine getStatusLine() -> a
    ch.boye.httpclientandroidlib.HttpEntity getEntity() -> b
    void setEntity(ch.boye.httpclientandroidlib.HttpEntity) -> a
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.message.BasicLineFormatter -> vj:
    ch.boye.httpclientandroidlib.message.BasicLineFormatter DEFAULT -> a
    ch.boye.httpclientandroidlib.util.CharArrayBuffer initBuffer(ch.boye.httpclientandroidlib.util.CharArrayBuffer) -> a
    ch.boye.httpclientandroidlib.util.CharArrayBuffer appendProtocolVersion(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.ProtocolVersion) -> a
    int estimateProtocolVersionLen(ch.boye.httpclientandroidlib.ProtocolVersion) -> a
    ch.boye.httpclientandroidlib.util.CharArrayBuffer formatRequestLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.RequestLine) -> a
    void doFormatRequestLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.RequestLine) -> b
    ch.boye.httpclientandroidlib.util.CharArrayBuffer formatStatusLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.StatusLine) -> a
    void doFormatStatusLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.StatusLine) -> b
    ch.boye.httpclientandroidlib.util.CharArrayBuffer formatHeader(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.Header) -> a
    void doFormatHeader(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.Header) -> b
ch.boye.httpclientandroidlib.message.BasicLineParser -> vk:
    ch.boye.httpclientandroidlib.message.BasicLineParser DEFAULT -> a
    ch.boye.httpclientandroidlib.ProtocolVersion protocol -> b
    ch.boye.httpclientandroidlib.ProtocolVersion parseProtocolVersion(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> a
    ch.boye.httpclientandroidlib.ProtocolVersion createProtocolVersion(int,int) -> a
    boolean hasProtocolVersion(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> b
    ch.boye.httpclientandroidlib.StatusLine parseStatusLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> c
    ch.boye.httpclientandroidlib.StatusLine createStatusLine(ch.boye.httpclientandroidlib.ProtocolVersion,int,java.lang.String) -> a
    ch.boye.httpclientandroidlib.Header parseHeader(ch.boye.httpclientandroidlib.util.CharArrayBuffer) -> a
    void skipWhitespace(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> d
ch.boye.httpclientandroidlib.message.BasicListHeaderIterator -> vl:
    java.util.List allHeaders -> a
    int currentIndex -> b
    int lastIndex -> c
    java.lang.String headerName -> d
    int findNext(int) -> a
    boolean filterHeader(int) -> b
    boolean hasNext() -> hasNext
    ch.boye.httpclientandroidlib.Header nextHeader() -> a
    java.lang.Object next() -> next
    void remove() -> remove
ch.boye.httpclientandroidlib.message.BasicNameValuePair -> vm:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String getName() -> a
    java.lang.String getValue() -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.message.BasicRequestLine -> vn:
    ch.boye.httpclientandroidlib.ProtocolVersion protoversion -> a
    java.lang.String method -> b
    java.lang.String uri -> c
    java.lang.String getMethod() -> a
    ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion() -> b
    java.lang.String getUri() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.message.BasicStatusLine -> vo:
    ch.boye.httpclientandroidlib.ProtocolVersion protoVersion -> a
    int statusCode -> b
    java.lang.String reasonPhrase -> c
    int getStatusCode() -> b
    ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion() -> a
    java.lang.String getReasonPhrase() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.message.BasicTokenIterator -> vp:
    ch.boye.httpclientandroidlib.HeaderIterator headerIt -> a
    java.lang.String currentHeader -> b
    java.lang.String currentToken -> c
    int searchPos -> d
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> a
    java.lang.Object next() -> next
    void remove() -> remove
    int findNext(int) -> a
    java.lang.String createToken(java.lang.String,int,int) -> a
    int findTokenStart(int) -> b
    int findTokenSeparator(int) -> c
    int findTokenEnd(int) -> d
    boolean isTokenSeparator(char) -> a
    boolean isWhitespace(char) -> b
    boolean isTokenChar(char) -> c
    boolean isHttpSeparator(char) -> d
ch.boye.httpclientandroidlib.message.BufferedHeader -> vq:
    java.lang.String name -> a
    ch.boye.httpclientandroidlib.util.CharArrayBuffer buffer -> b
    int valuePos -> c
    java.lang.String getName() -> c
    java.lang.String getValue() -> d
    ch.boye.httpclientandroidlib.HeaderElement[] getElements() -> e
    int getValuePos() -> b
    ch.boye.httpclientandroidlib.util.CharArrayBuffer getBuffer() -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.message.HeaderGroup -> vr:
    java.util.List headers -> a
    void clear() -> a
    void addHeader(ch.boye.httpclientandroidlib.Header) -> a
    void removeHeader(ch.boye.httpclientandroidlib.Header) -> b
    void updateHeader(ch.boye.httpclientandroidlib.Header) -> c
    void setHeaders(ch.boye.httpclientandroidlib.Header[]) -> a
    ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String) -> a
    ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String) -> b
    ch.boye.httpclientandroidlib.Header[] getAllHeaders() -> b
    boolean containsHeader(java.lang.String) -> c
    ch.boye.httpclientandroidlib.HeaderIterator iterator() -> c
    ch.boye.httpclientandroidlib.HeaderIterator iterator(java.lang.String) -> d
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.message.HeaderValueParser -> vs:
    ch.boye.httpclientandroidlib.HeaderElement[] parseElements(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> a
    ch.boye.httpclientandroidlib.HeaderElement parseHeaderElement(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> b
ch.boye.httpclientandroidlib.message.LineFormatter -> vt:
    ch.boye.httpclientandroidlib.util.CharArrayBuffer formatRequestLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.RequestLine) -> a
    ch.boye.httpclientandroidlib.util.CharArrayBuffer formatHeader(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.Header) -> a
ch.boye.httpclientandroidlib.message.LineParser -> vu:
    boolean hasProtocolVersion(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> b
    ch.boye.httpclientandroidlib.StatusLine parseStatusLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.message.ParserCursor) -> c
    ch.boye.httpclientandroidlib.Header parseHeader(ch.boye.httpclientandroidlib.util.CharArrayBuffer) -> a
ch.boye.httpclientandroidlib.message.ParserCursor -> vv:
    int lowerBound -> a
    int upperBound -> b
    int pos -> c
    int getUpperBound() -> a
    int getPos() -> b
    void updatePos(int) -> a
    boolean atEnd() -> c
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.params.AbstractHttpParams -> vw:
    int getIntParameter(java.lang.String,int) -> a
    ch.boye.httpclientandroidlib.params.HttpParams setIntParameter(java.lang.String,int) -> b
    boolean getBooleanParameter(java.lang.String,boolean) -> a
    ch.boye.httpclientandroidlib.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> b
    boolean isParameterTrue(java.lang.String) -> b
    boolean isParameterFalse(java.lang.String) -> c
ch.boye.httpclientandroidlib.params.BasicHttpParams -> vx:
    java.util.HashMap parameters -> a
    java.lang.Object getParameter(java.lang.String) -> a
    ch.boye.httpclientandroidlib.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> a
    java.lang.Object clone() -> clone
    void copyParams(ch.boye.httpclientandroidlib.params.HttpParams) -> a
ch.boye.httpclientandroidlib.params.HttpConnectionParams -> vy:
    int getSoTimeout(ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void setSoTimeout(ch.boye.httpclientandroidlib.params.HttpParams,int) -> a
    boolean getSoReuseaddr(ch.boye.httpclientandroidlib.params.HttpParams) -> b
    boolean getTcpNoDelay(ch.boye.httpclientandroidlib.params.HttpParams) -> c
    void setTcpNoDelay(ch.boye.httpclientandroidlib.params.HttpParams,boolean) -> a
    int getSocketBufferSize(ch.boye.httpclientandroidlib.params.HttpParams) -> d
    void setSocketBufferSize(ch.boye.httpclientandroidlib.params.HttpParams,int) -> b
    int getLinger(ch.boye.httpclientandroidlib.params.HttpParams) -> e
    int getConnectionTimeout(ch.boye.httpclientandroidlib.params.HttpParams) -> f
    void setConnectionTimeout(ch.boye.httpclientandroidlib.params.HttpParams,int) -> c
    boolean isStaleCheckingEnabled(ch.boye.httpclientandroidlib.params.HttpParams) -> g
ch.boye.httpclientandroidlib.params.HttpParams -> vz:
    java.lang.Object getParameter(java.lang.String) -> a
    ch.boye.httpclientandroidlib.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> a
    int getIntParameter(java.lang.String,int) -> a
    ch.boye.httpclientandroidlib.params.HttpParams setIntParameter(java.lang.String,int) -> b
    boolean getBooleanParameter(java.lang.String,boolean) -> a
    ch.boye.httpclientandroidlib.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> b
    boolean isParameterTrue(java.lang.String) -> b
    boolean isParameterFalse(java.lang.String) -> c
ch.boye.httpclientandroidlib.params.HttpProtocolParams -> wa:
    java.lang.String getHttpElementCharset(ch.boye.httpclientandroidlib.params.HttpParams) -> a
    void setContentCharset(ch.boye.httpclientandroidlib.params.HttpParams,java.lang.String) -> a
    ch.boye.httpclientandroidlib.ProtocolVersion getVersion(ch.boye.httpclientandroidlib.params.HttpParams) -> b
    void setVersion(ch.boye.httpclientandroidlib.params.HttpParams,ch.boye.httpclientandroidlib.ProtocolVersion) -> a
    java.lang.String getUserAgent(ch.boye.httpclientandroidlib.params.HttpParams) -> c
    void setUserAgent(ch.boye.httpclientandroidlib.params.HttpParams,java.lang.String) -> b
    boolean useExpectContinue(ch.boye.httpclientandroidlib.params.HttpParams) -> d
    java.nio.charset.CodingErrorAction getMalformedInputAction(ch.boye.httpclientandroidlib.params.HttpParams) -> e
    java.nio.charset.CodingErrorAction getUnmappableInputAction(ch.boye.httpclientandroidlib.params.HttpParams) -> f
ch.boye.httpclientandroidlib.params.SyncBasicHttpParams -> wb:
    ch.boye.httpclientandroidlib.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> a
    java.lang.Object getParameter(java.lang.String) -> a
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.pool.AbstractConnPool -> wc:
    java.util.concurrent.locks.Lock lock -> a
    ch.boye.httpclientandroidlib.pool.ConnFactory connFactory -> b
    java.util.Map routeToPool -> c
    java.util.Set leased -> d
    java.util.LinkedList available -> e
    java.util.LinkedList pending -> f
    java.util.Map maxPerRoute -> g
    boolean isShutDown -> h
    int defaultMaxPerRoute -> i
    int maxTotal -> j
    ch.boye.httpclientandroidlib.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> a
    void shutdown() -> a
    ch.boye.httpclientandroidlib.pool.RouteSpecificPool getPool(java.lang.Object) -> b
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object,ch.boye.httpclientandroidlib.concurrent.FutureCallback) -> a
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object) -> b
    ch.boye.httpclientandroidlib.pool.PoolEntry getPoolEntryBlocking(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,ch.boye.httpclientandroidlib.pool.PoolEntryFuture) -> a
    void notifyPending(ch.boye.httpclientandroidlib.pool.RouteSpecificPool) -> a
    void release(ch.boye.httpclientandroidlib.pool.PoolEntry,boolean) -> a
    int getMax(java.lang.Object) -> c
    ch.boye.httpclientandroidlib.pool.PoolStats getTotalStats() -> b
    ch.boye.httpclientandroidlib.pool.PoolStats getStats(java.lang.Object) -> a
    java.lang.String toString() -> toString
    ch.boye.httpclientandroidlib.pool.PoolEntry access$000(ch.boye.httpclientandroidlib.pool.AbstractConnPool,java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,ch.boye.httpclientandroidlib.pool.PoolEntryFuture) -> a
ch.boye.httpclientandroidlib.pool.AbstractConnPool$1 -> wd:
    java.lang.Object val$route -> a
    ch.boye.httpclientandroidlib.pool.AbstractConnPool this$0 -> b
    ch.boye.httpclientandroidlib.pool.PoolEntry createEntry(java.lang.Object) -> a
ch.boye.httpclientandroidlib.pool.AbstractConnPool$2 -> we:
    java.lang.Object val$route -> a
    java.lang.Object val$state -> b
    ch.boye.httpclientandroidlib.pool.AbstractConnPool this$0 -> c
    ch.boye.httpclientandroidlib.pool.PoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> b
ch.boye.httpclientandroidlib.pool.ConnFactory -> wf:
    java.lang.Object create(java.lang.Object) -> a
ch.boye.httpclientandroidlib.pool.PoolEntry -> wg:
    java.lang.String id -> a
    java.lang.Object route -> b
    java.lang.Object conn -> c
    long created -> d
    long validUnit -> e
    long updated -> f
    long expiry -> g
    java.lang.Object state -> h
    java.lang.String getId() -> f
    java.lang.Object getRoute() -> g
    java.lang.Object getConnection() -> h
    java.lang.Object getState() -> i
    void setState(java.lang.Object) -> a
    long getExpiry() -> j
    void updateExpiry(long,java.util.concurrent.TimeUnit) -> a
    boolean isExpired(long) -> a
    void close() -> e
    boolean isClosed() -> d
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.pool.PoolEntryFuture -> wh:
    java.util.concurrent.locks.Lock lock -> a
    ch.boye.httpclientandroidlib.concurrent.FutureCallback callback -> b
    java.util.concurrent.locks.Condition condition -> c
    boolean cancelled -> d
    boolean completed -> e
    java.lang.Object result -> f
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> b
    boolean await(java.util.Date) -> a
    void wakeup() -> a
ch.boye.httpclientandroidlib.pool.PoolStats -> wi:
    int leased -> a
    int pending -> b
    int available -> c
    int max -> d
    int getLeased() -> a
    int getAvailable() -> b
    int getMax() -> c
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.pool.RouteSpecificPool -> wj:
    java.lang.Object route -> a
    java.util.Set leased -> b
    java.util.LinkedList available -> c
    java.util.LinkedList pending -> d
    ch.boye.httpclientandroidlib.pool.PoolEntry createEntry(java.lang.Object) -> a
    int getLeasedCount() -> a
    int getPendingCount() -> b
    int getAvailableCount() -> c
    int getAllocatedCount() -> d
    ch.boye.httpclientandroidlib.pool.PoolEntry getFree(java.lang.Object) -> b
    ch.boye.httpclientandroidlib.pool.PoolEntry getLastUsed() -> e
    boolean remove(ch.boye.httpclientandroidlib.pool.PoolEntry) -> a
    void free(ch.boye.httpclientandroidlib.pool.PoolEntry,boolean) -> a
    ch.boye.httpclientandroidlib.pool.PoolEntry add(java.lang.Object) -> c
    void queue(ch.boye.httpclientandroidlib.pool.PoolEntryFuture) -> a
    ch.boye.httpclientandroidlib.pool.PoolEntryFuture nextPending() -> f
    void unqueue(ch.boye.httpclientandroidlib.pool.PoolEntryFuture) -> b
    void shutdown() -> g
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.protocol.BasicHttpContext -> wk:
    ch.boye.httpclientandroidlib.protocol.HttpContext parentContext -> a
    java.util.Map map -> b
    java.lang.Object getAttribute(java.lang.String) -> a
    void setAttribute(java.lang.String,java.lang.Object) -> a
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.protocol.BasicHttpProcessor -> wl:
    java.util.List requestInterceptors -> a
    java.util.List responseInterceptors -> b
    void addRequestInterceptor(ch.boye.httpclientandroidlib.HttpRequestInterceptor) -> a
    void addRequestInterceptor(ch.boye.httpclientandroidlib.HttpRequestInterceptor,int) -> a
    void addInterceptor(ch.boye.httpclientandroidlib.HttpRequestInterceptor) -> b
    void addInterceptor(ch.boye.httpclientandroidlib.HttpRequestInterceptor,int) -> b
    int getRequestInterceptorCount() -> a
    ch.boye.httpclientandroidlib.HttpRequestInterceptor getRequestInterceptor(int) -> a
    void addResponseInterceptor(ch.boye.httpclientandroidlib.HttpResponseInterceptor) -> a
    void addInterceptor(ch.boye.httpclientandroidlib.HttpResponseInterceptor) -> b
    int getResponseInterceptorCount() -> b
    ch.boye.httpclientandroidlib.HttpResponseInterceptor getResponseInterceptor(int) -> b
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void process(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void copyInterceptors(ch.boye.httpclientandroidlib.protocol.BasicHttpProcessor) -> a
    java.lang.Object clone() -> clone
ch.boye.httpclientandroidlib.protocol.DefaultedHttpContext -> wm:
    ch.boye.httpclientandroidlib.protocol.HttpContext local -> a
    ch.boye.httpclientandroidlib.protocol.HttpContext defaults -> b
    java.lang.Object getAttribute(java.lang.String) -> a
    void setAttribute(java.lang.String,java.lang.Object) -> a
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.protocol.HTTP -> wn:
    java.nio.charset.Charset DEF_CONTENT_CHARSET -> a
    java.nio.charset.Charset DEF_PROTOCOL_CHARSET -> b
    boolean isWhitespace(char) -> a
ch.boye.httpclientandroidlib.protocol.HttpContext -> wo:
    java.lang.Object getAttribute(java.lang.String) -> a
    void setAttribute(java.lang.String,java.lang.Object) -> a
ch.boye.httpclientandroidlib.protocol.HttpProcessor -> wp:
ch.boye.httpclientandroidlib.protocol.HttpRequestExecutor -> wq:
    boolean canResponseHaveBody(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse) -> a
    ch.boye.httpclientandroidlib.HttpResponse execute(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpClientConnection,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void closeConnection(ch.boye.httpclientandroidlib.HttpClientConnection) -> a
    void preProcess(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpProcessor,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    ch.boye.httpclientandroidlib.HttpResponse doSendRequest(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpClientConnection,ch.boye.httpclientandroidlib.protocol.HttpContext) -> b
    ch.boye.httpclientandroidlib.HttpResponse doReceiveResponse(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpClientConnection,ch.boye.httpclientandroidlib.protocol.HttpContext) -> c
    void postProcess(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpProcessor,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.protocol.ImmutableHttpProcessor -> wr:
    ch.boye.httpclientandroidlib.HttpRequestInterceptor[] requestInterceptors -> a
    ch.boye.httpclientandroidlib.HttpResponseInterceptor[] responseInterceptors -> b
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    void process(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.protocol.RequestContent -> ws:
    boolean overwrite -> a
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.protocol.RequestExpectContinue -> wt:
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.protocol.RequestTargetHost -> wu:
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.protocol.RequestUserAgent -> wv:
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
ch.boye.httpclientandroidlib.util.ByteArrayBuffer -> ww:
    byte[] buffer -> a
    int len -> b
    void expand(int) -> c
    void append(byte[],int,int) -> a
    void append(int) -> a
    void append(char[],int,int) -> a
    void append(ch.boye.httpclientandroidlib.util.CharArrayBuffer,int,int) -> a
    void clear() -> a
    byte[] toByteArray() -> b
    int byteAt(int) -> b
    int capacity() -> c
    int length() -> d
    byte[] buffer() -> e
    boolean isEmpty() -> f
    boolean isFull() -> g
ch.boye.httpclientandroidlib.util.CharArrayBuffer -> wx:
    char[] buffer -> a
    int len -> b
    void expand(int) -> d
    void append(char[],int,int) -> a
    void append(java.lang.String) -> a
    void append(ch.boye.httpclientandroidlib.util.CharArrayBuffer,int,int) -> a
    void append(char) -> a
    void append(byte[],int,int) -> a
    void append(ch.boye.httpclientandroidlib.util.ByteArrayBuffer,int,int) -> a
    void clear() -> a
    char charAt(int) -> a
    char[] buffer() -> b
    int length() -> c
    void ensureCapacity(int) -> b
    boolean isEmpty() -> d
    int indexOf(int,int,int) -> a
    int indexOf(int) -> c
    java.lang.String substring(int,int) -> a
    java.lang.String substringTrimmed(int,int) -> b
    java.lang.String toString() -> toString
ch.boye.httpclientandroidlib.util.EncodingUtils -> wy:
    byte[] getBytes(java.lang.String,java.lang.String) -> a
    byte[] getAsciiBytes(java.lang.String) -> a
    java.lang.String getAsciiString(byte[],int,int) -> a
    java.lang.String getAsciiString(byte[]) -> a
ch.boye.httpclientandroidlib.util.EntityUtils -> wz:
    void consumeQuietly(ch.boye.httpclientandroidlib.HttpEntity) -> a
    void consume(ch.boye.httpclientandroidlib.HttpEntity) -> b
    byte[] toByteArray(ch.boye.httpclientandroidlib.HttpEntity) -> c
    java.lang.String toString(ch.boye.httpclientandroidlib.HttpEntity,java.nio.charset.Charset) -> a
    java.lang.String toString(ch.boye.httpclientandroidlib.HttpEntity) -> d
ch.boye.httpclientandroidlib.util.LangUtils -> xa:
    int hashCode(int,int) -> a
    int hashCode(int,boolean) -> a
    int hashCode(int,java.lang.Object) -> a
    boolean equals(java.lang.Object,java.lang.Object) -> a
    boolean equals(java.lang.Object[],java.lang.Object[]) -> a
ch.boye.httpclientandroidlib.util.VersionInfo -> xb:
    java.lang.String infoPackage -> a
    java.lang.String infoModule -> b
    java.lang.String infoRelease -> c
    java.lang.String infoTimestamp -> d
    java.lang.String infoClassloader -> e
    java.lang.String getRelease() -> a
    java.lang.String toString() -> toString
    ch.boye.httpclientandroidlib.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader) -> a
    ch.boye.httpclientandroidlib.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader) -> a
com.AdX.tag.AdXAppTracker -> com.AdX.tag.AdXAppTracker:
    java.lang.String AdX_PREFERENCE -> a
    java.lang.String REFERRAL_URL -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void pass_on_broadcast(android.content.Context,android.content.Intent) -> a
com.AdX.tag.AdXConnect -> xc:
    com.AdX.tag.AdXConnect$ConnectTask connectTask -> e
    com.AdX.tag.AdXConnect$ConnectEventTask connectEventTask -> f
    android.content.Context context -> g
    com.AdX.tag.AdXConnect AdXConnectInstance -> h
    com.AdX.tag.AdXConnect AdXConnectEventInstance -> i
    com.AdX.tag.AdXURLConnection AdXURLConnection -> j
    java.util.concurrent.ScheduledExecutorService scheduledExecutor -> k
    java.lang.String deviceID -> l
    java.lang.String deviceName -> m
    java.lang.String deviceType -> n
    java.lang.String deviceOSVersion -> o
    java.lang.String deviceCountryCode -> p
    java.lang.String deviceLanguage -> q
    java.lang.String androidID -> r
    java.lang.String appID -> s
    java.lang.String clientID -> t
    java.lang.String appVersion -> u
    java.lang.String libraryVersion -> v
    java.lang.String deviceScreenDensity -> w
    java.lang.String deviceScreenLayoutSize -> x
    java.lang.String macAddress -> y
    java.lang.String tagVersion -> z
    java.lang.String urlParams -> A
    java.lang.String sdkType -> B
    java.lang.String userAgent -> C
    java.lang.String storeAppID -> D
    java.lang.String fbattribution -> E
    android.net.Uri ATTRIBUTION_ID_CONTENT_URI -> a
    java.lang.String referralURL -> F
    java.lang.String AdXClickURL -> G
    java.lang.String AdX_PREFERENCE -> H
    java.lang.String SEND_TAG -> I
    java.lang.String MODREFERRAL -> J
    java.lang.String RECEIVER_DONE -> K
    java.lang.String UPDATE -> L
    java.lang.String REFERRAL_URL -> M
    int LOGLEVEL -> b
    boolean WARN -> c
    boolean DEBUG -> d
    com.AdX.tag.AdXConnect getAdXConnectInstance(android.content.Context,boolean,int) -> a
    void schedule(java.lang.Runnable,java.lang.Long) -> a
    void doBroadcastConnectInstance(android.content.Context) -> a
    void getAdXConnectEventInstance(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void getAdXConnectEventInstance(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getFacebookAttributionId(android.content.Context) -> b
    void getApplicationData() -> d
    boolean handleConnectResponse(java.lang.String) -> a
    org.w3c.dom.Document buildDocument(java.lang.String) -> b
    java.lang.String getNodeTrimValue(org.w3c.dom.NodeList) -> a
    void finalize() -> finalize
    java.lang.String access$0(com.AdX.tag.AdXConnect) -> a
    java.lang.String access$1() -> a
    boolean access$2(com.AdX.tag.AdXConnect,java.lang.String) -> a
    java.lang.String access$3(com.AdX.tag.AdXConnect) -> b
    com.AdX.tag.AdXURLConnection access$4() -> b
    void access$5(com.AdX.tag.AdXURLConnection) -> a
    com.AdX.tag.AdXConnect access$6() -> c
    void access$8(com.AdX.tag.AdXConnect) -> c
    void access$9(com.AdX.tag.AdXConnect,com.AdX.tag.AdXConnect$ConnectEventTask) -> a
    com.AdX.tag.AdXConnect$ConnectEventTask access$10(com.AdX.tag.AdXConnect) -> d
com.AdX.tag.AdXConnect$1 -> xd:
    android.content.Context val$ctx -> a
    int val$isUpdate -> b
    void run() -> run
com.AdX.tag.AdXConnect$2 -> xe:
    android.content.Context val$ctx -> a
    int val$isUpdate -> b
    void run() -> run
com.AdX.tag.AdXConnect$3 -> xf:
    com.AdX.tag.AdXConnect this$0 -> a
    void run() -> run
com.AdX.tag.AdXConnect$4 -> xg:
    com.AdX.tag.AdXConnect this$0 -> a
    void run() -> run
com.AdX.tag.AdXConnect$ConnectEventTask -> xh:
    com.AdX.tag.AdXConnect this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.AdX.tag.AdXConnect$ConnectTask -> xi:
    com.AdX.tag.AdXConnect this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.AdX.tag.AdXURLConnection -> xj:
    java.lang.String connectToURL(java.lang.String,java.lang.String) -> a
com.AdX.tag.DeviceSerial -> xk:
    com.AdX.tag.DeviceSerial getInstance() -> a
    java.lang.String getDeviceSerial() -> b
com.AdX.tag.DeviceSerial$DeviceSerialHolder -> xl:
    com.AdX.tag.DeviceSerial INSTANCE -> a
    com.AdX.tag.DeviceSerial access$0() -> a
com.actionbarsherlock.ActionBarSherlock -> xm:
    java.lang.Class[] CONSTRUCTOR_ARGS -> d
    java.util.HashMap IMPLEMENTATIONS -> e
    android.app.Activity mActivity -> a
    boolean mIsDelegate -> b
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> c
    void registerImplementation(java.lang.Class) -> a
    boolean unregisterImplementation(java.lang.Class) -> b
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int) -> a
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchPostResume() -> b
    void dispatchPause() -> c
    void dispatchStop() -> d
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchOpenOptionsMenu() -> f
    boolean dispatchCloseOptionsMenu() -> g
    void dispatchPostCreate(android.os.Bundle) -> a
    void dispatchTitleChanged(java.lang.CharSequence,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchMenuOpened(int,android.view.Menu) -> a
    void dispatchPanelClosed(int,android.view.Menu) -> b
    void dispatchDestroy() -> h
    void dispatchSaveInstanceState(android.os.Bundle) -> b
    void dispatchRestoreInstanceState(android.os.Bundle) -> c
    boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    boolean requestFeature(int) -> a
    void setContentView(int) -> b
    void setContentView(android.view.View) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> i
    android.content.Context getThemedContext() -> j
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    void ensureActionBar() -> k
com.actionbarsherlock.ActionBarSherlock$Implementation -> xn:
    int api() -> a
    int dpi() -> b
com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener -> xo:
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> a
com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener -> xp:
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> b
com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener -> xq:
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener -> xr:
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener -> xs:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener -> xt:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener -> xu:
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener -> xv:
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.R -> xw:
com.actionbarsherlock.R$attr -> xx:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonStyleSmall -> buttonStyleSmall
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int verticalDivider -> verticalDivider
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
com.actionbarsherlock.R$bool -> xy:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
com.actionbarsherlock.R$dimen -> xz:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__alert_dialog_title_height -> abs__alert_dialog_title_height
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int action_button_min_width -> action_button_min_width
com.actionbarsherlock.R$drawable -> ya:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
    int actionoverflow -> actionoverflow
    int actionoverflow_selected -> actionoverflow_selected
    int logo_ic_text -> logo_ic_text
com.actionbarsherlock.R$id -> yb:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__titleDivider -> abs__titleDivider
    int abs__up -> abs__up
    int disableHome -> disableHome
    int edit_query -> edit_query
    int homeAsUp -> homeAsUp
    int listMode -> listMode
    int normal -> normal
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
com.actionbarsherlock.R$integer -> yc:
    int abs__max_action_buttons -> abs__max_action_buttons
com.actionbarsherlock.R$layout -> yd:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__dialog_title_holo -> abs__dialog_title_holo
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
com.actionbarsherlock.R$string -> ye:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_dialog_title_default -> abs__activity_chooser_view_dialog_title_default
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__share_action_provider_share_with -> abs__share_action_provider_share_with
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
com.actionbarsherlock.R$styleable -> yf:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_android_windowIsFloating -> SherlockTheme_android_windowIsFloating
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
com.actionbarsherlock.app.ActionBar -> com.actionbarsherlock.app.ActionBar:
    void setCustomView(int) -> a
    void updateUpState(boolean) -> a
    void setDisplayHomeAsUpEnabled(boolean) -> b
    void setDisplayShowCustomEnabled(boolean) -> c
    android.view.View getCustomView() -> a
    void setHomeButtonEnabled(boolean) -> d
    android.content.Context getThemedContext() -> b
com.actionbarsherlock.app.ActionBar$LayoutParams -> com.actionbarsherlock.app.ActionBar$LayoutParams:
    int[] ATTRS -> b
    int gravity -> a
com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener -> yg:
    void onMenuVisibilityChanged(boolean) -> a
com.actionbarsherlock.app.ActionBar$OnNavigationListener -> yh:
    boolean onNavigationItemSelected(int,long) -> a
com.actionbarsherlock.app.ActionBar$Tab -> yi:
    android.graphics.drawable.Drawable getIcon() -> a
    java.lang.CharSequence getText() -> b
    android.view.View getCustomView() -> c
    void select() -> d
    java.lang.CharSequence getContentDescription() -> e
com.actionbarsherlock.app.SherlockActivity -> com.actionbarsherlock.app.SherlockActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> b
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> a
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    android.view.View findViewById(int) -> findViewById
com.actionbarsherlock.app.SherlockExpandableListActivity -> com.actionbarsherlock.app.SherlockExpandableListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    android.view.View findViewById(int) -> findViewById
com.actionbarsherlock.app.SherlockFragmentActivity -> com.actionbarsherlock.app.SherlockFragmentActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> n
    boolean mIgnoreNativeCreate -> o
    boolean mIgnoreNativePrepare -> p
    boolean mIgnoreNativeSelected -> q
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> g
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> h
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> b
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> f
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> c
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    android.view.View findViewById(int) -> findViewById
com.actionbarsherlock.app.SherlockListActivity -> com.actionbarsherlock.app.SherlockListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    android.view.View findViewById(int) -> findViewById
com.actionbarsherlock.app.SherlockPreferenceActivity -> com.actionbarsherlock.app.SherlockPreferenceActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    android.view.View findViewById(int) -> findViewById
com.actionbarsherlock.internal.ActionBarSherlockCompat -> yj:
    boolean mReserveOverflow -> e
    boolean mReserveOverflowSet -> f
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> g
    java.util.HashMap mNativeItemMap -> d
    android.view.ViewGroup mDecor -> h
    android.view.ViewGroup mContentParent -> i
    boolean mIsTitleReady -> j
    boolean mIsDestroyed -> k
    boolean mClosingActionMenu -> l
    boolean mMenuIsPrepared -> m
    boolean mMenuRefreshContent -> n
    android.os.Bundle mMenuFrozenActionViewState -> o
    com.actionbarsherlock.internal.app.ActionBarImpl aActionBar -> p
    com.actionbarsherlock.internal.widget.ActionBarView wActionBar -> q
    int mFeatures -> r
    int mUiOptions -> s
    com.actionbarsherlock.internal.widget.IcsProgressBar mCircularProgressBar -> t
    com.actionbarsherlock.view.ActionMode mActionMode -> u
    com.actionbarsherlock.internal.widget.ActionBarContextView mActionModeView -> v
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void initActionBar() -> l
    android.content.Context getThemedContext() -> j
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchPostResume() -> b
    void dispatchPause() -> c
    void dispatchStop() -> d
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchOpenOptionsMenu() -> f
    boolean dispatchCloseOptionsMenu() -> g
    void dispatchPostCreate(android.os.Bundle) -> a
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchMenuOpened(int,android.view.Menu) -> a
    void dispatchPanelClosed(int,android.view.Menu) -> b
    void dispatchTitleChanged(java.lang.CharSequence,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    void dispatchDestroy() -> h
    void dispatchSaveInstanceState(android.os.Bundle) -> b
    void dispatchRestoreInstanceState(android.os.Bundle) -> c
    boolean preparePanel() -> m
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void reopenMenu(boolean) -> a
    boolean initializePanelMenu() -> n
    void checkCloseActionMenu(com.actionbarsherlock.view.Menu) -> c
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
    com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean) -> b
    boolean hasFeature(int) -> c
    boolean requestFeature(int) -> a
    void setContentView(int) -> b
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void installDecor() -> o
    android.view.ViewGroup generateLayout() -> p
    boolean isReservingOverflow() -> q
    int loadUiOptionsFromManifest(android.app.Activity) -> a
    java.lang.String cleanActivityName(java.lang.String,java.lang.String) -> a
    void ensureActionBar() -> k
    com.actionbarsherlock.internal.widget.ActionBarContextView access$0(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> a
    android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> b
    com.actionbarsherlock.view.ActionMode access$2(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> c
    void access$3(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode) -> a
    boolean access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> d
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$5(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> e
com.actionbarsherlock.internal.ActionBarSherlockCompat$1 -> yk:
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper -> yl:
    com.actionbarsherlock.view.ActionMode$Callback mWrapped -> b
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> a
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> a
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> b
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> a
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> a
com.actionbarsherlock.internal.ActionBarSherlockNative -> ym:
    com.actionbarsherlock.internal.app.ActionBarWrapper mActionBar -> d
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper mActionMode -> e
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> f
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void initActionBar() -> l
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean requestFeature(int) -> a
    void setContentView(int) -> b
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    android.content.Context getThemedContext() -> j
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    void access$0(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper) -> a
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative) -> a
    android.app.Activity access$2(com.actionbarsherlock.internal.ActionBarSherlockNative) -> b
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper -> yn:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> b
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper -> yo:
    android.view.ActionMode mActionMode -> b
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> c
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> a
    void invalidate() -> a
    void finish() -> b
    com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu() -> c
    com.actionbarsherlock.view.Menu getMenu() -> d
com.actionbarsherlock.internal.ResourcesCompat -> yp:
    boolean getResources_getBoolean(android.content.Context,int) -> a
    int getResources_getInteger(android.content.Context,int) -> b
    int loadLogoFromManifest(android.app.Activity) -> a
com.actionbarsherlock.internal.app.ActionBarImpl -> yq:
    android.content.Context mContext -> h
    android.content.Context mThemedContext -> i
    android.app.Activity mActivity -> j
    com.actionbarsherlock.internal.widget.ActionBarContainer mContainerView -> k
    com.actionbarsherlock.internal.widget.ActionBarView mActionView -> l
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> m
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> n
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout mContentView -> o
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> p
    java.util.ArrayList mTabs -> q
    int mSavedTabPosition -> r
    com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl mActionMode -> a
    com.actionbarsherlock.view.ActionMode mDeferredDestroyActionMode -> b
    com.actionbarsherlock.view.ActionMode$Callback mDeferredModeDestroyCallback -> c
    boolean mLastMenuVisibility -> s
    java.util.ArrayList mMenuVisibilityListeners -> t
    int mContextDisplayMode -> u
    boolean mHasEmbeddedTabs -> v
    android.os.Handler mHandler -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentShowAnim -> w
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentModeAnim -> x
    boolean mShowHideAnimationEnabled -> y
    boolean mWasHiddenBeforeMode -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mHideListener -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mShowListener -> g
    void init(android.view.View) -> b
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> i
    void completeDeferredDestroyActionMode() -> c
    void setShowHideAnimationEnabled(boolean) -> e
    void dispatchMenuVisibilityChanged(boolean) -> f
    void setCustomView(int) -> a
    void setDisplayHomeAsUpEnabled(boolean) -> b
    void setDisplayShowCustomEnabled(boolean) -> c
    void setHomeButtonEnabled(boolean) -> d
    void setDisplayOptions(int,int) -> a
    android.view.View getCustomView() -> a
    int getNavigationMode() -> d
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    void show(boolean) -> g
    void hide() -> e
    boolean isShowing() -> f
    void animateToMode(boolean) -> h
    android.content.Context getThemedContext() -> b
    void setCustomView(android.view.View) -> a
    void updateUpState(boolean) -> a
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl) -> a
    com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl) -> b
    com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl) -> c
    int access$3(com.actionbarsherlock.internal.app.ActionBarImpl) -> d
    void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl) -> e
    com.actionbarsherlock.internal.widget.ActionBarView access$6(com.actionbarsherlock.internal.app.ActionBarImpl) -> f
com.actionbarsherlock.internal.app.ActionBarImpl$1 -> yr:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.app.ActionBarImpl$2 -> ys:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl -> yt:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> c
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    com.actionbarsherlock.view.Menu getMenu() -> d
    void finish() -> b
    void invalidate() -> a
    boolean dispatchOnCreate() -> c
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.app.ActionBarWrapper -> yu:
    android.app.Activity mActivity -> a
    android.app.ActionBar mActionBar -> b
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mNavigationListener -> c
    java.util.Set mMenuVisibilityListeners -> d
    void setHomeButtonEnabled(boolean) -> d
    android.content.Context getThemedContext() -> b
    void setCustomView(int) -> a
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    void setDisplayHomeAsUpEnabled(boolean) -> b
    void setDisplayShowCustomEnabled(boolean) -> c
    android.view.View getCustomView() -> a
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
    void updateUpState(boolean) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.Animator -> yv:
    java.util.ArrayList mListeners -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> d
    boolean isStarted() -> e
    void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> a
    void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> b
    java.util.ArrayList getListeners() -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> g
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener -> yw:
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter -> yx:
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet -> yy:
    java.util.ArrayList mPlayingSet -> c
    java.util.HashMap mNodeMap -> d
    java.util.ArrayList mNodes -> e
    java.util.ArrayList mSortedNodes -> f
    boolean mNeedsSort -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> h
    boolean mTerminated -> b
    boolean mStarted -> i
    long mStartDelay -> j
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator mDelayAnim -> k
    long mDuration -> l
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> d
    boolean isStarted() -> e
    void start() -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone() -> h
    void sortNodes() -> i
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> g
    java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> a
    java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> b
    java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> c
    void access$5(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean) -> a
    java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> d
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1 -> yz:
    boolean canceled -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> b
    java.util.ArrayList val$nodesToStart -> c
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> za:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder -> zb:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder with(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency -> zc:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node node -> a
    int rule -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener -> zd:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mNode -> b
    int mRule -> c
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> e
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node -> ze:
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator animation -> a
    java.util.ArrayList dependencies -> b
    java.util.ArrayList tmpDependencies -> c
    java.util.ArrayList nodeDependencies -> d
    java.util.ArrayList nodeDependents -> e
    boolean done -> f
    void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone() -> a
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator -> zf:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet -> zg:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone() -> a
    float getFloatValue(float) -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> b
com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator -> zh:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe -> zi:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float) -> a
    boolean hasValue() -> a
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    float getFraction() -> c
    android.view.animation.Interpolator getInterpolator() -> d
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe -> zj:
    float mValue -> d
    float getFloatValue() -> f
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> e
com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet -> zk:
    int mNumKeyframes -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> a
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object getValue(float) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator -> zl:
    java.lang.Object mTarget -> h
    java.lang.String mPropertyName -> i
    void setPropertyName(java.lang.String) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    void start() -> a
    void initAnimation() -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long) -> a
    void animateValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone() -> i
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> j
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder -> zm:
    java.lang.String mPropertyName -> a
    java.lang.reflect.Method mSetter -> b
    java.lang.reflect.Method mGetter -> g
    java.lang.Class mValueType -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet mKeyframeSet -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> i
    java.lang.Class[] FLOAT_VARIANTS -> j
    java.lang.Class[] INTEGER_VARIANTS -> k
    java.lang.Class[] DOUBLE_VARIANTS -> l
    java.util.HashMap sSetterPropertyMap -> m
    java.util.HashMap sGetterPropertyMap -> n
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> e
    java.lang.Object[] mTmpValueArray -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> o
    java.lang.Object mAnimatedValue -> p
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupGetter(java.lang.Class) -> b
    void setupSetterAndGetter(java.lang.Object) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    void setAnimatedValue(java.lang.Object) -> b
    void init() -> b
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> a
    java.lang.String getPropertyName() -> c
    java.lang.Object getAnimatedValue() -> d
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> a
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> zn:
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> g
    float mFloatAnimatedValue -> h
    void setFloatValues(float[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> e
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> a
com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator -> zo:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator -> zp:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    boolean mPlayingBackwards -> o
    int mCurrentIteration -> p
    float mCurrentFraction -> q
    boolean mStartedDelay -> r
    long mDelayStartTime -> s
    int mPlayingState -> d
    boolean mRunning -> t
    boolean mStarted -> u
    boolean mInitialized -> e
    long mDuration -> v
    long mStartDelay -> w
    long sFrameDelay -> x
    int mRepeatCount -> y
    int mRepeatMode -> z
    android.view.animation.Interpolator mInterpolator -> A
    java.util.ArrayList mUpdateListeners -> B
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> b
    void setFloatValues(float[]) -> a
    void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    void initAnimation() -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    void setCurrentPlayTime(long) -> c
    long getCurrentPlayTime() -> k
    void setStartDelay(long) -> d
    void setInterpolator(android.view.animation.Interpolator) -> a
    void start(boolean) -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> d
    boolean isStarted() -> e
    void endAnimation() -> i
    void startAnimation() -> r
    boolean delayedAnimationFrame(long) -> a
    boolean animationFrame(long) -> e
    void animateValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> j
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> g
    java.lang.ThreadLocal access$2() -> l
    java.lang.ThreadLocal access$3() -> m
    java.lang.ThreadLocal access$4() -> n
    long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> a
    void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$7() -> o
    java.lang.ThreadLocal access$8() -> p
    boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long) -> a
    void access$10(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean) -> a
    void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> c
    long access$12() -> q
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1 -> zq:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2 -> zr:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3 -> zs:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4 -> zt:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5 -> zu:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler -> zv:
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> zw:
    void onAnimationUpdate(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> a
com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup -> com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy -> zx:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    float mAlpha -> d
    float mScaleX -> e
    float mScaleY -> f
    float mTranslationX -> g
    float mTranslationY -> h
    android.graphics.RectF mBefore -> i
    android.graphics.RectF mAfter -> j
    android.graphics.Matrix mTempMatrix -> k
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    void setScaleY(float) -> b
    float getTranslationX() -> b
    void setTranslationX(float) -> c
    float getTranslationY() -> c
    void setTranslationY(float) -> d
    void prepareForUpdate() -> d
    void invalidateAfterUpdate() -> e
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void reset() -> reset
com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView -> com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
com.actionbarsherlock.internal.view.ActionProviderWrapper -> zy:
    com.actionbarsherlock.view.ActionProvider mProvider -> a
    com.actionbarsherlock.view.ActionProvider unwrap() -> a
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.actionbarsherlock.internal.view.StandaloneActionMode -> zz:
    android.content.Context mContext -> a
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> b
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> c
    boolean mFinished -> d
    boolean mFocusable -> e
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> f
    void invalidate() -> a
    void finish() -> b
    com.actionbarsherlock.view.Menu getMenu() -> d
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.View_HasStateListenerSupport -> aaa:
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener -> aab:
    void onViewAttachedToWindow(android.view.View) -> a
    void onViewDetachedFromWindow(android.view.View) -> b
com.actionbarsherlock.internal.view.menu.ActionMenuItem -> aac:
    int mId -> a
    int mGroup -> b
    int mOrdering -> c
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mTitleCondensed -> e
    char mShortcutNumericChar -> f
    char mShortcutAlphabeticChar -> g
    android.graphics.drawable.Drawable mIconDrawable -> h
    android.content.Context mContext -> i
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> j
    int mFlags -> k
    int getGroupId() -> a
    android.graphics.drawable.Drawable getIcon() -> b
    int getItemId() -> c
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    java.lang.CharSequence getTitle() -> e
    java.lang.CharSequence getTitleCondensed() -> f
    boolean hasSubMenu() -> g
    boolean isVisible() -> h
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> i
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> j
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    boolean expandActionView() -> k
    boolean isActionViewExpanded() -> l
com.actionbarsherlock.internal.view.menu.ActionMenuItemView -> com.actionbarsherlock.internal.view.menu.ActionMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> c
    android.widget.ImageButton mImageButton -> d
    com.actionbarsherlock.internal.widget.CapitalizingButton mTextButton -> e
    boolean mAllowTextWithIcon -> f
    boolean mExpandedFormat -> g
    int mMinWidth -> h
    java.util.Set mListeners -> i
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> a
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
    void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> e
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> b
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> i
    boolean mReserveOverflow -> j
    boolean mReserveOverflowSet -> k
    int mWidthLimit -> l
    int mActionItemWidthLimit -> m
    int mMaxItems -> n
    boolean mMaxItemsSet -> o
    boolean mStrictWidthLimit -> p
    boolean mWidthLimitSet -> q
    boolean mExpandedActionViewsExclusive -> r
    int mMinCellSize -> s
    android.util.SparseBooleanArray mActionButtonGroups -> t
    android.view.View mScrapActionButtonView -> u
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> v
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> w
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> x
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> a
    int mOpenSubMenuId -> b
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean reserveOverflow(android.content.Context) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setWidthLimit(int,boolean) -> a
    void setReserveOverflow(boolean) -> a
    void setItemLimit(int) -> a
    void setExpandedActionViewsExclusive(boolean) -> b
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> c
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem) -> a
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> b
    boolean dismissPopupMenus() -> c
    boolean hideSubMenus() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowReserved() -> f
    boolean flagActionItems() -> g
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    void onSubUiVisibilityChanged(boolean) -> d
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> a
    void access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> a
    android.view.View access$2(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> b
    void access$3(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> a
    void access$4(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> aad:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey -> aae:
    boolean get(android.content.Context) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> aaf:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> aag:
    java.util.Set mListeners -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup -> aah:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> aai:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1 -> aaj:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.view.menu.ActionMenuView -> com.actionbarsherlock.internal.view.menu.ActionMenuView:
    boolean IS_FROYO -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> b
    boolean mReserveOverflow -> c
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mPresenter -> d
    boolean mFormatItems -> e
    int mFormatItemsWidth -> f
    int mMinCellSize -> g
    int mGeneratedItemPadding -> h
    boolean mFirst -> i
    void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> a
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowReserved(boolean) -> setOverflowReserved
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> b
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    int getWindowAnimations() -> getWindowAnimations
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean hasDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView -> aak:
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams -> com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
com.actionbarsherlock.internal.view.menu.BaseMenuPresenter -> aal:
    boolean IS_HONEYCOMB -> a
    android.content.Context mSystemContext -> c
    android.content.Context mContext -> d
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> e
    android.view.LayoutInflater mSystemInflater -> f
    android.view.LayoutInflater mInflater -> g
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> b
    int mMenuLayoutRes -> i
    int mItemLayoutRes -> j
    com.actionbarsherlock.internal.view.menu.MenuView mMenuView -> h
    int mId -> k
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> c
    void addItemView(android.view.View,int) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> b
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    void setId(int) -> b
com.actionbarsherlock.internal.view.menu.ContextMenuBuilder -> aam:
    android.view.ContextMenu$ContextMenuInfo mContextMenuInfo -> d
    com.actionbarsherlock.internal.view.menu.ContextMenuListener mListener -> e
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> a
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo(android.view.View) -> a
    void setContextMenuListener(com.actionbarsherlock.internal.view.menu.ContextMenuListener) -> a
    com.actionbarsherlock.internal.view.menu.MenuDialogHelper show(android.view.View,android.os.IBinder) -> a
com.actionbarsherlock.internal.view.menu.ContextMenuBuilder$ContextMenuInfoGetter -> aan:
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
com.actionbarsherlock.internal.view.menu.ContextMenuCallbackGetter -> aao:
    android.view.View$OnCreateContextMenuListener getOnCreateContextMenuListener() -> a
com.actionbarsherlock.internal.view.menu.ContextMenuDecorView -> com.actionbarsherlock.internal.view.menu.ContextMenuDecorView:
    com.actionbarsherlock.internal.view.menu.ContextMenuBuilder mContextMenu -> a
    com.actionbarsherlock.internal.view.menu.ContextMenuListener mListener -> b
    com.actionbarsherlock.internal.view.menu.MenuDialogHelper mMenuDialogHelper -> c
    com.actionbarsherlock.internal.view.menu.ContextMenuDecorView$ContextMenuListenersProvider mProvider -> d
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setProvider(com.actionbarsherlock.internal.view.menu.ContextMenuDecorView$ContextMenuListenersProvider) -> setProvider
    boolean showContextMenuForChild(android.view.View) -> showContextMenuForChild
com.actionbarsherlock.internal.view.menu.ContextMenuDecorView$ContextMenuListenersProvider -> aap:
    com.actionbarsherlock.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> a
com.actionbarsherlock.internal.view.menu.ContextMenuItemWrapper -> aaq:
    android.view.MenuItem nativeItem -> a
    android.view.MenuItem unwrap() -> m
com.actionbarsherlock.internal.view.menu.ContextMenuListener -> aar:
    boolean onContextItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    void onContextMenuClosed(com.actionbarsherlock.view.ContextMenu) -> a
    void onCreateContextMenu(com.actionbarsherlock.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> a
com.actionbarsherlock.internal.view.menu.ContextMenuWrapper -> aas:
    android.view.ContextMenu nativeMenu -> a
    android.view.ContextMenu unwrap() -> a
    android.view.Menu unwrap() -> b
com.actionbarsherlock.internal.view.menu.ExpandedMenuView -> com.actionbarsherlock.internal.view.menu.ExpandedMenuView:
    int mAnimations -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> b
    int getWindowAnimations() -> getWindowAnimations
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.view.menu.HoloListMenuItemView -> com.actionbarsherlock.internal.view.menu.HoloListMenuItemView:
    android.graphics.drawable.Drawable mBackground -> a
    android.widget.CheckBox mCheckBox -> b
    boolean mForceShowIcon -> c
    android.widget.ImageView mIconView -> d
    org.holoeverywhere.LayoutInflater mInflater -> e
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> f
    boolean mPreserveIconSpacing -> g
    android.widget.RadioButton mRadioButton -> h
    org.holoeverywhere.widget.TextView mShortcutView -> i
    int mTextAppearance -> j
    android.content.Context mTextAppearanceContext -> k
    org.holoeverywhere.widget.TextView mTitleView -> l
    org.holoeverywhere.LayoutInflater getInflater() -> getInflater
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> a
    void insertCheckBox() -> e
    void insertIconView() -> f
    void insertRadioButton() -> g
    void onFinishInflate() -> onFinishInflate
    void onMeasure(int,int) -> onMeasure
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
com.actionbarsherlock.internal.view.menu.ListMenuItemView -> com.actionbarsherlock.internal.view.menu.ListMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> b
    android.widget.ImageView mIconView -> c
    android.widget.RadioButton mRadioButton -> d
    android.widget.TextView mTitleView -> e
    android.widget.CheckBox mCheckBox -> f
    android.widget.TextView mShortcutView -> g
    android.graphics.drawable.Drawable mBackground -> h
    int mTextAppearance -> i
    android.content.Context mTextAppearanceContext -> j
    boolean mPreserveIconSpacing -> k
    android.view.LayoutInflater mInflater -> l
    boolean mForceShowIcon -> m
    android.content.Context mContext -> a
    void onFinishInflate() -> onFinishInflate
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> b
    void insertRadioButton() -> c
    void insertCheckBox() -> d
    boolean prefersCondensedTitle() -> a
    android.view.LayoutInflater getInflater() -> getInflater
com.actionbarsherlock.internal.view.menu.ListMenuPresenter -> aat:
    com.actionbarsherlock.internal.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> a
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> g
    android.content.Context mContext -> b
    org.holoeverywhere.LayoutInflater mInflater -> c
    int mItemIndexOffset -> h
    int mItemLayoutRes -> d
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> e
    int mThemeRes -> f
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean flagActionItems() -> g
    android.widget.ListAdapter getAdapter() -> a
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    void updateMenuView(boolean) -> c
    int access$0(com.actionbarsherlock.internal.view.menu.ListMenuPresenter) -> a
com.actionbarsherlock.internal.view.menu.ListMenuPresenter$MenuAdapter -> aau:
    int mExpandedIndex -> b
    com.actionbarsherlock.internal.view.menu.ListMenuPresenter this$0 -> a
    void findExpandedIndex() -> a
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
com.actionbarsherlock.internal.view.menu.MenuBuilder -> aav:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    int mDefaultShowAsAction -> p
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> q
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem -> x
    com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> a
    void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> a
    void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> b
    void dispatchPresenterUpdate(boolean) -> d
    boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void saveActionViewStates(android.os.Bundle) -> a
    void restoreActionViewStates(android.os.Bundle) -> b
    java.lang.String getActionViewStatesKey() -> b
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> a
    com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> c
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void clearAll() -> c
    void clear() -> d
    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> a
    boolean hasVisibleItems() -> e
    com.actionbarsherlock.view.MenuItem findItem(int) -> b
    int size() -> f
    com.actionbarsherlock.view.MenuItem getItem(int) -> c
    void setQwertyMode(boolean) -> a
    int getOrdering(int) -> d
    boolean isQwertyMode() -> g
    void setShortcutsVisibleInner(boolean) -> e
    boolean isShortcutsVisible() -> h
    android.content.res.Resources getResources() -> i
    android.content.Context getContext() -> j
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void changeMenuMode() -> k
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performShortcut(int,android.view.KeyEvent,int) -> a
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> a
    boolean performItemAction(com.actionbarsherlock.view.MenuItem,int) -> a
    void close(boolean) -> b
    void close() -> l
    void onItemsChanged(boolean) -> c
    void stopDispatchingItemsChanged() -> m
    void startDispatchingItemsChanged() -> n
    void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> o
    void flagActionItems() -> p
    java.util.ArrayList getActionItems() -> q
    java.util.ArrayList getNonActionItems() -> r
    void clearHeader() -> s
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    java.lang.CharSequence getHeaderTitle() -> t
    android.graphics.drawable.Drawable getHeaderIcon() -> u
    android.view.View getHeaderView() -> v
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> w
    boolean getOptionalIconsVisible() -> x
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> d
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem() -> y
    boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap) -> a
com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback -> aaw:
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker -> aax:
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
com.actionbarsherlock.internal.view.menu.MenuDialogHelper -> aay:
    org.holoeverywhere.app.AlertDialog mDialog -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> c
    com.actionbarsherlock.internal.view.menu.ListMenuPresenter mPresenter -> a
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> d
    void dismiss() -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    void setPresenterCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    void show(android.os.IBinder) -> a
com.actionbarsherlock.internal.view.menu.MenuItemImpl -> aaz:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> l
    com.actionbarsherlock.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    com.actionbarsherlock.view.ActionProvider mActionProvider -> s
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> m
    boolean isEnabled() -> n
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    int getGroupId() -> a
    int getItemId() -> c
    int getOrder() -> o
    int getOrdering() -> p
    android.content.Intent getIntent() -> q
    char getAlphabeticShortcut() -> r
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    char getNumericShortcut() -> s
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    char getShortcut() -> t
    java.lang.String getShortcutLabel() -> u
    boolean shouldShowShortcut() -> v
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    boolean hasSubMenu() -> g
    void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> e
    java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    java.lang.CharSequence getTitleCondensed() -> f
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    boolean isCheckable() -> w
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    void setExclusiveCheckable(boolean) -> e
    boolean isExclusiveCheckable() -> x
    boolean isChecked() -> y
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    void setCheckedInt(boolean) -> f
    boolean isVisible() -> h
    boolean setVisibleInt(boolean) -> g
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    void actionFormatChanged() -> z
    boolean shouldShowIcon() -> A
    boolean isActionButton() -> B
    boolean requestsActionButton() -> C
    boolean requiresActionButton() -> D
    void setIsActionButton(boolean) -> h
    boolean showsTextAsAction() -> E
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> i
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> j
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    boolean expandActionView() -> k
    boolean collapseActionView() -> F
    boolean hasCollapsibleActionView() -> G
    void setActionViewExpanded(boolean) -> i
    boolean isActionViewExpanded() -> l
com.actionbarsherlock.internal.view.menu.MenuItemWrapper -> aba:
    android.view.MenuItem mNativeItem -> a
    com.actionbarsherlock.view.SubMenu mSubMenu -> b
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener -> c
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mActionExpandListener -> d
    android.view.MenuItem$OnActionExpandListener mNativeActionExpandListener -> e
    int getItemId() -> c
    int getGroupId() -> a
    java.lang.CharSequence getTitle() -> e
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    java.lang.CharSequence getTitleCondensed() -> f
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    boolean isVisible() -> h
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    boolean hasSubMenu() -> g
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> i
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> j
    boolean expandActionView() -> k
    boolean isActionViewExpanded() -> l
com.actionbarsherlock.internal.view.menu.MenuPopupHelper -> abb:
    int ITEM_LAYOUT -> b
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mPopup -> e
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> f
    int mPopupMaxWidth -> g
    android.view.View mAnchorView -> h
    boolean mOverflowOnly -> i
    android.view.ViewTreeObserver mTreeObserver -> j
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> k
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> l
    boolean mForceShowIcon -> c
    android.view.ViewGroup mMeasureParent -> m
    void setAnchorView(android.view.View) -> c
    void setForceShowIcon(boolean) -> a
    void show() -> a
    boolean tryShow() -> b
    void dismiss() -> c
    void onDismiss() -> onDismiss
    boolean isShowing() -> d
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> a
    void onGlobalLayout() -> onGlobalLayout
    void onViewAttachedToWindow(android.view.View) -> a
    void onViewDetachedFromWindow(android.view.View) -> b
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> d
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver -> abc:
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    void onChanged() -> onChanged
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter -> abd:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    java.lang.Object getItem(int) -> getItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
com.actionbarsherlock.internal.view.menu.MenuPresenter -> abe:
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback -> abf:
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
com.actionbarsherlock.internal.view.menu.MenuView -> abg:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.menu.MenuView$ItemView -> abh:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean prefersCondensedTitle() -> a
com.actionbarsherlock.internal.view.menu.MenuWrapper -> abi:
    android.view.Menu mNativeMenu -> a
    java.util.WeakHashMap mNativeMap -> b
    android.view.Menu unwrap() -> b
    com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem) -> b
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void clear() -> d
    void invalidate() -> c
    void setGroupCheckable(int,boolean,boolean) -> a
    boolean hasVisibleItems() -> e
    com.actionbarsherlock.view.MenuItem findItem(int) -> b
    com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem) -> a
    boolean performIdentifierAction(int,int) -> a
com.actionbarsherlock.internal.view.menu.SubMenuBuilder -> abj:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mParentMenu -> d
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> a
    boolean isQwertyMode() -> g
    boolean isShortcutsVisible() -> h
    com.actionbarsherlock.view.Menu getParentMenu() -> a
    com.actionbarsherlock.view.MenuItem getItem() -> z
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> w
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> b
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> d
    java.lang.String getActionViewStatesKey() -> b
com.actionbarsherlock.internal.view.menu.SubMenuWrapper -> abk:
    android.view.SubMenu mNativeSubMenu -> a
    com.actionbarsherlock.view.MenuItem mItem -> b
    com.actionbarsherlock.view.MenuItem getItem() -> z
com.actionbarsherlock.internal.widget.AbsActionBarView -> com.actionbarsherlock.internal.widget.AbsActionBarView:
    com.actionbarsherlock.internal.view.menu.ActionMenuView mMenuView -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> b
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> c
    boolean mSplitActionBar -> d
    boolean mSplitWhenNarrow -> e
    int mContentHeight -> f
    android.content.Context mContext -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> h
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> i
    android.view.animation.Interpolator sAlphaInterpolator -> j
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void animateToVisibility(int) -> a
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> a
    void postShowOverflowMenu() -> b
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    boolean isOverflowReserved() -> e
    void dismissPopupMenus() -> f
    int measureChildView(android.view.View,int,int,int) -> a
    int positionChild(android.view.View,int,int,int) -> b
    int positionChildInverse(android.view.View,int,int,int) -> c
com.actionbarsherlock.internal.widget.AbsActionBarView$1 -> abl:
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener -> abm:
    boolean mCanceled -> c
    int mFinalVisibility -> a
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> b
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int) -> a
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
com.actionbarsherlock.internal.widget.ActionBarContainer -> com.actionbarsherlock.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    com.actionbarsherlock.internal.widget.ActionBarView mActionBarView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.graphics.drawable.Drawable mStackedBackground -> e
    android.graphics.drawable.Drawable mSplitBackground -> f
    boolean mIsSplit -> g
    boolean mIsStacked -> h
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarContextView -> com.actionbarsherlock.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> j
    java.lang.CharSequence mSubtitle -> k
    com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout mClose -> l
    android.view.View mCustomView -> m
    android.widget.LinearLayout mTitleLayout -> n
    android.widget.TextView mTitleView -> o
    android.widget.TextView mSubtitleView -> p
    int mTitleStyleRes -> q
    int mSubtitleStyleRes -> r
    android.graphics.drawable.Drawable mSplitBackground -> s
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentAnimation -> t
    boolean mAnimateInOnLayout -> u
    int mAnimationMode -> v
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> i
    void initForMode(com.actionbarsherlock.view.ActionMode) -> a
    void closeMode() -> g
    void finishAnimation() -> j
    void killMode() -> h
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation() -> k
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation() -> l
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
com.actionbarsherlock.internal.widget.ActionBarContextView$1 -> abn:
    com.actionbarsherlock.internal.widget.ActionBarContextView this$0 -> a
    com.actionbarsherlock.view.ActionMode val$mode -> b
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView -> com.actionbarsherlock.internal.widget.ActionBarView:
    int mNavigationMode -> m
    int mDisplayOptions -> n
    java.lang.CharSequence mTitle -> o
    java.lang.CharSequence mSubtitle -> p
    android.graphics.drawable.Drawable mIcon -> q
    android.graphics.drawable.Drawable mLogo -> r
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mHomeLayout -> s
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> t
    android.widget.LinearLayout mTitleLayout -> u
    android.widget.TextView mTitleView -> v
    android.widget.TextView mSubtitleView -> w
    android.view.View mTitleUpView -> x
    com.actionbarsherlock.internal.widget.IcsSpinner mSpinner -> y
    com.actionbarsherlock.internal.widget.IcsLinearLayout mListNavLayout -> z
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> A
    android.view.View mCustomNavView -> B
    com.actionbarsherlock.internal.widget.IcsProgressBar mProgressView -> C
    com.actionbarsherlock.internal.widget.IcsProgressBar mIndeterminateProgressView -> D
    int mProgressBarPadding -> E
    int mItemPadding -> F
    int mTitleStyleRes -> G
    int mSubtitleStyleRes -> H
    int mProgressStyle -> I
    int mIndeterminateProgressStyle -> J
    boolean mUserTitle -> K
    boolean mIncludeTabs -> L
    boolean mIsCollapsable -> M
    boolean mIsCollapsed -> N
    com.actionbarsherlock.internal.view.menu.MenuBuilder mOptionsMenu -> O
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> P
    com.actionbarsherlock.internal.view.menu.ActionMenuItem mLogoNavItem -> Q
    android.widget.SpinnerAdapter mSpinnerAdapter -> R
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mCallback -> S
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> T
    android.view.View mExpandedActionView -> j
    boolean isOpen -> U
    android.view.View mUpView -> V
    com.actionbarsherlock.view.Window$Callback mWindowCallback -> k
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mNavItemSelectedListener -> W
    android.view.View$OnClickListener mExpandedActionViewUpListener -> Z
    android.view.View$OnClickListener mUpClickListener -> aa
    android.os.Handler mAnimationHandler -> l
    void animateUpButton(boolean) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(com.actionbarsherlock.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> g
    void initIndeterminateProgress() -> h
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> i
    boolean hasEmbeddedTabs() -> j
    void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean hasExpandedActionView() -> k
    void collapseActionView() -> l
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> n
    void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> m
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView) -> a
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView) -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView) -> c
    android.view.View access$3(com.actionbarsherlock.internal.widget.ActionBarView) -> d
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$4(com.actionbarsherlock.internal.widget.ActionBarView) -> e
    android.graphics.drawable.Drawable access$5(com.actionbarsherlock.internal.widget.ActionBarView) -> f
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$6(com.actionbarsherlock.internal.widget.ActionBarView) -> g
    android.widget.LinearLayout access$7(com.actionbarsherlock.internal.widget.ActionBarView) -> h
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.widget.ActionBarView) -> i
    com.actionbarsherlock.internal.widget.IcsSpinner access$9(com.actionbarsherlock.internal.widget.ActionBarView) -> j
    android.view.View access$10(com.actionbarsherlock.internal.widget.ActionBarView) -> k
    int access$11(com.actionbarsherlock.internal.widget.ActionBarView) -> l
    void access$12(com.actionbarsherlock.internal.widget.ActionBarView) -> m
    int access$13(com.actionbarsherlock.internal.widget.ActionBarView) -> n
com.actionbarsherlock.internal.widget.ActionBarView$1 -> abo:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
com.actionbarsherlock.internal.widget.ActionBarView$2 -> abp:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$3 -> abq:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$4 -> abr:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> abs:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> c
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
com.actionbarsherlock.internal.widget.ActionBarView$HomeView -> com.actionbarsherlock.internal.widget.ActionBarView$HomeView:
    android.view.View mUpView -> a
    android.widget.ImageView mIconView -> b
    int mUpWidth -> c
    void setUp(boolean) -> setUp
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> getLeftOffset
    void onMeasure(int,int) -> onMeasure
    android.view.View getUpView() -> getUpView
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarView$SavedState -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1 -> abt:
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.CapitalizingButton -> com.actionbarsherlock.internal.widget.CapitalizingButton:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_Button -> c
    boolean mAllCaps -> d
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CapitalizingTextView -> com.actionbarsherlock.internal.widget.CapitalizingTextView:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_TextView -> c
    boolean mAllCaps -> d
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper -> com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper:
    com.actionbarsherlock.view.CollapsibleActionView child -> a
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View unwrap() -> a
com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow -> com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow:
    android.util.TypedValue mMinWidthMajor -> a
    android.util.TypedValue mMinWidthMinor -> b
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.widget.IcsAbsSpinner -> com.actionbarsherlock.internal.widget.IcsAbsSpinner:
    boolean IS_HONEYCOMB -> F
    android.widget.SpinnerAdapter mAdapter -> a
    int mHeightMeasureSpec -> b
    int mWidthMeasureSpec -> c
    boolean mBlockLayoutRequests -> d
    int mSelectionLeftPadding -> e
    int mSelectionTopPadding -> f
    int mSelectionRightPadding -> g
    int mSelectionBottomPadding -> h
    android.graphics.Rect mSpinnerPadding -> i
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin mRecycler -> j
    android.database.DataSetObserver mDataSetObserver -> G
    void initAbsSpinner() -> j
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void resetList() -> a
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> b
    void setSelection(int,boolean) -> setSelection
    void setSelection(int) -> setSelection
    void setSelectionInt(int,boolean) -> a
    void layout(int,boolean) -> b
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getCount() -> getCount
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean) -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin -> abu:
    android.util.SparseArray mScrapHeap -> b
    com.actionbarsherlock.internal.widget.IcsAbsSpinner this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState:
    long selectedId -> a
    int position -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1 -> abv:
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsAdapterView -> com.actionbarsherlock.internal.widget.IcsAdapterView:
    int mFirstPosition -> k
    int mSpecificTop -> l
    int mSyncPosition -> m
    long mSyncRowId -> n
    long mSyncHeight -> o
    boolean mNeedSync -> p
    int mSyncMode -> q
    int mLayoutHeight -> a
    boolean mInLayout -> r
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mOnItemSelectedListener -> s
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> t
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener mOnItemLongClickListener -> u
    boolean mDataChanged -> v
    int mNextSelectedPosition -> w
    long mNextSelectedRowId -> x
    int mSelectedPosition -> y
    long mSelectedRowId -> z
    android.view.View mEmptyView -> b
    int mItemCount -> A
    int mOldItemCount -> B
    int mOldSelectedPosition -> C
    long mOldSelectedRowId -> D
    boolean mDesiredFocusableState -> c
    boolean mDesiredFocusableInTouchModeState -> d
    com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier mSelectionNotifier -> e
    boolean mBlockLayoutRequests -> E
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    void setOnItemLongClickListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> c
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> d
    void updateEmptyStatus(boolean) -> a
    java.lang.Object getItemAtPosition(int) -> a
    long getItemIdAtPosition(int) -> b
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> e
    void fireOnSelected() -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> b
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> f
    void checkSelectionChanged() -> g
    int findSyncPosition() -> h
    int lookForSelectablePosition(int,boolean) -> c
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> i
    void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable) -> a
    android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
    void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView) -> b
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver -> abw:
    android.os.Parcelable mInstanceState -> b
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener -> abx:
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener -> aby:
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier -> abz:
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsColorDrawable -> aca:
    int color -> a
    android.graphics.Paint paint -> b
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.actionbarsherlock.internal.widget.IcsLinearLayout -> com.actionbarsherlock.internal.widget.IcsLinearLayout:
    int[] R_styleable_LinearLayout -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerWidth -> c
    int mDividerHeight -> d
    int mShowDividers -> e
    int mDividerPadding -> f
    void setShowDividers(int) -> setShowDividers
    int getShowDividers() -> getShowDividers
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> a
    void drawDividersHorizontal(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasDividerBeforeChildAt(int) -> a
com.actionbarsherlock.internal.widget.IcsListPopupWindow -> com.actionbarsherlock.internal.widget.IcsListPopupWindow:
    android.content.Context mContext -> a
    android.widget.PopupWindow mPopup -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView mDropDownList -> d
    int mDropDownHeight -> e
    int mDropDownWidth -> f
    int mDropDownHorizontalOffset -> g
    int mDropDownVerticalOffset -> h
    boolean mDropDownVerticalOffsetSet -> i
    int mListItemExpandMaximum -> j
    android.view.View mPromptView -> k
    int mPromptPosition -> l
    android.database.DataSetObserver mObserver -> m
    android.view.View mDropDownAnchorView -> n
    android.graphics.drawable.Drawable mDropDownListHighlight -> o
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> p
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> q
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> r
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> s
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener mScrollListener -> t
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider mHideSelector -> u
    android.os.Handler mHandler -> v
    android.graphics.Rect mTempRect -> w
    boolean mModal -> x
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition(int) -> a
    void setModal(boolean) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setAnchorView(android.view.View) -> a
    void setHorizontalOffset(int) -> b
    void setVerticalOffset(int) -> c
    void setContentWidth(int) -> d
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> a
    void dismiss() -> b
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void setInputMethodMode(int) -> e
    void setSelection(int) -> f
    void clearListSelection() -> c
    boolean isShowing() -> d
    boolean isInputMethodNotNeeded() -> f
    android.widget.ListView getListView() -> e
    int buildDropDown() -> g
    int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    int measureHeightOfChildren(int,int,int,int,int) -> a
    void measureScrapChild(android.view.View,int,int) -> a
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> a
    int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> b
    android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> c
    android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> e
    boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> f
com.actionbarsherlock.internal.widget.IcsListPopupWindow$1 -> acb:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView -> acc:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean) -> a
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider -> acd:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver -> ace:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener -> acf:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor -> acg:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable -> ach:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar -> com.actionbarsherlock.internal.widget.IcsProgressBar:
    boolean IS_HONEYCOMB -> f
    int[] ProgressBar -> g
    int mMinWidth -> a
    int mMaxWidth -> b
    int mMinHeight -> c
    int mMaxHeight -> d
    int mProgress -> h
    int mSecondaryProgress -> i
    int mMax -> j
    int mBehavior -> k
    int mDuration -> l
    boolean mIndeterminate -> m
    boolean mOnlyIndeterminate -> n
    android.view.animation.Transformation mTransformation -> o
    android.view.animation.AlphaAnimation mAnimation -> p
    android.graphics.drawable.Drawable mIndeterminateDrawable -> q
    int mIndeterminateRealLeft -> r
    int mIndeterminateRealTop -> s
    android.graphics.drawable.Drawable mProgressDrawable -> t
    android.graphics.drawable.Drawable mCurrentDrawable -> u
    android.graphics.Bitmap mSampleTile -> e
    boolean mNoInvalidate -> v
    android.view.animation.Interpolator mInterpolator -> w
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> x
    long mUiThreadId -> y
    boolean mShouldStartAnimationDrawable -> z
    long mLastDrawTime -> A
    boolean mInDrawing -> B
    int mAnimationResolution -> C
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> D
    com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender mAccessibilityEventSender -> E
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void initProgressBar() -> c
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> a
    void onProgressRefresh(float,boolean) -> a
    void refreshProgress(int,int,boolean) -> a
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> a
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void startAnimation() -> a
    void stopAnimation() -> b
    void setInterpolator(android.content.Context,int) -> setInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void scheduleAccessibilityEventSender() -> e
    void access$0(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean) -> a
    void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender -> aci:
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable -> acj:
    int mId -> b
    int mProgress -> c
    boolean mFromUser -> d
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
    void setup(int,int,boolean) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState:
    int progress -> a
    int secondaryProgress -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1 -> ack:
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsSpinner -> com.actionbarsherlock.internal.widget.IcsSpinner:
    com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup mPopup -> G
    com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter mTempAdapter -> H
    int mDropDownWidth -> F
    int mGravity -> I
    boolean mDisableChildrenWhenDisabled -> J
    android.graphics.Rect mTempRect -> K
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> b
    android.view.View makeAndAddView(int) -> c
    void setUpChild(android.view.View) -> setUpChild
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    java.lang.CharSequence getPrompt() -> getPrompt
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner) -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter -> acl:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup -> acm:
    java.lang.CharSequence mHintText -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsSpinner this$0 -> a
    void setAdapter(android.widget.ListAdapter) -> a
    java.lang.CharSequence getHintText() -> f
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> a
    com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup) -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1 -> acn:
    com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup -> aco:
    void setAdapter(android.widget.ListAdapter) -> a
    void show() -> a
    void dismiss() -> b
    boolean isShowing() -> d
    void setPromptText(java.lang.CharSequence) -> a
    java.lang.CharSequence getHintText() -> f
com.actionbarsherlock.internal.widget.IcsToast -> acp:
    android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int) -> a
    void setText(java.lang.CharSequence) -> setText
com.actionbarsherlock.internal.widget.ScrollingTabContainerView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> e
    com.actionbarsherlock.internal.widget.IcsLinearLayout mTabLayout -> f
    com.actionbarsherlock.internal.widget.IcsSpinner mTabSpinner -> g
    boolean mAllowCollapse -> h
    android.view.LayoutInflater mInflater -> i
    int mMaxTabWidth -> b
    int mContentHeight -> j
    int mSelectedTabIndex -> k
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> c
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> d
    android.view.animation.Interpolator sAlphaInterpolator -> l
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    com.actionbarsherlock.internal.widget.IcsLinearLayout createTabLayout() -> d
    com.actionbarsherlock.internal.widget.IcsSpinner createSpinner() -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToVisibility(int) -> a
    void animateToTab(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
    com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> a
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1 -> acq:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    android.view.View val$tabView -> b
    void run() -> run
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter -> acr:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener -> acs:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mParent -> a
    com.actionbarsherlock.app.ActionBar$Tab mTab -> b
    com.actionbarsherlock.internal.widget.CapitalizingTextView mTextView -> c
    android.widget.ImageView mIconView -> d
    android.view.View mCustomView -> e
    void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> a
    void bindTab(com.actionbarsherlock.app.ActionBar$Tab) -> a
    void onMeasure(int,int) -> onMeasure
    void update() -> a
    com.actionbarsherlock.app.ActionBar$Tab getTab() -> getTab
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener -> act:
    boolean mCanceled -> b
    int mFinalVisibility -> c
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int) -> a
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
com.actionbarsherlock.internal.widget.TabsLinearLayout -> com.actionbarsherlock.internal.widget.TabsLinearLayout:
    int[] R_styleable_LinearLayout -> a
    boolean mUseLargestChild -> b
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    void onMeasure(int,int) -> onMeasure
    void useLargestChildHorizontal() -> a
com.actionbarsherlock.view.ActionMode -> acu:
    void invalidate() -> a
    void finish() -> b
    com.actionbarsherlock.view.Menu getMenu() -> d
com.actionbarsherlock.view.ActionMode$Callback -> acv:
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> a
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> b
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> a
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> a
com.actionbarsherlock.view.ActionProvider -> acw:
    com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> a
    android.view.View onCreateActionView() -> a
    boolean onPerformDefaultAction() -> b
    boolean hasSubMenu() -> c
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> a
    void subUiVisibilityChanged(boolean) -> a
    void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener) -> a
com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener -> acx:
    void onSubUiVisibilityChanged(boolean) -> d
com.actionbarsherlock.view.CollapsibleActionView -> acy:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
com.actionbarsherlock.view.ContextMenu -> acz:
com.actionbarsherlock.view.Menu -> ada:
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void clear() -> d
    void setGroupCheckable(int,boolean,boolean) -> a
    boolean hasVisibleItems() -> e
    com.actionbarsherlock.view.MenuItem findItem(int) -> b
    boolean performIdentifierAction(int,int) -> a
com.actionbarsherlock.view.MenuInflater -> adb:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
    void inflate(int,com.actionbarsherlock.view.Menu) -> a
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu) -> a
    android.content.Context access$0(com.actionbarsherlock.view.MenuInflater) -> a
    java.lang.Class[] access$1() -> a
    java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater) -> b
    java.lang.Object access$3(com.actionbarsherlock.view.MenuInflater) -> c
    java.lang.Class[] access$4() -> b
    java.lang.Object[] access$5(com.actionbarsherlock.view.MenuInflater) -> d
com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener -> adc:
    java.lang.Class[] PARAM_TYPES -> a
    java.lang.Object mRealOwner -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.view.MenuInflater$MenuState -> add:
    com.actionbarsherlock.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    com.actionbarsherlock.view.ActionProvider itemActionProvider -> z
    com.actionbarsherlock.view.MenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(com.actionbarsherlock.view.MenuItem) -> a
    void addItem() -> b
    com.actionbarsherlock.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState) -> a
com.actionbarsherlock.view.MenuItem -> ade:
    int getItemId() -> c
    int getGroupId() -> a
    java.lang.CharSequence getTitle() -> e
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    java.lang.CharSequence getTitleCondensed() -> f
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    boolean isVisible() -> h
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    boolean hasSubMenu() -> g
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> i
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> j
    boolean expandActionView() -> k
    boolean isActionViewExpanded() -> l
com.actionbarsherlock.view.MenuItem$OnActionExpandListener -> adf:
    boolean onMenuItemActionExpand(com.actionbarsherlock.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(com.actionbarsherlock.view.MenuItem) -> b
com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener -> adg:
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.view.SubMenu -> adh:
    com.actionbarsherlock.view.MenuItem getItem() -> z
com.actionbarsherlock.view.Window -> adi:
com.actionbarsherlock.view.Window$Callback -> adj:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.widget.ActivityChooserModel -> adk:
    java.lang.String LOG_TAG -> a
    java.lang.Object sRegistryLock -> b
    java.util.Map sDataModelRegistry -> c
    java.lang.Object mInstanceLock -> d
    java.util.List mActivites -> e
    java.util.List mHistoricalRecords -> f
    android.content.Context mContext -> g
    java.lang.String mHistoryFileName -> h
    android.content.Intent mIntent -> i
    com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> j
    int mHistoryMaxSize -> k
    boolean mCanReadHistoricalData -> l
    boolean mReadShareHistoryCalled -> m
    boolean mHistoricalRecordsChanged -> n
    android.os.Handler mHandler -> o
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> p
    java.util.concurrent.Executor SERIAL_EXECUTOR -> q
    com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> a
    void setIntent(android.content.Intent) -> a
    int getActivityCount() -> a
    android.content.pm.ResolveInfo getActivity(int) -> a
    int getActivityIndex(android.content.pm.ResolveInfo) -> a
    android.content.Intent chooseActivity(int) -> b
    void setOnChooseActivityListener(com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener) -> a
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setDefaultActivity(int) -> c
    void readHistoricalData() -> e
    void persistHistoricalData() -> f
    void sortActivities() -> g
    int getHistorySize() -> c
    boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord) -> a
    void pruneExcessiveHistoricalRecordsLocked() -> h
    void loadActivitiesLocked() -> i
    android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel) -> a
    java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel) -> b
    java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel) -> c
    java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel) -> d
    void access$4(com.actionbarsherlock.widget.ActivityChooserModel,boolean) -> a
    android.os.Handler access$5(com.actionbarsherlock.widget.ActivityChooserModel) -> e
    void access$6(com.actionbarsherlock.widget.ActivityChooserModel) -> f
    void access$7(com.actionbarsherlock.widget.ActivityChooserModel) -> g
    java.lang.String access$8() -> d
com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo -> adl:
    android.content.pm.ResolveInfo resolveInfo -> a
    float weight -> b
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) -> a
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter -> adm:
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter -> adn:
    java.util.Map mPackageNameToActivityMap -> b
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> a
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord -> ado:
    android.content.ComponentName activity -> a
    long time -> b
    float weight -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader -> adp:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> a
    void run() -> run
    com.actionbarsherlock.widget.ActivityChooserModel access$1(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader) -> a
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1 -> adq:
    com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader this$1 -> a
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister -> adr:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> a
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener -> ads:
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> a
com.actionbarsherlock.widget.ActivityChooserView -> com.actionbarsherlock.widget.ActivityChooserView:
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> b
    com.actionbarsherlock.widget.ActivityChooserView$Callbacks mCallbacks -> c
    com.actionbarsherlock.internal.widget.IcsLinearLayout mActivityChooserContent -> d
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> e
    android.widget.FrameLayout mExpandActivityOverflowButton -> f
    android.widget.ImageView mExpandActivityOverflowButtonImage -> g
    android.widget.FrameLayout mDefaultActivityButton -> h
    android.widget.ImageView mDefaultActivityButtonImage -> i
    int mListPopupMaxWidth -> j
    com.actionbarsherlock.view.ActionProvider mProvider -> a
    android.database.DataSetObserver mModelDataSetOberver -> k
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> l
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mListPopupWindow -> m
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> n
    boolean mIsSelectingDefaultActivity -> o
    int mInitialActivityCount -> p
    boolean mIsAttachedToWindow -> q
    int mDefaultActionButtonContentDescription -> r
    android.content.Context mContext -> s
    boolean IS_HONEYCOMB -> t
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> a
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> a
    void setExpandActivityOverflowButtonContentDescription(int) -> a
    void setProvider(com.actionbarsherlock.view.ActionProvider) -> a
    boolean showPopup() -> a
    void showPopupUnchecked(int) -> c
    boolean dismissPopup() -> b
    boolean isShowingPopup() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setDefaultActionButtonContentDescription(int) -> b
    com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow() -> e
    void updateAppearance() -> f
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView) -> a
    com.actionbarsherlock.internal.widget.IcsListPopupWindow access$1(com.actionbarsherlock.widget.ActivityChooserView) -> b
    void access$2(com.actionbarsherlock.widget.ActivityChooserView,int) -> a
    boolean access$3(com.actionbarsherlock.widget.ActivityChooserView) -> c
    android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView) -> d
    android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView) -> e
    android.widget.FrameLayout access$6(com.actionbarsherlock.widget.ActivityChooserView) -> f
    void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean) -> a
    int access$8(com.actionbarsherlock.widget.ActivityChooserView) -> g
    android.widget.PopupWindow$OnDismissListener access$9(com.actionbarsherlock.widget.ActivityChooserView) -> h
    android.database.DataSetObserver access$10(com.actionbarsherlock.widget.ActivityChooserView) -> i
    boolean access$11() -> d
    void access$12(com.actionbarsherlock.widget.ActivityChooserView) -> j
com.actionbarsherlock.widget.ActivityChooserView$1 -> adt:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.widget.ActivityChooserView$2 -> adu:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.ActivityChooserView$3 -> adv:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter -> adw:
    com.actionbarsherlock.widget.ActivityChooserModel mDataModel -> b
    int mMaxActivityCount -> c
    boolean mShowDefaultActivity -> d
    boolean mHighlightDefaultActivity -> e
    boolean mShowFooterView -> f
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel) -> a
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> a
    void setMaxActivityCount(int) -> a
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setShowFooterView(boolean) -> a
    int getActivityCount() -> c
    int getHistorySize() -> d
    int getMaxActivityCount() -> e
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> f
    void setShowDefaultActivity(boolean,boolean) -> a
    boolean getShowDefaultActivity() -> g
com.actionbarsherlock.widget.ActivityChooserView$Callbacks -> adx:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> a
com.actionbarsherlock.widget.ActivityChooserView$SetActivated -> ady:
    void invoke(android.view.View,boolean) -> a
com.actionbarsherlock.widget.SearchView -> com.actionbarsherlock.widget.SearchView:
    com.actionbarsherlock.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> b
    com.actionbarsherlock.widget.SearchView$OnCloseListener mOnCloseListener -> c
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> d
    com.actionbarsherlock.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> e
    android.view.View$OnClickListener mOnSearchClickListener -> f
    boolean mIconifiedByDefault -> g
    boolean mIconified -> h
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> i
    android.view.View mSearchButton -> j
    android.view.View mSubmitButton -> k
    android.view.View mSearchPlate -> l
    android.view.View mSubmitArea -> m
    android.widget.ImageView mCloseButton -> n
    android.view.View mSearchEditFrame -> o
    android.view.View mVoiceButton -> p
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete mQueryTextView -> q
    android.view.View mDropDownAnchor -> r
    android.widget.ImageView mSearchHintIcon -> s
    boolean mSubmitButtonEnabled -> t
    java.lang.CharSequence mQueryHint -> u
    boolean mQueryRefinement -> v
    boolean mClearingFocus -> w
    int mMaxWidth -> x
    boolean mVoiceButtonEnabled -> y
    java.lang.CharSequence mOldQueryText -> z
    java.lang.CharSequence mUserQuery -> A
    boolean mExpandedInActionView -> B
    int mCollapsedImeOptions -> C
    android.app.SearchableInfo mSearchable -> D
    android.os.Bundle mAppSearchData -> E
    java.lang.Runnable mShowImeRunnable -> F
    java.lang.Runnable mUpdateDrawableStateRunnable -> G
    java.lang.Runnable mReleaseCursorRunnable -> H
    android.content.Intent mVoiceWebSearchIntent -> I
    android.content.Intent mVoiceAppSearchIntent -> J
    java.util.WeakHashMap mOutsideDrawablesCache -> K
    android.view.View$OnClickListener mOnClickListener -> L
    android.view.View$OnKeyListener mTextKeyListener -> a
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> M
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> N
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> O
    android.text.TextWatcher mTextWatcher -> P
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(com.actionbarsherlock.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(com.actionbarsherlock.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(com.actionbarsherlock.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> c
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> a
    boolean hasVoiceSearch() -> e
    boolean isSubmitAreaEnabled() -> f
    void updateSubmitButton(boolean) -> b
    void updateSubmitArea() -> g
    void updateCloseButton() -> h
    void postUpdateFocusedState() -> i
    void updateFocusedState() -> j
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> a
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> b
    void updateQueryHint() -> k
    void updateSearchAutoComplete() -> l
    void updateVoiceButton(boolean) -> c
    void onTextChanged(java.lang.CharSequence) -> c
    void onSubmitQuery() -> m
    void dismissSuggestions() -> n
    void onCloseClicked() -> o
    void onSearchClicked() -> p
    void onVoiceClicked() -> q
    void onTextFocusChanged() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> b
    void onActionViewExpanded() -> a
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void adjustDropDownSizeAndPosition() -> r
    boolean onItemClicked(int,int,java.lang.String) -> a
    boolean onItemSelected(int) -> a
    void rewriteQueryFromSuggestion(int) -> b
    boolean launchSuggestion(int,int,java.lang.String) -> b
    void launchIntent(android.content.Intent) -> a
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> a
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> a
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> a
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> b
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> a
    void forceSuggestionQuery() -> s
    boolean isLandscapeMode(android.content.Context) -> a
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> b
    void showSoftInputUnchecked(android.view.View,android.view.inputmethod.InputMethodManager,int) -> b
    void setText(android.widget.AutoCompleteTextView,java.lang.CharSequence,boolean) -> a
    void access$0(android.view.View,android.view.inputmethod.InputMethodManager,int) -> a
    void access$1(com.actionbarsherlock.widget.SearchView) -> a
    android.support.v4.widget.CursorAdapter access$2(com.actionbarsherlock.widget.SearchView) -> b
    android.view.View access$3(com.actionbarsherlock.widget.SearchView) -> c
    void access$4(com.actionbarsherlock.widget.SearchView) -> d
    android.widget.ImageView access$5(com.actionbarsherlock.widget.SearchView) -> e
    void access$6(com.actionbarsherlock.widget.SearchView) -> f
    android.view.View access$7(com.actionbarsherlock.widget.SearchView) -> g
    void access$8(com.actionbarsherlock.widget.SearchView) -> h
    android.view.View access$9(com.actionbarsherlock.widget.SearchView) -> i
    void access$10(com.actionbarsherlock.widget.SearchView) -> j
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete access$11(com.actionbarsherlock.widget.SearchView) -> k
    void access$12(com.actionbarsherlock.widget.SearchView) -> l
    android.app.SearchableInfo access$13(com.actionbarsherlock.widget.SearchView) -> m
    boolean access$14(com.actionbarsherlock.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> a
    void access$15(com.actionbarsherlock.widget.SearchView,int,java.lang.String,java.lang.String) -> a
    boolean access$16(com.actionbarsherlock.widget.SearchView,int,int,java.lang.String) -> a
    boolean access$17(com.actionbarsherlock.widget.SearchView,int) -> a
    void access$18(com.actionbarsherlock.widget.SearchView,java.lang.CharSequence) -> a
    void access$19(android.widget.AutoCompleteTextView,boolean) -> a
    void access$20(com.actionbarsherlock.widget.SearchView,boolean) -> a
    android.view.View$OnFocusChangeListener access$21(com.actionbarsherlock.widget.SearchView) -> n
    void access$22(com.actionbarsherlock.widget.SearchView) -> o
com.actionbarsherlock.widget.SearchView$1 -> adz:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void run() -> run
com.actionbarsherlock.widget.SearchView$10 -> aea:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.actionbarsherlock.widget.SearchView$11 -> aeb:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.actionbarsherlock.widget.SearchView$12 -> aec:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.SearchView$2 -> aed:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void run() -> run
com.actionbarsherlock.widget.SearchView$3 -> aee:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void run() -> run
com.actionbarsherlock.widget.SearchView$4 -> aef:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.widget.SearchView$5 -> aeg:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.actionbarsherlock.widget.SearchView$6 -> aeh:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.actionbarsherlock.widget.SearchView$7 -> aei:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.widget.SearchView$8 -> aej:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.widget.SearchView$9 -> aek:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.actionbarsherlock.widget.SearchView$OnCloseListener -> ael:
    boolean onClose() -> a
com.actionbarsherlock.widget.SearchView$OnQueryTextListener -> aem:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
com.actionbarsherlock.widget.SearchView$OnSuggestionListener -> aen:
    boolean onSuggestionSelect(int) -> a
    boolean onSuggestionClick(int) -> b
com.actionbarsherlock.widget.SearchView$SearchAutoComplete -> com.actionbarsherlock.widget.SearchView$SearchAutoComplete:
    int mThreshold -> a
    com.actionbarsherlock.widget.SearchView mSearchView -> b
    void setSearchView(com.actionbarsherlock.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> a
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$0(com.actionbarsherlock.widget.SearchView$SearchAutoComplete) -> a
com.actionbarsherlock.widget.ShareActionProvider -> aeo:
    int mMaxShownActivityCount -> a
    com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> b
    android.content.Context mContext -> c
    java.lang.String mShareHistoryFileName -> d
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener -> e
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener -> f
    void setOnShareTargetSelectedListener(com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener) -> a
    android.view.View onCreateActionView() -> a
    boolean hasSubMenu() -> c
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> a
    void setShareHistoryFileName(java.lang.String) -> a
    void setShareIntent(android.content.Intent) -> a
    void setActivityChooserPolicyIfNeeded() -> d
    android.content.Context access$0(com.actionbarsherlock.widget.ShareActionProvider) -> a
    java.lang.String access$1(com.actionbarsherlock.widget.ShareActionProvider) -> b
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener access$2(com.actionbarsherlock.widget.ShareActionProvider) -> c
com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener -> aep:
    boolean onShareTargetSelected(com.actionbarsherlock.widget.ShareActionProvider,android.content.Intent) -> a
com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy -> aeq:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> a
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> a
com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> aer:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> a
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.widget.SuggestionsAdapter -> aes:
    android.app.SearchManager mSearchManager -> j
    android.app.SearchableInfo mSearchable -> k
    com.actionbarsherlock.widget.SearchView mSearchView -> l
    android.content.Context mProviderContext -> m
    java.util.WeakHashMap mOutsideDrawablesCache -> n
    boolean mClosed -> o
    int mQueryRefinement -> p
    android.content.res.ColorStateList mUrlColor -> q
    int mText1Col -> r
    int mText2Col -> s
    int mText2UrlCol -> t
    int mIconName1Col -> u
    int mIconName2Col -> v
    int mFlagsCol -> w
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getSuggestions(java.lang.String,int) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> d
    void changeCursor(android.database.Cursor) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> b
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> e
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> f
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    android.graphics.drawable.Drawable getTheDrawable(android.net.Uri) -> a
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> b
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> g
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache -> aet:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
com.android.volley.AuthFailureError -> aeu:
    android.content.Intent mResolutionIntent -> b
    java.lang.String getMessage() -> getMessage
com.android.volley.Cache -> aev:
    com.android.volley.Cache$Entry get(java.lang.String) -> a
    void put(java.lang.String,com.android.volley.Cache$Entry) -> a
    void initialize() -> a
com.android.volley.Cache$Entry -> aew:
    byte[] data -> a
    java.lang.String etag -> b
    long serverDate -> c
    long ttl -> d
    long softTtl -> e
    java.util.Map responseHeaders -> f
    boolean isExpired() -> a
    boolean refreshNeeded() -> b
com.android.volley.CacheDispatcher -> aex:
    boolean DEBUG -> a
    java.util.concurrent.BlockingQueue mCacheQueue -> b
    java.util.concurrent.BlockingQueue mNetworkQueue -> c
    com.android.volley.Cache mCache -> d
    com.android.volley.ResponseDelivery mDelivery -> e
    boolean mQuit -> f
    void quit() -> a
    void run() -> run
    java.util.concurrent.BlockingQueue access$000(com.android.volley.CacheDispatcher) -> a
com.android.volley.CacheDispatcher$1 -> aey:
    com.android.volley.Request val$request -> a
    com.android.volley.CacheDispatcher this$0 -> b
    void run() -> run
com.android.volley.DefaultRetryPolicy -> aez:
    int mCurrentTimeoutMs -> a
    int mCurrentRetryCount -> b
    int mMaxNumRetries -> c
    float mBackoffMultiplier -> d
    int getCurrentTimeout() -> a
    int getCurrentRetryCount() -> b
    void retry(com.android.volley.VolleyError) -> a
    boolean hasAttemptRemaining() -> c
com.android.volley.ExecutorDelivery -> afa:
    java.util.concurrent.Executor mResponsePoster -> a
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> a
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> a
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> a
com.android.volley.ExecutorDelivery$1 -> afb:
    android.os.Handler val$handler -> a
    com.android.volley.ExecutorDelivery this$0 -> b
    void execute(java.lang.Runnable) -> execute
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable -> afc:
    com.android.volley.Request mRequest -> b
    com.android.volley.Response mResponse -> c
    java.lang.Runnable mRunnable -> d
    com.android.volley.ExecutorDelivery this$0 -> a
    void run() -> run
com.android.volley.Network -> afd:
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> a
com.android.volley.NetworkDispatcher -> afe:
    java.util.concurrent.BlockingQueue mQueue -> a
    com.android.volley.Network mNetwork -> b
    com.android.volley.Cache mCache -> c
    com.android.volley.ResponseDelivery mDelivery -> d
    boolean mQuit -> e
    void quit() -> a
    void addTrafficStatsTag(com.android.volley.Request) -> a
    void run() -> run
    void parseAndDeliverNetworkError(com.android.volley.Request,com.android.volley.VolleyError) -> a
com.android.volley.NetworkError -> aff:
com.android.volley.NetworkResponse -> afg:
    int statusCode -> a
    byte[] data -> b
    java.util.Map headers -> c
    boolean notModified -> d
com.android.volley.NoConnectionError -> afh:
com.android.volley.ParseError -> afi:
com.android.volley.Request -> afj:
    com.android.volley.VolleyLog$MarkerLog mEventLog -> a
    int mMethod -> b
    java.lang.String mUrl -> c
    int mDefaultTrafficStatsTag -> d
    com.android.volley.Response$ErrorListener mErrorListener -> e
    java.lang.Integer mSequence -> f
    com.android.volley.RequestQueue mRequestQueue -> g
    boolean mShouldCache -> h
    boolean mCanceled -> i
    boolean mResponseDelivered -> j
    long mRequestBirthTime -> k
    com.android.volley.RetryPolicy mRetryPolicy -> l
    com.android.volley.Cache$Entry mCacheEntry -> m
    int getMethod() -> a
    int getTrafficStatsTag() -> b
    int findDefaultTrafficStatsTag(java.lang.String) -> c
    com.android.volley.Request setRetryPolicy(com.android.volley.RetryPolicy) -> a
    void addMarker(java.lang.String) -> a
    void finish(java.lang.String) -> b
    com.android.volley.Request setRequestQueue(com.android.volley.RequestQueue) -> a
    com.android.volley.Request setSequence(int) -> a
    java.lang.String getUrl() -> c
    java.lang.String getCacheKey() -> d
    com.android.volley.Request setCacheEntry(com.android.volley.Cache$Entry) -> a
    com.android.volley.Cache$Entry getCacheEntry() -> e
    void cancel() -> f
    boolean isCanceled() -> g
    java.util.Map getHeaders() -> h
    java.util.Map getPostParams() -> i
    java.lang.String getPostParamsEncoding() -> j
    java.lang.String getPostBodyContentType() -> k
    byte[] getPostBody() -> l
    java.util.Map getParams() -> m
    java.lang.String getParamsEncoding() -> n
    java.lang.String getBodyContentType() -> o
    byte[] getBody() -> p
    byte[] encodeParameters(java.util.Map,java.lang.String) -> a
    boolean shouldCache() -> q
    com.android.volley.Request$Priority getPriority() -> r
    int getTimeoutMs() -> s
    com.android.volley.RetryPolicy getRetryPolicy() -> t
    void markDelivered() -> u
    boolean hasHadResponseDelivered() -> v
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> a
    com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError) -> a
    void deliverResponse(java.lang.Object) -> a
    void deliverError(com.android.volley.VolleyError) -> b
    int compareTo(com.android.volley.Request) -> a
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    com.android.volley.VolleyLog$MarkerLog access$000(com.android.volley.Request) -> b
com.android.volley.Request$1 -> afk:
    java.lang.String val$tag -> a
    long val$threadId -> b
    com.android.volley.Request this$0 -> c
    void run() -> run
com.android.volley.Request$Priority -> afl:
    com.android.volley.Request$Priority LOW -> a
    com.android.volley.Request$Priority NORMAL -> b
    com.android.volley.Request$Priority HIGH -> c
    com.android.volley.Request$Priority IMMEDIATE -> d
    com.android.volley.Request$Priority[] $VALUES -> e
    com.android.volley.Request$Priority[] values() -> values
    com.android.volley.Request$Priority valueOf(java.lang.String) -> valueOf
com.android.volley.RequestQueue -> afm:
    java.util.concurrent.atomic.AtomicInteger mSequenceGenerator -> a
    java.util.Map mWaitingRequests -> b
    java.util.Set mCurrentRequests -> c
    java.util.concurrent.PriorityBlockingQueue mCacheQueue -> d
    java.util.concurrent.PriorityBlockingQueue mNetworkQueue -> e
    com.android.volley.Cache mCache -> f
    com.android.volley.Network mNetwork -> g
    com.android.volley.ResponseDelivery mDelivery -> h
    com.android.volley.NetworkDispatcher[] mDispatchers -> i
    com.android.volley.CacheDispatcher mCacheDispatcher -> j
    void start() -> a
    void stop() -> b
    int getSequenceNumber() -> c
    com.android.volley.Request add(com.android.volley.Request) -> a
    void finish(com.android.volley.Request) -> b
com.android.volley.Response -> afn:
    java.lang.Object result -> a
    com.android.volley.Cache$Entry cacheEntry -> b
    com.android.volley.VolleyError error -> c
    boolean intermediate -> d
    com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry) -> a
    com.android.volley.Response error(com.android.volley.VolleyError) -> a
    boolean isSuccess() -> a
com.android.volley.Response$ErrorListener -> afo:
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.android.volley.Response$Listener -> afp:
    void onResponse(java.lang.Object) -> a
com.android.volley.ResponseDelivery -> afq:
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> a
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> a
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> a
com.android.volley.RetryPolicy -> afr:
    int getCurrentTimeout() -> a
    int getCurrentRetryCount() -> b
    void retry(com.android.volley.VolleyError) -> a
com.android.volley.ServerError -> afs:
com.android.volley.TimeoutError -> aft:
com.android.volley.VolleyError -> afu:
    com.android.volley.NetworkResponse networkResponse -> a
com.android.volley.VolleyLog -> afv:
    java.lang.String TAG -> a
    boolean DEBUG -> b
    void v(java.lang.String,java.lang.Object[]) -> a
    void d(java.lang.String,java.lang.Object[]) -> b
    void e(java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    java.lang.String buildMessage(java.lang.String,java.lang.Object[]) -> d
com.android.volley.VolleyLog$MarkerLog -> afw:
    boolean ENABLED -> a
    java.util.List mMarkers -> b
    boolean mFinished -> c
    void add(java.lang.String,long) -> a
    void finish(java.lang.String) -> a
    void finalize() -> finalize
    long getTotalDuration() -> a
com.android.volley.VolleyLog$MarkerLog$Marker -> afx:
    java.lang.String name -> a
    long thread -> b
    long time -> c
com.android.volley.toolbox.BasicNetwork -> afy:
    boolean DEBUG -> a
    int SLOW_REQUEST_THRESHOLD_MS -> d
    int DEFAULT_POOL_SIZE -> e
    com.android.volley.toolbox.HttpStack mHttpStack -> b
    com.android.volley.toolbox.ByteArrayPool mPool -> c
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> a
    void logSlowRequests(long,com.android.volley.Request,byte[],org.apache.http.StatusLine) -> a
    void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError) -> a
    void addCacheHeaders(java.util.Map,com.android.volley.Cache$Entry) -> a
    byte[] entityToBytes(org.apache.http.HttpEntity) -> a
    java.util.Map convertHeaders(org.apache.http.Header[]) -> a
com.android.volley.toolbox.ByteArrayPool -> afz:
    java.util.List mBuffersByLastUse -> b
    java.util.List mBuffersBySize -> c
    int mCurrentSize -> d
    int mSizeLimit -> e
    java.util.Comparator BUF_COMPARATOR -> a
    byte[] getBuf(int) -> a
    void returnBuf(byte[]) -> a
    void trim() -> a
com.android.volley.toolbox.ByteArrayPool$1 -> aga:
    int compare(byte[],byte[]) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.volley.toolbox.DiskBasedCache -> agb:
    java.util.Map mEntries -> a
    long mTotalSize -> b
    java.io.File mRootDirectory -> c
    int mMaxCacheSizeInBytes -> d
    com.android.volley.Cache$Entry get(java.lang.String) -> a
    void initialize() -> a
    void put(java.lang.String,com.android.volley.Cache$Entry) -> a
    void remove(java.lang.String) -> b
    java.lang.String getFilenameForKey(java.lang.String) -> d
    java.io.File getFileForKey(java.lang.String) -> c
    void pruneIfNeeded(int) -> a
    void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader) -> a
    void removeEntry(java.lang.String) -> e
    byte[] streamToBytes(java.io.InputStream,int) -> a
    int read(java.io.InputStream) -> e
    void writeInt(java.io.OutputStream,int) -> a
    int readInt(java.io.InputStream) -> a
    void writeLong(java.io.OutputStream,long) -> a
    long readLong(java.io.InputStream) -> b
    void writeString(java.io.OutputStream,java.lang.String) -> a
    java.lang.String readString(java.io.InputStream) -> c
    void writeStringStringMap(java.util.Map,java.io.OutputStream) -> a
    java.util.Map readStringStringMap(java.io.InputStream) -> d
com.android.volley.toolbox.DiskBasedCache$1 -> agc:
com.android.volley.toolbox.DiskBasedCache$CacheHeader -> agd:
    long size -> a
    java.lang.String key -> b
    java.lang.String etag -> c
    long serverDate -> d
    long ttl -> e
    long softTtl -> f
    java.util.Map responseHeaders -> g
    com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream) -> a
    com.android.volley.Cache$Entry toCacheEntry(byte[]) -> a
    boolean writeHeader(java.io.OutputStream) -> a
com.android.volley.toolbox.DiskBasedCache$CountingInputStream -> age:
    int bytesRead -> a
    int read() -> read
    int read(byte[],int,int) -> read
    int access$100(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> a
com.android.volley.toolbox.HttpClientStack -> agf:
    org.apache.http.client.HttpClient mClient -> a
    void addHeaders(org.apache.http.client.methods.HttpUriRequest,java.util.Map) -> a
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
    org.apache.http.client.methods.HttpUriRequest createHttpRequest(com.android.volley.Request,java.util.Map) -> b
    void setEntityIfNonEmptyBody(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,com.android.volley.Request) -> a
    void onPrepareRequest(org.apache.http.client.methods.HttpUriRequest) -> a
com.android.volley.toolbox.HttpClientStack$HttpPatch -> agg:
    java.lang.String getMethod() -> getMethod
com.android.volley.toolbox.HttpHeaderParser -> agh:
    com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse) -> a
    long parseDateAsEpoch(java.lang.String) -> a
com.android.volley.toolbox.HttpStack -> agi:
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
com.android.volley.toolbox.HurlStack -> agj:
    com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter -> a
    javax.net.ssl.SSLSocketFactory mSslSocketFactory -> b
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
    org.apache.http.HttpEntity entityFromConnection(java.net.HttpURLConnection) -> a
    java.net.HttpURLConnection createConnection(java.net.URL) -> a
    java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request) -> a
    void setConnectionParametersForRequest(java.net.HttpURLConnection,com.android.volley.Request) -> a
    void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request) -> b
com.android.volley.toolbox.HurlStack$UrlRewriter -> agk:
    java.lang.String rewriteUrl(java.lang.String) -> a
com.android.volley.toolbox.ImageLoader -> agl:
    com.android.volley.RequestQueue mRequestQueue -> a
    int mBatchResponseDelayMs -> b
    com.android.volley.toolbox.ImageLoader$ImageCache mCache -> c
    java.util.HashMap mInFlightRequests -> d
    java.util.HashMap mBatchedResponses -> e
    android.os.Handler mHandler -> f
    java.lang.Runnable mRunnable -> g
    com.android.volley.toolbox.ImageLoader$ImageContainer get(java.lang.String,com.android.volley.toolbox.ImageLoader$ImageListener,int,int) -> a
    void onGetImageSuccess(java.lang.String,android.graphics.Bitmap) -> a
    void onGetImageError(java.lang.String,com.android.volley.VolleyError) -> a
    void batchResponse(java.lang.String,com.android.volley.toolbox.ImageLoader$BatchedImageRequest) -> a
    void throwIfNotOnMainThread() -> a
    java.lang.String getCacheKey(java.lang.String,int,int) -> a
    void access$000(com.android.volley.toolbox.ImageLoader,java.lang.String,android.graphics.Bitmap) -> a
    void access$100(com.android.volley.toolbox.ImageLoader,java.lang.String,com.android.volley.VolleyError) -> a
    java.util.HashMap access$300(com.android.volley.toolbox.ImageLoader) -> a
    java.util.HashMap access$400(com.android.volley.toolbox.ImageLoader) -> b
    java.lang.Runnable access$802(com.android.volley.toolbox.ImageLoader,java.lang.Runnable) -> a
com.android.volley.toolbox.ImageLoader$2 -> agm:
    java.lang.String val$cacheKey -> a
    com.android.volley.toolbox.ImageLoader this$0 -> b
    void onResponse(android.graphics.Bitmap) -> a
    void onResponse(java.lang.Object) -> a
com.android.volley.toolbox.ImageLoader$3 -> agn:
    java.lang.String val$cacheKey -> a
    com.android.volley.toolbox.ImageLoader this$0 -> b
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.android.volley.toolbox.ImageLoader$4 -> ago:
    com.android.volley.toolbox.ImageLoader this$0 -> a
    void run() -> run
com.android.volley.toolbox.ImageLoader$BatchedImageRequest -> agp:
    com.android.volley.Request mRequest -> b
    android.graphics.Bitmap mResponseBitmap -> c
    com.android.volley.VolleyError mError -> d
    java.util.LinkedList mContainers -> e
    com.android.volley.toolbox.ImageLoader this$0 -> a
    void setError(com.android.volley.VolleyError) -> a
    com.android.volley.VolleyError getError() -> a
    void addContainer(com.android.volley.toolbox.ImageLoader$ImageContainer) -> a
    boolean removeContainerAndCancelIfNecessary(com.android.volley.toolbox.ImageLoader$ImageContainer) -> b
    android.graphics.Bitmap access$202(com.android.volley.toolbox.ImageLoader$BatchedImageRequest,android.graphics.Bitmap) -> a
    java.util.LinkedList access$500(com.android.volley.toolbox.ImageLoader$BatchedImageRequest) -> a
    android.graphics.Bitmap access$200(com.android.volley.toolbox.ImageLoader$BatchedImageRequest) -> b
com.android.volley.toolbox.ImageLoader$ImageCache -> agq:
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    void putBitmap(java.lang.String,android.graphics.Bitmap) -> a
com.android.volley.toolbox.ImageLoader$ImageContainer -> agr:
    android.graphics.Bitmap mBitmap -> b
    com.android.volley.toolbox.ImageLoader$ImageListener mListener -> c
    java.lang.String mCacheKey -> d
    java.lang.String mRequestUrl -> e
    com.android.volley.toolbox.ImageLoader this$0 -> a
    void cancelRequest() -> a
    android.graphics.Bitmap getBitmap() -> b
    java.lang.String getRequestUrl() -> c
    com.android.volley.toolbox.ImageLoader$ImageListener access$600(com.android.volley.toolbox.ImageLoader$ImageContainer) -> a
    android.graphics.Bitmap access$702(com.android.volley.toolbox.ImageLoader$ImageContainer,android.graphics.Bitmap) -> a
com.android.volley.toolbox.ImageLoader$ImageListener -> ags:
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> a
com.android.volley.toolbox.ImageRequest -> agt:
    com.android.volley.Response$Listener mListener -> a
    android.graphics.Bitmap$Config mDecodeConfig -> b
    int mMaxWidth -> c
    int mMaxHeight -> d
    java.lang.Object sDecodeLock -> e
    com.android.volley.Request$Priority getPriority() -> r
    int getResizedDimension(int,int,int,int) -> b
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> a
    com.android.volley.Response doParse(com.android.volley.NetworkResponse) -> b
    void deliverResponse(android.graphics.Bitmap) -> a
    int findBestSampleSize(int,int,int,int) -> a
    void deliverResponse(java.lang.Object) -> a
com.android.volley.toolbox.NetworkImageView -> com.android.volley.toolbox.NetworkImageView:
    java.lang.String mUrl -> a
    int mDefaultImageId -> b
    int mErrorImageId -> c
    com.android.volley.toolbox.ImageLoader mImageLoader -> d
    com.android.volley.toolbox.ImageLoader$ImageContainer mImageContainer -> e
    void setImageUrl(java.lang.String,com.android.volley.toolbox.ImageLoader) -> setImageUrl
    void setDefaultImageResId(int) -> setDefaultImageResId
    void setErrorImageResId(int) -> setErrorImageResId
    void loadImageIfNecessary(boolean) -> a
    void setDefaultImageOrNull() -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void drawableStateChanged() -> drawableStateChanged
    int access$000(com.android.volley.toolbox.NetworkImageView) -> a
    int access$100(com.android.volley.toolbox.NetworkImageView) -> b
com.android.volley.toolbox.NetworkImageView$1 -> agu:
    boolean val$isInLayoutPass -> a
    com.android.volley.toolbox.NetworkImageView this$0 -> b
    void onErrorResponse(com.android.volley.VolleyError) -> a
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> a
com.android.volley.toolbox.NetworkImageView$1$1 -> agv:
    com.android.volley.toolbox.ImageLoader$ImageContainer val$response -> a
    com.android.volley.toolbox.NetworkImageView$1 this$1 -> b
    void run() -> run
com.android.volley.toolbox.PoolingByteArrayOutputStream -> agw:
    com.android.volley.toolbox.ByteArrayPool mPool -> a
    void close() -> close
    void finalize() -> finalize
    void expand(int) -> a
    void write(byte[],int,int) -> write
    void write(int) -> write
com.androidquery.AQuery -> agx:
com.androidquery.AbstractAQuery -> agy:
    android.view.View root -> d
    android.app.Activity act -> e
    android.content.Context context -> f
    android.view.View view -> a
    java.lang.Object progress -> b
    com.androidquery.auth.AccountHandle ah -> c
    com.androidquery.callback.Transformer trans -> g
    int policy -> h
    org.apache.http.HttpHost proxy -> i
    java.lang.Class[] ON_CLICK_SIG -> j
    java.lang.Class[] ON_ITEM_SIG -> k
    java.lang.Class[] ON_SCROLLED_STATE_SIG -> l
    java.lang.Class[] TEXT_CHANGE_SIG -> m
    java.lang.Class[] PENDING_TRANSITION_SIG -> n
    java.lang.Class[] OVER_SCROLL_SIG -> o
    java.lang.Class[] LAYER_TYPE_SIG -> p
    java.util.WeakHashMap dialogs -> q
    com.androidquery.AbstractAQuery self() -> a
    com.androidquery.AbstractAQuery id(android.view.View) -> a
    com.androidquery.AbstractAQuery rating(float) -> a
    com.androidquery.AbstractAQuery text(java.lang.CharSequence) -> a
    com.androidquery.AbstractAQuery textColor(int) -> a
    com.androidquery.AbstractAQuery image(java.lang.String) -> a
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int) -> a
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int) -> a
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float) -> a
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float,int,java.lang.String) -> a
    com.androidquery.AbstractAQuery image(com.androidquery.callback.BitmapAjaxCallback) -> a
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,com.androidquery.callback.BitmapAjaxCallback) -> a
    com.androidquery.AbstractAQuery visibility(int) -> b
    android.content.Context getContext() -> b
    com.androidquery.AbstractAQuery invoke(com.androidquery.callback.AbstractAjaxCallback) -> a
    void reset() -> c
    com.androidquery.AbstractAQuery show(android.app.Dialog) -> a
    com.androidquery.AbstractAQuery dismiss(android.app.Dialog) -> b
com.androidquery.auth.AccountHandle -> agz:
    java.util.LinkedHashSet callbacks -> a
    void auth(com.androidquery.callback.AbstractAjaxCallback) -> a
    boolean authenticated() -> a
    void auth() -> b
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> a
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> b
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> a
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,java.net.HttpURLConnection) -> a
    java.lang.String getNetworkUrl(java.lang.String) -> a
    java.lang.String getCacheUrl(java.lang.String) -> b
com.androidquery.callback.AbstractAjaxCallback -> aha:
    int NET_TIMEOUT -> i
    java.lang.String AGENT -> j
    int NETWORK_POOL -> k
    boolean GZIP -> l
    boolean REUSE_CLIENT -> m
    boolean SIMULATE_ERROR -> n
    java.lang.Class type -> o
    java.lang.ref.Reference whandler -> p
    java.lang.Object handler -> q
    java.lang.String callback -> r
    java.lang.ref.WeakReference progress -> s
    java.lang.String url -> t
    java.lang.String networkUrl -> u
    java.util.Map params -> a
    java.util.Map headers -> b
    java.util.Map cookies -> c
    com.androidquery.callback.Transformer transformer -> v
    java.lang.Object result -> d
    int policy -> w
    java.io.File cacheDir -> x
    java.io.File targetFile -> y
    com.androidquery.auth.AccountHandle ah -> e
    com.androidquery.callback.AjaxStatus status -> f
    boolean fileCache -> g
    boolean memCache -> h
    boolean refresh -> z
    int timeout -> A
    boolean redirect -> B
    long expire -> C
    java.lang.String encoding -> D
    java.lang.ref.WeakReference act -> E
    int method -> F
    org.apache.http.client.methods.HttpUriRequest request -> G
    boolean uiCallback -> H
    int retry -> I
    com.androidquery.callback.Transformer st -> J
    org.apache.http.HttpHost proxy -> K
    java.lang.Class[] DEFAULT_SIG -> L
    boolean completed -> M
    boolean blocked -> N
    boolean reauth -> O
    java.util.concurrent.ExecutorService fetchExe -> P
    org.apache.http.conn.scheme.SocketFactory ssf -> Q
    org.apache.http.impl.client.DefaultHttpClient client -> R
    com.androidquery.callback.ProxyHandle proxyHandle -> S
    int lastStatus -> T
    boolean abort -> U
    java.lang.Object self() -> g
    void clear() -> h
    java.lang.Object url(java.lang.String) -> a
    java.lang.Object networkUrl(java.lang.String) -> b
    java.lang.Object type(java.lang.Class) -> a
    java.lang.Object transformer(com.androidquery.callback.Transformer) -> a
    java.lang.Object fileCache(boolean) -> a
    java.lang.Object memCache(boolean) -> b
    java.lang.Object policy(int) -> a
    java.lang.Object proxy(java.lang.String,int) -> a
    java.lang.Object progress(java.lang.Object) -> a
    void callback() -> a
    void wake() -> i
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> a
    void skip(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> b
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> a
    java.lang.Object datastoreGet(java.lang.String) -> c
    void showProgress(boolean) -> c
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> a
    java.lang.String getCharset(java.lang.String) -> e
    java.lang.String parseCharset(java.lang.String) -> f
    java.lang.String correctEncoding(byte[],java.lang.String,com.androidquery.callback.AjaxStatus) -> a
    java.lang.Object memGet(java.lang.String) -> d
    void memPut(java.lang.String,java.lang.Object) -> a
    void filePut(java.lang.String,java.lang.Object,java.io.File,byte[]) -> a
    java.io.File accessFile(java.io.File,java.lang.String) -> a
    void async(android.app.Activity) -> a
    void async(android.content.Context) -> a
    boolean isActive() -> j
    void work(android.content.Context) -> c
    boolean cacheAvailable(android.content.Context) -> b
    void run() -> run
    void backgroundWork() -> k
    java.lang.String getCacheUrl() -> l
    java.lang.String getNetworkUrl(java.lang.String) -> g
    void fileWork() -> m
    void datastoreWork() -> n
    void networkWork() -> o
    java.io.File getCacheFile() -> b
    boolean isStreamingContent() -> c
    java.io.File getPreFile() -> p
    void filePut() -> q
    java.lang.String extractUrl(android.net.Uri) -> a
    java.util.Map extractParams(android.net.Uri) -> b
    void network(int) -> c
    void network() -> r
    void afterWork() -> s
    void execute(java.lang.Runnable) -> a
    void setNetworkLimit(int) -> b
    java.lang.String patchUrl(java.lang.String) -> h
    void httpGet(java.lang.String,com.androidquery.callback.AjaxStatus) -> a
    void httpDelete(java.lang.String,com.androidquery.callback.AjaxStatus) -> b
    void httpPost(java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> a
    void httpPut(java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> b
    void httpEntity(java.lang.String,org.apache.http.client.methods.HttpEntityEnclosingRequestBase,java.util.Map,com.androidquery.callback.AjaxStatus) -> a
    org.apache.http.impl.client.DefaultHttpClient getClient() -> t
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext) -> a
    void httpDo(org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.androidquery.callback.AjaxStatus) -> a
    java.lang.String getEncoding(org.apache.http.HttpEntity) -> a
    void copy(java.io.InputStream,java.io.OutputStream,int,java.io.File,java.io.File) -> a
    java.io.File makeTempFile(java.io.File) -> a
    void copy(java.io.InputStream,java.io.OutputStream,int) -> a
    java.lang.Object auth(com.androidquery.auth.AccountHandle) -> a
    java.lang.String getUrl() -> d
    java.lang.Object getHandler() -> e
    int getLastStatus() -> f
    boolean isMultiPart(java.util.Map) -> a
    void httpMulti(java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> c
    byte[] toData(java.lang.String,java.io.InputStream) -> a
    void writeObject(java.io.DataOutputStream,java.lang.String,java.lang.Object) -> a
    void writeData(java.io.DataOutputStream,java.lang.String,java.lang.String,java.io.InputStream) -> a
    void writeField(java.io.DataOutputStream,java.lang.String,java.lang.String) -> a
    java.lang.String makeCookie() -> u
    java.lang.String access$0(com.androidquery.callback.AbstractAjaxCallback) -> a
com.androidquery.callback.AbstractAjaxCallback$1 -> ahb:
    com.androidquery.callback.AbstractAjaxCallback this$0 -> a
    java.lang.Object val$p -> b
    boolean val$show -> c
    void run() -> run
com.androidquery.callback.AjaxCallback -> ahc:
com.androidquery.callback.AjaxStatus -> ahd:
    int code -> a
    java.lang.String message -> b
    java.lang.String redirect -> c
    byte[] data -> d
    java.io.File file -> e
    java.util.Date time -> f
    boolean refresh -> g
    org.apache.http.impl.client.DefaultHttpClient client -> h
    long duration -> i
    int source -> j
    long start -> k
    boolean done -> l
    boolean invalid -> m
    boolean reauth -> n
    java.lang.String error -> o
    org.apache.http.protocol.HttpContext context -> p
    org.apache.http.Header[] headers -> q
    java.io.Closeable close -> r
    com.androidquery.callback.AjaxStatus source(int) -> a
    com.androidquery.callback.AjaxStatus code(int) -> b
    com.androidquery.callback.AjaxStatus error(java.lang.String) -> a
    com.androidquery.callback.AjaxStatus message(java.lang.String) -> b
    com.androidquery.callback.AjaxStatus redirect(java.lang.String) -> c
    com.androidquery.callback.AjaxStatus context(org.apache.http.protocol.HttpContext) -> a
    com.androidquery.callback.AjaxStatus time(java.util.Date) -> a
    com.androidquery.callback.AjaxStatus refresh(boolean) -> a
    com.androidquery.callback.AjaxStatus reauth(boolean) -> b
    com.androidquery.callback.AjaxStatus client(org.apache.http.impl.client.DefaultHttpClient) -> a
    com.androidquery.callback.AjaxStatus headers(org.apache.http.Header[]) -> a
    com.androidquery.callback.AjaxStatus done() -> a
    com.androidquery.callback.AjaxStatus reset() -> b
    void closeLater(java.io.Closeable) -> a
    void close() -> c
    com.androidquery.callback.AjaxStatus data(byte[]) -> a
    com.androidquery.callback.AjaxStatus file(java.io.File) -> a
    boolean getDone() -> d
    boolean getReauth() -> e
    boolean getInvalid() -> f
    int getCode() -> g
    java.lang.String getMessage() -> h
    byte[] getData() -> i
    java.io.File getFile() -> j
    int getSource() -> k
    java.lang.String getHeader(java.lang.String) -> d
com.androidquery.callback.BitmapAjaxCallback -> ahe:
    int SMALL_MAX -> i
    int BIG_MAX -> j
    int SMALL_PIXELS -> k
    int BIG_PIXELS -> l
    int BIG_TPIXELS -> m
    boolean DELAY_WRITE -> n
    java.util.Map smallCache -> o
    java.util.Map bigCache -> p
    java.util.Map invalidCache -> q
    java.util.HashMap queueMap -> r
    java.lang.ref.WeakReference v -> s
    int targetWidth -> t
    int fallback -> u
    java.io.File imageFile -> v
    android.graphics.Bitmap bm -> w
    int animation -> x
    android.graphics.Bitmap preset -> y
    float ratio -> z
    int round -> A
    boolean targetDim -> B
    float anchor -> C
    boolean invalid -> D
    boolean rotate -> E
    android.graphics.Bitmap empty -> F
    android.graphics.Bitmap dummy -> G
    com.androidquery.callback.BitmapAjaxCallback imageView(android.widget.ImageView) -> a
    com.androidquery.callback.BitmapAjaxCallback targetWidth(int) -> c
    com.androidquery.callback.BitmapAjaxCallback preset(android.graphics.Bitmap) -> a
    com.androidquery.callback.BitmapAjaxCallback fallback(int) -> d
    com.androidquery.callback.BitmapAjaxCallback animation(int) -> e
    com.androidquery.callback.BitmapAjaxCallback ratio(float) -> a
    com.androidquery.callback.BitmapAjaxCallback anchor(float) -> b
    com.androidquery.callback.BitmapAjaxCallback round(int) -> f
    android.graphics.Bitmap decode(java.lang.String,byte[],android.graphics.BitmapFactory$Options,boolean) -> a
    android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options,boolean) -> a
    android.graphics.Bitmap rotate(java.lang.String,android.graphics.Bitmap) -> b
    android.graphics.Matrix getRotateMatrix(int) -> h
    android.graphics.Bitmap getResizedImage(java.lang.String,byte[],int,boolean,int,boolean) -> a
    int sampleSize(int,int) -> a
    android.graphics.Bitmap bmGet(java.lang.String,byte[]) -> a
    java.io.File accessFile(java.io.File,java.lang.String) -> a
    android.graphics.Bitmap fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> b
    android.graphics.Bitmap transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> b
    android.graphics.Bitmap getFallback() -> h
    void callback(java.lang.String,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
    void skip(java.lang.String,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> b
    void checkCb(com.androidquery.callback.BitmapAjaxCallback,java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
    void setCacheLimit(int) -> g
    void clearCache() -> g
    java.util.Map getBCache() -> i
    java.util.Map getSCache() -> j
    java.util.Map getICache() -> k
    android.graphics.Bitmap memGet(java.lang.String) -> e
    android.graphics.Bitmap memGet(java.lang.String,int,int) -> a
    java.lang.String getKey(java.lang.String,int,int) -> b
    void memPut(java.lang.String,int,int,android.graphics.Bitmap,boolean) -> a
    void memPut(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap filter(android.view.View,android.graphics.Bitmap,int) -> a
    void presetBitmap(java.lang.String,android.widget.ImageView) -> a
    void setBitmap(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,boolean) -> a
    android.graphics.drawable.Drawable makeDrawable(android.widget.ImageView,android.graphics.Bitmap,float,float) -> a
    void setBmAnimate(android.widget.ImageView,android.graphics.Bitmap,android.graphics.Bitmap,int,int,float,float,int) -> a
    boolean fadeIn(int,int) -> b
    void async(android.app.Activity,android.content.Context,android.widget.ImageView,java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float,float,java.lang.Object,com.androidquery.auth.AccountHandle,int,int,org.apache.http.HttpHost,java.lang.String) -> a
    void async(android.content.Context) -> a
    boolean isStreamingContent() -> c
    void addQueue(java.lang.String,android.widget.ImageView) -> b
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,int) -> a
    void memPut(java.lang.String,java.lang.Object) -> a
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> a
    void skip(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> b
    java.lang.Object memGet(java.lang.String) -> d
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> a
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> a
com.androidquery.callback.ProxyHandle -> ahf:
    void applyProxy(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest,org.apache.http.impl.client.DefaultHttpClient) -> a
    java.net.Proxy makeProxy(com.androidquery.callback.AbstractAjaxCallback) -> a
com.androidquery.callback.Transformer -> ahg:
    java.lang.Object transform(java.lang.String,java.lang.Class,java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> a
com.androidquery.util.AQUtility -> ahh:
    boolean debug -> b
    java.lang.Object wait -> c
    java.lang.Thread$UncaughtExceptionHandler eh -> d
    java.util.Map times -> e
    android.os.Handler handler -> f
    boolean TEST_IO_EXCEPTION -> a
    java.util.concurrent.ScheduledExecutorService storeExe -> g
    java.io.File cacheDir -> h
    java.io.File pcacheDir -> i
    char[] map1 -> j
    byte[] map2 -> k
    void debugNotify() -> a
    void debug(java.lang.Object) -> a
    void warn(java.lang.Object,java.lang.Object) -> a
    void debug(java.lang.Object,java.lang.Object) -> b
    void debug(java.lang.Throwable) -> a
    void report(java.lang.Throwable) -> b
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Object[]) -> a
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> a
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> a
    boolean isUIThread() -> b
    android.os.Handler getHandler() -> c
    void post(java.lang.Runnable) -> a
    java.lang.String getMD5Hex(java.lang.String) -> a
    byte[] getMD5(byte[]) -> a
    void copy(java.io.InputStream,java.io.OutputStream) -> a
    void copy(java.io.InputStream,java.io.OutputStream,int,com.androidquery.util.Progress) -> a
    byte[] toBytes(java.io.InputStream) -> a
    void write(java.io.File,byte[]) -> a
    void close(java.io.Closeable) -> a
    java.util.concurrent.ScheduledExecutorService getFileStoreExecutor() -> e
    void storeAsync(java.io.File,byte[],long) -> a
    java.io.File getCacheDir(android.content.Context,int) -> a
    java.io.File getCacheDir(android.content.Context) -> a
    java.io.File makeCacheFile(java.io.File,java.lang.String) -> c
    java.lang.String getCacheFileName(java.lang.String) -> b
    java.io.File getCacheFile(java.io.File,java.lang.String) -> a
    java.io.File getExistedCacheByUrl(java.io.File,java.lang.String) -> b
    void store(java.io.File,byte[]) -> b
    void cleanCache(java.io.File,long,long) -> a
    java.io.File getTempDir() -> d
    boolean testCleanNeeded(java.io.File[],long) -> a
    void cleanCache(java.io.File[],long) -> b
com.androidquery.util.BitmapCache -> ahi:
    int maxCount -> a
    int maxPixels -> b
    int maxTotalPixels -> c
    int pixels -> d
    android.graphics.Bitmap put(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap remove(java.lang.Object) -> a
    void clear() -> clear
    int pixels(android.graphics.Bitmap) -> a
    void shrink() -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.androidquery.util.Common -> ahj:
    java.lang.Object handler -> a
    java.lang.String method -> b
    java.lang.Object[] params -> c
    boolean fallback -> d
    java.lang.Class[] sig -> e
    int methodId -> f
    int scrollState -> g
    android.widget.AbsListView$OnScrollListener osl -> h
    int lastBottom -> i
    android.widget.AdapterView$OnItemSelectedListener galleryListener -> j
    boolean galleryListen -> k
    com.androidquery.util.Common method(int,java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object[]) -> a
    int compare(java.io.File,java.io.File) -> a
    void run() -> run
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void checkScrolledBottom(android.widget.AbsListView,int) -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScrollStateChanged(android.widget.ExpandableListView,int) -> a
    void onScrollStateChanged2(android.widget.AbsListView,int) -> b
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void showProgress(java.lang.Object,java.lang.String,boolean) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.androidquery.util.PredefinedBAOS -> ahk:
    byte[] toByteArray() -> toByteArray
com.androidquery.util.Progress -> ahl:
    android.widget.ProgressBar pb -> a
    android.app.ProgressDialog pd -> b
    android.app.Activity act -> c
    android.view.View view -> d
    boolean unknown -> e
    int bytes -> f
    int current -> g
    java.lang.String url -> h
    void reset() -> a
    void setBytes(int) -> a
    void increment(int) -> b
    void done() -> b
    void run() -> run
    void dismiss(java.lang.String) -> a
com.androidquery.util.RatioDrawable -> ahm:
    float ratio -> a
    java.lang.ref.WeakReference ref -> b
    boolean adjusted -> c
    android.graphics.Matrix m -> d
    int w -> e
    float anchor -> f
    int getWidth(android.widget.ImageView) -> a
    void draw(android.graphics.Canvas) -> draw
    void draw(android.graphics.Canvas,android.widget.ImageView,android.graphics.Bitmap) -> a
    void adjust(android.widget.ImageView,android.graphics.Bitmap,boolean) -> a
    int targetHeight(int,int,int) -> a
    android.graphics.Matrix getMatrix(android.widget.ImageView,android.graphics.Bitmap) -> a
    float getYOffset(int,int) -> a
com.androidquery.util.XmlDom -> ahn:
    org.w3c.dom.Element root -> a
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> a
    java.lang.String serialize(org.w3c.dom.Element,int) -> a
    void writeSpace(org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> a
    java.lang.String text(org.w3c.dom.Node) -> a
    void serialize(org.w3c.dom.Element,org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> a
com.bugsense.trace.BugSense -> aho:
    java.util.concurrent.ExecutorService executor -> a
    java.util.concurrent.ExecutorService getExecutor() -> a
    void showUpgradeNotification(android.content.Context,java.lang.String) -> a
com.bugsense.trace.BugSenseHandler -> ahp:
    boolean I_WANT_TO_DEBUG -> a
    android.content.SharedPreferences preferences -> e
    android.content.SharedPreferences$Editor editor -> f
    com.bugsense.trace.ExceptionCallback exceptionCallback -> g
    boolean isSessionActive -> h
    java.lang.String locTicker -> b
    java.lang.String locTitle -> c
    java.lang.String locText -> d
    java.util.HashMap crashExtraData -> i
    void initAndStartSession(android.content.Context,java.lang.String) -> a
    void setExceptionCallback(com.bugsense.trace.ExceptionCallback) -> a
    com.bugsense.trace.ExceptionCallback getCallback() -> a
    void startSession(android.content.Context) -> a
    void leaveBreadcrumb(java.lang.String) -> a
    void flush(android.content.Context) -> b
    void sendExceptionMap(java.util.HashMap,java.lang.Exception) -> a
    void setLogging(boolean) -> a
    void installHandler() -> e
    java.util.HashMap getCrashExtraData() -> b
    void useProxy(boolean) -> b
    android.content.SharedPreferences access$002(android.content.SharedPreferences) -> a
    android.content.SharedPreferences$Editor access$102(android.content.SharedPreferences$Editor) -> a
    android.content.SharedPreferences access$000() -> c
    android.content.SharedPreferences$Editor access$100() -> d
com.bugsense.trace.BugSenseHandler$1 -> ahq:
    android.content.Context val$context -> a
    void run() -> run
com.bugsense.trace.CrashMechanism -> ahr:
    com.bugsense.trace.CrashMechanism instance -> a
    com.bugsense.trace.CrashMechanism getInstance() -> a
    void sendSavedCrashes() -> b
    java.lang.String createJSONFromCrash(java.lang.String,int,int,int,java.lang.String[],java.lang.String,java.util.Map,java.util.Map,int,long,java.util.Map) -> a
    void transmitCrashASync(java.lang.String,int) -> a
    boolean transmitCrashSync(java.lang.String,int) -> d
    void saveFixNotification(java.lang.String) -> a
    void saveCrash(java.lang.String,int) -> b
    java.lang.String getBreadcrumbsLine(java.util.ArrayList) -> a
    java.lang.String getClass(java.lang.String) -> b
    boolean access$000(java.lang.String,int) -> c
com.bugsense.trace.CrashMechanism$1 -> ahs:
    com.bugsense.trace.CrashMechanism this$0 -> a
    void run() -> run
com.bugsense.trace.CrashMechanism$1$1 -> aht:
    com.bugsense.trace.CrashMechanism$1 this$1 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.bugsense.trace.CrashMechanism$1$2 -> ahu:
    com.bugsense.trace.CrashMechanism$1 this$1 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.bugsense.trace.CrashMechanism$2 -> ahv:
    java.lang.String val$jsonCrashData -> a
    int val$type -> b
    void run() -> run
com.bugsense.trace.CrashMechanism$3 -> ahw:
    java.lang.String val$line -> a
    void run() -> run
com.bugsense.trace.CrashMechanism$4 -> ahx:
    int val$type -> a
    java.lang.String val$jsonCrashData -> b
    void run() -> run
com.bugsense.trace.CryptoHttpClient -> ahy:
    int KEY -> a
    org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    org.apache.http.conn.ssl.SSLSocketFactory newSslSocketFactory() -> a
com.bugsense.trace.DefaultExceptionHandler -> ahz:
    java.lang.Thread$UncaughtExceptionHandler defaultExceptionHandler -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.bugsense.trace.EventsMechanism -> aia:
    com.bugsense.trace.EventsMechanism instance -> a
    com.bugsense.trace.EventsMechanism getInstance() -> a
    void sendSavedEvents() -> b
    boolean transmitEventSync(java.lang.String) -> a
com.bugsense.trace.EventsMechanism$1 -> aib:
    com.bugsense.trace.EventsMechanism this$0 -> a
    void run() -> run
com.bugsense.trace.EventsMechanism$1$1 -> aic:
    com.bugsense.trace.EventsMechanism$1 this$1 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.bugsense.trace.ExceptionCallback -> aid:
    void lastBreath(java.lang.Exception) -> a
com.bugsense.trace.G -> aie:
    java.lang.String FILES_PATH -> a
    java.lang.String APP_VERSION -> b
    java.lang.String APP_VERSIONCODE -> c
    java.lang.String APP_PACKAGE -> d
    java.lang.String URL -> e
    java.lang.String ANALYTICS_URL -> f
    java.lang.String TAG -> g
    java.lang.String ANDROID_VERSION -> h
    java.lang.String PHONE_MODEL -> i
    java.lang.String PHONE_BRAND -> j
    java.lang.String API_KEY -> k
    boolean HAS_ROOT -> l
    java.lang.String LOCALE -> m
    java.lang.String UID -> n
    java.util.ArrayList breadcrumbs -> o
    boolean SEND_LOG -> p
    java.lang.String LOG_FILTER -> q
    int LOG_LINES -> r
    long TIMESTAMP -> s
    boolean proxyEnabled -> t
    int IS_WIFI_ON -> u
    int IS_MOBILENET_ON -> v
    int IS_GPS_ON -> w
    java.lang.String[] SCREEN_PROPS -> x
    boolean sendOnlyWiFi -> y
    java.lang.String userIdentifier -> z
    java.lang.String APPS_RUNNING -> A
com.bugsense.trace.PingsMechanism -> aif:
    com.bugsense.trace.PingsMechanism instance -> a
    com.bugsense.trace.PingsMechanism getInstance() -> a
    void sendSavedPings() -> b
    java.lang.String getFlatLine(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void transmitPingASync(int) -> a
    void transmitPingASync(java.lang.String,int) -> a
    boolean transmitPingSync(java.lang.String) -> a
    void savePing(int,java.lang.String) -> a
    void savePing(int,java.lang.String,java.lang.String,java.lang.String) -> b
com.bugsense.trace.PingsMechanism$1 -> aig:
    com.bugsense.trace.PingsMechanism this$0 -> a
    void run() -> run
com.bugsense.trace.PingsMechanism$1$1 -> aih:
    com.bugsense.trace.PingsMechanism$1 this$1 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.bugsense.trace.PingsMechanism$1$2 -> aii:
    com.bugsense.trace.PingsMechanism$1 this$1 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.bugsense.trace.PingsMechanism$1$3 -> aij:
    com.bugsense.trace.PingsMechanism$1 this$1 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.bugsense.trace.PingsMechanism$2 -> aik:
    java.lang.String val$jsonCrashData -> a
    int val$type -> b
    void run() -> run
com.bugsense.trace.PingsMechanism$3 -> ail:
    int val$type -> a
    java.lang.String val$tag -> b
    void run() -> run
com.bugsense.trace.PingsMechanism$4 -> aim:
    int val$type -> a
    java.lang.String val$tag -> b
    java.lang.String val$cpu -> c
    java.lang.String val$mem -> d
    void run() -> run
com.bugsense.trace.UidManager -> ain:
    char[] DIGITS -> a
    java.lang.String getUid(android.content.Context) -> a
    boolean saveUid(android.content.Context,java.lang.String) -> a
    java.lang.String generateUid() -> a
    char[] encodeHex(byte[]) -> a
com.bugsense.trace.Utils -> aio:
    java.lang.Runtime rt -> a
    boolean checkForRoot() -> a
    java.lang.String getTime() -> b
    java.lang.String exceedLimitString(java.lang.String) -> a
    java.lang.String readLogs() -> c
    java.lang.String readFile(java.lang.String) -> b
    int CheckNetworkConnection(android.content.Context,java.lang.String) -> a
    int isWifiOn(android.content.Context) -> a
    int isMobileNetworkOn(android.content.Context) -> b
    int isGPSOn(android.content.Context) -> c
    java.lang.String[] ScreenProperties(android.content.Context) -> d
    void setProperties(android.content.Context) -> e
    java.lang.String getMem() -> d
    java.lang.String getCPU() -> e
    java.lang.String getAppsRunning(android.content.Context) -> f
    void saveCrashCounter() -> f
    void saveLastCrashID(java.lang.String) -> c
com.bugsense.trace.Utils$2 -> aip:
    void run() -> run
com.bugsense.trace.Utils$3 -> aiq:
    java.lang.String val$lastID -> a
    void run() -> run
com.facebook.AccessToken -> air:
    java.util.Date MIN_DATE -> b
    java.util.Date MAX_DATE -> c
    java.util.Date DEFAULT_EXPIRATION_TIME -> d
    java.util.Date DEFAULT_LAST_REFRESH_TIME -> e
    com.facebook.AccessTokenSource DEFAULT_ACCESS_TOKEN_SOURCE -> f
    java.util.Date ALREADY_EXPIRED_EXPIRATION_TIME -> g
    java.util.Date expires -> h
    java.util.List permissions -> i
    java.lang.String token -> j
    com.facebook.AccessTokenSource source -> k
    java.util.Date lastRefresh -> l
    boolean $assertionsDisabled -> a
    java.lang.String getToken() -> a
    java.util.Date getExpires() -> b
    java.util.List getPermissions() -> c
    com.facebook.AccessTokenSource getSource() -> d
    java.util.Date getLastRefresh() -> e
    java.lang.String toString() -> toString
    com.facebook.AccessToken createEmptyToken(java.util.List) -> a
    com.facebook.AccessToken createFromNativeLogin(android.os.Bundle,com.facebook.AccessTokenSource) -> a
    com.facebook.AccessToken createFromWebBundle(java.util.List,android.os.Bundle,com.facebook.AccessTokenSource) -> a
    com.facebook.AccessToken createFromRefresh(com.facebook.AccessToken,android.os.Bundle) -> a
    com.facebook.AccessToken createFromTokenWithRefreshedPermissions(com.facebook.AccessToken,java.util.List) -> a
    com.facebook.AccessToken createNew(java.util.List,java.lang.String,java.util.Date,com.facebook.AccessTokenSource) -> a
    com.facebook.AccessToken createFromCache(android.os.Bundle) -> a
    android.os.Bundle toCacheBundle() -> f
    boolean isInvalid() -> g
    java.lang.String tokenToString() -> h
    void appendPermissions(java.lang.StringBuilder) -> a
    java.util.Date getBundleLongAsDate(android.os.Bundle,java.lang.String,java.util.Date) -> a
com.facebook.AccessTokenSource -> ais:
    com.facebook.AccessTokenSource NONE -> a
    com.facebook.AccessTokenSource FACEBOOK_APPLICATION_WEB -> b
    com.facebook.AccessTokenSource FACEBOOK_APPLICATION_NATIVE -> c
    com.facebook.AccessTokenSource FACEBOOK_APPLICATION_SERVICE -> d
    com.facebook.AccessTokenSource WEB_VIEW -> e
    com.facebook.AccessTokenSource TEST_USER -> f
    com.facebook.AccessTokenSource CLIENT_TOKEN -> g
    boolean canExtendToken -> h
    com.facebook.AccessTokenSource[] ENUM$VALUES -> i
    boolean canExtendToken() -> a
    com.facebook.AccessTokenSource[] values() -> values
    com.facebook.AccessTokenSource valueOf(java.lang.String) -> valueOf
com.facebook.AppEventsLogger -> ait:
    java.lang.String TAG -> a
    android.content.Context context -> b
    com.facebook.AppEventsLogger$AccessTokenAppIdPair accessTokenAppId -> c
    java.util.Map stateMap -> d
    java.util.Timer flushTimer -> e
    java.util.Timer supportsAttributionRecheckTimer -> f
    com.facebook.AppEventsLogger$FlushBehavior flushBehavior -> g
    boolean requestInFlight -> h
    android.content.Context applicationContext -> i
    java.lang.Object staticLock -> j
    boolean getLimitEventUsage(android.content.Context) -> a
    com.facebook.AppEventsLogger newLogger(android.content.Context) -> b
    com.facebook.AppEventsLogger newLogger(android.content.Context,java.lang.String) -> a
    com.facebook.AppEventsLogger$FlushBehavior getFlushBehavior() -> a
    void onContextStop() -> b
    void logSdkEvent(java.lang.String,java.lang.Double,android.os.Bundle) -> a
    java.lang.String getApplicationId() -> c
    void initializeTimersIfNeeded() -> g
    void logEvent(java.lang.String,java.lang.Double,android.os.Bundle,boolean) -> a
    void logEvent(android.content.Context,com.facebook.AppEventsLogger$AppEvent,com.facebook.AppEventsLogger$AccessTokenAppIdPair) -> a
    void flushIfNecessary() -> h
    int getAccumulatedEventCount() -> i
    com.facebook.AppEventsLogger$SessionEventsState getSessionEventsState(android.content.Context,com.facebook.AppEventsLogger$AccessTokenAppIdPair) -> a
    com.facebook.AppEventsLogger$SessionEventsState getSessionEventsState(com.facebook.AppEventsLogger$AccessTokenAppIdPair) -> a
    void flush(com.facebook.AppEventsLogger$FlushReason) -> b
    void flushAndWait(com.facebook.AppEventsLogger$FlushReason) -> c
    com.facebook.AppEventsLogger$FlushStatistics buildAndExecuteRequests(com.facebook.AppEventsLogger$FlushReason,java.util.Set) -> a
    com.facebook.Request buildRequestForSession(com.facebook.AppEventsLogger$AccessTokenAppIdPair,com.facebook.AppEventsLogger$SessionEventsState,boolean,com.facebook.AppEventsLogger$FlushStatistics) -> a
    void handleResponse(com.facebook.AppEventsLogger$AccessTokenAppIdPair,com.facebook.Request,com.facebook.Response,com.facebook.AppEventsLogger$SessionEventsState,com.facebook.AppEventsLogger$FlushStatistics) -> b
    int accumulatePersistedEvents() -> j
    java.lang.String access$0() -> d
    void access$1(com.facebook.AppEventsLogger$FlushReason) -> a
    java.lang.Object access$2() -> e
    java.util.Map access$3() -> f
    void access$4(com.facebook.AppEventsLogger$AccessTokenAppIdPair,com.facebook.Request,com.facebook.Response,com.facebook.AppEventsLogger$SessionEventsState,com.facebook.AppEventsLogger$FlushStatistics) -> a
com.facebook.AppEventsLogger$1 -> aiu:
    void run() -> run
com.facebook.AppEventsLogger$2 -> aiv:
    void run() -> run
com.facebook.AppEventsLogger$3 -> aiw:
    com.facebook.AppEventsLogger$FlushReason val$reason -> a
    void run() -> run
com.facebook.AppEventsLogger$4 -> aix:
    com.facebook.AppEventsLogger$AccessTokenAppIdPair val$accessTokenAppId -> a
    com.facebook.Request val$postRequest -> b
    com.facebook.AppEventsLogger$SessionEventsState val$sessionEventsState -> c
    com.facebook.AppEventsLogger$FlushStatistics val$flushState -> d
    void onCompleted(com.facebook.Response) -> a
com.facebook.AppEventsLogger$AccessTokenAppIdPair -> aiy:
    java.lang.String accessToken -> a
    java.lang.String applicationId -> b
    java.lang.String getAccessToken() -> a
    java.lang.String getApplicationId() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.facebook.AppEventsLogger$AppEvent -> aiz:
    org.json.JSONObject jsonObject -> a
    boolean isImplicit -> b
    java.util.HashSet validatedIdentifiers -> c
    boolean getIsImplicit() -> a
    org.json.JSONObject getJSONObject() -> b
    void validateIdentifier(java.lang.String) -> a
    java.lang.String toString() -> toString
com.facebook.AppEventsLogger$FlushBehavior -> aja:
    com.facebook.AppEventsLogger$FlushBehavior AUTO -> a
    com.facebook.AppEventsLogger$FlushBehavior EXPLICIT_ONLY -> b
    com.facebook.AppEventsLogger$FlushBehavior[] ENUM$VALUES -> c
    com.facebook.AppEventsLogger$FlushBehavior[] values() -> values
    com.facebook.AppEventsLogger$FlushBehavior valueOf(java.lang.String) -> valueOf
com.facebook.AppEventsLogger$FlushReason -> ajb:
    com.facebook.AppEventsLogger$FlushReason EXPLICIT -> a
    com.facebook.AppEventsLogger$FlushReason TIMER -> b
    com.facebook.AppEventsLogger$FlushReason SESSION_CHANGE -> c
    com.facebook.AppEventsLogger$FlushReason PERSISTED_EVENTS -> d
    com.facebook.AppEventsLogger$FlushReason EVENT_THRESHOLD -> e
    com.facebook.AppEventsLogger$FlushReason EAGER_FLUSHING_EVENT -> f
    com.facebook.AppEventsLogger$FlushReason[] ENUM$VALUES -> g
    com.facebook.AppEventsLogger$FlushReason[] values() -> values
    com.facebook.AppEventsLogger$FlushReason valueOf(java.lang.String) -> valueOf
com.facebook.AppEventsLogger$FlushResult -> ajc:
    com.facebook.AppEventsLogger$FlushResult SUCCESS -> a
    com.facebook.AppEventsLogger$FlushResult SERVER_ERROR -> b
    com.facebook.AppEventsLogger$FlushResult NO_CONNECTIVITY -> c
    com.facebook.AppEventsLogger$FlushResult UNKNOWN_ERROR -> d
    com.facebook.AppEventsLogger$FlushResult[] ENUM$VALUES -> e
    com.facebook.AppEventsLogger$FlushResult[] values() -> values
    com.facebook.AppEventsLogger$FlushResult valueOf(java.lang.String) -> valueOf
com.facebook.AppEventsLogger$FlushStatistics -> ajd:
    int numEvents -> a
    com.facebook.AppEventsLogger$FlushResult result -> b
com.facebook.AppEventsLogger$PersistedEvents -> aje:
    java.lang.Object staticLock -> a
    android.content.Context context -> b
    java.util.HashMap persistedEvents -> c
    com.facebook.AppEventsLogger$PersistedEvents readAndClearStore(android.content.Context) -> a
    void persistEvents(android.content.Context,com.facebook.AppEventsLogger$AccessTokenAppIdPair,com.facebook.AppEventsLogger$SessionEventsState) -> a
    void persistEvents(android.content.Context,java.util.Map) -> a
    java.util.Set keySet() -> a
    java.util.List getEvents(com.facebook.AppEventsLogger$AccessTokenAppIdPair) -> a
    void write() -> b
    void readAndClearStore() -> c
    void addEvents(com.facebook.AppEventsLogger$AccessTokenAppIdPair,java.util.List) -> a
com.facebook.AppEventsLogger$SessionEventsState -> ajf:
    java.util.List accumulatedEvents -> a
    java.util.List inFlightEvents -> b
    int numSkippedEventsDueToFullBuffer -> c
    java.lang.String attributionId -> d
    java.lang.String packageName -> e
    int MAX_ACCUMULATED_LOG_EVENTS -> f
    void addEvent(com.facebook.AppEventsLogger$AppEvent) -> a
    int getAccumulatedEventCount() -> a
    void clearInFlightAndStats(boolean) -> a
    int populateRequest(com.facebook.Request,boolean,boolean,boolean) -> a
    java.util.List getEventsToPersist() -> b
    void accumulatePersistedEvents(java.util.List) -> a
    void populateRequest(com.facebook.Request,int,org.json.JSONArray,boolean,boolean) -> a
    byte[] getStringAsByteArray(java.lang.String) -> a
com.facebook.AuthorizationClient -> ajg:
    java.util.List handlersToTry -> a
    com.facebook.AuthorizationClient$AuthHandler currentHandler -> b
    android.content.Context context -> c
    com.facebook.AuthorizationClient$StartActivityDelegate startActivityDelegate -> d
    com.facebook.AuthorizationClient$OnCompletedListener onCompletedListener -> e
    com.facebook.AuthorizationClient$BackgroundProcessingListener backgroundProcessingListener -> f
    boolean checkedInternetPermission -> g
    com.facebook.AuthorizationClient$AuthorizationRequest pendingRequest -> h
    java.util.Map loggingExtras -> i
    com.facebook.AppEventsLogger appEventsLogger -> j
    void setContext(android.content.Context) -> a
    void setContext(android.app.Activity) -> a
    void startOrContinueAuth(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void authorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> b
    void continueAuth() -> a
    boolean getInProgress() -> b
    void cancelCurrentHandler() -> c
    boolean onActivityResult(int,int,android.content.Intent) -> a
    java.util.List getHandlerTypes(com.facebook.AuthorizationClient$AuthorizationRequest) -> c
    boolean checkInternetPermission() -> d
    void tryNextHandler() -> e
    void completeWithFailure() -> i
    void addLoggingExtra(java.lang.String,java.lang.String,boolean) -> a
    boolean tryCurrentHandler() -> f
    void completeAndValidate(com.facebook.AuthorizationClient$Result) -> a
    void complete(com.facebook.AuthorizationClient$Result) -> b
    void setOnCompletedListener(com.facebook.AuthorizationClient$OnCompletedListener) -> a
    void setBackgroundProcessingListener(com.facebook.AuthorizationClient$BackgroundProcessingListener) -> a
    com.facebook.AuthorizationClient$StartActivityDelegate getStartActivityDelegate() -> g
    int checkPermission(java.lang.String) -> a
    void validateSameFbidAndFinish(com.facebook.AuthorizationClient$Result) -> c
    com.facebook.RequestBatch createReauthValidationBatch(com.facebook.AuthorizationClient$Result) -> d
    com.facebook.Request createGetPermissionsRequest(java.lang.String) -> b
    com.facebook.Request createGetProfileIdRequest(java.lang.String) -> c
    void notifyOnCompleteListener(com.facebook.AuthorizationClient$Result) -> e
    void notifyBackgroundProcessingStart() -> j
    void notifyBackgroundProcessingStop() -> k
    void logAuthorizationMethodStart(java.lang.String) -> e
    void logAuthorizationMethodComplete(java.lang.String,com.facebook.AuthorizationClient$Result,java.util.Map) -> a
    void logAuthorizationMethodComplete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> a
    android.os.Bundle newAuthorizationLoggingBundle(java.lang.String) -> d
    java.lang.String getE2E() -> l
    void logWebLoginCompleted(java.lang.String,java.lang.String) -> a
    java.lang.String access$0() -> h
    void access$1(com.facebook.AuthorizationClient,java.lang.String,java.lang.String) -> a
    void access$2(com.facebook.AuthorizationClient) -> a
    void access$3(com.facebook.AuthorizationClient) -> b
com.facebook.AuthorizationClient$1 -> ajh:
    com.facebook.AuthorizationClient this$0 -> a
    android.app.Activity val$activity -> b
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.AuthorizationClient$2 -> aji:
    com.facebook.AuthorizationClient this$0 -> a
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.AuthorizationClient$3 -> ajj:
    com.facebook.AuthorizationClient this$0 -> a
    java.util.ArrayList val$fbids -> b
    void onCompleted(com.facebook.Response) -> a
com.facebook.AuthorizationClient$4 -> ajk:
    com.facebook.AuthorizationClient this$0 -> a
    java.util.ArrayList val$tokenPermissions -> b
    void onCompleted(com.facebook.Response) -> a
com.facebook.AuthorizationClient$5 -> ajl:
    com.facebook.AuthorizationClient this$0 -> a
    java.util.ArrayList val$fbids -> b
    com.facebook.AuthorizationClient$Result val$pendingResult -> c
    java.util.ArrayList val$tokenPermissions -> d
    void onBatchCompleted(com.facebook.RequestBatch) -> a
com.facebook.AuthorizationClient$AuthDialogBuilder -> ajm:
    java.lang.String e2e -> a
    com.facebook.AuthorizationClient$AuthDialogBuilder setE2E(java.lang.String) -> a
    com.facebook.widget.WebDialog build() -> a
com.facebook.AuthorizationClient$AuthHandler -> ajn:
    java.util.Map methodLoggingExtras -> a
    com.facebook.AuthorizationClient this$0 -> b
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    java.lang.String getNameForLogging() -> a
    boolean onActivityResult(int,int,android.content.Intent) -> a
    boolean needsRestart() -> b
    boolean needsInternetPermission() -> c
    void cancel() -> d
    void addLoggingExtra(java.lang.String,java.lang.String) -> a
com.facebook.AuthorizationClient$AuthorizationRequest -> ajo:
    com.facebook.AuthorizationClient$StartActivityDelegate startActivityDelegate -> a
    com.facebook.SessionLoginBehavior loginBehavior -> b
    int requestCode -> c
    boolean isLegacy -> d
    java.util.List permissions -> e
    com.facebook.SessionDefaultAudience defaultAudience -> f
    java.lang.String applicationId -> g
    java.lang.String previousAccessToken -> h
    java.lang.String authId -> i
    com.facebook.AuthorizationClient$StartActivityDelegate getStartActivityDelegate() -> a
    java.util.List getPermissions() -> b
    void setPermissions(java.util.List) -> a
    com.facebook.SessionLoginBehavior getLoginBehavior() -> c
    int getRequestCode() -> d
    com.facebook.SessionDefaultAudience getDefaultAudience() -> e
    java.lang.String getApplicationId() -> f
    boolean isLegacy() -> g
    java.lang.String getPreviousAccessToken() -> h
    boolean needsNewTokenValidation() -> i
    java.lang.String getAuthId() -> j
com.facebook.AuthorizationClient$BackgroundProcessingListener -> ajp:
    void onBackgroundProcessingStarted() -> a
    void onBackgroundProcessingStopped() -> b
com.facebook.AuthorizationClient$GetTokenAuthHandler -> ajq:
    com.facebook.GetTokenClient getTokenClient -> d
    com.facebook.AuthorizationClient this$0 -> c
    java.lang.String getNameForLogging() -> a
    void cancel() -> d
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void getTokenCompleted(com.facebook.AuthorizationClient$AuthorizationRequest,android.os.Bundle) -> a
com.facebook.AuthorizationClient$GetTokenAuthHandler$1 -> ajr:
    com.facebook.AuthorizationClient$GetTokenAuthHandler this$1 -> a
    com.facebook.AuthorizationClient$AuthorizationRequest val$request -> b
    void completed(android.os.Bundle) -> a
com.facebook.AuthorizationClient$KatanaAuthHandler -> ajs:
    com.facebook.AuthorizationClient this$0 -> c
    boolean tryIntent(android.content.Intent,int) -> a
com.facebook.AuthorizationClient$KatanaLoginDialogAuthHandler -> ajt:
    java.lang.String applicationId -> e
    java.lang.String callId -> f
    com.facebook.AuthorizationClient this$0 -> d
    java.lang.String getNameForLogging() -> a
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    boolean onActivityResult(int,int,android.content.Intent) -> a
    com.facebook.AuthorizationClient$Result handleResultOk(android.content.Intent) -> a
    com.facebook.AuthorizationClient$Result createCancelOrErrorResult(com.facebook.AuthorizationClient$AuthorizationRequest,android.content.Intent) -> a
    void logEvent(java.lang.String,java.lang.String,java.lang.String) -> a
com.facebook.AuthorizationClient$KatanaProxyAuthHandler -> aju:
    java.lang.String applicationId -> e
    com.facebook.AuthorizationClient this$0 -> d
    java.lang.String getNameForLogging() -> a
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    boolean onActivityResult(int,int,android.content.Intent) -> a
    com.facebook.AuthorizationClient$Result handleResultOk(android.content.Intent) -> a
com.facebook.AuthorizationClient$OnCompletedListener -> ajv:
    void onCompleted(com.facebook.AuthorizationClient$Result) -> a
com.facebook.AuthorizationClient$Result -> ajw:
    com.facebook.AuthorizationClient$Result$Code code -> a
    com.facebook.AccessToken token -> b
    java.lang.String errorMessage -> c
    java.lang.String errorCode -> d
    com.facebook.AuthorizationClient$AuthorizationRequest request -> e
    java.util.Map loggingExtras -> f
    com.facebook.AuthorizationClient$Result createTokenResult(com.facebook.AuthorizationClient$AuthorizationRequest,com.facebook.AccessToken) -> a
    com.facebook.AuthorizationClient$Result createCancelResult(com.facebook.AuthorizationClient$AuthorizationRequest,java.lang.String) -> a
    com.facebook.AuthorizationClient$Result createErrorResult(com.facebook.AuthorizationClient$AuthorizationRequest,java.lang.String,java.lang.String) -> a
    com.facebook.AuthorizationClient$Result createErrorResult(com.facebook.AuthorizationClient$AuthorizationRequest,java.lang.String,java.lang.String,java.lang.String) -> a
com.facebook.AuthorizationClient$Result$Code -> ajx:
    com.facebook.AuthorizationClient$Result$Code SUCCESS -> a
    com.facebook.AuthorizationClient$Result$Code CANCEL -> b
    com.facebook.AuthorizationClient$Result$Code ERROR -> c
    java.lang.String loggingValue -> d
    com.facebook.AuthorizationClient$Result$Code[] ENUM$VALUES -> e
    java.lang.String getLoggingValue() -> a
    com.facebook.AuthorizationClient$Result$Code[] values() -> values
    com.facebook.AuthorizationClient$Result$Code valueOf(java.lang.String) -> valueOf
com.facebook.AuthorizationClient$StartActivityDelegate -> ajy:
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.AuthorizationClient$WebViewAuthHandler -> ajz:
    com.facebook.widget.WebDialog loginDialog -> d
    java.lang.String applicationId -> e
    java.lang.String e2e -> f
    com.facebook.AuthorizationClient this$0 -> c
    java.lang.String getNameForLogging() -> a
    boolean needsRestart() -> b
    boolean needsInternetPermission() -> c
    void cancel() -> d
    boolean tryAuthorize(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void onWebDialogComplete(com.facebook.AuthorizationClient$AuthorizationRequest,android.os.Bundle,com.facebook.FacebookException) -> a
    void saveCookieToken(java.lang.String) -> a
    java.lang.String loadCookieToken() -> e
com.facebook.AuthorizationClient$WebViewAuthHandler$1 -> aka:
    com.facebook.AuthorizationClient$WebViewAuthHandler this$1 -> a
    com.facebook.AuthorizationClient$AuthorizationRequest val$request -> b
    void onComplete(android.os.Bundle,com.facebook.FacebookException) -> a
com.facebook.FacebookAuthorizationException -> akb:
com.facebook.FacebookDialogException -> akc:
    int errorCode -> a
    java.lang.String failingUrl -> b
com.facebook.FacebookException -> akd:
com.facebook.FacebookGraphObjectException -> ake:
com.facebook.FacebookOperationCanceledException -> akf:
com.facebook.FacebookRequestError -> akg:
    com.facebook.FacebookRequestError$Range EC_RANGE_PERMISSION -> a
    com.facebook.FacebookRequestError$Range HTTP_RANGE_SUCCESS -> b
    com.facebook.FacebookRequestError$Range HTTP_RANGE_CLIENT_ERROR -> c
    com.facebook.FacebookRequestError$Range HTTP_RANGE_SERVER_ERROR -> d
    int userActionMessageId -> e
    boolean shouldNotifyUser -> f
    com.facebook.FacebookRequestError$Category category -> g
    int requestStatusCode -> h
    int errorCode -> i
    int subErrorCode -> j
    java.lang.String errorType -> k
    java.lang.String errorMessage -> l
    org.json.JSONObject requestResult -> m
    org.json.JSONObject requestResultBody -> n
    java.lang.Object batchRequestResult -> o
    java.net.HttpURLConnection connection -> p
    com.facebook.FacebookException exception -> q
    int getRequestStatusCode() -> a
    int getErrorCode() -> b
    java.lang.String getErrorType() -> c
    java.lang.String getErrorMessage() -> d
    com.facebook.FacebookException getException() -> e
    java.lang.String toString() -> toString
    com.facebook.FacebookRequestError checkResponseAndCreateError(org.json.JSONObject,java.lang.Object,java.net.HttpURLConnection) -> a
com.facebook.FacebookRequestError$Category -> akh:
    com.facebook.FacebookRequestError$Category AUTHENTICATION_RETRY -> a
    com.facebook.FacebookRequestError$Category AUTHENTICATION_REOPEN_SESSION -> b
    com.facebook.FacebookRequestError$Category PERMISSION -> c
    com.facebook.FacebookRequestError$Category SERVER -> d
    com.facebook.FacebookRequestError$Category THROTTLING -> e
    com.facebook.FacebookRequestError$Category OTHER -> f
    com.facebook.FacebookRequestError$Category BAD_REQUEST -> g
    com.facebook.FacebookRequestError$Category CLIENT -> h
    com.facebook.FacebookRequestError$Category[] ENUM$VALUES -> i
    com.facebook.FacebookRequestError$Category[] values() -> values
    com.facebook.FacebookRequestError$Category valueOf(java.lang.String) -> valueOf
com.facebook.FacebookRequestError$Range -> aki:
    int start -> a
    int end -> b
    boolean contains(int) -> a
com.facebook.FacebookServiceException -> akj:
    com.facebook.FacebookRequestError error -> a
    com.facebook.FacebookRequestError getRequestError() -> a
    java.lang.String toString() -> toString
com.facebook.GetTokenClient -> akk:
    void populateRequestBundle(android.os.Bundle) -> a
com.facebook.HttpMethod -> akl:
    com.facebook.HttpMethod GET -> a
    com.facebook.HttpMethod POST -> b
    com.facebook.HttpMethod DELETE -> c
    com.facebook.HttpMethod[] ENUM$VALUES -> d
    com.facebook.HttpMethod[] values() -> values
    com.facebook.HttpMethod valueOf(java.lang.String) -> valueOf
com.facebook.LoggingBehavior -> akm:
    com.facebook.LoggingBehavior REQUESTS -> a
    com.facebook.LoggingBehavior INCLUDE_ACCESS_TOKENS -> b
    com.facebook.LoggingBehavior INCLUDE_RAW_RESPONSES -> c
    com.facebook.LoggingBehavior CACHE -> d
    com.facebook.LoggingBehavior APP_EVENTS -> e
    com.facebook.LoggingBehavior DEVELOPER_ERRORS -> f
    com.facebook.LoggingBehavior INSIGHTS -> g
    com.facebook.LoggingBehavior[] ENUM$VALUES -> h
    com.facebook.LoggingBehavior[] values() -> values
    com.facebook.LoggingBehavior valueOf(java.lang.String) -> valueOf
com.facebook.LoginActivity -> com.facebook.LoginActivity:
    java.lang.String TAG -> a
    java.lang.String callingPackage -> b
    com.facebook.AuthorizationClient authorizationClient -> c
    com.facebook.AuthorizationClient$AuthorizationRequest request -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onAuthClientCompleted(com.facebook.AuthorizationClient$Result) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.os.Bundle populateIntentExtras(com.facebook.AuthorizationClient$AuthorizationRequest) -> a
    void access$0(com.facebook.LoginActivity,com.facebook.AuthorizationClient$Result) -> a
com.facebook.LoginActivity$1 -> akn:
    com.facebook.LoginActivity this$0 -> a
    void onCompleted(com.facebook.AuthorizationClient$Result) -> a
com.facebook.LoginActivity$2 -> ako:
    com.facebook.LoginActivity this$0 -> a
    void onBackgroundProcessingStarted() -> a
    void onBackgroundProcessingStopped() -> b
com.facebook.NativeAppCallAttachmentStore -> akp:
    java.lang.String TAG -> a
    java.io.File attachmentsDirectory -> b
    void cleanupAttachmentsForCall(android.content.Context,java.util.UUID) -> a
    java.io.File openAttachment(java.util.UUID,java.lang.String) -> a
    java.io.File getAttachmentsDirectoryForCall(java.util.UUID,boolean) -> a
    java.io.File getAttachmentFile(java.util.UUID,java.lang.String,boolean) -> a
com.facebook.NativeAppCallContentProvider -> com.facebook.NativeAppCallContentProvider:
    java.lang.String TAG -> a
    com.facebook.NativeAppCallContentProvider$AttachmentDataSource dataSource -> b
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.util.Pair parseCallIdAndAttachmentName(android.net.Uri) -> a
com.facebook.NativeAppCallContentProvider$AttachmentDataSource -> akq:
    java.io.File openAttachment(java.util.UUID,java.lang.String) -> a
com.facebook.Request -> com.facebook.Request:
    java.lang.String defaultBatchApplicationId -> a
    com.facebook.Session session -> b
    com.facebook.HttpMethod httpMethod -> c
    java.lang.String graphPath -> d
    com.facebook.model.GraphObject graphObject -> e
    java.lang.String restMethod -> f
    java.lang.String batchEntryName -> g
    java.lang.String batchEntryDependsOn -> h
    boolean batchEntryOmitResultOnSuccess -> i
    android.os.Bundle parameters -> j
    com.facebook.Request$Callback callback -> k
    java.lang.String overriddenURL -> l
    java.lang.Object tag -> m
    java.lang.String userAgent -> n
    com.facebook.Request newPostRequest(com.facebook.Session,java.lang.String,com.facebook.model.GraphObject,com.facebook.Request$Callback) -> a
    com.facebook.Request newMeRequest(com.facebook.Session,com.facebook.Request$GraphUserCallback) -> a
    com.facebook.Request newGraphPathRequest(com.facebook.Session,java.lang.String,com.facebook.Request$Callback) -> a
    com.facebook.model.GraphObject getGraphObject() -> a
    void setGraphObject(com.facebook.model.GraphObject) -> a
    void setHttpMethod(com.facebook.HttpMethod) -> a
    android.os.Bundle getParameters() -> b
    void setParameters(android.os.Bundle) -> a
    com.facebook.Session getSession() -> c
    void setCallback(com.facebook.Request$Callback) -> a
    void setTag(java.lang.Object) -> a
    java.lang.Object getTag() -> d
    com.facebook.Response executeAndWait() -> e
    java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch) -> a
    com.facebook.Response executeAndWait(com.facebook.Request) -> a
    java.util.List executeBatchAndWait(com.facebook.Request[]) -> a
    java.util.List executeBatchAndWait(java.util.Collection) -> a
    java.util.List executeBatchAndWait(com.facebook.RequestBatch) -> b
    com.facebook.RequestAsyncTask executeBatchAsync(com.facebook.Request[]) -> b
    com.facebook.RequestAsyncTask executeBatchAsync(java.util.Collection) -> b
    com.facebook.RequestAsyncTask executeBatchAsync(com.facebook.RequestBatch) -> c
    java.util.List executeConnectionAndWait(java.net.HttpURLConnection,com.facebook.RequestBatch) -> a
    java.lang.String toString() -> toString
    void runCallbacks(com.facebook.RequestBatch,java.util.List) -> a
    java.net.HttpURLConnection createConnection(java.net.URL) -> a
    void addCommonParameters() -> h
    java.lang.String appendParametersToBaseUrl(java.lang.String) -> a
    java.lang.String getUrlForBatchedRequest() -> f
    java.lang.String getUrlForSingleRequest() -> g
    void serializeToBatch(org.json.JSONArray,android.os.Bundle) -> a
    void validate() -> i
    void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection) -> a
    void processGraphObject(com.facebook.model.GraphObject,java.lang.String,com.facebook.Request$KeyValueSerializer) -> a
    void processGraphObjectProperty(java.lang.String,java.lang.Object,com.facebook.Request$KeyValueSerializer,boolean) -> a
    void serializeParameters(android.os.Bundle,com.facebook.Request$Serializer) -> a
    void serializeAttachments(android.os.Bundle,com.facebook.Request$Serializer) -> b
    void serializeRequestsAsJSON(com.facebook.Request$Serializer,java.util.Collection,android.os.Bundle) -> a
    java.lang.String getMimeContentType() -> j
    java.lang.String getUserAgent() -> k
    java.lang.String getBatchAppId(com.facebook.RequestBatch) -> d
    boolean isSupportedAttachmentType(java.lang.Object) -> d
    boolean isSupportedParameterType(java.lang.Object) -> e
    java.lang.String parameterToString(java.lang.Object) -> f
    boolean access$0(java.lang.Object) -> b
    java.lang.String access$1(java.lang.Object) -> c
com.facebook.Request$1 -> akr:
    com.facebook.Request$GraphUserCallback val$callback -> a
    void onCompleted(com.facebook.Response) -> a
com.facebook.Request$4 -> aks:
    java.util.ArrayList val$callbacks -> a
    com.facebook.RequestBatch val$requests -> b
    void run() -> run
com.facebook.Request$5 -> akt:
    com.facebook.Request this$0 -> a
    java.util.ArrayList val$keysAndValues -> b
    void writeString(java.lang.String,java.lang.String) -> a
com.facebook.Request$Callback -> aku:
    void onCompleted(com.facebook.Response) -> a
com.facebook.Request$GraphUserCallback -> akv:
    void onCompleted(com.facebook.model.GraphUser,com.facebook.Response) -> a
com.facebook.Request$KeyValueSerializer -> akw:
    void writeString(java.lang.String,java.lang.String) -> a
com.facebook.Request$ParcelFileDescriptorWithMimeType -> com.facebook.Request$ParcelFileDescriptorWithMimeType:
    java.lang.String mimeType -> a
    android.os.ParcelFileDescriptor fileDescriptor -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getMimeType() -> a
    android.os.ParcelFileDescriptor getFileDescriptor() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.facebook.Request$ParcelFileDescriptorWithMimeType$1 -> akx:
    com.facebook.Request$ParcelFileDescriptorWithMimeType createFromParcel(android.os.Parcel) -> a
    com.facebook.Request$ParcelFileDescriptorWithMimeType[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.facebook.Request$Serializer -> aky:
    java.io.BufferedOutputStream outputStream -> a
    com.facebook.internal.Logger logger -> b
    boolean firstWrite -> c
    void writeObject(java.lang.String,java.lang.Object) -> a
    void writeString(java.lang.String,java.lang.String) -> a
    void writeBitmap(java.lang.String,android.graphics.Bitmap) -> a
    void writeBytes(java.lang.String,byte[]) -> a
    void writeFile(java.lang.String,com.facebook.Request$ParcelFileDescriptorWithMimeType) -> a
    void writeFile(java.lang.String,android.os.ParcelFileDescriptor,java.lang.String) -> a
    void writeRecordBoundary() -> a
    void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String) -> a
    void write(java.lang.String,java.lang.Object[]) -> a
    void writeLine(java.lang.String,java.lang.Object[]) -> b
com.facebook.RequestAsyncTask -> akz:
    java.lang.String TAG -> a
    java.lang.reflect.Method executeOnExecutorMethod -> b
    java.net.HttpURLConnection connection -> c
    com.facebook.RequestBatch requests -> d
    java.lang.Exception exception -> e
    java.lang.String toString() -> toString
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.util.List) -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    com.facebook.RequestAsyncTask executeOnSettingsExecutor() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.facebook.RequestBatch -> ala:
    java.util.concurrent.atomic.AtomicInteger idGenerator -> a
    android.os.Handler callbackHandler -> b
    java.util.List requests -> c
    int timeoutInMilliseconds -> d
    java.lang.String id -> e
    java.util.List callbacks -> f
    java.lang.String batchApplicationId -> g
    int getTimeout() -> a
    void addCallback(com.facebook.RequestBatch$Callback) -> a
    boolean add(com.facebook.Request) -> a
    void add(int,com.facebook.Request) -> a
    void clear() -> clear
    com.facebook.Request get(int) -> a
    com.facebook.Request remove(int) -> b
    com.facebook.Request set(int,com.facebook.Request) -> b
    int size() -> size
    java.lang.String getId() -> b
    android.os.Handler getCallbackHandler() -> c
    void setCallbackHandler(android.os.Handler) -> a
    java.util.List getRequests() -> d
    java.util.List getCallbacks() -> e
    java.lang.String getBatchApplicationId() -> f
    void setBatchApplicationId(java.lang.String) -> a
    java.util.List executeAndWait() -> g
    com.facebook.RequestAsyncTask executeAsync() -> h
    java.util.List executeAndWaitImpl() -> i
    com.facebook.RequestAsyncTask executeAsyncImpl() -> j
    java.lang.Object get(int) -> get
    void add(int,java.lang.Object) -> add
    boolean add(java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object remove(int) -> remove
com.facebook.RequestBatch$Callback -> alb:
    void onBatchCompleted(com.facebook.RequestBatch) -> a
com.facebook.Response -> alc:
    java.net.HttpURLConnection connection -> b
    com.facebook.model.GraphObject graphObject -> c
    com.facebook.model.GraphObjectList graphObjectList -> d
    boolean isFromCache -> e
    com.facebook.FacebookRequestError error -> f
    com.facebook.Request request -> g
    com.facebook.internal.FileLruCache responseCache -> h
    boolean $assertionsDisabled -> a
    com.facebook.FacebookRequestError getError() -> a
    com.facebook.model.GraphObject getGraphObject() -> b
    com.facebook.model.GraphObject getGraphObjectAs(java.lang.Class) -> a
    java.lang.String toString() -> toString
    com.facebook.internal.FileLruCache getResponseCache() -> c
    java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch) -> a
    java.util.List createResponsesFromStream(java.io.InputStream,java.net.HttpURLConnection,com.facebook.RequestBatch,boolean) -> a
    java.util.List createResponsesFromString(java.lang.String,java.net.HttpURLConnection,com.facebook.RequestBatch,boolean) -> a
    java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean) -> a
    com.facebook.Response createResponseFromObject(com.facebook.Request,java.net.HttpURLConnection,java.lang.Object,boolean,java.lang.Object) -> a
    java.util.List constructErrorResponses(java.util.List,java.net.HttpURLConnection,com.facebook.FacebookException) -> a
com.facebook.Session -> ald:
    java.lang.String TAG -> a
    java.lang.Object STATIC_LOCK -> b
    com.facebook.Session activeSession -> c
    android.content.Context staticContext -> d
    java.util.Set OTHER_PUBLISH_PERMISSIONS -> e
    java.lang.String applicationId -> f
    com.facebook.SessionState state -> g
    com.facebook.AccessToken tokenInfo -> h
    java.util.Date lastAttemptedTokenExtendDate -> i
    com.facebook.Session$AuthorizationRequest pendingAuthorizationRequest -> j
    com.facebook.AuthorizationClient authorizationClient -> k
    android.os.Bundle authorizationBundle -> l
    java.util.List callbacks -> m
    android.os.Handler handler -> n
    com.facebook.Session$AutoPublishAsyncTask autoPublishAsyncTask -> o
    java.lang.Object lock -> p
    com.facebook.TokenCachingStrategy tokenCachingStrategy -> q
    com.facebook.Session$TokenRefreshRequest currentTokenRefreshRequest -> r
    com.facebook.AppEventsLogger appEventsLogger -> s
    int[] $SWITCH_TABLE$com$facebook$SessionState -> t
    void setAppId(java.lang.String) -> a
    boolean isOpened() -> a
    com.facebook.SessionState getState() -> b
    java.lang.String getApplicationId() -> c
    java.lang.String getAccessToken() -> d
    java.util.Date getExpirationDate() -> e
    java.util.List getPermissions() -> f
    void openForRead(com.facebook.Session$OpenRequest) -> a
    void openForPublish(com.facebook.Session$OpenRequest) -> b
    boolean onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    void close() -> g
    void closeAndClearTokenInformation() -> h
    void addCallback(com.facebook.Session$StatusCallback) -> a
    void removeCallback(com.facebook.Session$StatusCallback) -> b
    java.lang.String toString() -> toString
    void extendTokenCompleted(android.os.Bundle) -> a
    void saveSession(com.facebook.Session,android.os.Bundle) -> a
    com.facebook.Session restoreSession(android.content.Context,com.facebook.TokenCachingStrategy,com.facebook.Session$StatusCallback,android.os.Bundle) -> a
    com.facebook.Session getActiveSession() -> i
    void setActiveSession(com.facebook.Session) -> a
    com.facebook.Session openActiveSessionFromCache(android.content.Context) -> a
    com.facebook.Session openActiveSession(android.content.Context,boolean,com.facebook.Session$OpenRequest) -> a
    android.content.Context getStaticContext() -> j
    void initializeStaticContext(android.content.Context) -> b
    void authorize(com.facebook.Session$AuthorizationRequest) -> a
    void open(com.facebook.Session$OpenRequest,com.facebook.internal.SessionAuthorizationType) -> a
    void validateLoginBehavior(com.facebook.Session$AuthorizationRequest) -> b
    void validatePermissions(com.facebook.Session$AuthorizationRequest,com.facebook.internal.SessionAuthorizationType) -> a
    boolean isPublishPermission(java.lang.String) -> b
    void handleAuthorizationResult(int,com.facebook.AuthorizationClient$Result) -> a
    void logAuthorizationStart() -> q
    void logAuthorizationComplete(com.facebook.AuthorizationClient$Result$Code,java.util.Map,java.lang.Exception) -> a
    boolean tryLoginActivity(com.facebook.Session$AuthorizationRequest) -> c
    boolean resolveIntent(android.content.Intent) -> a
    android.content.Intent getLoginActivityIntent(com.facebook.Session$AuthorizationRequest) -> d
    void tryLegacyAuth(com.facebook.Session$AuthorizationRequest) -> e
    void finishAuthOrReauth(com.facebook.AccessToken,java.lang.Exception) -> a
    void finishAuthorization(com.facebook.AccessToken,java.lang.Exception) -> b
    void finishReauthorization(com.facebook.AccessToken,java.lang.Exception) -> c
    void saveTokenToCache(com.facebook.AccessToken) -> a
    void postStateChange(com.facebook.SessionState,com.facebook.SessionState,java.lang.Exception) -> a
    void postActiveSessionAction(java.lang.String) -> c
    void runWithHandlerOrExecutor(android.os.Handler,java.lang.Runnable) -> b
    void extendAccessTokenIfNeeded() -> k
    void extendAccessToken() -> l
    boolean shouldExtendAccessToken() -> m
    com.facebook.AppEventsLogger getAppEventsLogger() -> r
    com.facebook.AccessToken getTokenInfo() -> n
    void setLastAttemptedTokenExtendDate(java.util.Date) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean areEqual(java.lang.Object,java.lang.Object) -> a
    void autoPublishAsync() -> s
    android.content.Context access$1() -> o
    com.facebook.Session$TokenRefreshRequest access$2(com.facebook.Session) -> b
    void access$3(com.facebook.Session,com.facebook.Session$TokenRefreshRequest) -> a
    void access$4(com.facebook.Session,com.facebook.Session$AutoPublishAsyncTask) -> a
    int[] $SWITCH_TABLE$com$facebook$SessionState() -> p
    void access$6(com.facebook.Session,int,com.facebook.AuthorizationClient$Result) -> a
    java.util.List access$7(com.facebook.Session) -> c
    android.os.Handler access$8(com.facebook.Session) -> d
    void access$9(android.os.Handler,java.lang.Runnable) -> a
com.facebook.Session$1 -> ale:
com.facebook.Session$2 -> alf:
    com.facebook.Session this$0 -> a
    void onCompleted(com.facebook.AuthorizationClient$Result) -> a
com.facebook.Session$3 -> alg:
    com.facebook.Session this$0 -> a
    com.facebook.SessionState val$newState -> b
    java.lang.Exception val$exception -> c
    void run() -> run
    com.facebook.Session access$0(com.facebook.Session$3) -> a
com.facebook.Session$3$1 -> alh:
    com.facebook.Session$3 this$1 -> a
    com.facebook.Session$StatusCallback val$callback -> b
    com.facebook.SessionState val$newState -> c
    java.lang.Exception val$exception -> d
    void run() -> run
com.facebook.Session$AuthorizationRequest -> ali:
    com.facebook.Session$StartActivityDelegate startActivityDelegate -> a
    com.facebook.SessionLoginBehavior loginBehavior -> b
    int requestCode -> c
    com.facebook.Session$StatusCallback statusCallback -> d
    boolean isLegacy -> e
    java.util.List permissions -> f
    com.facebook.SessionDefaultAudience defaultAudience -> g
    java.lang.String applicationId -> h
    java.lang.String validateSameFbidAsToken -> i
    java.lang.String authId -> j
    java.util.Map loggingExtras -> k
    com.facebook.Session$StatusCallback getCallback() -> a
    com.facebook.Session$AuthorizationRequest setLoginBehavior(com.facebook.SessionLoginBehavior) -> a
    com.facebook.SessionLoginBehavior getLoginBehavior() -> b
    int getRequestCode() -> c
    com.facebook.Session$AuthorizationRequest setPermissions(java.util.List) -> a
    java.util.List getPermissions() -> d
    com.facebook.Session$AuthorizationRequest setDefaultAudience(com.facebook.SessionDefaultAudience) -> a
    com.facebook.Session$StartActivityDelegate getStartActivityDelegate() -> e
    void setApplicationId(java.lang.String) -> a
    java.lang.String getAuthId() -> f
    com.facebook.AuthorizationClient$AuthorizationRequest getAuthorizationClientRequest() -> g
    com.facebook.Session$StartActivityDelegate access$1(com.facebook.Session$AuthorizationRequest) -> a
    java.util.Map access$2(com.facebook.Session$AuthorizationRequest) -> b
    boolean access$3(com.facebook.Session$AuthorizationRequest) -> c
    com.facebook.SessionLoginBehavior access$4(com.facebook.Session$AuthorizationRequest) -> d
    int access$5(com.facebook.Session$AuthorizationRequest) -> e
    java.util.List access$6(com.facebook.Session$AuthorizationRequest) -> f
    com.facebook.SessionDefaultAudience access$7(com.facebook.Session$AuthorizationRequest) -> g
com.facebook.Session$AuthorizationRequest$1 -> alj:
    com.facebook.Session$AuthorizationRequest this$1 -> a
    android.app.Activity val$activity -> b
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$AuthorizationRequest$2 -> alk:
    com.facebook.Session$AuthorizationRequest this$1 -> a
    android.support.v4.app.Fragment val$fragment -> b
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$AuthorizationRequest$4 -> all:
    com.facebook.Session$AuthorizationRequest this$1 -> a
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$AutoPublishAsyncTask -> alm:
    java.lang.String mApplicationId -> b
    android.content.Context mApplicationContext -> c
    com.facebook.Session this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.facebook.Session$Builder -> aln:
    android.content.Context context -> a
    java.lang.String applicationId -> b
    com.facebook.TokenCachingStrategy tokenCachingStrategy -> c
    com.facebook.Session$Builder setApplicationId(java.lang.String) -> a
    com.facebook.Session build() -> a
com.facebook.Session$OpenRequest -> alo:
    com.facebook.Session$OpenRequest setLoginBehavior(com.facebook.SessionLoginBehavior) -> b
    com.facebook.Session$OpenRequest setPermissions(java.util.List) -> b
    com.facebook.Session$OpenRequest setDefaultAudience(com.facebook.SessionDefaultAudience) -> b
    com.facebook.Session$AuthorizationRequest setDefaultAudience(com.facebook.SessionDefaultAudience) -> a
    com.facebook.Session$AuthorizationRequest setPermissions(java.util.List) -> a
    com.facebook.Session$AuthorizationRequest setLoginBehavior(com.facebook.SessionLoginBehavior) -> a
com.facebook.Session$StartActivityDelegate -> alp:
    void startActivityForResult(android.content.Intent,int) -> a
    android.app.Activity getActivityContext() -> a
com.facebook.Session$StatusCallback -> alq:
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
com.facebook.Session$TokenRefreshRequest -> alr:
    android.os.Messenger messageReceiver -> a
    android.os.Messenger messageSender -> b
    com.facebook.Session this$0 -> c
    void bind() -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void cleanup() -> b
    void refreshToken() -> c
    void access$0(com.facebook.Session$TokenRefreshRequest) -> a
com.facebook.Session$TokenRefreshRequestHandler -> als:
    java.lang.ref.WeakReference sessionWeakReference -> a
    java.lang.ref.WeakReference refreshRequestWeakReference -> b
    void handleMessage(android.os.Message) -> handleMessage
com.facebook.SessionDefaultAudience -> alt:
    com.facebook.SessionDefaultAudience NONE -> a
    com.facebook.SessionDefaultAudience ONLY_ME -> b
    com.facebook.SessionDefaultAudience FRIENDS -> c
    com.facebook.SessionDefaultAudience EVERYONE -> d
    java.lang.String nativeProtocolAudience -> e
    com.facebook.SessionDefaultAudience[] ENUM$VALUES -> f
    java.lang.String getNativeProtocolAudience() -> a
    com.facebook.SessionDefaultAudience[] values() -> values
    com.facebook.SessionDefaultAudience valueOf(java.lang.String) -> valueOf
com.facebook.SessionLoginBehavior -> alu:
    com.facebook.SessionLoginBehavior SSO_WITH_FALLBACK -> a
    com.facebook.SessionLoginBehavior SSO_ONLY -> b
    com.facebook.SessionLoginBehavior SUPPRESS_SSO -> c
    boolean allowsKatanaAuth -> d
    boolean allowsWebViewAuth -> e
    com.facebook.SessionLoginBehavior[] ENUM$VALUES -> f
    boolean allowsKatanaAuth() -> a
    boolean allowsWebViewAuth() -> b
    com.facebook.SessionLoginBehavior[] values() -> values
    com.facebook.SessionLoginBehavior valueOf(java.lang.String) -> valueOf
com.facebook.SessionState -> alv:
    com.facebook.SessionState CREATED -> a
    com.facebook.SessionState CREATED_TOKEN_LOADED -> b
    com.facebook.SessionState OPENING -> c
    com.facebook.SessionState OPENED -> d
    com.facebook.SessionState OPENED_TOKEN_UPDATED -> e
    com.facebook.SessionState CLOSED_LOGIN_FAILED -> f
    com.facebook.SessionState CLOSED -> g
    com.facebook.SessionState$Category category -> h
    com.facebook.SessionState[] ENUM$VALUES -> i
    boolean isOpened() -> a
    boolean isClosed() -> b
    com.facebook.SessionState[] values() -> values
    com.facebook.SessionState valueOf(java.lang.String) -> valueOf
com.facebook.SessionState$Category -> alw:
    com.facebook.SessionState$Category CREATED_CATEGORY -> a
    com.facebook.SessionState$Category OPENED_CATEGORY -> b
    com.facebook.SessionState$Category CLOSED_CATEGORY -> c
    com.facebook.SessionState$Category[] ENUM$VALUES -> d
    com.facebook.SessionState$Category[] values() -> values
    com.facebook.SessionState$Category valueOf(java.lang.String) -> valueOf
com.facebook.Settings -> alx:
    java.lang.String TAG -> a
    java.util.HashSet loggingBehaviors -> b
    java.util.concurrent.Executor executor -> c
    boolean shouldAutoPublishInstall -> d
    java.lang.String appVersion -> e
    java.lang.String facebookDomain -> f
    java.lang.Object LOCK -> g
    android.net.Uri ATTRIBUTION_ID_CONTENT_URI -> h
    java.util.concurrent.BlockingQueue DEFAULT_WORK_QUEUE -> i
    java.util.concurrent.ThreadFactory DEFAULT_THREAD_FACTORY -> j
    boolean isLoggingBehaviorEnabled(com.facebook.LoggingBehavior) -> a
    java.util.concurrent.Executor getExecutor() -> a
    java.lang.String getFacebookDomain() -> b
    java.util.concurrent.Executor getAsyncTaskExecutor() -> e
    void setShouldAutoPublishInstall(boolean) -> a
    boolean getShouldAutoPublishInstall() -> c
    com.facebook.Response publishInstallAndWaitForResponse(android.content.Context,java.lang.String,boolean) -> a
    java.lang.String getAttributionId(android.content.ContentResolver) -> a
    java.lang.String getAppVersion() -> d
com.facebook.Settings$1 -> aly:
    java.util.concurrent.atomic.AtomicInteger counter -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.facebook.SharedPreferencesTokenCachingStrategy -> alz:
    java.lang.String TAG -> a
    java.lang.String cacheKey -> b
    android.content.SharedPreferences cache -> c
    android.os.Bundle load() -> a
    void save(android.os.Bundle) -> a
    void clear() -> b
    void serializeKey(java.lang.String,android.os.Bundle,android.content.SharedPreferences$Editor) -> a
    void deserializeKey(java.lang.String,android.os.Bundle) -> a
com.facebook.TokenCachingStrategy -> ama:
    android.os.Bundle load() -> a
    void save(android.os.Bundle) -> a
    void clear() -> b
    boolean hasTokenInformation(android.os.Bundle) -> b
    com.facebook.AccessTokenSource getSource(android.os.Bundle) -> c
    java.util.Date getDate(android.os.Bundle,java.lang.String) -> a
    void putDate(android.os.Bundle,java.lang.String,java.util.Date) -> a
com.facebook.UiLifecycleHelper -> amb:
    android.app.Activity activity -> a
    com.facebook.Session$StatusCallback callback -> b
    android.content.BroadcastReceiver receiver -> c
    android.support.v4.content.LocalBroadcastManager broadcastManager -> d
    com.facebook.widget.FacebookDialog$PendingCall pendingFacebookDialogCall -> e
    java.lang.String jumiaAppId -> f
    void onCreate(android.os.Bundle) -> a
    void onResume() -> a
    void setJumiaAppId(java.lang.String) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    void onActivityResult(int,int,android.content.Intent,com.facebook.widget.FacebookDialog$Callback) -> a
    void onSaveInstanceState(android.os.Bundle) -> b
    void onPause() -> b
    void onStop() -> c
    void onDestroy() -> d
    boolean handleFacebookDialogActivityResult(int,int,android.content.Intent,com.facebook.widget.FacebookDialog$Callback) -> b
    void cancelPendingAppCall(com.facebook.widget.FacebookDialog$Callback) -> a
    com.facebook.Session$StatusCallback access$0(com.facebook.UiLifecycleHelper) -> a
    java.lang.String access$1() -> e
com.facebook.UiLifecycleHelper$ActiveSessionBroadcastReceiver -> amc:
    com.facebook.UiLifecycleHelper this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.facebook.android.R -> amd:
com.facebook.android.R$color -> ame:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__bright_foreground_inverse_holo_dark -> abs__bright_foreground_inverse_holo_dark
    int abs__bright_foreground_inverse_holo_light -> abs__bright_foreground_inverse_holo_light
    int abs__holo_blue_light -> abs__holo_blue_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
    int com_facebook_blue -> com_facebook_blue
    int com_facebook_loginview_text_color -> com_facebook_loginview_text_color
    int com_facebook_picker_search_bar_background -> com_facebook_picker_search_bar_background
    int com_facebook_picker_search_bar_text -> com_facebook_picker_search_bar_text
    int com_facebook_usersettingsfragment_connected_shadow_color -> com_facebook_usersettingsfragment_connected_shadow_color
    int com_facebook_usersettingsfragment_connected_text_color -> com_facebook_usersettingsfragment_connected_text_color
    int com_facebook_usersettingsfragment_not_connected_text_color -> com_facebook_usersettingsfragment_not_connected_text_color
com.facebook.android.R$dimen -> amf:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__alert_dialog_title_height -> abs__alert_dialog_title_height
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int action_button_min_width -> action_button_min_width
    int com_facebook_loginview_compound_drawable_padding -> com_facebook_loginview_compound_drawable_padding
    int com_facebook_loginview_padding_bottom -> com_facebook_loginview_padding_bottom
    int com_facebook_loginview_padding_left -> com_facebook_loginview_padding_left
    int com_facebook_loginview_padding_right -> com_facebook_loginview_padding_right
    int com_facebook_loginview_padding_top -> com_facebook_loginview_padding_top
    int com_facebook_loginview_text_size -> com_facebook_loginview_text_size
    int com_facebook_picker_divider_width -> com_facebook_picker_divider_width
    int com_facebook_picker_place_image_size -> com_facebook_picker_place_image_size
    int com_facebook_profilepictureview_preset_size_large -> com_facebook_profilepictureview_preset_size_large
    int com_facebook_profilepictureview_preset_size_normal -> com_facebook_profilepictureview_preset_size_normal
    int com_facebook_profilepictureview_preset_size_small -> com_facebook_profilepictureview_preset_size_small
    int com_facebook_usersettingsfragment_profile_picture_height -> com_facebook_usersettingsfragment_profile_picture_height
    int com_facebook_usersettingsfragment_profile_picture_width -> com_facebook_usersettingsfragment_profile_picture_width
com.facebook.android.R$drawable -> amg:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
    int actionoverflow -> actionoverflow
    int actionoverflow_selected -> actionoverflow_selected
    int com_facebook_button_blue -> com_facebook_button_blue
    int com_facebook_button_blue_focused -> com_facebook_button_blue_focused
    int com_facebook_button_blue_normal -> com_facebook_button_blue_normal
    int com_facebook_button_blue_pressed -> com_facebook_button_blue_pressed
    int com_facebook_button_check -> com_facebook_button_check
    int com_facebook_button_check_off -> com_facebook_button_check_off
    int com_facebook_button_check_on -> com_facebook_button_check_on
    int com_facebook_button_grey_focused -> com_facebook_button_grey_focused
    int com_facebook_button_grey_normal -> com_facebook_button_grey_normal
    int com_facebook_button_grey_pressed -> com_facebook_button_grey_pressed
    int com_facebook_close -> com_facebook_close
    int com_facebook_inverse_icon -> com_facebook_inverse_icon
    int com_facebook_list_divider -> com_facebook_list_divider
    int com_facebook_list_section_header_background -> com_facebook_list_section_header_background
    int com_facebook_loginbutton_silver -> com_facebook_loginbutton_silver
    int com_facebook_logo -> com_facebook_logo
    int com_facebook_picker_default_separator_color -> com_facebook_picker_default_separator_color
    int com_facebook_picker_item_background -> com_facebook_picker_item_background
    int com_facebook_picker_list_focused -> com_facebook_picker_list_focused
    int com_facebook_picker_list_longpressed -> com_facebook_picker_list_longpressed
    int com_facebook_picker_list_pressed -> com_facebook_picker_list_pressed
    int com_facebook_picker_list_selector -> com_facebook_picker_list_selector
    int com_facebook_picker_list_selector_background_transition -> com_facebook_picker_list_selector_background_transition
    int com_facebook_picker_list_selector_disabled -> com_facebook_picker_list_selector_disabled
    int com_facebook_picker_magnifier -> com_facebook_picker_magnifier
    int com_facebook_picker_top_button -> com_facebook_picker_top_button
    int com_facebook_place_default_icon -> com_facebook_place_default_icon
    int com_facebook_profile_default_icon -> com_facebook_profile_default_icon
    int com_facebook_profile_picture_blank_portrait -> com_facebook_profile_picture_blank_portrait
    int com_facebook_profile_picture_blank_square -> com_facebook_profile_picture_blank_square
    int com_facebook_top_background -> com_facebook_top_background
    int com_facebook_top_button -> com_facebook_top_button
    int com_facebook_usersettingsfragment_background_gradient -> com_facebook_usersettingsfragment_background_gradient
    int logo_ic_text -> logo_ic_text
com.facebook.android.R$id -> amh:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__titleDivider -> abs__titleDivider
    int abs__up -> abs__up
    int com_facebook_login_activity_progress_bar -> com_facebook_login_activity_progress_bar
    int com_facebook_picker_activity_circle -> com_facebook_picker_activity_circle
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int com_facebook_picker_checkbox_stub -> com_facebook_picker_checkbox_stub
    int com_facebook_picker_divider -> com_facebook_picker_divider
    int com_facebook_picker_done_button -> com_facebook_picker_done_button
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_list_view -> com_facebook_picker_list_view
    int com_facebook_picker_profile_pic_stub -> com_facebook_picker_profile_pic_stub
    int com_facebook_picker_row_activity_circle -> com_facebook_picker_row_activity_circle
    int com_facebook_picker_search_text -> com_facebook_picker_search_text
    int com_facebook_picker_title -> com_facebook_picker_title
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_picker_top_bar -> com_facebook_picker_top_bar
    int com_facebook_search_bar_view -> com_facebook_search_bar_view
    int com_facebook_usersettingsfragment_login_button -> com_facebook_usersettingsfragment_login_button
    int com_facebook_usersettingsfragment_logo_image -> com_facebook_usersettingsfragment_logo_image
    int com_facebook_usersettingsfragment_profile_name -> com_facebook_usersettingsfragment_profile_name
    int disableHome -> disableHome
    int edit_query -> edit_query
    int homeAsUp -> homeAsUp
    int large -> large
    int listMode -> listMode
    int normal -> normal
    int picker_subtitle -> picker_subtitle
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int small -> small
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
com.facebook.android.R$layout -> ami:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__dialog_title_holo -> abs__dialog_title_holo
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int com_facebook_friendpickerfragment -> com_facebook_friendpickerfragment
    int com_facebook_login_activity_layout -> com_facebook_login_activity_layout
    int com_facebook_picker_activity_circle_row -> com_facebook_picker_activity_circle_row
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_picker_list_row -> com_facebook_picker_list_row
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_search_box -> com_facebook_picker_search_box
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_placepickerfragment -> com_facebook_placepickerfragment
    int com_facebook_placepickerfragment_list_row -> com_facebook_placepickerfragment_list_row
    int com_facebook_search_bar_layout -> com_facebook_search_bar_layout
    int com_facebook_usersettingsfragment -> com_facebook_usersettingsfragment
com.facebook.android.R$string -> amj:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_dialog_title_default -> abs__activity_chooser_view_dialog_title_default
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__share_action_provider_share_with -> abs__share_action_provider_share_with
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
    int com_facebook_choose_friends -> com_facebook_choose_friends
    int com_facebook_dialogloginactivity_ok_button -> com_facebook_dialogloginactivity_ok_button
    int com_facebook_internet_permission_error_message -> com_facebook_internet_permission_error_message
    int com_facebook_internet_permission_error_title -> com_facebook_internet_permission_error_title
    int com_facebook_loading -> com_facebook_loading
    int com_facebook_loginview_cancel_action -> com_facebook_loginview_cancel_action
    int com_facebook_loginview_log_in_button -> com_facebook_loginview_log_in_button
    int com_facebook_loginview_log_out_action -> com_facebook_loginview_log_out_action
    int com_facebook_loginview_log_out_button -> com_facebook_loginview_log_out_button
    int com_facebook_loginview_logged_in_as -> com_facebook_loginview_logged_in_as
    int com_facebook_loginview_logged_in_using_facebook -> com_facebook_loginview_logged_in_using_facebook
    int com_facebook_logo_content_description -> com_facebook_logo_content_description
    int com_facebook_nearby -> com_facebook_nearby
    int com_facebook_picker_done_button_text -> com_facebook_picker_done_button_text
    int com_facebook_placepicker_subtitle_catetory_only_format -> com_facebook_placepicker_subtitle_catetory_only_format
    int com_facebook_placepicker_subtitle_format -> com_facebook_placepicker_subtitle_format
    int com_facebook_placepicker_subtitle_were_here_only_format -> com_facebook_placepicker_subtitle_were_here_only_format
    int com_facebook_requesterror_password_changed -> com_facebook_requesterror_password_changed
    int com_facebook_requesterror_permissions -> com_facebook_requesterror_permissions
    int com_facebook_requesterror_reconnect -> com_facebook_requesterror_reconnect
    int com_facebook_requesterror_relogin -> com_facebook_requesterror_relogin
    int com_facebook_requesterror_web_login -> com_facebook_requesterror_web_login
    int com_facebook_usersettingsfragment_log_in_button -> com_facebook_usersettingsfragment_log_in_button
    int com_facebook_usersettingsfragment_logged_in -> com_facebook_usersettingsfragment_logged_in
    int com_facebook_usersettingsfragment_not_logged_in -> com_facebook_usersettingsfragment_not_logged_in
com.facebook.android.R$styleable -> amk:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_android_windowIsFloating -> SherlockTheme_android_windowIsFloating
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int[] com_facebook_friend_picker_fragment -> com_facebook_friend_picker_fragment
    int com_facebook_friend_picker_fragment_multi_select -> com_facebook_friend_picker_fragment_multi_select
    int[] com_facebook_login_view -> com_facebook_login_view
    int com_facebook_login_view_confirm_logout -> com_facebook_login_view_confirm_logout
    int com_facebook_login_view_fetch_user_info -> com_facebook_login_view_fetch_user_info
    int com_facebook_login_view_login_text -> com_facebook_login_view_login_text
    int com_facebook_login_view_logout_text -> com_facebook_login_view_logout_text
    int[] com_facebook_picker_fragment -> com_facebook_picker_fragment
    int com_facebook_picker_fragment_done_button_background -> com_facebook_picker_fragment_done_button_background
    int com_facebook_picker_fragment_done_button_text -> com_facebook_picker_fragment_done_button_text
    int com_facebook_picker_fragment_extra_fields -> com_facebook_picker_fragment_extra_fields
    int com_facebook_picker_fragment_show_pictures -> com_facebook_picker_fragment_show_pictures
    int com_facebook_picker_fragment_show_title_bar -> com_facebook_picker_fragment_show_title_bar
    int com_facebook_picker_fragment_title_bar_background -> com_facebook_picker_fragment_title_bar_background
    int com_facebook_picker_fragment_title_text -> com_facebook_picker_fragment_title_text
    int[] com_facebook_place_picker_fragment -> com_facebook_place_picker_fragment
    int com_facebook_place_picker_fragment_radius_in_meters -> com_facebook_place_picker_fragment_radius_in_meters
    int com_facebook_place_picker_fragment_results_limit -> com_facebook_place_picker_fragment_results_limit
    int com_facebook_place_picker_fragment_search_text -> com_facebook_place_picker_fragment_search_text
    int com_facebook_place_picker_fragment_show_search_box -> com_facebook_place_picker_fragment_show_search_box
    int[] com_facebook_profile_picture_view -> com_facebook_profile_picture_view
    int com_facebook_profile_picture_view_is_cropped -> com_facebook_profile_picture_view_is_cropped
    int com_facebook_profile_picture_view_preset_size -> com_facebook_profile_picture_view_preset_size
com.facebook.android.Util -> aml:
    android.os.Bundle decodeUrl(java.lang.String) -> a
    android.os.Bundle parseUrl(java.lang.String) -> b
com.facebook.internal.CacheableRequestBatch -> amm:
    java.lang.String cacheKey -> a
    boolean forceRoundTrip -> b
    java.lang.String getCacheKeyOverride() -> k
    boolean getForceRoundTrip() -> l
com.facebook.internal.FileLruCache -> amn:
    java.lang.String TAG -> a
    java.util.concurrent.atomic.AtomicLong bufferIndex -> b
    java.lang.String tag -> c
    com.facebook.internal.FileLruCache$Limits limits -> d
    java.io.File directory -> e
    boolean isTrimPending -> f
    java.lang.Object lock -> g
    java.util.concurrent.atomic.AtomicLong lastClearCacheTime -> h
    java.io.InputStream get(java.lang.String) -> a
    java.io.InputStream get(java.lang.String,java.lang.String) -> a
    java.io.OutputStream openPutStream(java.lang.String) -> b
    java.io.OutputStream openPutStream(java.lang.String,java.lang.String) -> b
    void clearCache() -> a
    void renameToTargetAndTrim(java.lang.String,java.io.File) -> a
    java.io.InputStream interceptAndPut(java.lang.String,java.io.InputStream) -> a
    java.lang.String toString() -> toString
    void postTrim() -> c
    void trim() -> d
    java.util.concurrent.atomic.AtomicLong access$0() -> b
    java.util.concurrent.atomic.AtomicLong access$1(com.facebook.internal.FileLruCache) -> a
    void access$2(com.facebook.internal.FileLruCache,java.lang.String,java.io.File) -> a
    void access$3(com.facebook.internal.FileLruCache) -> b
com.facebook.internal.FileLruCache$1 -> amo:
    com.facebook.internal.FileLruCache this$0 -> a
    long val$bufferFileCreateTime -> b
    java.io.File val$buffer -> c
    java.lang.String val$key -> d
    void onClose() -> a
com.facebook.internal.FileLruCache$2 -> amp:
    com.facebook.internal.FileLruCache this$0 -> a
    java.io.File[] val$filesToDelete -> b
    void run() -> run
com.facebook.internal.FileLruCache$3 -> amq:
    com.facebook.internal.FileLruCache this$0 -> a
    void run() -> run
com.facebook.internal.FileLruCache$BufferFile -> amr:
    java.io.FilenameFilter filterExcludeBufferFiles -> a
    java.io.FilenameFilter filterExcludeNonBufferFiles -> b
    void deleteAll(java.io.File) -> a
    java.io.FilenameFilter excludeBufferFiles() -> a
    java.io.FilenameFilter excludeNonBufferFiles() -> b
    java.io.File newFile(java.io.File) -> b
com.facebook.internal.FileLruCache$BufferFile$1 -> ams:
    boolean accept(java.io.File,java.lang.String) -> accept
com.facebook.internal.FileLruCache$BufferFile$2 -> amt:
    boolean accept(java.io.File,java.lang.String) -> accept
com.facebook.internal.FileLruCache$CloseCallbackOutputStream -> amu:
    java.io.OutputStream innerStream -> a
    com.facebook.internal.FileLruCache$StreamCloseCallback callback -> b
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
com.facebook.internal.FileLruCache$CopyingInputStream -> amv:
    java.io.InputStream input -> a
    java.io.OutputStream output -> b
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read(byte[]) -> read
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.facebook.internal.FileLruCache$Limits -> amw:
    int byteCount -> a
    int fileCount -> b
    int getByteCount() -> a
    int getFileCount() -> b
com.facebook.internal.FileLruCache$ModifiedFile -> amx:
    java.io.File file -> a
    long modified -> b
    java.io.File getFile() -> a
    long getModified() -> b
    int compareTo(com.facebook.internal.FileLruCache$ModifiedFile) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
com.facebook.internal.FileLruCache$StreamCloseCallback -> amy:
    void onClose() -> a
com.facebook.internal.FileLruCache$StreamHeader -> amz:
    void writeHeader(java.io.OutputStream,org.json.JSONObject) -> a
    org.json.JSONObject readHeader(java.io.InputStream) -> a
com.facebook.internal.ImageDownloader -> ana:
    android.os.Handler handler -> a
    com.facebook.internal.WorkQueue downloadQueue -> b
    com.facebook.internal.WorkQueue cacheReadQueue -> c
    java.util.Map pendingRequests -> d
    void downloadAsync(com.facebook.internal.ImageRequest) -> a
    boolean cancelRequest(com.facebook.internal.ImageRequest) -> b
    void clearCache(android.content.Context) -> a
    void enqueueCacheRead(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey,boolean) -> a
    void enqueueDownload(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey) -> a
    void enqueueRequest(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey,com.facebook.internal.WorkQueue,java.lang.Runnable) -> a
    void issueResponse(com.facebook.internal.ImageDownloader$RequestKey,java.lang.Exception,android.graphics.Bitmap,boolean) -> a
    void readFromCache(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context,boolean) -> b
    void download(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context) -> b
    android.os.Handler getHandler() -> a
    com.facebook.internal.ImageDownloader$DownloaderContext removePendingRequest(com.facebook.internal.ImageDownloader$RequestKey) -> a
    void access$0(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context,boolean) -> a
    void access$1(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context) -> a
com.facebook.internal.ImageDownloader$1 -> anb:
    com.facebook.internal.ImageRequest val$request -> a
    java.lang.Exception val$error -> b
    boolean val$isCachedRedirect -> c
    android.graphics.Bitmap val$bitmap -> d
    com.facebook.internal.ImageRequest$Callback val$callback -> e
    void run() -> run
com.facebook.internal.ImageDownloader$CacheReadWorkItem -> anc:
    android.content.Context context -> a
    com.facebook.internal.ImageDownloader$RequestKey key -> b
    boolean allowCachedRedirects -> c
    void run() -> run
com.facebook.internal.ImageDownloader$DownloadImageWorkItem -> and:
    android.content.Context context -> a
    com.facebook.internal.ImageDownloader$RequestKey key -> b
    void run() -> run
com.facebook.internal.ImageDownloader$DownloaderContext -> ane:
    com.facebook.internal.WorkQueue$WorkItem workItem -> a
    com.facebook.internal.ImageRequest request -> b
    boolean isCancelled -> c
com.facebook.internal.ImageDownloader$RequestKey -> anf:
    java.net.URI uri -> a
    java.lang.Object tag -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.facebook.internal.ImageRequest -> ang:
    android.content.Context context -> a
    java.net.URI imageUri -> b
    com.facebook.internal.ImageRequest$Callback callback -> c
    boolean allowCachedRedirects -> d
    java.lang.Object callerTag -> e
    java.net.URI getProfilePictureUrl(java.lang.String,int,int) -> a
    android.content.Context getContext() -> a
    java.net.URI getImageUri() -> b
    com.facebook.internal.ImageRequest$Callback getCallback() -> c
    boolean isCachedRedirectAllowed() -> d
    java.lang.Object getCallerTag() -> e
com.facebook.internal.ImageRequest$Builder -> anh:
    android.content.Context context -> a
    java.net.URI imageUrl -> b
    com.facebook.internal.ImageRequest$Callback callback -> c
    boolean allowCachedRedirects -> d
    java.lang.Object callerTag -> e
    com.facebook.internal.ImageRequest$Builder setCallback(com.facebook.internal.ImageRequest$Callback) -> a
    com.facebook.internal.ImageRequest$Builder setCallerTag(java.lang.Object) -> a
    com.facebook.internal.ImageRequest$Builder setAllowCachedRedirects(boolean) -> a
    com.facebook.internal.ImageRequest build() -> a
    android.content.Context access$0(com.facebook.internal.ImageRequest$Builder) -> a
    java.net.URI access$1(com.facebook.internal.ImageRequest$Builder) -> b
    com.facebook.internal.ImageRequest$Callback access$2(com.facebook.internal.ImageRequest$Builder) -> c
    boolean access$3(com.facebook.internal.ImageRequest$Builder) -> d
    java.lang.Object access$4(com.facebook.internal.ImageRequest$Builder) -> e
com.facebook.internal.ImageRequest$Callback -> ani:
    void onCompleted(com.facebook.internal.ImageResponse) -> a
com.facebook.internal.ImageResponse -> anj:
    com.facebook.internal.ImageRequest request -> a
    java.lang.Exception error -> b
    boolean isCachedRedirect -> c
    android.graphics.Bitmap bitmap -> d
    com.facebook.internal.ImageRequest getRequest() -> a
    java.lang.Exception getError() -> b
    android.graphics.Bitmap getBitmap() -> c
    boolean isCachedRedirect() -> d
com.facebook.internal.ImageResponseCache -> ank:
    java.lang.String TAG -> a
    com.facebook.internal.FileLruCache imageCache -> b
    com.facebook.internal.FileLruCache getCache(android.content.Context) -> a
    java.io.InputStream getCachedImageStream(java.net.URI,android.content.Context) -> a
    java.io.InputStream interceptAndCacheImageStream(android.content.Context,java.net.HttpURLConnection) -> a
    boolean isCDNURL(java.net.URI) -> a
    void clearCache(android.content.Context) -> b
com.facebook.internal.ImageResponseCache$BufferedHttpInputStream -> anl:
    java.net.HttpURLConnection connection -> a
    void close() -> close
com.facebook.internal.Logger -> anm:
    java.util.HashMap stringsToReplace -> a
    com.facebook.LoggingBehavior behavior -> b
    java.lang.String tag -> c
    java.lang.StringBuilder contents -> d
    int priority -> e
    void registerStringToReplace(java.lang.String,java.lang.String) -> a
    void registerAccessToken(java.lang.String) -> a
    void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String) -> a
    void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void log(com.facebook.LoggingBehavior,int,java.lang.String,java.lang.String) -> a
    java.lang.String replaceStrings(java.lang.String) -> d
    void log() -> a
    void logString(java.lang.String) -> b
    void append(java.lang.String) -> c
    void append(java.lang.String,java.lang.Object[]) -> a
    void appendKeyValue(java.lang.String,java.lang.Object) -> a
    boolean shouldLog() -> b
com.facebook.internal.NativeProtocol -> ann:
    android.net.Uri PLATFORM_PROVIDER_VERSIONS_URI -> a
    java.util.List KNOWN_PROTOCOL_VERSIONS -> b
    boolean validateSignature(android.content.Context,java.lang.String) -> a
    android.content.Intent validateKatanaActivityIntent(android.content.Context,android.content.Intent) -> a
    android.content.Intent validateKatanaServiceIntent(android.content.Context,android.content.Intent) -> b
    android.content.Intent createProxyAuthIntent(android.content.Context,java.lang.String,java.util.List,java.lang.String) -> a
    android.content.Intent createTokenRefreshIntent(android.content.Context) -> a
    android.content.Intent createPlatformServiceIntent(android.content.Context) -> b
    android.content.Intent createLoginDialog20121101Intent(android.content.Context,java.lang.String,java.util.ArrayList,java.lang.String) -> a
    boolean isErrorResult(android.content.Intent) -> a
    java.lang.Exception getErrorFromResult(android.content.Intent) -> b
    java.lang.String generateCallId() -> a
    java.lang.String ensureDefaultAudience(java.lang.String) -> a
    java.util.ArrayList ensureDefaultPermissions(java.util.ArrayList) -> a
    boolean isServiceDisabledResult20121101(android.content.Intent) -> c
    int getLatestAvailableProtocolVersion(android.content.Context,int) -> a
com.facebook.internal.PlatformServiceClient -> ano:
    android.content.Context context -> a
    android.os.Handler handler -> b
    com.facebook.internal.PlatformServiceClient$CompletedListener listener -> c
    boolean running -> d
    android.os.Messenger sender -> e
    int requestMessage -> f
    int replyMessage -> g
    java.lang.String applicationId -> h
    int protocolVersion -> i
    void setCompletedListener(com.facebook.internal.PlatformServiceClient$CompletedListener) -> a
    boolean start() -> a
    void cancel() -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void sendMessage() -> c
    void populateRequestBundle(android.os.Bundle) -> a
    void handleMessage(android.os.Message) -> a
    void callback(android.os.Bundle) -> b
com.facebook.internal.PlatformServiceClient$1 -> anp:
    com.facebook.internal.PlatformServiceClient this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.facebook.internal.PlatformServiceClient$CompletedListener -> anq:
    void completed(android.os.Bundle) -> a
com.facebook.internal.ServerProtocol -> anr:
    java.util.Collection errorsProxyAuthDisabled -> a
    java.util.Collection errorsUserCanceled -> b
    java.lang.String getDialogAuthority() -> a
    java.lang.String getGraphUrlBase() -> b
    java.lang.String getRestUrlBase() -> c
com.facebook.internal.SessionAuthorizationType -> ans:
    com.facebook.internal.SessionAuthorizationType READ -> a
    com.facebook.internal.SessionAuthorizationType PUBLISH -> b
    com.facebook.internal.SessionAuthorizationType[] ENUM$VALUES -> c
    com.facebook.internal.SessionAuthorizationType[] values() -> values
    com.facebook.internal.SessionAuthorizationType valueOf(java.lang.String) -> valueOf
com.facebook.internal.SessionTracker -> ant:
    com.facebook.Session session -> a
    com.facebook.Session$StatusCallback callback -> b
    android.content.BroadcastReceiver receiver -> c
    android.support.v4.content.LocalBroadcastManager broadcastManager -> d
    boolean isTracking -> e
    com.facebook.Session getSession() -> a
    com.facebook.Session getOpenSession() -> b
    void setSession(com.facebook.Session) -> a
    void startTracking() -> c
    void stopTracking() -> d
    boolean isTracking() -> e
    void addBroadcastReceiver() -> f
    com.facebook.Session$StatusCallback access$0(com.facebook.internal.SessionTracker) -> a
    com.facebook.Session access$1(com.facebook.internal.SessionTracker) -> b
com.facebook.internal.SessionTracker$ActiveSessionBroadcastReceiver -> anu:
    com.facebook.internal.SessionTracker this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.facebook.internal.SessionTracker$CallbackWrapper -> anv:
    com.facebook.Session$StatusCallback wrapped -> b
    com.facebook.internal.SessionTracker this$0 -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
com.facebook.internal.UrlRedirectCache -> anw:
    java.lang.String TAG -> a
    java.lang.String REDIRECT_CONTENT_TAG -> b
    com.facebook.internal.FileLruCache urlRedirectCache -> c
    com.facebook.internal.FileLruCache getCache(android.content.Context) -> a
    java.net.URI getRedirectedUri(android.content.Context,java.net.URI) -> a
    void cacheUriRedirect(android.content.Context,java.net.URI,java.net.URI) -> a
    void clearCache(android.content.Context) -> b
com.facebook.internal.Utility -> anx:
    java.lang.String[] APP_SETTING_FIELDS -> a
    java.util.Map fetchedAppSettings -> b
    boolean isSubset(java.util.Collection,java.util.Collection) -> a
    boolean isNullOrEmpty(java.util.Collection) -> a
    boolean isNullOrEmpty(java.lang.String) -> a
    java.util.Collection unmodifiableCollection(java.lang.Object[]) -> a
    java.lang.String md5hash(java.lang.String) -> b
    android.net.Uri buildUri(java.lang.String,java.lang.String,android.os.Bundle) -> a
    void putObjectInBundle(android.os.Bundle,java.lang.String,java.lang.Object) -> a
    void closeQuietly(java.io.Closeable) -> a
    void disconnectQuietly(java.net.URLConnection) -> a
    java.lang.String getMetadataApplicationId(android.content.Context) -> a
    java.lang.Object getStringPropertyAsJSON(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    java.lang.String readStreamToString(java.io.InputStream) -> a
    void clearCookiesForDomain(android.content.Context,java.lang.String) -> a
    void clearFacebookCookies(android.content.Context) -> b
    void logd(java.lang.String,java.lang.Exception) -> a
    void logd(java.lang.String,java.lang.String) -> a
    boolean areObjectsEqual(java.lang.Object,java.lang.Object) -> a
    com.facebook.internal.Utility$FetchedAppSettings queryAppSettings(java.lang.String,boolean) -> a
    boolean safeGetBooleanFromResponse(com.facebook.model.GraphObject,java.lang.String) -> a
    void clearCaches(android.content.Context) -> c
    void deleteDirectory(java.io.File) -> a
    java.util.List asListNoNulls(java.lang.Object[]) -> b
com.facebook.internal.Utility$FetchedAppSettings -> any:
    boolean supportsAttribution -> a
    boolean supportsImplicitLogging -> b
    boolean supportsAttribution() -> a
    boolean supportsImplicitLogging() -> b
com.facebook.internal.Validate -> anz:
    void notNull(java.lang.Object,java.lang.String) -> a
    void notEmpty(java.util.Collection,java.lang.String) -> a
    void containsNoNulls(java.util.Collection,java.lang.String) -> b
    void notEmptyAndContainsNoNulls(java.util.Collection,java.lang.String) -> c
    void notNullOrEmpty(java.lang.String,java.lang.String) -> a
com.facebook.internal.WorkQueue -> aoa:
    java.lang.Object workLock -> b
    com.facebook.internal.WorkQueue$WorkNode pendingJobs -> c
    int maxConcurrent -> d
    java.util.concurrent.Executor executor -> e
    com.facebook.internal.WorkQueue$WorkNode runningJobs -> f
    int runningCount -> g
    boolean $assertionsDisabled -> a
    com.facebook.internal.WorkQueue$WorkItem addActiveWorkItem(java.lang.Runnable) -> a
    com.facebook.internal.WorkQueue$WorkItem addActiveWorkItem(java.lang.Runnable,boolean) -> a
    void startItem() -> a
    void finishItemAndStartNew(com.facebook.internal.WorkQueue$WorkNode) -> a
    void execute(com.facebook.internal.WorkQueue$WorkNode) -> b
    java.lang.Object access$0(com.facebook.internal.WorkQueue) -> a
    com.facebook.internal.WorkQueue$WorkNode access$1(com.facebook.internal.WorkQueue) -> b
    void access$2(com.facebook.internal.WorkQueue,com.facebook.internal.WorkQueue$WorkNode) -> a
    void access$3(com.facebook.internal.WorkQueue,com.facebook.internal.WorkQueue$WorkNode) -> b
com.facebook.internal.WorkQueue$1 -> aob:
    com.facebook.internal.WorkQueue this$0 -> a
    com.facebook.internal.WorkQueue$WorkNode val$node -> b
    void run() -> run
com.facebook.internal.WorkQueue$WorkItem -> aoc:
    boolean cancel() -> a
    void moveToFront() -> b
com.facebook.internal.WorkQueue$WorkNode -> aod:
    java.lang.Runnable callback -> c
    com.facebook.internal.WorkQueue$WorkNode next -> d
    com.facebook.internal.WorkQueue$WorkNode prev -> e
    boolean isRunning -> f
    com.facebook.internal.WorkQueue this$0 -> a
    boolean $assertionsDisabled -> b
    boolean cancel() -> a
    void moveToFront() -> b
    boolean isRunning() -> c
    java.lang.Runnable getCallback() -> d
    void setIsRunning(boolean) -> a
    com.facebook.internal.WorkQueue$WorkNode addToList(com.facebook.internal.WorkQueue$WorkNode,boolean) -> a
    com.facebook.internal.WorkQueue$WorkNode removeFromList(com.facebook.internal.WorkQueue$WorkNode) -> a
com.facebook.model.CreateGraphObject -> aoe:
    java.lang.String value() -> a
com.facebook.model.GraphMultiResult -> aof:
    com.facebook.model.GraphObjectList getData() -> a
com.facebook.model.GraphObject -> aog:
    com.facebook.model.GraphObject cast(java.lang.Class) -> a
    java.util.Map asMap() -> b
    org.json.JSONObject getInnerJSONObject() -> c
    java.lang.Object getProperty(java.lang.String) -> a
    void setProperty(java.lang.String,java.lang.Object) -> a
com.facebook.model.GraphObject$Factory -> aoh:
    java.util.HashSet verifiedGraphObjectClasses -> a
    java.text.SimpleDateFormat[] dateFormats -> b
    com.facebook.model.GraphObject create(org.json.JSONObject) -> a
    com.facebook.model.GraphObject create(org.json.JSONObject,java.lang.Class) -> a
    com.facebook.model.GraphObject create() -> a
    com.facebook.model.GraphObject create(java.lang.Class) -> a
    com.facebook.model.GraphObjectList createList(org.json.JSONArray,java.lang.Class) -> a
    com.facebook.model.GraphObjectList createList(java.lang.Class) -> b
    com.facebook.model.GraphObject createGraphObjectProxy(java.lang.Class,org.json.JSONObject) -> b
    java.util.Map createGraphObjectProxyForMap(org.json.JSONObject) -> c
    boolean hasClassBeenVerified(java.lang.Class) -> c
    void recordClassHasBeenVerified(java.lang.Class) -> d
    void verifyCanProxyClass(java.lang.Class) -> e
    java.lang.Object coerceValueToExpectedType(java.lang.Object,java.lang.Class,java.lang.reflect.ParameterizedType) -> a
    java.lang.String convertCamelCaseToLowercaseWithUnderscores(java.lang.String) -> a
    java.lang.Object getUnderlyingJSONObject(java.lang.Object) -> b
    com.facebook.model.GraphObject access$0(java.lang.Class,org.json.JSONObject) -> a
    java.util.Map access$1(org.json.JSONObject) -> b
    java.lang.Object access$2(java.lang.Object) -> a
com.facebook.model.GraphObject$Factory$GraphObjectListImpl -> aoi:
    org.json.JSONArray state -> a
    java.lang.Class itemType -> b
    java.lang.String toString() -> toString
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object get(int) -> get
    int size() -> size
    org.json.JSONArray getInnerJSONArray() -> a
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void checkIndex(int) -> a
    void put(int,java.lang.Object) -> a
com.facebook.model.GraphObject$Factory$GraphObjectProxy -> aoj:
    java.lang.Class graphObjectClass -> b
    java.lang.String toString() -> toString
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object proxyMapMethods(java.lang.reflect.Method,java.lang.Object[]) -> a
    java.lang.Object proxyGraphObjectMethods(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> b
    java.lang.Object createGraphObjectsFromParameters(com.facebook.model.CreateGraphObject,java.lang.Object) -> a
    java.lang.Object proxyGraphObjectGettersAndSetters(java.lang.reflect.Method,java.lang.Object[]) -> b
    java.lang.Object setJSONProperty(java.lang.Object[]) -> a
com.facebook.model.GraphObject$Factory$GraphObjectProxy$1 -> aok:
    com.facebook.model.GraphObject$Factory$GraphObjectProxy this$2 -> a
    java.lang.Class val$expectedType -> b
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.reflect.Type getRawType() -> getRawType
com.facebook.model.GraphObject$Factory$ProxyBase -> aol:
    java.lang.Object state -> a
    java.lang.Object throwUnexpectedMethodSignature(java.lang.reflect.Method) -> a
    java.lang.Object proxyObjectMethods(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
com.facebook.model.GraphObjectList -> aom:
    org.json.JSONArray getInnerJSONArray() -> a
com.facebook.model.GraphUser -> aon:
    java.lang.String getId() -> a
    java.lang.String getName() -> d
    java.lang.String getFirstName() -> e
    java.lang.String getLastName() -> f
    java.lang.String getBirthday() -> g
com.facebook.model.JsonUtil -> aoo:
    void jsonObjectClear(org.json.JSONObject) -> a
    boolean jsonObjectContainsValue(org.json.JSONObject,java.lang.Object) -> a
    java.util.Set jsonObjectEntrySet(org.json.JSONObject) -> b
    java.util.Set jsonObjectKeySet(org.json.JSONObject) -> c
    void jsonObjectPutAll(org.json.JSONObject,java.util.Map) -> a
    java.util.Collection jsonObjectValues(org.json.JSONObject) -> d
com.facebook.model.JsonUtil$JSONObjectEntry -> aop:
    java.lang.String key -> a
    java.lang.Object value -> b
    java.lang.String getKey() -> a
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getKey() -> getKey
com.facebook.model.PropertyName -> aoq:
    java.lang.String value() -> a
com.facebook.widget.FacebookDialog -> com.facebook.widget.FacebookDialog:
    com.facebook.NativeAppCallAttachmentStore attachmentStore -> a
    boolean handleActivityResult(android.content.Context,com.facebook.widget.FacebookDialog$PendingCall,int,android.content.Intent,com.facebook.widget.FacebookDialog$Callback) -> a
com.facebook.widget.FacebookDialog$Callback -> aor:
    void onComplete(com.facebook.widget.FacebookDialog$PendingCall,android.os.Bundle) -> a
    void onError(com.facebook.widget.FacebookDialog$PendingCall,java.lang.Exception,android.os.Bundle) -> a
com.facebook.widget.FacebookDialog$PendingCall -> com.facebook.widget.FacebookDialog$PendingCall:
    java.util.UUID callId -> a
    android.content.Intent requestIntent -> b
    int requestCode -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.content.Intent getRequestIntent() -> a
    java.util.UUID getCallId() -> b
    int getRequestCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.facebook.widget.FacebookDialog$PendingCall$1 -> aos:
    com.facebook.widget.FacebookDialog$PendingCall createFromParcel(android.os.Parcel) -> a
    com.facebook.widget.FacebookDialog$PendingCall[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.facebook.widget.LoginButton -> com.facebook.widget.LoginButton:
    java.lang.String TAG -> a
    java.lang.String applicationId -> b
    com.facebook.internal.SessionTracker sessionTracker -> c
    com.facebook.model.GraphUser user -> d
    com.facebook.Session userInfoSession -> e
    boolean confirmLogout -> f
    boolean fetchUserInfo -> g
    java.lang.String loginText -> h
    java.lang.String logoutText -> i
    com.facebook.widget.LoginButton$UserInfoChangedCallback userInfoChangedCallback -> j
    android.support.v4.app.Fragment parentFragment -> k
    com.facebook.widget.LoginButton$LoginButtonProperties properties -> l
    java.lang.String loginLogoutEventName -> m
    void setOnErrorListener(com.facebook.widget.LoginButton$OnErrorListener) -> setOnErrorListener
    com.facebook.widget.LoginButton$OnErrorListener getOnErrorListener() -> getOnErrorListener
    void setDefaultAudience(com.facebook.SessionDefaultAudience) -> setDefaultAudience
    com.facebook.SessionDefaultAudience getDefaultAudience() -> getDefaultAudience
    void setReadPermissions(java.util.List) -> setReadPermissions
    void setReadPermissions(java.lang.String[]) -> setReadPermissions
    void setPublishPermissions(java.util.List) -> setPublishPermissions
    void setPublishPermissions(java.lang.String[]) -> setPublishPermissions
    void setLoginBehavior(com.facebook.SessionLoginBehavior) -> setLoginBehavior
    com.facebook.SessionLoginBehavior getLoginBehavior() -> getLoginBehavior
    void setApplicationId(java.lang.String) -> setApplicationId
    com.facebook.widget.LoginButton$UserInfoChangedCallback getUserInfoChangedCallback() -> getUserInfoChangedCallback
    void setUserInfoChangedCallback(com.facebook.widget.LoginButton$UserInfoChangedCallback) -> setUserInfoChangedCallback
    void setSessionStatusCallback(com.facebook.Session$StatusCallback) -> setSessionStatusCallback
    com.facebook.Session$StatusCallback getSessionStatusCallback() -> getSessionStatusCallback
    void setSession(com.facebook.Session) -> setSession
    void onFinishInflate() -> onFinishInflate
    void finishInit() -> b
    void setFragment(android.support.v4.app.Fragment) -> setFragment
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    java.util.List getPermissions() -> getPermissions
    void setProperties(com.facebook.widget.LoginButton$LoginButtonProperties) -> setProperties
    void setLoginLogoutEventName(java.lang.String) -> setLoginLogoutEventName
    void parseAttributes(android.util.AttributeSet) -> a
    void setButtonText() -> c
    boolean initializeActiveSessionWithCachedToken(android.content.Context) -> a
    void fetchUserInfo() -> d
    void handleError(java.lang.Exception) -> a
    java.lang.String access$0() -> a
    com.facebook.internal.SessionTracker access$1(com.facebook.widget.LoginButton) -> a
    boolean access$2(com.facebook.widget.LoginButton) -> b
    com.facebook.model.GraphUser access$3(com.facebook.widget.LoginButton) -> c
    java.lang.String access$4(com.facebook.widget.LoginButton) -> d
    android.support.v4.app.Fragment access$5(com.facebook.widget.LoginButton) -> e
    com.facebook.widget.LoginButton$LoginButtonProperties access$6(com.facebook.widget.LoginButton) -> f
    java.lang.String access$7(com.facebook.widget.LoginButton) -> g
    void access$8(com.facebook.widget.LoginButton) -> h
    void access$9(com.facebook.widget.LoginButton) -> i
    void access$10(com.facebook.widget.LoginButton,com.facebook.model.GraphUser) -> a
    com.facebook.widget.LoginButton$UserInfoChangedCallback access$11(com.facebook.widget.LoginButton) -> j
com.facebook.widget.LoginButton$1 -> aot:
    com.facebook.widget.LoginButton this$0 -> a
    com.facebook.Session val$currentSession -> b
    void onCompleted(com.facebook.model.GraphUser,com.facebook.Response) -> a
com.facebook.widget.LoginButton$LoginButtonCallback -> aou:
    com.facebook.widget.LoginButton this$0 -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
com.facebook.widget.LoginButton$LoginButtonProperties -> aov:
    com.facebook.SessionDefaultAudience defaultAudience -> a
    java.util.List permissions -> b
    com.facebook.internal.SessionAuthorizationType authorizationType -> c
    com.facebook.widget.LoginButton$OnErrorListener onErrorListener -> d
    com.facebook.SessionLoginBehavior loginBehavior -> e
    com.facebook.Session$StatusCallback sessionStatusCallback -> f
    void setOnErrorListener(com.facebook.widget.LoginButton$OnErrorListener) -> a
    com.facebook.widget.LoginButton$OnErrorListener getOnErrorListener() -> a
    void setDefaultAudience(com.facebook.SessionDefaultAudience) -> a
    com.facebook.SessionDefaultAudience getDefaultAudience() -> b
    void setReadPermissions(java.util.List,com.facebook.Session) -> a
    void setPublishPermissions(java.util.List,com.facebook.Session) -> b
    boolean validatePermissions(java.util.List,com.facebook.internal.SessionAuthorizationType,com.facebook.Session) -> a
    java.util.List getPermissions() -> c
    void setLoginBehavior(com.facebook.SessionLoginBehavior) -> a
    com.facebook.SessionLoginBehavior getLoginBehavior() -> d
    void setSessionStatusCallback(com.facebook.Session$StatusCallback) -> a
    com.facebook.Session$StatusCallback getSessionStatusCallback() -> e
    com.facebook.SessionDefaultAudience access$0(com.facebook.widget.LoginButton$LoginButtonProperties) -> a
    java.util.List access$1(com.facebook.widget.LoginButton$LoginButtonProperties) -> b
    com.facebook.SessionLoginBehavior access$2(com.facebook.widget.LoginButton$LoginButtonProperties) -> c
    com.facebook.internal.SessionAuthorizationType access$3(com.facebook.widget.LoginButton$LoginButtonProperties) -> d
    com.facebook.Session$StatusCallback access$4(com.facebook.widget.LoginButton$LoginButtonProperties) -> e
    com.facebook.widget.LoginButton$OnErrorListener access$5(com.facebook.widget.LoginButton$LoginButtonProperties) -> f
com.facebook.widget.LoginButton$LoginClickListener -> aow:
    com.facebook.widget.LoginButton this$0 -> a
    void onClick(android.view.View) -> onClick
com.facebook.widget.LoginButton$LoginClickListener$1 -> aox:
    com.facebook.widget.LoginButton$LoginClickListener this$1 -> a
    com.facebook.Session val$openSession -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.facebook.widget.LoginButton$OnErrorListener -> aoy:
    void onError(com.facebook.FacebookException) -> a
com.facebook.widget.LoginButton$UserInfoChangedCallback -> aoz:
    void onUserInfoFetched(com.facebook.model.GraphUser) -> a
com.facebook.widget.ProfilePictureView -> com.facebook.widget.ProfilePictureView:
    java.lang.String TAG -> a
    java.lang.String profileId -> b
    int queryHeight -> c
    int queryWidth -> d
    boolean isCropped -> e
    android.graphics.Bitmap imageContents -> f
    android.widget.ImageView image -> g
    int presetSizeType -> h
    com.facebook.internal.ImageRequest lastRequest -> i
    com.facebook.widget.ProfilePictureView$OnErrorListener onErrorListener -> j
    android.graphics.Bitmap customizedDefaultProfilePicture -> k
    int getPresetSize() -> getPresetSize
    void setPresetSize(int) -> setPresetSize
    boolean isCropped() -> a
    void setCropped(boolean) -> setCropped
    java.lang.String getProfileId() -> getProfileId
    void setProfileId(java.lang.String) -> setProfileId
    com.facebook.widget.ProfilePictureView$OnErrorListener getOnErrorListener() -> getOnErrorListener
    void setOnErrorListener(com.facebook.widget.ProfilePictureView$OnErrorListener) -> setOnErrorListener
    void setDefaultProfilePicture(android.graphics.Bitmap) -> setDefaultProfilePicture
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void initialize(android.content.Context) -> a
    void parseAttributes(android.util.AttributeSet) -> a
    void refreshImage(boolean) -> a
    void setBlankProfilePicture() -> b
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void sendImageRequest(boolean) -> b
    void processResponse(com.facebook.internal.ImageResponse) -> a
    boolean updateImageQueryParameters() -> c
    int getPresetSizeInPixels(boolean) -> c
    void access$0(com.facebook.widget.ProfilePictureView,com.facebook.internal.ImageResponse) -> a
com.facebook.widget.ProfilePictureView$1 -> apa:
    com.facebook.widget.ProfilePictureView this$0 -> a
    void onCompleted(com.facebook.internal.ImageResponse) -> a
com.facebook.widget.ProfilePictureView$OnErrorListener -> apb:
    void onError(com.facebook.FacebookException) -> a
com.facebook.widget.WebDialog -> apc:
    java.lang.String url -> a
    com.facebook.widget.WebDialog$OnCompleteListener onCompleteListener -> b
    android.webkit.WebView webView -> c
    android.app.ProgressDialog spinner -> d
    android.widget.ImageView crossImageView -> e
    android.widget.FrameLayout contentFrameLayout -> f
    boolean listenerCalled -> g
    boolean isDetached -> h
    void dismiss() -> dismiss
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onCreate(android.os.Bundle) -> onCreate
    android.util.Pair getMargins() -> a
    void sendSuccessToListener(android.os.Bundle) -> a
    void sendErrorToListener(java.lang.Throwable) -> a
    void sendCancelToListener() -> b
    void createCrossImage() -> c
    void setUpWebView(int) -> a
    void access$0(com.facebook.widget.WebDialog,android.os.Bundle) -> a
    void access$1(com.facebook.widget.WebDialog) -> a
    void access$2(com.facebook.widget.WebDialog,java.lang.Throwable) -> a
    boolean access$3(com.facebook.widget.WebDialog) -> b
    android.app.ProgressDialog access$4(com.facebook.widget.WebDialog) -> c
    android.widget.FrameLayout access$5(com.facebook.widget.WebDialog) -> d
    android.webkit.WebView access$6(com.facebook.widget.WebDialog) -> e
    android.widget.ImageView access$7(com.facebook.widget.WebDialog) -> f
com.facebook.widget.WebDialog$1 -> apd:
    com.facebook.widget.WebDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.facebook.widget.WebDialog$2 -> ape:
    com.facebook.widget.WebDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.facebook.widget.WebDialog$3 -> apf:
    com.facebook.widget.WebDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.facebook.widget.WebDialog$Builder -> apg:
    com.facebook.widget.WebDialog build() -> a
    com.facebook.widget.WebDialog$BuilderBase setOnCompleteListener(com.facebook.widget.WebDialog$OnCompleteListener) -> a
com.facebook.widget.WebDialog$BuilderBase -> aph:
    android.content.Context context -> a
    com.facebook.Session session -> b
    java.lang.String applicationId -> c
    java.lang.String action -> d
    int theme -> e
    com.facebook.widget.WebDialog$OnCompleteListener listener -> f
    android.os.Bundle parameters -> g
    com.facebook.widget.WebDialog$BuilderBase setOnCompleteListener(com.facebook.widget.WebDialog$OnCompleteListener) -> a
    com.facebook.widget.WebDialog build() -> a
    java.lang.String getApplicationId() -> b
    android.content.Context getContext() -> c
    int getTheme() -> d
    android.os.Bundle getParameters() -> e
    com.facebook.widget.WebDialog$OnCompleteListener getListener() -> f
    void finishInit(android.content.Context,java.lang.String,android.os.Bundle) -> a
com.facebook.widget.WebDialog$DialogWebViewClient -> api:
    com.facebook.widget.WebDialog this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.facebook.widget.WebDialog$OnCompleteListener -> apj:
    void onComplete(android.os.Bundle,com.facebook.FacebookException) -> a
com.flurry.android.AdImage -> apk:
    long a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    byte[] e -> e
    void a(java.io.DataInput) -> a
com.flurry.android.AppCircle -> apl:
com.flurry.android.AppCircleCallback -> apm:
    void onMarketAppLaunchError(com.flurry.android.CallbackEvent) -> a
    void onAdsUpdated(com.flurry.android.CallbackEvent) -> b
com.flurry.android.CallbackEvent -> apn:
    int a -> a
    long b -> b
    java.lang.String c -> c
    void setMessage(java.lang.String) -> a
com.flurry.android.CatalogActivity -> com.flurry.android.CatalogActivity:
    java.lang.String a -> a
    android.webkit.WebView b -> b
    com.flurry.android.x c -> c
    java.util.List d -> d
    com.flurry.android.v e -> e
    com.flurry.android.p f -> f
    void onCreate(android.os.Bundle) -> onCreate
    void finish() -> finish
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void a(com.flurry.android.y) -> a
    com.flurry.android.p a(com.flurry.android.CatalogActivity) -> a
    long b(com.flurry.android.CatalogActivity) -> b
    com.flurry.android.v c(com.flurry.android.CatalogActivity) -> c
com.flurry.android.CrcMessageDigest -> apo:
    java.util.zip.CRC32 a -> a
    void engineReset() -> engineReset
    void engineUpdate(byte) -> engineUpdate
    void engineUpdate(byte[],int,int) -> engineUpdate
    byte[] engineDigest() -> engineDigest
    byte[] getDigest() -> a
com.flurry.android.FlurryAgent -> app:
    java.lang.String[] b -> b
    java.lang.String c -> c
    java.lang.String kInsecureReportUrl -> d
    java.lang.String kSecureReportUrl -> e
    java.lang.String d -> f
    java.lang.String e -> g
    java.lang.String f -> h
    java.lang.String g -> i
    com.flurry.android.FlurryAgent h -> j
    long i -> k
    boolean j -> l
    boolean k -> m
    boolean l -> n
    boolean m -> o
    android.location.Criteria n -> p
    boolean o -> q
    com.flurry.android.AppCircle p -> r
    java.util.concurrent.atomic.AtomicInteger q -> s
    java.util.concurrent.atomic.AtomicInteger r -> t
    android.os.Handler s -> u
    java.io.File u -> v
    boolean v -> w
    boolean w -> x
    long x -> y
    java.util.Map y -> z
    java.lang.String z -> A
    java.lang.String A -> B
    java.lang.String B -> C
    boolean C -> D
    java.util.List D -> E
    android.location.LocationManager E -> F
    java.lang.String F -> G
    boolean G -> H
    long H -> I
    byte[] I -> J
    java.util.List J -> K
    long K -> L
    long L -> M
    long M -> N
    java.lang.String N -> O
    java.lang.String O -> P
    byte P -> Q
    java.lang.String Q -> R
    byte R -> S
    java.lang.Long S -> T
    int T -> U
    android.location.Location U -> V
    java.util.Map V -> W
    java.util.List W -> X
    boolean X -> Y
    java.util.List Z -> Z
    int aa -> aa
    com.flurry.android.v ab -> ab
    java.lang.String a -> a
    void a(java.lang.Throwable) -> a
    void onError(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean isCaptureUncaughtExceptions() -> a
    com.flurry.android.v b() -> b
    void a(android.content.Context,boolean) -> a
    void k() -> h
    double a(double) -> a
    void a(java.lang.Runnable) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> b
    byte[] b(boolean) -> a
    java.lang.String m() -> i
    boolean a(byte[]) -> a
    boolean a(byte[],java.lang.String) -> a
    void a(java.io.DataInputStream) -> a
    void c(boolean) -> b
    void n() -> j
    boolean a(java.io.File) -> a
    void o() -> k
    java.lang.String e() -> c
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    org.apache.http.client.HttpClient a(org.apache.http.params.HttpParams) -> a
    int g() -> d
    com.flurry.android.FlurryAgent h() -> e
    void b(com.flurry.android.FlurryAgent) -> a
    void c(com.flurry.android.FlurryAgent) -> b
    void b(com.flurry.android.FlurryAgent,android.content.Context) -> a
    long i() -> f
    android.os.Handler d(com.flurry.android.FlurryAgent) -> c
    boolean j() -> g
    com.flurry.android.v e(com.flurry.android.FlurryAgent) -> d
com.flurry.android.FlurryAgent$FlurryDefaultExceptionHandler -> apq:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.flurry.android.InstallReceiver -> com.flurry.android.InstallReceiver:
    android.os.Handler a -> a
    java.io.File b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.util.Map a(java.lang.String) -> a
    void a(java.util.Map) -> a
    java.io.File a(com.flurry.android.InstallReceiver) -> a
com.flurry.android.a -> apr:
    java.lang.String a -> a
com.flurry.android.aa -> aps:
    android.content.Context a -> a
    com.flurry.android.v b -> b
    com.flurry.android.a c -> c
    long d -> d
    com.flurry.android.ag e -> e
    com.flurry.android.ag f -> f
    java.util.Map g -> g
    java.util.Map h -> h
    java.util.Map i -> i
    java.util.Map j -> j
    boolean k -> k
    com.flurry.android.w[] a(java.lang.String) -> a
    com.flurry.android.am a(long) -> a
    java.util.Set a() -> a
    com.flurry.android.AdImage b(long) -> b
    com.flurry.android.AdImage a(short) -> a
    com.flurry.android.e b(java.lang.String) -> b
    boolean b() -> b
    com.flurry.android.c a(byte) -> a
    void a(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> a
    long c() -> c
    void f() -> e
    void e() -> d
    void a(java.io.DataOutputStream) -> a
    java.lang.String g() -> f
    void a(int) -> a
    java.lang.String toString() -> toString
com.flurry.android.ab -> apt:
    int a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
com.flurry.android.ac -> apu:
    android.text.SpannedString a -> a
    android.text.SpannedString b -> b
    android.text.SpannedString a(com.flurry.android.ac) -> a
    android.text.SpannedString b(com.flurry.android.ac) -> b
com.flurry.android.ad -> apv:
    android.widget.TextView a -> a
    com.flurry.android.ac b -> b
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.flurry.android.ae -> apw:
    int a -> a
    com.flurry.android.v b -> b
    void run() -> run
com.flurry.android.af -> apx:
    java.lang.String a -> a
    com.flurry.android.v b -> b
    void run() -> run
com.flurry.android.ag -> apy:
    java.util.LinkedHashMap a -> a
    int b -> b
    java.lang.Object a(java.lang.Object) -> a
    void a(java.lang.Object,java.lang.Object) -> a
    java.util.List b() -> a
    java.util.Set c() -> b
    int a(com.flurry.android.ag) -> a
com.flurry.android.ai -> apz:
    boolean a -> a
    int b -> b
    int a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    int a(java.lang.String,java.lang.String) -> a
    int b(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    int b(java.lang.String,java.lang.String) -> b
    int c(java.lang.String,java.lang.String,java.lang.Throwable) -> c
    int c(java.lang.String,java.lang.String) -> c
    int d(java.lang.String,java.lang.String) -> d
com.flurry.android.aj -> aqa:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.flurry.android.ak -> aqb:
com.flurry.android.al -> aqc:
    java.lang.String a -> a
    android.content.Context b -> b
    com.flurry.android.p c -> c
    com.flurry.android.v d -> d
    void run() -> run
com.flurry.android.am -> aqd:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
com.flurry.android.b -> aqe:
    boolean c -> c
    android.content.Context a -> a
    com.flurry.android.FlurryAgent b -> b
    void run() -> run
com.flurry.android.c -> aqf:
    byte a -> a
    java.lang.String b -> b
    long c -> c
    long r -> r
    java.lang.String d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    int h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    int l -> l
    java.lang.String s -> s
    int t -> t
    int u -> u
    java.lang.String v -> v
    int w -> w
    int x -> x
    java.lang.String y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    int K -> K
    int q -> q
    int L -> L
    int M -> M
    int N -> N
    int O -> O
    int P -> P
    int Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int aa -> aa
    int ab -> ab
    int ac -> ac
    int ad -> ad
    int ae -> ae
    int af -> af
    boolean ag -> ag
    void c(java.io.DataInput) -> b
    void a(java.io.DataInput) -> a
    void a(java.io.DataOutput) -> a
com.flurry.android.e -> aqg:
    java.lang.String a -> a
    byte b -> b
    byte c -> c
    com.flurry.android.c d -> d
    java.lang.String toString() -> toString
com.flurry.android.f -> aqh:
    byte a -> a
    long b -> b
    java.lang.String toString() -> toString
com.flurry.android.g -> aqi:
    int a -> a
com.flurry.android.h -> aqj:
    com.flurry.android.ag a -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.flurry.android.i -> aqk:
    int a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    long d -> d
    long f -> e
    byte[] a() -> a
com.flurry.android.l -> aql:
    com.flurry.android.b a -> a
    void run() -> run
com.flurry.android.m -> aqm:
    java.lang.String a -> a
    com.flurry.android.al b -> b
    void run() -> run
com.flurry.android.n -> aqn:
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.flurry.android.p -> aqo:
    java.lang.String a -> a
    byte f -> f
    int b -> b
    com.flurry.android.w c -> c
    long d -> d
    java.util.List e -> e
    java.util.concurrent.atomic.AtomicInteger g -> g
    void a(com.flurry.android.f) -> a
    long a() -> a
    void a(java.io.DataOutput) -> a
    java.lang.String toString() -> toString
com.flurry.android.q -> aqp:
    com.flurry.android.CatalogActivity a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.flurry.android.r -> aqq:
    java.lang.String a(java.lang.String,int) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.io.Closeable) -> a
    void a(android.content.Context,android.widget.ImageView,int,int) -> a
    int a(android.content.Context,int) -> a
com.flurry.android.s -> aqr:
com.flurry.android.t -> aqs:
    java.util.Map a -> a
    com.flurry.android.InstallReceiver b -> b
    void run() -> run
com.flurry.android.v -> aqt:
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a -> a
    int g -> g
    java.lang.String b -> b
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    long k -> k
    long l -> l
    long m -> m
    long n -> n
    com.flurry.android.aa o -> o
    boolean p -> p
    boolean q -> q
    java.lang.String r -> r
    java.util.Map s -> s
    android.os.Handler t -> t
    boolean u -> u
    java.util.Map v -> v
    java.util.List x -> w
    java.util.Map y -> x
    com.flurry.android.AppCircleCallback z -> y
    long A -> z
    void c() -> a
    void a(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> a
    long d() -> b
    java.util.Set e() -> c
    com.flurry.android.AdImage a(long) -> a
    com.flurry.android.AdImage n() -> i
    java.util.List f() -> d
    com.flurry.android.p b(long) -> b
    void g() -> e
    java.lang.String i() -> f
    void a(android.content.Context,com.flurry.android.p,java.lang.String) -> a
    java.lang.String d(java.lang.String) -> a
    void e(java.lang.String) -> b
    java.util.List a(android.content.Context,java.util.List,java.lang.Long,int,boolean) -> a
    void c(com.flurry.android.p) -> c
    java.util.List a(java.util.List,java.lang.Long) -> a
    long j() -> g
    void onClick(android.view.View) -> onClick
    void b(android.content.Context,com.flurry.android.p,java.lang.String) -> b
    java.lang.String o() -> j
    java.lang.String a(com.flurry.android.p) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String toString() -> toString
    com.flurry.android.AdImage l() -> h
    com.flurry.android.p b(com.flurry.android.p) -> b
    void a(java.lang.Runnable) -> a
    void a(int) -> a
    boolean p() -> k
    java.lang.String a(com.flurry.android.v,java.lang.String) -> a
    void a(com.flurry.android.v,android.content.Context,java.lang.String) -> a
    void b(com.flurry.android.v,java.lang.String) -> b
    com.flurry.android.AppCircleCallback a(com.flurry.android.v) -> a
com.flurry.android.w -> aqu:
    long a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    long e -> e
    java.lang.Long f -> f
    byte[] g -> g
    com.flurry.android.AdImage h -> h
    void b(java.io.DataInput) -> a
    java.lang.String toString() -> toString
    java.lang.String a(byte[]) -> a
com.flurry.android.x -> aqv:
    android.view.View a -> a
    java.util.List b -> b
    boolean c -> c
    com.flurry.android.CatalogActivity d -> d
    java.util.List a(android.content.Context) -> a
    void a() -> a
    void a(java.util.List) -> a
    void a(java.util.List,boolean) -> a
    java.util.List b() -> b
com.flurry.android.y -> aqw:
    java.lang.String a -> a
    java.util.List b -> b
com.flurry.android.z -> aqx:
    com.flurry.android.v a -> a
    com.flurry.android.p b -> b
    int c -> c
    void a(android.content.Context,com.flurry.android.e,com.flurry.android.w,boolean) -> a
    com.flurry.android.p a() -> a
    void a(com.flurry.android.p) -> a
com.google.analytics.tracking.android.AdHitIdGenerator -> aqy:
    boolean mAdMobSdkInstalled -> a
    int getAdHitId() -> a
com.google.analytics.tracking.android.AdMobInfo -> aqz:
    com.google.analytics.tracking.android.AdMobInfo INSTANCE -> a
    int mAdHitId -> b
    java.util.Random mRandom -> c
    com.google.analytics.tracking.android.AdMobInfo getInstance() -> a
    int generateAdHitId() -> b
com.google.analytics.tracking.android.AnalyticsClient -> ara:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
    void connect() -> b
    void disconnect() -> c
com.google.analytics.tracking.android.AnalyticsGmsCoreClient -> arb:
    android.content.ServiceConnection mConnection -> a
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener mOnConnectedListener -> b
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener mOnConnectionFailedListener -> c
    android.content.Context mContext -> d
    com.google.android.gms.analytics.internal.IAnalyticsService mService -> e
    void connect() -> b
    void disconnect() -> c
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
    com.google.android.gms.analytics.internal.IAnalyticsService getService() -> f
    void checkConnected() -> d
    boolean isConnected() -> e
    void onServiceBound() -> g
    void onConnectionSuccess() -> h
    com.google.android.gms.analytics.internal.IAnalyticsService access$002(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,com.google.android.gms.analytics.internal.IAnalyticsService) -> a
    void access$100(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> a
    android.content.Context access$200(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> b
    android.content.ServiceConnection access$302(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,android.content.ServiceConnection) -> a
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener access$400(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> c
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener access$500(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> d
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$AnalyticsServiceConnection -> arc:
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener -> ard:
    void onConnected() -> a
    void onDisconnected() -> b
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener -> are:
    void onConnectionFailed(int,android.content.Intent) -> a
com.google.analytics.tracking.android.AnalyticsStore -> arf:
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    void clearHits(long) -> a
    void dispatch() -> a
com.google.analytics.tracking.android.AnalyticsStoreStateListener -> arg:
    void reportStoreIsEmpty(boolean) -> a
com.google.analytics.tracking.android.AnalyticsThread -> arh:
    void sendHit(java.util.Map) -> a
    void dispatch() -> a
    void requestAppOptOut(com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback) -> a
    void requestClientId(com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback) -> a
    java.util.concurrent.LinkedBlockingQueue getQueue() -> b
    java.lang.Thread getThread() -> c
com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback -> ari:
    void reportClientId(java.lang.String) -> a
com.google.analytics.tracking.android.CampaignTrackingReceiver -> com.google.analytics.tracking.android.CampaignTrackingReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.analytics.tracking.android.CampaignTrackingService -> com.google.analytics.tracking.android.CampaignTrackingService:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
com.google.analytics.tracking.android.Clock -> arj:
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.Dispatcher -> ark:
    int dispatchHits(java.util.List) -> a
    boolean okToDispatch() -> a
com.google.analytics.tracking.android.ExceptionParser -> arl:
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> a
com.google.analytics.tracking.android.FutureApis -> arm:
    int version() -> a
    boolean setOwnerOnlyReadWrite(java.lang.String) -> a
com.google.analytics.tracking.android.GANetworkReceiver -> arn:
    com.google.analytics.tracking.android.ServiceManager mManager -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.analytics.tracking.android.GAServiceManager -> aro:
    java.lang.Object MSG_OBJECT -> a
    android.content.Context ctx -> b
    com.google.analytics.tracking.android.AnalyticsStore store -> c
    com.google.analytics.tracking.android.AnalyticsThread thread -> d
    int dispatchPeriodInSeconds -> e
    boolean pendingDispatch -> f
    boolean connected -> g
    boolean listenForNetwork -> h
    com.google.analytics.tracking.android.AnalyticsStoreStateListener listener -> i
    android.os.Handler handler -> j
    com.google.analytics.tracking.android.GANetworkReceiver networkReceiver -> k
    boolean storeIsEmpty -> l
    com.google.analytics.tracking.android.GAServiceManager instance -> m
    com.google.analytics.tracking.android.GAServiceManager getInstance() -> a
    void initializeNetworkReceiver() -> e
    void initializeHandler() -> f
    void initialize(android.content.Context,com.google.analytics.tracking.android.AnalyticsThread) -> a
    com.google.analytics.tracking.android.AnalyticsStore getStore() -> b
    void dispatch() -> c
    void updatePowerSaveMode(boolean,boolean) -> a
    void updateConnectivityStatus(boolean) -> a
    boolean access$000(com.google.analytics.tracking.android.GAServiceManager) -> a
    java.lang.Object access$100() -> d
    int access$200(com.google.analytics.tracking.android.GAServiceManager) -> b
    boolean access$300(com.google.analytics.tracking.android.GAServiceManager) -> c
    android.os.Handler access$400(com.google.analytics.tracking.android.GAServiceManager) -> d
com.google.analytics.tracking.android.GAServiceManager$1 -> arp:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    void reportStoreIsEmpty(boolean) -> a
com.google.analytics.tracking.android.GAServiceManager$2 -> arq:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.google.analytics.tracking.android.GAServiceProxy -> arr:
    long lastRequestTime -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState state -> b
    com.google.analytics.tracking.android.AnalyticsClient client -> c
    com.google.analytics.tracking.android.AnalyticsStore store -> d
    com.google.analytics.tracking.android.AnalyticsStore testStore -> e
    com.google.analytics.tracking.android.AnalyticsThread thread -> f
    android.content.Context ctx -> g
    java.util.Queue queue -> h
    int connectTries -> i
    java.util.Timer reConnectTimer -> j
    java.util.Timer failedConnectTimer -> k
    java.util.Timer disconnectCheckTimer -> l
    boolean pendingDispatch -> m
    boolean pendingClearHits -> n
    com.google.analytics.tracking.android.Clock clock -> o
    long idleTimeout -> p
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void dispatch() -> c
    void clearHits() -> d
    java.util.Timer cancelTimer(java.util.Timer) -> a
    void clearAllTimers() -> f
    void createService() -> e
    void sendQueue() -> g
    void dispatchToStore() -> h
    void useStore() -> i
    void connectToService() -> j
    void disconnectFromService() -> k
    void onConnected() -> a
    void onDisconnected() -> b
    void onConnectionFailed(int,android.content.Intent) -> a
    void fireReconnectAttempt() -> l
    void access$000(com.google.analytics.tracking.android.GAServiceProxy) -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState access$400(com.google.analytics.tracking.android.GAServiceProxy) -> b
    void access$500(com.google.analytics.tracking.android.GAServiceProxy) -> c
    void access$600(com.google.analytics.tracking.android.GAServiceProxy) -> d
    java.util.Queue access$700(com.google.analytics.tracking.android.GAServiceProxy) -> e
    long access$800(com.google.analytics.tracking.android.GAServiceProxy) -> f
    long access$900(com.google.analytics.tracking.android.GAServiceProxy) -> g
    com.google.analytics.tracking.android.Clock access$1000(com.google.analytics.tracking.android.GAServiceProxy) -> h
    void access$1100(com.google.analytics.tracking.android.GAServiceProxy) -> i
    java.util.Timer access$1200(com.google.analytics.tracking.android.GAServiceProxy) -> j
com.google.analytics.tracking.android.GAServiceProxy$1 -> ars:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.GAServiceProxy$2 -> art:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$3 -> aru:
    int[] $SwitchMap$com$google$analytics$tracking$android$GAServiceProxy$ConnectState -> a
com.google.analytics.tracking.android.GAServiceProxy$ConnectState -> arv:
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTING -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_SERVICE -> b
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_LOCAL -> c
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState BLOCKED -> d
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_CONNECTION -> e
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_DISCONNECT -> f
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState DISCONNECTED -> g
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] $VALUES -> h
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] values() -> values
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GAServiceProxy$DisconnectCheckTask -> arw:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$FailedConnectTask -> arx:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$HitParams -> ary:
    java.util.Map wireFormatParams -> a
    long hitTimeInMilliseconds -> b
    java.lang.String path -> c
    java.util.List commands -> d
    java.util.Map getWireFormatParams() -> a
    long getHitTimeInMilliseconds() -> b
    java.lang.String getPath() -> c
    java.util.List getCommands() -> d
com.google.analytics.tracking.android.GAServiceProxy$ReconnectTask -> arz:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAThread -> asa:
    java.util.concurrent.LinkedBlockingQueue queue -> a
    boolean mDisabled -> b
    boolean mClosed -> c
    boolean mAppOptOut -> d
    java.util.List mCommands -> e
    com.google.analytics.tracking.android.MetaModel mMetaModel -> f
    java.lang.String mInstallCampaign -> g
    java.lang.String mClientId -> h
    com.google.analytics.tracking.android.GAThread sInstance -> i
    com.google.analytics.tracking.android.ServiceProxy mServiceProxy -> j
    android.content.Context mContext -> k
    com.google.analytics.tracking.android.GAThread getInstance(android.content.Context) -> a
    void init() -> e
    void sendHit(java.util.Map) -> a
    java.lang.String getHostUrl(java.util.Map) -> b
    void fillExceptionParameters(java.util.Map) -> c
    boolean isSampledOut(java.util.Map) -> d
    void fillAppParameters(java.util.Map) -> e
    void putIfAbsent(java.util.Map,java.lang.String,java.lang.String) -> a
    void fillCampaignParameters(java.util.Map) -> f
    void dispatch() -> a
    void requestAppOptOut(com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback) -> a
    void requestClientId(com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback) -> a
    void queueToThread(java.lang.Runnable) -> a
    boolean loadAppOptOut() -> f
    boolean storeClientId(java.lang.String) -> a
    java.lang.String generateClientId() -> g
    java.lang.String initializeClientId() -> d
    java.lang.String getAndClearCampaign(android.content.Context) -> b
    java.lang.String printStackTrace(java.lang.Throwable) -> a
    void run() -> run
    java.util.concurrent.LinkedBlockingQueue getQueue() -> b
    java.lang.Thread getThread() -> c
    java.lang.String access$000(com.google.analytics.tracking.android.GAThread) -> a
    boolean access$100(com.google.analytics.tracking.android.GAThread) -> b
    boolean access$200(com.google.analytics.tracking.android.GAThread,java.util.Map) -> a
    java.lang.String access$300(com.google.analytics.tracking.android.GAThread) -> c
    java.lang.String access$302(com.google.analytics.tracking.android.GAThread,java.lang.String) -> a
    void access$400(com.google.analytics.tracking.android.GAThread,java.util.Map) -> b
    void access$500(com.google.analytics.tracking.android.GAThread,java.util.Map) -> c
    void access$600(com.google.analytics.tracking.android.GAThread,java.util.Map) -> d
    com.google.analytics.tracking.android.MetaModel access$700(com.google.analytics.tracking.android.GAThread) -> d
    java.lang.String access$800(com.google.analytics.tracking.android.GAThread,java.util.Map) -> e
    java.util.List access$900(com.google.analytics.tracking.android.GAThread) -> e
    com.google.analytics.tracking.android.ServiceProxy access$1000(com.google.analytics.tracking.android.GAThread) -> f
com.google.analytics.tracking.android.GAThread$1 -> asb:
    java.util.Map val$hitCopy -> a
    long val$hitTime -> b
    com.google.analytics.tracking.android.GAThread this$0 -> c
    void run() -> run
com.google.analytics.tracking.android.GAThread$2 -> asc:
    com.google.analytics.tracking.android.GAThread this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAThread$4 -> asd:
    com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback val$callback -> a
    com.google.analytics.tracking.android.GAThread this$0 -> b
    void run() -> run
com.google.analytics.tracking.android.GAThread$5 -> ase:
    com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback val$callback -> a
    com.google.analytics.tracking.android.GAThread this$0 -> b
    void run() -> run
com.google.analytics.tracking.android.GAUsage -> asf:
    java.util.SortedSet mUsedFields -> a
    java.lang.StringBuilder mSequence -> b
    boolean mDisableUsage -> c
    com.google.analytics.tracking.android.GAUsage INSTANCE -> d
    com.google.analytics.tracking.android.GAUsage getInstance() -> a
    void setDisableUsage(boolean) -> a
    void setUsage(com.google.analytics.tracking.android.GAUsage$Field) -> a
    java.lang.String getAndClearUsage() -> b
    java.lang.String getAndClearSequence() -> c
com.google.analytics.tracking.android.GAUsage$Field -> asg:
    com.google.analytics.tracking.android.GAUsage$Field TRACK_VIEW -> a
    com.google.analytics.tracking.android.GAUsage$Field TRACK_VIEW_WITH_APPSCREEN -> b
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EVENT -> c
    com.google.analytics.tracking.android.GAUsage$Field TRACK_TRANSACTION -> d
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EXCEPTION_WITH_DESCRIPTION -> e
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EXCEPTION_WITH_THROWABLE -> f
    com.google.analytics.tracking.android.GAUsage$Field BLANK_06 -> g
    com.google.analytics.tracking.android.GAUsage$Field TRACK_TIMING -> h
    com.google.analytics.tracking.android.GAUsage$Field TRACK_SOCIAL -> i
    com.google.analytics.tracking.android.GAUsage$Field GET -> j
    com.google.analytics.tracking.android.GAUsage$Field SET -> k
    com.google.analytics.tracking.android.GAUsage$Field SEND -> l
    com.google.analytics.tracking.android.GAUsage$Field SET_START_SESSION -> m
    com.google.analytics.tracking.android.GAUsage$Field BLANK_13 -> n
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_NAME -> o
    com.google.analytics.tracking.android.GAUsage$Field BLANK_15 -> p
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_VERSION -> q
    com.google.analytics.tracking.android.GAUsage$Field BLANK_17 -> r
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_SCREEN -> s
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKING_ID -> t
    com.google.analytics.tracking.android.GAUsage$Field SET_ANONYMIZE_IP -> u
    com.google.analytics.tracking.android.GAUsage$Field GET_ANONYMIZE_IP -> v
    com.google.analytics.tracking.android.GAUsage$Field SET_SAMPLE_RATE -> w
    com.google.analytics.tracking.android.GAUsage$Field GET_SAMPLE_RATE -> x
    com.google.analytics.tracking.android.GAUsage$Field SET_USE_SECURE -> y
    com.google.analytics.tracking.android.GAUsage$Field GET_USE_SECURE -> z
    com.google.analytics.tracking.android.GAUsage$Field SET_REFERRER -> A
    com.google.analytics.tracking.android.GAUsage$Field SET_CAMPAIGN -> B
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_ID -> C
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_ID -> D
    com.google.analytics.tracking.android.GAUsage$Field SET_EXCEPTION_PARSER -> E
    com.google.analytics.tracking.android.GAUsage$Field GET_EXCEPTION_PARSER -> F
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TRANSACTION -> G
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EXCEPTION -> H
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_RAW_EXCEPTION -> I
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TIMING -> J
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_SOCIAL -> K
    com.google.analytics.tracking.android.GAUsage$Field SET_DEBUG -> L
    com.google.analytics.tracking.android.GAUsage$Field GET_DEBUG -> M
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKER -> N
    com.google.analytics.tracking.android.GAUsage$Field GET_DEFAULT_TRACKER -> O
    com.google.analytics.tracking.android.GAUsage$Field SET_DEFAULT_TRACKER -> P
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_OPT_OUT -> Q
    com.google.analytics.tracking.android.GAUsage$Field REQUEST_APP_OPT_OUT -> R
    com.google.analytics.tracking.android.GAUsage$Field DISPATCH -> S
    com.google.analytics.tracking.android.GAUsage$Field SET_DISPATCH_PERIOD -> T
    com.google.analytics.tracking.android.GAUsage$Field BLANK_48 -> U
    com.google.analytics.tracking.android.GAUsage$Field REPORT_UNCAUGHT_EXCEPTIONS -> V
    com.google.analytics.tracking.android.GAUsage$Field SET_AUTO_ACTIVITY_TRACKING -> W
    com.google.analytics.tracking.android.GAUsage$Field SET_SESSION_TIMEOUT -> X
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EVENT -> Y
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_ITEM -> Z
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_INSTALLER_ID -> aa
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_INSTALLER_ID -> ab
    com.google.analytics.tracking.android.GAUsage$Field[] $VALUES -> ac
    com.google.analytics.tracking.android.GAUsage$Field[] values() -> values
    com.google.analytics.tracking.android.GAUsage$Field valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GoogleAnalytics -> ash:
    com.google.analytics.tracking.android.AnalyticsThread mThread -> a
    android.content.Context mContext -> b
    com.google.analytics.tracking.android.Tracker mDefaultTracker -> c
    com.google.analytics.tracking.android.AdHitIdGenerator mAdHitIdGenerator -> d
    java.lang.String mClientId -> e
    java.lang.Boolean mAppOptOut -> f
    java.util.Map mTrackers -> g
    java.lang.String mLastTrackingId -> h
    com.google.analytics.tracking.android.GoogleAnalytics sInstance -> i
    com.google.analytics.tracking.android.GoogleAnalytics getInstance(android.content.Context) -> a
    com.google.analytics.tracking.android.Tracker getTracker(java.lang.String) -> a
    void sendHit(java.util.Map) -> a
    java.lang.Boolean access$002(com.google.analytics.tracking.android.GoogleAnalytics,java.lang.Boolean) -> a
    java.lang.String access$102(com.google.analytics.tracking.android.GoogleAnalytics,java.lang.String) -> a
com.google.analytics.tracking.android.GoogleAnalytics$1 -> asi:
    com.google.analytics.tracking.android.GoogleAnalytics this$0 -> a
    void reportAppOptOut(boolean) -> a
com.google.analytics.tracking.android.GoogleAnalytics$2 -> asj:
    com.google.analytics.tracking.android.GoogleAnalytics this$0 -> a
    void reportClientId(java.lang.String) -> a
com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback -> ask:
    void reportAppOptOut(boolean) -> a
com.google.analytics.tracking.android.Hit -> asl:
    java.lang.String mHitString -> a
    long mHitId -> b
    long mHitTime -> c
    java.lang.String mHitUrl -> d
    java.lang.String getHitParams() -> a
    void setHitString(java.lang.String) -> a
    long getHitId() -> b
    long getHitTime() -> c
    java.lang.String getHitUrl() -> d
    void setHitUrl(java.lang.String) -> b
com.google.analytics.tracking.android.HitBuilder -> asm:
    java.util.Map generateHitParams(com.google.analytics.tracking.android.MetaModel,java.util.Map) -> a
    java.lang.String postProcessHit(com.google.analytics.tracking.android.Hit,long) -> a
    java.lang.String encode(java.lang.String) -> a
com.google.analytics.tracking.android.HttpClientFactory -> asn:
    org.apache.http.client.HttpClient newInstance() -> a
com.google.analytics.tracking.android.Log -> aso:
    boolean sDebug -> a
    boolean isDebugEnabled() -> a
    int d(java.lang.String) -> a
    int dDebug(java.lang.String) -> b
    int e(java.lang.String) -> c
    int i(java.lang.String) -> d
    int iDebug(java.lang.String) -> e
    int v(java.lang.String) -> f
    int vDebug(java.lang.String) -> g
    int w(java.lang.String) -> h
    int wDebug(java.lang.String) -> i
    java.lang.String formatMessage(java.lang.String) -> j
com.google.analytics.tracking.android.MetaModel -> asp:
    java.util.Map mMetaInfos -> a
    com.google.analytics.tracking.android.MetaModel$MetaInfo getMetaInfo(java.lang.String) -> a
    void addField(java.lang.String,java.lang.String,java.lang.String,com.google.analytics.tracking.android.MetaModel$Formatter) -> a
com.google.analytics.tracking.android.MetaModel$Formatter -> asq:
    java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.MetaModel$MetaInfo -> asr:
    java.lang.String mUrlParam -> a
    java.lang.String mDefaultValue -> b
    com.google.analytics.tracking.android.MetaModel$Formatter mFormatter -> c
    java.lang.String getUrlParam(java.lang.String) -> a
    java.lang.String getDefaultValue() -> a
    com.google.analytics.tracking.android.MetaModel$Formatter getFormatter() -> b
com.google.analytics.tracking.android.MetaModelInitializer -> ass:
    com.google.analytics.tracking.android.MetaModel$Formatter BOOLEAN_FORMATTER -> a
    com.google.analytics.tracking.android.MetaModel$Formatter UP_TO_TWO_DIGIT_FLOAT_FORMATTER -> b
    void set(com.google.analytics.tracking.android.MetaModel) -> a
com.google.analytics.tracking.android.MetaModelInitializer$1 -> ast:
    java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.MetaModelInitializer$2 -> asu:
    java.text.DecimalFormat mFloatFormat -> a
    java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.PersistentAnalyticsStore -> asv:
    java.lang.String CREATE_HITS_TABLE -> a
    com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper mDbHelper -> b
    com.google.analytics.tracking.android.Dispatcher mDispatcher -> c
    com.google.analytics.tracking.android.AnalyticsStoreStateListener mListener -> d
    android.content.Context mContext -> e
    java.lang.String mDatabaseName -> f
    long mLastDeleteStaleHitsTime -> g
    com.google.analytics.tracking.android.Clock mClock -> h
    com.google.analytics.tracking.android.HttpClientFactory createDefaultHttpClientFactory() -> e
    void clearHits(long) -> a
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    void fillVersionParametersIfNecessary(java.util.Map,java.util.Collection) -> a
    void storeVersion(java.util.Map,java.lang.String,java.lang.String) -> a
    void removeOldHitIfFull() -> f
    void writeHitToDatabase(java.util.Map,long,java.lang.String) -> a
    java.lang.String generateHitString(java.util.Map) -> a
    java.util.List peekHits(int) -> a
    int deleteStaleHits() -> b
    void deleteHits(java.util.Collection) -> a
    int getNumStoredHits() -> c
    void dispatch() -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase(java.lang.String) -> a
    com.google.analytics.tracking.android.Clock access$000(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> a
    java.lang.String access$100(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> b
    android.content.Context access$200(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> c
    java.lang.String access$300() -> d
com.google.analytics.tracking.android.PersistentAnalyticsStore$1 -> asw:
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.PersistentAnalyticsStore$2 -> asx:
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    org.apache.http.client.HttpClient newInstance() -> a
com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper -> asy:
    boolean mBadDatabase -> b
    long mLastDatabaseCheckTime -> c
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    boolean tablePresent(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void validateColumnsPresent(android.database.sqlite.SQLiteDatabase) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.google.analytics.tracking.android.ServiceManager -> asz:
    void updateConnectivityStatus(boolean) -> a
com.google.analytics.tracking.android.ServiceProxy -> ata:
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void dispatch() -> c
    void createService() -> e
com.google.analytics.tracking.android.SimpleNetworkDispatcher -> atb:
    java.lang.String userAgent -> a
    com.google.analytics.tracking.android.HttpClientFactory httpClientFactory -> b
    android.content.Context ctx -> c
    boolean okToDispatch() -> a
    int dispatchHits(java.util.List) -> a
    org.apache.http.HttpEntityEnclosingRequest buildRequest(java.lang.String,java.lang.String) -> a
    void logDebugInformation(boolean,org.apache.http.HttpEntityEnclosingRequest) -> a
    java.lang.String createUserAgentString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.net.URL getUrl(com.google.analytics.tracking.android.Hit) -> a
com.google.analytics.tracking.android.StandardExceptionParser -> atc:
    java.util.TreeSet includedPackages -> a
    void setIncludedPackages(android.content.Context,java.util.Collection) -> a
    java.lang.Throwable getCause(java.lang.Throwable) -> a
    java.lang.StackTraceElement getBestStackTraceElement(java.lang.Throwable) -> b
    java.lang.String getDescription(java.lang.Throwable,java.lang.StackTraceElement,java.lang.String) -> a
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> a
com.google.analytics.tracking.android.Tracker -> atd:
    java.text.DecimalFormat DF -> a
    com.google.analytics.tracking.android.TrackerHandler mHandler -> b
    com.google.analytics.tracking.android.Tracker$SimpleModel mModel -> c
    boolean mIsTrackerClosed -> d
    boolean mIsTrackingStarted -> e
    long mTokens -> f
    long mLastTrackTime -> g
    boolean mIsThrottlingEnabled -> h
    void assertTrackerOpen() -> b
    void sendView(java.lang.String) -> a
    void sendEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> a
    void sendTransaction(com.google.analytics.tracking.android.Transaction) -> a
    void sendTiming(java.lang.String,long,java.lang.String,java.lang.String) -> a
    void sendSocial(java.lang.String,java.lang.String,java.lang.String) -> a
    void internalSend(java.lang.String,java.util.Map) -> a
    void setAnonymizeIp(boolean) -> a
    void setCampaign(java.lang.String) -> b
    java.util.Map constructEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> b
    java.lang.String microsToCurrencyString(long) -> a
    java.util.Map constructTransaction(com.google.analytics.tracking.android.Transaction) -> b
    java.util.Map constructItem(com.google.analytics.tracking.android.Transaction$Item,com.google.analytics.tracking.android.Transaction) -> a
    java.util.Map constructTiming(java.lang.String,long,java.lang.String,java.lang.String) -> b
    java.util.Map constructSocial(java.lang.String,java.lang.String,java.lang.String) -> b
    boolean tokensAvailable() -> a
com.google.analytics.tracking.android.Tracker$1 -> ate:
com.google.analytics.tracking.android.Tracker$SimpleModel -> atf:
    java.util.Map temporaryMap -> a
    java.util.Map permanentMap -> b
    void setForNextHit(java.lang.String,java.lang.String) -> a
    void set(java.lang.String,java.lang.String) -> b
    void clearTemporaryValues() -> a
    void setAll(java.util.Map,java.lang.Boolean) -> a
    java.util.Map getKeysAndValues() -> b
com.google.analytics.tracking.android.TrackerHandler -> atg:
    void sendHit(java.util.Map) -> a
com.google.analytics.tracking.android.Transaction -> ath:
    java.lang.String mTransactionId -> a
    java.lang.String mAffiliation -> b
    long mTotalCostInMicros -> c
    long mTotalTaxInMicros -> d
    long mShippingCostInMicros -> e
    java.lang.String mCurrencyCode -> f
    java.util.Map mItems -> g
    java.lang.String getTransactionId() -> a
    java.lang.String getAffiliation() -> b
    long getTotalCostInMicros() -> c
    long getTotalTaxInMicros() -> d
    long getShippingCostInMicros() -> e
    java.lang.String getCurrencyCode() -> f
    void addItem(com.google.analytics.tracking.android.Transaction$Item) -> a
    java.util.List getItems() -> g
com.google.analytics.tracking.android.Transaction$1 -> ati:
com.google.analytics.tracking.android.Transaction$Builder -> atj:
    java.lang.String mTransactionId -> a
    java.lang.String mAffiliation -> b
    long mTotalCostInMicros -> c
    long mTotalTaxInMicros -> d
    long mShippingCostInMicros -> e
    java.lang.String mCurrencyCode -> f
    com.google.analytics.tracking.android.Transaction$Builder setCurrencyCode(java.lang.String) -> a
    com.google.analytics.tracking.android.Transaction build() -> a
    java.lang.String access$000(com.google.analytics.tracking.android.Transaction$Builder) -> a
    long access$100(com.google.analytics.tracking.android.Transaction$Builder) -> b
    java.lang.String access$200(com.google.analytics.tracking.android.Transaction$Builder) -> c
    long access$300(com.google.analytics.tracking.android.Transaction$Builder) -> d
    long access$400(com.google.analytics.tracking.android.Transaction$Builder) -> e
    java.lang.String access$500(com.google.analytics.tracking.android.Transaction$Builder) -> f
com.google.analytics.tracking.android.Transaction$Item -> atk:
    java.lang.String mSKU -> a
    java.lang.String mName -> b
    java.lang.String mCategory -> c
    long mPriceInMicros -> d
    long mQuantity -> e
    java.lang.String getSKU() -> a
    java.lang.String getName() -> b
    java.lang.String getCategory() -> c
    long getPriceInMicros() -> d
    long getQuantity() -> e
com.google.analytics.tracking.android.Transaction$Item$Builder -> atl:
    java.lang.String mSKU -> a
    long mPriceInMicros -> b
    long mQuantity -> c
    java.lang.String mName -> d
    java.lang.String mCategory -> e
    com.google.analytics.tracking.android.Transaction$Item$Builder setProductCategory(java.lang.String) -> a
    com.google.analytics.tracking.android.Transaction$Item build() -> a
    java.lang.String access$700(com.google.analytics.tracking.android.Transaction$Item$Builder) -> a
    long access$800(com.google.analytics.tracking.android.Transaction$Item$Builder) -> b
    long access$900(com.google.analytics.tracking.android.Transaction$Item$Builder) -> c
    java.lang.String access$1000(com.google.analytics.tracking.android.Transaction$Item$Builder) -> d
    java.lang.String access$1100(com.google.analytics.tracking.android.Transaction$Item$Builder) -> e
com.google.analytics.tracking.android.Utils -> atm:
    char[] HEXBYTES -> a
    java.util.Map parseURLParameters(java.lang.String) -> a
    double safeParseDouble(java.lang.String) -> b
    boolean safeParseBoolean(java.lang.String) -> c
    java.lang.String filterCampaign(java.lang.String) -> d
    java.lang.String getLanguage(java.util.Locale) -> a
    int fromHexDigit(char) -> a
    byte[] hexDecode(java.lang.String) -> e
com.google.android.gms.analytics.internal.Command -> com.google.android.gms.analytics.internal.Command:
    java.lang.String id -> a
    java.lang.String urlParam -> b
    java.lang.String value -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> a
    java.lang.String getUrlParam() -> b
    java.lang.String getValue() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> a
com.google.android.gms.analytics.internal.Command$1 -> atn:
    com.google.android.gms.analytics.internal.Command createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.analytics.internal.Command[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.analytics.internal.IAnalyticsService -> ato:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
com.google.android.gms.analytics.internal.IAnalyticsService$Stub -> atp:
    com.google.android.gms.analytics.internal.IAnalyticsService asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.analytics.internal.IAnalyticsService$Stub$Proxy -> atq:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
com.mixpanel.android.mpmetrics.AnalyticsMessages -> atr:
    java.util.concurrent.atomic.AtomicBoolean mLogMixpanelMessages -> a
    com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker mWorker -> b
    android.content.Context mContext -> c
    int ENQUEUE_PEOPLE -> d
    int ENQUEUE_EVENTS -> e
    int FLUSH_QUEUE -> f
    int SET_FLUSH_INTERVAL -> g
    int KILL_WORKER -> h
    int SET_ENDPOINT_HOST -> i
    int SET_FALLBACK_HOST -> j
    java.util.Map sInstances -> k
    com.mixpanel.android.mpmetrics.AnalyticsMessages getInstance(android.content.Context) -> a
    void eventsMessage(org.json.JSONObject) -> a
    void peopleMessage(org.json.JSONObject) -> b
    void postToServer() -> a
    com.mixpanel.android.mpmetrics.MPDbAdapter makeDbAdapter(android.content.Context) -> b
    com.mixpanel.android.mpmetrics.HttpPoster getPoster(java.lang.String,java.lang.String) -> a
    void logAboutMessageToMixpanel(java.lang.String) -> a
    void access$000(com.mixpanel.android.mpmetrics.AnalyticsMessages,java.lang.String) -> a
    android.content.Context access$100(com.mixpanel.android.mpmetrics.AnalyticsMessages) -> a
    int access$200() -> b
    int access$400() -> c
    int access$500() -> d
    int access$600() -> e
    int access$700() -> f
    int access$800() -> g
    int access$1000() -> h
com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker -> ats:
    java.lang.Object mHandlerLock -> b
    android.os.Handler mHandler -> c
    long mFlushInterval -> d
    long mFlushCount -> e
    long mAveFlushFrequency -> f
    long mLastFlushTime -> g
    com.mixpanel.android.mpmetrics.AnalyticsMessages this$0 -> a
    boolean isDead() -> a
    void runMessage(android.os.Message) -> a
    android.os.Handler restartWorkerThread() -> b
    void updateFlushFrequency() -> c
    long access$302(com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker,long) -> a
    void access$900(com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker) -> a
    java.lang.Object access$1100(com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker) -> b
    android.os.Handler access$1202(com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker,android.os.Handler) -> a
    long access$300(com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker) -> c
com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$1 -> att:
    java.util.concurrent.SynchronousQueue val$handlerQueue -> a
    com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker this$1 -> b
    void run() -> run
com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler -> atu:
    java.lang.String mEndpointHost -> b
    java.lang.String mFallbackHost -> c
    com.mixpanel.android.mpmetrics.MPDbAdapter mDbAdapter -> d
    com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void sendAllData() -> a
    void sendData(com.mixpanel.android.mpmetrics.MPDbAdapter$Table,java.lang.String) -> a
com.mixpanel.android.mpmetrics.GCMReceiver -> com.mixpanel.android.mpmetrics.GCMReceiver:
    java.lang.String LOGTAG -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void handleRegistrationIntent(android.content.Intent) -> a
    void handleNotificationIntent(android.content.Context,android.content.Intent) -> a
com.mixpanel.android.mpmetrics.GCMReceiver$1 -> atv:
    java.lang.String val$registration -> a
    com.mixpanel.android.mpmetrics.GCMReceiver this$0 -> b
    void process(com.mixpanel.android.mpmetrics.MixpanelAPI) -> a
com.mixpanel.android.mpmetrics.GCMReceiver$2 -> atw:
    com.mixpanel.android.mpmetrics.GCMReceiver this$0 -> a
    void process(com.mixpanel.android.mpmetrics.MixpanelAPI) -> a
com.mixpanel.android.mpmetrics.HttpPoster -> atx:
    java.lang.String mDefaultHost -> a
    java.lang.String mFallbackHost -> b
    com.mixpanel.android.mpmetrics.HttpPoster$PostResult postData(java.lang.String,java.lang.String) -> a
    com.mixpanel.android.mpmetrics.HttpPoster$PostResult postHttpRequest(java.lang.String,java.util.List) -> a
com.mixpanel.android.mpmetrics.HttpPoster$PostResult -> aty:
    com.mixpanel.android.mpmetrics.HttpPoster$PostResult SUCCEEDED -> a
    com.mixpanel.android.mpmetrics.HttpPoster$PostResult FAILED_RECOVERABLE -> b
    com.mixpanel.android.mpmetrics.HttpPoster$PostResult FAILED_UNRECOVERABLE -> c
    com.mixpanel.android.mpmetrics.HttpPoster$PostResult[] $VALUES -> d
    com.mixpanel.android.mpmetrics.HttpPoster$PostResult[] values() -> values
    com.mixpanel.android.mpmetrics.HttpPoster$PostResult valueOf(java.lang.String) -> valueOf
com.mixpanel.android.mpmetrics.MPDbAdapter -> atz:
    java.lang.String CREATE_EVENTS_TABLE -> a
    java.lang.String CREATE_PEOPLE_TABLE -> b
    java.lang.String EVENTS_TIME_INDEX -> c
    java.lang.String PEOPLE_TIME_INDEX -> d
    com.mixpanel.android.mpmetrics.MPDbAdapter$MPDatabaseHelper mDb -> e
    int addJSON(org.json.JSONObject,com.mixpanel.android.mpmetrics.MPDbAdapter$Table) -> a
    void cleanupEvents(java.lang.String,com.mixpanel.android.mpmetrics.MPDbAdapter$Table) -> a
    void cleanupEvents(long,com.mixpanel.android.mpmetrics.MPDbAdapter$Table) -> a
    void deleteDB() -> a
    java.lang.String[] generateDataString(com.mixpanel.android.mpmetrics.MPDbAdapter$Table) -> a
    java.lang.String access$000() -> b
    java.lang.String access$100() -> c
    java.lang.String access$200() -> d
    java.lang.String access$300() -> e
com.mixpanel.android.mpmetrics.MPDbAdapter$MPDatabaseHelper -> aua:
    java.io.File mDatabaseFile -> a
    void deleteDatabase() -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.mixpanel.android.mpmetrics.MPDbAdapter$Table -> aub:
    com.mixpanel.android.mpmetrics.MPDbAdapter$Table EVENTS -> a
    com.mixpanel.android.mpmetrics.MPDbAdapter$Table PEOPLE -> b
    java.lang.String mTableName -> c
    com.mixpanel.android.mpmetrics.MPDbAdapter$Table[] $VALUES -> d
    com.mixpanel.android.mpmetrics.MPDbAdapter$Table[] values() -> values
    com.mixpanel.android.mpmetrics.MPDbAdapter$Table valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> a
com.mixpanel.android.mpmetrics.MixpanelAPI -> auc:
    java.text.DateFormat ENGAGE_DATE_FORMAT -> a
    java.util.Map sInstanceMap -> b
    android.content.Context mContext -> c
    com.mixpanel.android.mpmetrics.SystemInformation mSystemInformation -> d
    com.mixpanel.android.mpmetrics.AnalyticsMessages mMessages -> e
    java.lang.String mToken -> f
    com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl mPeople -> g
    android.content.SharedPreferences mStoredPreferences -> h
    org.json.JSONObject mSuperProperties -> i
    java.lang.String mEventsDistinctId -> j
    java.lang.String mPeopleDistinctId -> k
    com.mixpanel.android.mpmetrics.WaitingPeopleRecord mWaitingPeopleRecord -> l
    com.mixpanel.android.mpmetrics.MixpanelAPI getInstance(android.content.Context,java.lang.String) -> a
    void identify(java.lang.String) -> a
    void track(java.lang.String,org.json.JSONObject) -> a
    void flush() -> a
    java.lang.String getDistinctId() -> b
    void registerSuperProperties(org.json.JSONObject) -> a
    void unregisterSuperProperty(java.lang.String) -> b
    void registerSuperPropertiesOnce(org.json.JSONObject) -> b
    com.mixpanel.android.mpmetrics.MixpanelAPI$People getPeople() -> c
    void allInstances(com.mixpanel.android.mpmetrics.MixpanelAPI$InstanceProcessor) -> a
    com.mixpanel.android.mpmetrics.AnalyticsMessages getAnalyticsMessages() -> d
    com.mixpanel.android.mpmetrics.SystemInformation getSystemInformation() -> e
    org.json.JSONObject getDefaultEventProperties() -> g
    void pushWaitingPeopleRecord() -> h
    void readSuperProperties() -> i
    void storeSuperProperties() -> j
    void readIdentities() -> k
    void writeIdentities() -> l
    java.lang.String access$102(com.mixpanel.android.mpmetrics.MixpanelAPI,java.lang.String) -> a
    void access$200(com.mixpanel.android.mpmetrics.MixpanelAPI) -> a
    com.mixpanel.android.mpmetrics.WaitingPeopleRecord access$300(com.mixpanel.android.mpmetrics.MixpanelAPI) -> b
    void access$400(com.mixpanel.android.mpmetrics.MixpanelAPI) -> c
    java.lang.String access$100(com.mixpanel.android.mpmetrics.MixpanelAPI) -> d
    com.mixpanel.android.mpmetrics.WaitingPeopleRecord access$302(com.mixpanel.android.mpmetrics.MixpanelAPI,com.mixpanel.android.mpmetrics.WaitingPeopleRecord) -> a
    com.mixpanel.android.mpmetrics.AnalyticsMessages access$500(com.mixpanel.android.mpmetrics.MixpanelAPI) -> e
    java.text.DateFormat access$600() -> f
    android.content.SharedPreferences access$700(com.mixpanel.android.mpmetrics.MixpanelAPI) -> f
    java.lang.String access$900(com.mixpanel.android.mpmetrics.MixpanelAPI) -> g
com.mixpanel.android.mpmetrics.MixpanelAPI$1 -> aud:
com.mixpanel.android.mpmetrics.MixpanelAPI$InstanceProcessor -> aue:
    void process(com.mixpanel.android.mpmetrics.MixpanelAPI) -> a
com.mixpanel.android.mpmetrics.MixpanelAPI$People -> auf:
    void identify(java.lang.String) -> a
    void set(java.lang.String,java.lang.Object) -> a
    void set(org.json.JSONObject) -> a
    void increment(java.lang.String,double) -> a
    void increment(java.util.Map) -> a
    void append(java.lang.String,java.lang.Object) -> b
    void trackCharge(double,org.json.JSONObject) -> a
    void setPushRegistrationId(java.lang.String) -> b
    void clearPushRegistrationId() -> a
com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl -> aug:
    com.mixpanel.android.mpmetrics.MixpanelAPI this$0 -> a
    void identify(java.lang.String) -> a
    void set(org.json.JSONObject) -> a
    void set(java.lang.String,java.lang.Object) -> a
    void increment(java.util.Map) -> a
    void increment(java.lang.String,double) -> a
    void append(java.lang.String,java.lang.Object) -> b
    void append(org.json.JSONObject) -> b
    void trackCharge(double,org.json.JSONObject) -> a
    void setPushRegistrationId(java.lang.String) -> b
    void clearPushRegistrationId() -> a
    org.json.JSONObject stdPeopleMessage(java.lang.String,org.json.JSONObject) -> a
com.mixpanel.android.mpmetrics.SystemInformation -> auh:
    android.content.Context mContext -> a
    java.lang.Boolean mHasNFC -> b
    java.lang.Boolean mHasTelephony -> c
    android.util.DisplayMetrics mDisplayMetrics -> d
    java.lang.String mAppVersionName -> e
    java.lang.Integer mAppVersionCode -> f
    java.lang.String getAppVersionName() -> a
    boolean hasNFC() -> b
    boolean hasTelephony() -> c
    android.util.DisplayMetrics getDisplayMetrics() -> d
    java.lang.String getCurrentNetworkOperator() -> e
    java.lang.Boolean isWifiConnected() -> f
com.mixpanel.android.mpmetrics.WaitingPeopleRecord -> aui:
    org.json.JSONObject mSets -> a
    java.util.Map mAdds -> b
    java.util.List mAppends -> c
    void setOnWaitingPeopleRecord(org.json.JSONObject) -> a
    void incrementToWaitingPeopleRecord(java.util.Map) -> a
    void appendToWaitingPeopleRecord(org.json.JSONObject) -> b
    void readFromJSONString(java.lang.String) -> a
    java.lang.String toJSONString() -> a
    org.json.JSONObject setMessage() -> b
    java.util.Map incrementMessage() -> c
    java.util.List appendMessages() -> d
com.mixpanel.android.util.Base64Coder -> auj:
    char[] map1 -> a
    byte[] map2 -> b
    java.lang.String encodeString(java.lang.String) -> a
    char[] encode(byte[]) -> a
    char[] encode(byte[],int) -> a
com.mixpanel.android.util.StringUtils -> auk:
    java.lang.String inputStreamToString(java.io.InputStream) -> a
com.shouldit.proxy.lib.APLConstants -> aul:
com.shouldit.proxy.lib.APLConstants$CheckStatusValues -> aum:
    com.shouldit.proxy.lib.APLConstants$CheckStatusValues NOT_CHECKED -> a
    com.shouldit.proxy.lib.APLConstants$CheckStatusValues CHECKING -> b
    com.shouldit.proxy.lib.APLConstants$CheckStatusValues CHECKED -> c
    com.shouldit.proxy.lib.APLConstants$CheckStatusValues[] ENUM$VALUES -> d
    com.shouldit.proxy.lib.APLConstants$CheckStatusValues[] values() -> values
    com.shouldit.proxy.lib.APLConstants$CheckStatusValues valueOf(java.lang.String) -> valueOf
com.shouldit.proxy.lib.APLConstants$ProxyStatusProperties -> aun:
    com.shouldit.proxy.lib.APLConstants$ProxyStatusProperties PROXY_ENABLED -> a
    com.shouldit.proxy.lib.APLConstants$ProxyStatusProperties PROXY_VALID_ADDRESS -> b
    com.shouldit.proxy.lib.APLConstants$ProxyStatusProperties PROXY_REACHABLE -> c
    com.shouldit.proxy.lib.APLConstants$ProxyStatusProperties WEB_REACHABLE -> d
    com.shouldit.proxy.lib.APLConstants$ProxyStatusProperties[] ENUM$VALUES -> e
    com.shouldit.proxy.lib.APLConstants$ProxyStatusProperties[] values() -> values
    com.shouldit.proxy.lib.APLConstants$ProxyStatusProperties valueOf(java.lang.String) -> valueOf
com.shouldit.proxy.lib.AccessPoint -> auo:
    int[] STATE_SECURED -> a
    int[] STATE_NONE -> b
    java.lang.String ssid -> c
    java.lang.String bssid -> d
    int security -> e
    int networkId -> f
    boolean wpsAvailable -> g
    com.shouldit.proxy.lib.AccessPoint$PskType pskType -> h
    android.net.wifi.WifiConfiguration wifiConfig -> i
    int mRssi -> j
    android.net.wifi.WifiInfo mInfo -> k
    int getSecurity(android.net.wifi.WifiConfiguration) -> a
    void loadConfig(android.net.wifi.WifiConfiguration) -> b
    int compareTo(com.shouldit.proxy.lib.AccessPoint) -> a
    java.lang.String removeDoubleQuotes(java.lang.String) -> a
    int compareTo(java.lang.Object) -> compareTo
com.shouldit.proxy.lib.AccessPoint$PskType -> aup:
    com.shouldit.proxy.lib.AccessPoint$PskType UNKNOWN -> a
    com.shouldit.proxy.lib.AccessPoint$PskType WPA -> b
    com.shouldit.proxy.lib.AccessPoint$PskType WPA2 -> c
    com.shouldit.proxy.lib.AccessPoint$PskType WPA_WPA2 -> d
    com.shouldit.proxy.lib.AccessPoint$PskType[] ENUM$VALUES -> e
    com.shouldit.proxy.lib.AccessPoint$PskType[] values() -> values
    com.shouldit.proxy.lib.AccessPoint$PskType valueOf(java.lang.String) -> valueOf
com.shouldit.proxy.lib.LogWrapper -> auq:
    int mLogLevel -> a
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
com.shouldit.proxy.lib.ProxyConfiguration -> aur:
    android.content.Context context -> a
    com.shouldit.proxy.lib.ProxyStatus status -> b
    com.shouldit.proxy.lib.AccessPoint ap -> c
    android.net.NetworkInfo currentNetworkInfo -> d
    java.net.Proxy proxyHost -> i
    java.lang.String proxyDescription -> e
    java.lang.String proxyExclusionList -> f
    com.shouldit.proxy.lib.reflection.android.RProxySettings proxyToggle -> j
    int deviceVersion -> g
    int DEFAULT_TIMEOUT -> h
    java.net.Proxy getProxyHost() -> a
    java.lang.String toString() -> toString
    java.lang.Boolean isCurrentNetwork() -> b
    java.net.Proxy$Type getProxyType() -> c
    boolean isProxyValidAddress() -> i
    java.lang.Boolean isProxyReachable() -> j
    java.lang.Boolean isWebReachable(int) -> a
    java.lang.String getProxyHostString() -> d
    java.lang.String getProxyIPHost() -> e
    java.lang.Integer getProxyPort() -> f
    int compareTo(com.shouldit.proxy.lib.ProxyConfiguration) -> a
    java.lang.String getSSID() -> g
    boolean isValidConfiguration() -> h
    int compareTo(java.lang.Object) -> compareTo
com.shouldit.proxy.lib.ProxySettings -> aus:
    com.shouldit.proxy.lib.ProxyConfiguration getCurrentProxyConfiguration(android.content.Context,java.net.URI) -> a
    com.shouldit.proxy.lib.ProxyConfiguration getProxySelectorConfiguration(android.content.Context,java.net.URI) -> b
    com.shouldit.proxy.lib.ProxyConfiguration getCurrentHttpProxyConfiguration(android.content.Context) -> a
    com.shouldit.proxy.lib.ProxyConfiguration getGlobalProxy(android.content.Context) -> b
com.shouldit.proxy.lib.ProxyStatus -> aut:
    java.util.Map properties -> a
    void clear() -> a
com.shouldit.proxy.lib.ProxyStatusProperty -> auu:
    com.shouldit.proxy.lib.APLConstants$ProxyStatusProperties propertyName -> a
    com.shouldit.proxy.lib.APLConstants$CheckStatusValues status -> b
    java.lang.Boolean result -> c
com.shouldit.proxy.lib.ProxyUtils -> auv:
    boolean isHostReachable(java.net.Proxy) -> a
    int testHTTPConnection(java.net.URI,com.shouldit.proxy.lib.ProxyConfiguration,int) -> a
    boolean isWebReachable(com.shouldit.proxy.lib.ProxyConfiguration,int) -> a
    void setWebViewProxy(android.content.Context,com.shouldit.proxy.lib.ProxyConfiguration) -> a
    void resetProxy(android.content.Context) -> a
    boolean setProxy(android.content.Context,java.lang.String,int) -> a
    java.lang.Object GetNetworkInstance(android.content.Context) -> b
    java.lang.Object getRequestQueue(android.content.Context) -> c
    java.lang.Object getDeclaredField(java.lang.Object,java.lang.String) -> a
    void setDeclaredField(java.lang.Object,java.lang.String,java.lang.Object) -> a
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> a
com.shouldit.proxy.lib.R -> auw:
com.shouldit.proxy.lib.R$attr -> aux:
    int state_encrypted -> state_encrypted
com.shouldit.proxy.lib.reflection.android.RProxySettings -> auy:
    com.shouldit.proxy.lib.reflection.android.RProxySettings NONE -> a
    com.shouldit.proxy.lib.reflection.android.RProxySettings STATIC -> b
    com.shouldit.proxy.lib.reflection.android.RProxySettings UNASSIGNED -> c
    com.shouldit.proxy.lib.reflection.android.RProxySettings[] ENUM$VALUES -> d
    com.shouldit.proxy.lib.reflection.android.RProxySettings[] values() -> values
    com.shouldit.proxy.lib.reflection.android.RProxySettings valueOf(java.lang.String) -> valueOf
com.slidingmenu.lib.CustomViewAbove -> com.slidingmenu.lib.CustomViewAbove:
    android.view.animation.Interpolator sInterpolator -> e
    android.view.View mContent -> f
    int mCurItem -> g
    android.widget.Scroller mScroller -> h
    boolean mScrollingCacheEnabled -> i
    boolean mScrolling -> j
    boolean mIsBeingDragged -> k
    boolean mIsUnableToDrag -> l
    int mTouchSlop -> m
    float mInitialMotionX -> n
    float mLastMotionX -> o
    float mLastMotionY -> p
    int mActivePointerId -> a
    android.view.VelocityTracker mVelocityTracker -> b
    int mMinimumVelocity -> q
    int mMaximumVelocity -> c
    int mFlingDistance -> r
    com.slidingmenu.lib.CustomViewBehind mViewBehind -> s
    boolean mEnabled -> t
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> u
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> v
    com.slidingmenu.lib.SlidingMenu$OnClosedListener mClosedListener -> w
    com.slidingmenu.lib.SlidingMenu$OnOpenedListener mOpenedListener -> x
    java.util.List mIgnoredViews -> y
    int mTouchMode -> d
    boolean mQuickReturn -> z
    float mScrollX -> A
    void initCustomViewAbove() -> a
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    int getDestScrollX(int) -> a
    int getLeftBound() -> getLeftBound
    int getRightBound() -> getRightBound
    int getContentLeft() -> getContentLeft
    boolean isMenuOpen() -> b
    boolean isInIgnoredView(android.view.MotionEvent) -> a
    int getBehindWidth() -> getBehindWidth
    boolean isSlidingEnabled() -> c
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int,int) -> a
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setCustomViewBehind(com.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> c
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> f
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> b
    boolean thisSlideAllowed(float) -> b
    int getPointerIndex(android.view.MotionEvent,int) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> c
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(float,int,int) -> a
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> d
    void startDrag() -> g
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> b
    boolean pageLeft() -> d
    boolean pageRight() -> e
    com.slidingmenu.lib.CustomViewBehind access$0(com.slidingmenu.lib.CustomViewAbove) -> a
com.slidingmenu.lib.CustomViewAbove$1 -> auz:
    float getInterpolation(float) -> getInterpolation
com.slidingmenu.lib.CustomViewAbove$2 -> ava:
    com.slidingmenu.lib.CustomViewAbove this$0 -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> avb:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> avc:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewBehind -> com.slidingmenu.lib.CustomViewBehind:
    int mTouchMode -> a
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    android.view.View mContent -> c
    android.view.View mSecondaryContent -> d
    int mMarginThreshold -> e
    int mWidthOffset -> f
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer mTransformer -> g
    boolean mChildrenEnabled -> h
    int mMode -> i
    boolean mFadeEnabled -> j
    android.graphics.Paint mFadePaint -> k
    float mScrollScale -> l
    android.graphics.drawable.Drawable mShadowDrawable -> m
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> n
    int mShadowWidth -> o
    float mFadeDegree -> p
    boolean mSelectorEnabled -> q
    android.graphics.Bitmap mSelectorDrawable -> r
    android.view.View mSelectedView -> s
    void setCustomViewAbove(com.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    void setWidthOffset(int) -> setWidthOffset
    void setMarginThreshold(int) -> setMarginThreshold
    int getMarginThreshold() -> getMarginThreshold
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> getSecondaryContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setScrollScale(float) -> setScrollScale
    float getScrollScale() -> getScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> a
    void scrollBehindTo(android.view.View,int,int) -> a
    int getMenuLeft(android.view.View,int) -> a
    int getAbsLeftBound(android.view.View) -> a
    int getAbsRightBound(android.view.View) -> b
    boolean marginTouchAllowed(android.view.View,int) -> b
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> a
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> b
    boolean menuClosedSlideAllowed(float) -> a
    boolean menuOpenSlideAllowed(float) -> b
    void drawShadow(android.view.View,android.graphics.Canvas) -> a
    void drawFade(android.view.View,android.graphics.Canvas,float) -> a
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> b
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> getSelectorTop
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.slidingmenu.lib.R -> avd:
com.slidingmenu.lib.R$id -> ave:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__titleDivider -> abs__titleDivider
    int abs__up -> abs__up
    int disableHome -> disableHome
    int edit_query -> edit_query
    int fullscreen -> fullscreen
    int homeAsUp -> homeAsUp
    int left -> left
    int listMode -> listMode
    int margin -> margin
    int normal -> normal
    int right -> right
    int selected_view -> selected_view
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int slidingmenumain -> slidingmenumain
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
com.slidingmenu.lib.R$layout -> avf:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__dialog_title_holo -> abs__dialog_title_holo
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int slidingmenumain -> slidingmenumain
com.slidingmenu.lib.R$styleable -> avg:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_android_windowIsFloating -> SherlockTheme_android_windowIsFloating
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.slidingmenu.lib.SlidingMenu -> com.slidingmenu.lib.SlidingMenu:
    boolean mActionbarOverlay -> a
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    com.slidingmenu.lib.CustomViewBehind mViewBehind -> c
    com.slidingmenu.lib.SlidingMenu$OnOpenListener mOpenListener -> d
    com.slidingmenu.lib.SlidingMenu$OnCloseListener mCloseListener -> e
    android.os.Handler mHandler -> f
    void attachToActivity(android.app.Activity,int) -> a
    void attachToActivity(android.app.Activity,int,boolean) -> a
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> getMenu
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> getSecondaryMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    boolean isSlidingEnabled() -> a
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setStatic(boolean) -> setStatic
    void showMenu(boolean) -> a
    void showSecondaryMenu(boolean) -> b
    void showContent() -> b
    void showContent(boolean) -> c
    boolean isMenuShowing() -> c
    boolean isSecondaryMenuShowing() -> d
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    float getBehindScrollScale() -> getBehindScrollScale
    int getTouchmodeMarginThreshold() -> getTouchmodeMarginThreshold
    void setTouchmodeMarginThreshold(int) -> setTouchmodeMarginThreshold
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setBehindCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void setOnOpenListener(com.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setOnCloseListener(com.slidingmenu.lib.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void manageLayers(float) -> a
    com.slidingmenu.lib.SlidingMenu$OnOpenListener access$0(com.slidingmenu.lib.SlidingMenu) -> a
    com.slidingmenu.lib.SlidingMenu$OnCloseListener access$1(com.slidingmenu.lib.SlidingMenu) -> b
com.slidingmenu.lib.SlidingMenu$1 -> avh:
    com.slidingmenu.lib.SlidingMenu this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.SlidingMenu$2 -> avi:
    com.slidingmenu.lib.SlidingMenu this$0 -> a
    int val$layerType -> b
    void run() -> run
com.slidingmenu.lib.SlidingMenu$CanvasTransformer -> avj:
    void transformCanvas(android.graphics.Canvas,float) -> a
com.slidingmenu.lib.SlidingMenu$OnCloseListener -> avk:
    void onClose() -> a
com.slidingmenu.lib.SlidingMenu$OnClosedListener -> avl:
    void onClosed() -> a
com.slidingmenu.lib.SlidingMenu$OnOpenListener -> avm:
    void onOpen() -> a
com.slidingmenu.lib.SlidingMenu$OnOpenedListener -> avn:
    void onOpened() -> a
com.slidingmenu.lib.SlidingMenu$SavedState -> com.slidingmenu.lib.SlidingMenu$SavedState:
    int mItem -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.slidingmenu.lib.SlidingMenu$SavedState$1 -> avo:
    com.slidingmenu.lib.SlidingMenu$SavedState createFromParcel(android.os.Parcel) -> a
    com.slidingmenu.lib.SlidingMenu$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.slidingmenu.lib.app.SlidingActivity -> com.slidingmenu.lib.app.SlidingActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.slidingmenu.lib.app.SlidingActivityHelper -> avp:
    android.app.Activity mActivity -> a
    com.slidingmenu.lib.SlidingMenu mSlidingMenu -> b
    android.view.View mViewAbove -> c
    android.view.View mViewBehind -> d
    boolean mBroadcasting -> e
    boolean mOnPostCreateCalled -> f
    boolean mEnableSlide -> g
    void onCreate(android.os.Bundle) -> a
    void onPostCreate(android.os.Bundle) -> b
    android.view.View findViewById(int) -> a
    void onSaveInstanceState(android.os.Bundle) -> c
    void registerAboveContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void showContent() -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> a
    com.slidingmenu.lib.SlidingMenu access$0(com.slidingmenu.lib.app.SlidingActivityHelper) -> a
com.slidingmenu.lib.app.SlidingActivityHelper$1 -> avq:
    com.slidingmenu.lib.app.SlidingActivityHelper this$0 -> a
    boolean val$open -> b
    boolean val$secondary -> c
    void run() -> run
com.slidingmenu.lib.app.SlidingFragmentActivity -> com.slidingmenu.lib.app.SlidingFragmentActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> n
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.slidingmenu.lib.app.SlidingListActivity -> com.slidingmenu.lib.app.SlidingListActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.slidingmenu.lib.app.SlidingPreferenceActivity -> com.slidingmenu.lib.app.SlidingPreferenceActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.urbanairship.AirshipConfigOptions -> avr:
    java.lang.String productionAppKey -> a
    java.lang.String productionAppSecret -> b
    java.lang.String developmentAppKey -> c
    java.lang.String developmentAppSecret -> d
    java.lang.String hostURL -> e
    java.lang.String analyticsServer -> f
    java.lang.String gcmSender -> g
    java.lang.String transport -> h
    boolean inProduction -> i
    boolean pushServiceEnabled -> j
    boolean richPushEnabled -> k
    boolean analyticsEnabled -> l
    com.urbanairship.LocationOptions locationOptions -> m
    int developmentLogLevel -> n
    int productionLogLevel -> o
    int minSdkVersion -> p
    com.urbanairship.AirshipConfigOptions loadDefaultOptions(android.content.Context) -> a
    com.urbanairship.AirshipConfigOptions$TransportType getTransport() -> a
    java.lang.String getAppKey() -> b
    java.lang.String getAppSecret() -> c
    int getLoggerLevel() -> d
    boolean isValid() -> e
    boolean isLogLevelValid(int) -> a
    java.lang.String getDefaultPropertiesFilename() -> f
com.urbanairship.AirshipConfigOptions$TransportType -> avs:
    com.urbanairship.AirshipConfigOptions$TransportType HELIUM -> a
    com.urbanairship.AirshipConfigOptions$TransportType GCM -> b
    com.urbanairship.AirshipConfigOptions$TransportType HYBRID -> c
    com.urbanairship.AirshipConfigOptions$TransportType[] $VALUES -> d
    com.urbanairship.AirshipConfigOptions$TransportType[] values() -> values
    com.urbanairship.AirshipConfigOptions$TransportType valueOf(java.lang.String) -> valueOf
com.urbanairship.Autopilot -> avt:
    void automaticTakeOff(android.app.Application) -> a
    void execute(android.app.Application) -> b
com.urbanairship.ConstantClass -> avu:
    java.lang.String name() -> a
com.urbanairship.CoreReceiver -> com.urbanairship.CoreReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.urbanairship.InternalOptions -> avv:
    boolean useTestCluster -> a
    void loadFromProperties(android.content.Context) -> a_
    com.urbanairship.InternalOptions loadDefaultOptions(android.content.Context) -> b
    java.lang.String getDefaultPropertiesFilename() -> f
com.urbanairship.LocationOptions -> avw:
    boolean locationServiceEnabled -> a
    boolean allowGPSForLocationTracking -> b
    int updateIntervalMeters -> c
    long updateIntervalSeconds -> d
    long backgroundReportingIntervalSeconds -> e
    int accuracy -> f
    int horizontalAccuracy -> g
    int powerRequirement -> h
    boolean altitudeRequired -> i
    boolean bearingRequired -> j
    boolean speedRequired -> k
    boolean costAllowed -> l
    boolean isValid() -> a
    boolean isAccuracyValid(int) -> a
    boolean isPowerReqValid() -> b
    void ensureUpdateIntervalValuesAreValid() -> c
    java.lang.String getDefaultPropertiesFilename() -> f
com.urbanairship.Logger -> avx:
    int logLevel -> a
    java.lang.String TAG -> b
    void warn(java.lang.String) -> a
    void verbose(java.lang.String) -> b
    void debug(java.lang.String) -> c
    void info(java.lang.String) -> d
    void error(java.lang.String) -> e
    void error(java.lang.Throwable) -> a
    void error(java.lang.String,java.lang.Throwable) -> a
com.urbanairship.Options -> avy:
    void loadFromProperties(android.content.Context) -> a_
    void loadFromProperties(android.content.Context,java.lang.String) -> a
    java.lang.String getDefaultPropertiesFilename() -> f
    int parseOptionValues(java.lang.reflect.Field,java.lang.String) -> a
    java.lang.String getPropertyValue(java.lang.reflect.Field,java.util.Properties) -> a
    void setPropertyValue(java.lang.reflect.Field,java.lang.String) -> b
com.urbanairship.Preferences -> avz:
    java.util.concurrent.ConcurrentMap prefsCache -> b
    com.urbanairship.PreferencesResolver resolver -> a
    void remove(java.lang.String) -> a
    void put(java.lang.String,java.lang.Object) -> a
    boolean getBoolean(java.lang.String,boolean) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    long getLong(java.lang.String,long) -> a
    int getInt(java.lang.String,int) -> a
    java.lang.String getPreference(java.lang.String) -> c
    java.lang.String getPreferenceFromDatabase(java.lang.String) -> d
    com.urbanairship.Preferences$Preference getPreferenceFromCache(java.lang.String) -> e
    void addPreferenceToCache(java.lang.String,java.lang.String) -> b
    void updatePreferenceInCache(java.lang.String,java.lang.String) -> c
    void removePreferenceFromCache(java.lang.String) -> f
    void putPreferenceIfDifferent(java.lang.String,java.lang.String) -> d
    void migratePreferencesFromFileToDb(java.lang.String) -> b
com.urbanairship.Preferences$Preference -> awa:
    boolean updated -> a
    java.lang.String key -> b
    java.lang.String value -> c
    com.urbanairship.Preferences$Preference$PreferencesObserver observer -> d
    com.urbanairship.Preferences this$0 -> e
    void registerObserver() -> a
    void unregisterObserver() -> b
    boolean isUpdated() -> c
    void updatePreference(java.lang.String) -> a
    boolean access$000(com.urbanairship.Preferences$Preference) -> a
    void access$100(com.urbanairship.Preferences$Preference,java.lang.String) -> a
    void access$200(com.urbanairship.Preferences$Preference) -> b
com.urbanairship.Preferences$Preference$PreferencesObserver -> awb:
    com.urbanairship.Preferences$Preference this$1 -> a
    void onChange(boolean) -> onChange
com.urbanairship.PreferencesDataManager -> awc:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void bindValuesToSqlLiteStatment(android.database.sqlite.SQLiteStatement,android.content.ContentValues) -> a
    android.database.sqlite.SQLiteStatement getInsertStatement(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
com.urbanairship.PreferencesResolver -> awd:
    android.database.Cursor get(java.lang.String) -> a
    android.net.Uri put(java.lang.String,java.lang.String) -> a
    int remove(java.lang.String) -> b
com.urbanairship.PropertyName -> awe:
    java.lang.String name() -> a
com.urbanairship.RichPushDataManager -> awf:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void bindValuesToSqlLiteStatment(android.database.sqlite.SQLiteStatement,android.content.ContentValues) -> a
    android.database.sqlite.SQLiteStatement getInsertStatement(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
com.urbanairship.UAirship -> awg:
    com.urbanairship.UAirship sharedAirship -> e
    android.content.Context applicationContext -> a
    com.urbanairship.AirshipConfigOptions airshipConfigOptions -> b
    com.urbanairship.analytics.Analytics analytics -> c
    boolean flying -> d
    com.urbanairship.UAirship shared() -> a
    void takeOff(android.app.Application,com.urbanairship.AirshipConfigOptions) -> a
    java.lang.String getPackageName() -> b
    android.content.pm.PackageManager getPackageManager() -> c
    android.content.pm.PackageInfo getPackageInfo() -> d
    android.content.pm.ApplicationInfo getAppInfo() -> e
    java.lang.String getAppName() -> f
    int getAppIcon() -> g
    android.content.Context getApplicationContext() -> h
    com.urbanairship.AirshipConfigOptions getAirshipConfigOptions() -> i
    boolean isFlying() -> j
    java.lang.String getVersion() -> k
    com.urbanairship.analytics.Analytics getAnalytics() -> l
    void checkManifest() -> m
    void checkRequiredPermission(java.lang.String) -> a
com.urbanairship.UrbanAirshipProvider -> com.urbanairship.UrbanAirshipProvider:
    android.content.UriMatcher MATCHER -> a
    com.urbanairship.UrbanAirshipProvider$DatabaseModel richPushModel -> b
    com.urbanairship.UrbanAirshipProvider$DatabaseModel preferencesModel -> c
    java.lang.String authorityString -> d
    void init() -> a
    android.net.Uri getRichPushContentUri() -> b
    android.net.Uri getPreferencesContentUri() -> c
    java.lang.String getAuthorityString() -> d
    boolean onCreate() -> onCreate
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String getType(android.net.Uri) -> getType
    int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    void shutdown() -> shutdown
    com.urbanairship.UrbanAirshipProvider$DatabaseModel getPreferencesModel() -> e
    com.urbanairship.UrbanAirshipProvider$DatabaseModel getRichPushModel() -> f
    java.lang.String[] getKeys(android.net.Uri) -> a
    com.urbanairship.UrbanAirshipProvider$DatabaseModel getDatabaseModel(android.net.Uri) -> b
com.urbanairship.UrbanAirshipProvider$DatabaseModel -> awh:
    com.urbanairship.util.DataManager dataManager -> a
    java.lang.String table -> b
    android.net.Uri contentUri -> c
    java.lang.String notificationColumnId -> d
    java.lang.String intentAction -> e
    com.urbanairship.UrbanAirshipProvider$DatabaseModel createRichPushModel(android.content.Context) -> a
    com.urbanairship.UrbanAirshipProvider$DatabaseModel createPreferencesModel(android.content.Context) -> b
    void notifyDatabaseChange(android.content.Context,java.lang.String[],java.lang.String) -> a
com.urbanairship.UrbanAirshipResolver -> awi:
    android.content.Context context -> a
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> a
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> a
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> a
    int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> a
    void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver) -> a
    void unregisterContentObserver(android.database.ContentObserver) -> a
    android.content.ContentResolver getResolver() -> a
com.urbanairship.analytics.ActivityMonitor -> awj:
    android.util.SparseArray activityStates -> a
    com.urbanairship.analytics.ActivityMonitor$Delegate delegate -> b
    boolean isForeground -> c
    int minSdkVersion -> d
    int currentSdkVersion -> e
    boolean analyticsEnabled -> f
    void activityStarted(android.app.Activity,com.urbanairship.analytics.ActivityMonitor$Source) -> a
    void activityStopped(android.app.Activity,com.urbanairship.analytics.ActivityMonitor$Source) -> b
    com.urbanairship.analytics.ActivityState getActivityState(android.app.Activity) -> a
    void updateForegroundState() -> a
com.urbanairship.analytics.ActivityMonitor$1 -> awk:
    com.urbanairship.analytics.ActivityMonitor this$0 -> a
    void run() -> run
com.urbanairship.analytics.ActivityMonitor$Delegate -> awl:
    void onForeground() -> a
    void onBackground() -> b
com.urbanairship.analytics.ActivityMonitor$Source -> awm:
    com.urbanairship.analytics.ActivityMonitor$Source MANUAL_INSTRUMENTATION -> a
    com.urbanairship.analytics.ActivityMonitor$Source AUTO_INSTRUMENTATION -> b
    com.urbanairship.analytics.ActivityMonitor$Source[] $VALUES -> c
    com.urbanairship.analytics.ActivityMonitor$Source[] values() -> values
    com.urbanairship.analytics.ActivityMonitor$Source valueOf(java.lang.String) -> valueOf
com.urbanairship.analytics.ActivityStartedEvent -> awn:
    java.lang.String className -> a
    java.lang.String getType() -> a
    org.json.JSONObject getData() -> b
com.urbanairship.analytics.ActivityState -> awo:
    com.urbanairship.analytics.ActivityState$State autoInstrumentedState -> a
    com.urbanairship.analytics.ActivityState$State manualInstrumentedState -> b
    java.lang.String activityName -> c
    int minSdkVersion -> d
    int currentSdkVersion -> e
    boolean analyticsEnabled -> f
    boolean isForeground() -> a
    void setStarted(com.urbanairship.analytics.ActivityMonitor$Source) -> a
    void setStopped(com.urbanairship.analytics.ActivityMonitor$Source) -> b
com.urbanairship.analytics.ActivityState$State -> awp:
    com.urbanairship.analytics.ActivityState$State STARTED -> a
    com.urbanairship.analytics.ActivityState$State STOPPED -> b
    com.urbanairship.analytics.ActivityState$State NONE -> c
    com.urbanairship.analytics.ActivityState$State[] $VALUES -> d
    com.urbanairship.analytics.ActivityState$State[] values() -> values
    com.urbanairship.analytics.ActivityState$State valueOf(java.lang.String) -> valueOf
com.urbanairship.analytics.ActivityStoppedEvent -> awq:
    java.lang.String className -> a
    java.lang.String getType() -> a
    org.json.JSONObject getData() -> b
com.urbanairship.analytics.Analytics -> awr:
    java.lang.String ACTION_APP_FOREGROUND -> a
    java.lang.String ACTION_APP_BACKGROUND -> b
    java.lang.String server -> c
    java.lang.String conversionPushId -> d
    com.urbanairship.analytics.Analytics$Session session -> e
    boolean inBackground -> f
    com.urbanairship.analytics.ActivityMonitor activityMonitor -> g
    com.urbanairship.analytics.EventDataManager dataManager -> h
    com.urbanairship.analytics.EventUploadManager uploadManager -> i
    boolean stickyBroadcastAllowed -> j
    boolean useLifeCycleCallbacks -> k
    int minSdkVersion -> l
    boolean analyticsEnabled -> m
    android.content.BroadcastReceiver appStateChangeReceiver -> n
    void registerLifeCycleCallbacks(android.app.Application) -> a
    void sendForegroundBroadcast() -> f
    void sendBackgroundBroadcast() -> g
    void activityStarted(android.app.Activity) -> a
    void activityStopped(android.app.Activity) -> b
    boolean isAppInForeground() -> a
    void addEvent(com.urbanairship.analytics.Event) -> a
    void setConversionPushId(java.lang.String) -> a
    java.lang.String getConversionPushId() -> b
    com.urbanairship.analytics.Analytics$Session getSession() -> c
    java.lang.String getHashedDeviceId() -> d
    void startUploadingIfNecessary() -> e
    com.urbanairship.analytics.Analytics$Session access$002(com.urbanairship.analytics.Analytics,com.urbanairship.analytics.Analytics$Session) -> a
    boolean access$102(com.urbanairship.analytics.Analytics,boolean) -> a
    void access$200(com.urbanairship.analytics.Analytics) -> a
    void access$300(com.urbanairship.analytics.Analytics) -> b
    java.lang.String access$402(com.urbanairship.analytics.Analytics,java.lang.String) -> a
    com.urbanairship.analytics.ActivityMonitor access$500(com.urbanairship.analytics.Analytics) -> c
    com.urbanairship.analytics.EventDataManager access$600(com.urbanairship.analytics.Analytics) -> d
    com.urbanairship.analytics.EventUploadManager access$700(com.urbanairship.analytics.Analytics) -> e
    boolean access$100(com.urbanairship.analytics.Analytics) -> f
com.urbanairship.analytics.Analytics$1 -> aws:
    com.urbanairship.analytics.Analytics this$0 -> a
    void onForeground() -> a
    void onBackground() -> b
com.urbanairship.analytics.Analytics$2 -> awt:
    com.urbanairship.analytics.Analytics this$0 -> a
    void onStop(android.app.Activity) -> a
    void onStart(android.app.Activity) -> b
com.urbanairship.analytics.Analytics$3 -> awu:
    com.urbanairship.analytics.Event val$event -> a
    com.urbanairship.analytics.Analytics this$0 -> b
    void run() -> run
com.urbanairship.analytics.Analytics$4 -> awv:
    com.urbanairship.analytics.Analytics this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.urbanairship.analytics.Analytics$AddEventTask -> aww:
    com.urbanairship.analytics.Analytics this$0 -> a
    java.lang.Void doInBackground(com.urbanairship.analytics.Event[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.urbanairship.analytics.Analytics$Session -> awx:
    java.lang.String id -> b
    com.urbanairship.analytics.Analytics this$0 -> a
    java.lang.String getId() -> a
com.urbanairship.analytics.AnalyticsPreferences -> awy:
    int getMaxTotalDbSize() -> a
    void setMaxTotalDbSize(int) -> a
    int getMaxBatchSize() -> b
    void setMaxBatchSize(int) -> b
    int getMaxWait() -> c
    void setMaxWait(int) -> c
    int getMinBatchInterval() -> d
    void setMinBatchInterval(int) -> d
    long getLastSendTime() -> e
    void setLastSendTime(long) -> a
com.urbanairship.analytics.AppBackgroundEvent -> awz:
    java.lang.String getType() -> a
    org.json.JSONObject getData() -> b
com.urbanairship.analytics.AppForegroundEvent -> axa:
    java.lang.String getType() -> a
    org.json.JSONObject getData() -> b
com.urbanairship.analytics.DefaultEnvironment -> axb:
    java.lang.String conversionPushId -> a
    java.lang.String sessionId -> b
    java.lang.String getConnectionType() -> a
    java.lang.String getConnectionSubType() -> b
    java.lang.String getCarrier() -> c
    java.lang.String getOsVersion() -> d
    java.lang.String getLibVersion() -> e
    java.lang.String getPackageVersion() -> f
    long getTimezone() -> g
    boolean isDaylightSavingsTime() -> h
    java.util.ArrayList getNotificationTypes() -> i
    java.lang.String getSessionId() -> j
    java.lang.String getConversionPushId() -> k
    java.lang.String getPushTransport() -> l
    java.lang.String getApid() -> m
    boolean isPushEnabled() -> n
    long getTimeMillis() -> o
    boolean isAppInForeground() -> p
    boolean isQuietTimeEnabled() -> q
    java.util.Date[] getQuietTimeInterval() -> r
com.urbanairship.analytics.Environment -> axc:
    java.lang.String getConnectionType() -> a
    java.lang.String getConnectionSubType() -> b
    java.lang.String getCarrier() -> c
    java.lang.String getOsVersion() -> d
    java.lang.String getLibVersion() -> e
    java.lang.String getPackageVersion() -> f
    long getTimezone() -> g
    boolean isDaylightSavingsTime() -> h
    java.util.ArrayList getNotificationTypes() -> i
    java.util.Date[] getQuietTimeInterval() -> r
    boolean isQuietTimeEnabled() -> q
    java.lang.String getSessionId() -> j
    java.lang.String getConversionPushId() -> k
    java.lang.String getPushTransport() -> l
    java.lang.String getApid() -> m
    boolean isPushEnabled() -> n
    long getTimeMillis() -> o
    boolean isAppInForeground() -> p
com.urbanairship.analytics.Event -> axd:
    java.lang.String eventId -> a
    java.lang.String sessionId -> b
    java.lang.String time -> c
    com.urbanairship.analytics.Environment environment -> d
    java.lang.String getEventId() -> c
    java.lang.String getTime() -> d
    void log() -> e
    com.urbanairship.analytics.Environment getEnvironment() -> f
    org.json.JSONObject jsonRepresentation() -> g
    java.lang.String getSessionId() -> h
    java.lang.String getType() -> a
    org.json.JSONObject getData() -> b
com.urbanairship.analytics.EventDataManager -> axe:
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void bindValuesToSqlLiteStatment(android.database.sqlite.SQLiteStatement,android.content.ContentValues) -> a
    android.database.sqlite.SQLiteStatement getInsertStatement(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
    int insertEvent(com.urbanairship.analytics.Event) -> a
    java.util.Map getEvents(int) -> a
    boolean deleteEventType(java.lang.String) -> a
    boolean deleteEvents(java.util.Set) -> a
    java.lang.String repeat(java.lang.String,int,java.lang.String) -> a
    boolean deleteSession(java.lang.String) -> b
    java.lang.String getOldestSessionId() -> a
    int getEventCount() -> b
    int getDatabaseSize() -> c
com.urbanairship.analytics.EventRequestFactory -> axf:
    com.urbanairship.restclient.Request createRequest(java.util.Collection) -> a
    org.apache.http.entity.AbstractHttpEntity createJSONEntity(byte[]) -> a
    void setHeaders(com.urbanairship.restclient.Request) -> a
    byte[] getJSONBody(java.util.Collection) -> b
com.urbanairship.analytics.EventService -> com.urbanairship.analytics.EventService:
    void onCreate() -> onCreate
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void startService() -> a
com.urbanairship.analytics.EventUploadManager -> axg:
    com.urbanairship.analytics.AnalyticsPreferences prefs -> a
    com.urbanairship.analytics.EventDataManager dataManager -> b
    int batchSize -> c
    int maxTotalDBSize -> d
    int maxBatchSize -> e
    int maxWait -> f
    int minBatchInterval -> g
    long lastSendTime -> h
    long backoffMs -> i
    long getLastSendTime() -> a
    boolean scheduleEventUpload(long) -> a
    void upload() -> b
    void loadPrefs() -> d
    void savePrefs() -> e
    boolean send(java.util.Collection) -> a
    void saveHeaders(com.urbanairship.restclient.Response) -> a
    int getMaxTotalDBSize() -> c
com.urbanairship.analytics.InstrumentedActivity -> com.urbanairship.analytics.InstrumentedActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
com.urbanairship.analytics.InstrumentedListActivity -> com.urbanairship.analytics.InstrumentedListActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
com.urbanairship.analytics.LifeCycleCallbacks -> axh:
    void registerCallback(android.app.Application,com.urbanairship.analytics.LifeCycleCallbacks$Callback) -> a
com.urbanairship.analytics.LifeCycleCallbacks$1 -> axi:
    com.urbanairship.analytics.LifeCycleCallbacks$Callback val$callback -> a
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityStopped(android.app.Activity) -> onActivityStopped
com.urbanairship.analytics.LifeCycleCallbacks$Callback -> axj:
    void onStart(android.app.Activity) -> b
    void onStop(android.app.Activity) -> a
com.urbanairship.analytics.LocationEvent -> axk:
    java.lang.String provider -> a
    java.lang.String latitude -> b
    java.lang.String longitude -> c
    java.lang.String accuracy -> d
    java.lang.String requestedAccuracy -> e
    java.lang.String updateDistance -> f
    java.lang.String foreground -> g
    com.urbanairship.analytics.LocationEvent$UpdateType updateType -> h
    java.lang.String getType() -> a
    org.json.JSONObject getData() -> b
    java.lang.String getValidProviderName(java.lang.String) -> a
com.urbanairship.analytics.LocationEvent$AllowableProvider -> axl:
    com.urbanairship.analytics.LocationEvent$AllowableProvider GPS -> a
    com.urbanairship.analytics.LocationEvent$AllowableProvider NETWORK -> b
    com.urbanairship.analytics.LocationEvent$AllowableProvider PASSIVE -> c
    com.urbanairship.analytics.LocationEvent$AllowableProvider UNKNOWN -> d
    com.urbanairship.analytics.LocationEvent$AllowableProvider[] $VALUES -> e
    com.urbanairship.analytics.LocationEvent$AllowableProvider[] values() -> values
    com.urbanairship.analytics.LocationEvent$AllowableProvider valueOf(java.lang.String) -> valueOf
com.urbanairship.analytics.LocationEvent$UpdateType -> axm:
    com.urbanairship.analytics.LocationEvent$UpdateType CONTINUOUS -> a
    com.urbanairship.analytics.LocationEvent$UpdateType SINGLE -> b
    com.urbanairship.analytics.LocationEvent$UpdateType CHANGE -> c
    com.urbanairship.analytics.LocationEvent$UpdateType[] $VALUES -> d
    com.urbanairship.analytics.LocationEvent$UpdateType[] values() -> values
    com.urbanairship.analytics.LocationEvent$UpdateType valueOf(java.lang.String) -> valueOf
com.urbanairship.analytics.PushArrivedEvent -> axn:
    java.lang.String pushId -> a
    java.lang.String getType() -> a
    org.json.JSONObject getData() -> b
com.urbanairship.analytics.PushPreferencesChangedEvent -> axo:
    java.lang.String getType() -> a
    org.json.JSONObject getData() -> b
com.urbanairship.analytics.PushServiceStartedEvent -> axp:
    java.lang.String getType() -> a
    org.json.JSONObject getData() -> b
com.urbanairship.location.ILocationService -> axq:
    android.location.Location getLocation() -> a
    void createLocationEvent(android.location.Location,int,int) -> a
    android.location.Criteria getCriteria() -> b
    void setCriteria(android.location.Criteria) -> a
    void resetProviders() -> c
    java.lang.String getCurrentProvider() -> d
    java.lang.String getBestProvider() -> e
    void requestSingleLocationUpdate(android.location.Criteria) -> b
com.urbanairship.location.ILocationService$Stub -> axr:
    com.urbanairship.location.ILocationService asInterface(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.urbanairship.location.ILocationService$Stub$Proxy -> axs:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    android.location.Location getLocation() -> a
    void createLocationEvent(android.location.Location,int,int) -> a
    android.location.Criteria getCriteria() -> b
    void setCriteria(android.location.Criteria) -> a
    void resetProviders() -> c
    java.lang.String getCurrentProvider() -> d
    java.lang.String getBestProvider() -> e
    void requestSingleLocationUpdate(android.location.Criteria) -> b
com.urbanairship.location.LastLocationFinder -> axt:
    android.location.LocationManager locationManager -> a
    android.location.Location getLastBestLocation(long) -> a
com.urbanairship.location.LocationPreferences -> axu:
    boolean isLocationEnabled() -> a
    boolean isBackgroundLocationEnabled() -> b
    boolean isForegroundLocationEnabled() -> c
com.urbanairship.location.LocationService -> com.urbanairship.location.LocationService:
    java.lang.String NETWORK_PROVIDER -> a
    android.content.Context context -> b
    android.location.Criteria criteria -> c
    com.urbanairship.location.LastLocationFinder lastLocationFinder -> d
    android.location.Location location -> e
    android.location.LocationManager locationManager -> f
    android.app.PendingIntent locationChangedPendingIntent -> g
    android.app.PendingIntent singleLocationChangedPendingIntent -> h
    com.urbanairship.location.LocationService$ProviderListener networkListener -> i
    com.urbanairship.location.LocationService$ProviderListener gpsListener -> j
    java.lang.String currentProvider -> k
    java.lang.String bestProvider -> l
    boolean started -> m
    boolean bound -> n
    com.urbanairship.location.ILocationService$Stub locationBinder -> o
    android.content.BroadcastReceiver locationChangedReceiver -> p
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    void createService() -> b
    void setupService() -> c
    void teardownService() -> d
    void initializeCriteria() -> e
    void setProviders() -> f
    void registerReceivers() -> g
    void invokeLastLocationFinder() -> h
    void initializeProviderListeners() -> i
    void createSingleLocationChangedPendingIntent(int) -> a
    void createLocationChangedPendingIntent() -> j
    void initializeLocationUpdates() -> k
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void requestLocationUpdates(java.lang.String,com.urbanairship.LocationOptions,com.urbanairship.location.LocationService$ProviderListener) -> a
    void requestLocationUpdates(java.lang.String,com.urbanairship.LocationOptions,android.app.PendingIntent) -> a
    boolean isProviderEnabled(java.lang.String) -> a
    boolean isProviderAvailable(java.lang.String) -> b
    com.urbanairship.location.LastLocationFinder access$000(com.urbanairship.location.LocationService) -> a
    android.content.Context access$100(com.urbanairship.location.LocationService) -> b
    java.lang.String access$300(com.urbanairship.location.LocationService) -> c
    void access$400(com.urbanairship.location.LocationService) -> d
    void access$500(com.urbanairship.location.LocationService) -> e
    java.lang.String access$600(com.urbanairship.location.LocationService) -> f
    java.lang.String access$302(com.urbanairship.location.LocationService,java.lang.String) -> a
    android.location.Location access$700(com.urbanairship.location.LocationService) -> g
    android.location.Location access$702(com.urbanairship.location.LocationService,android.location.Location) -> a
    android.location.Criteria access$800(com.urbanairship.location.LocationService) -> h
    android.location.Criteria access$802(com.urbanairship.location.LocationService,android.location.Criteria) -> a
    void access$900(com.urbanairship.location.LocationService) -> i
    boolean access$1000() -> a
    void access$1100(com.urbanairship.location.LocationService) -> j
    android.location.LocationManager access$1200(com.urbanairship.location.LocationService) -> k
    void access$1300(com.urbanairship.location.LocationService,int) -> a
    android.app.PendingIntent access$1400(com.urbanairship.location.LocationService) -> l
    void access$1500(com.urbanairship.location.LocationService) -> m
com.urbanairship.location.LocationService$1 -> axv:
    com.urbanairship.location.LocationService this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.urbanairship.location.LocationService$2 -> axw:
    com.urbanairship.location.LocationService this$0 -> a
    android.location.Location getLocation() -> a
    void createLocationEvent(android.location.Location,int,int) -> a
    android.location.Criteria getCriteria() -> b
    void setCriteria(android.location.Criteria) -> a
    void resetProviders() -> c
    java.lang.String getCurrentProvider() -> d
    java.lang.String getBestProvider() -> e
    void requestSingleLocationUpdate(android.location.Criteria) -> b
com.urbanairship.location.LocationService$3 -> axx:
    com.urbanairship.location.LocationService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.urbanairship.location.LocationService$ProviderListener -> axy:
    com.urbanairship.location.LocationService this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
com.urbanairship.location.UALocationManager -> axz:
    com.urbanairship.location.UALocationManager instance -> a
    boolean bound -> b
    android.content.Context context -> c
    com.urbanairship.location.ILocationService locationService -> d
    android.content.BroadcastReceiver appStateChangeReceiver -> e
    android.content.ServiceConnection locationConnection -> f
    com.urbanairship.location.LocationPreferences preferences -> g
    void init() -> a
    com.urbanairship.location.UALocationManager shared() -> b
    com.urbanairship.location.LocationPreferences getPreferences() -> c
    void startAndBindService() -> j
    void stopAndUnbindService() -> k
    void startService() -> l
    void stopService() -> m
    void bindService() -> d
    void unbindService() -> e
    java.lang.String getLocationIntentAction(java.lang.String) -> a
    com.urbanairship.location.UALocationManager access$000() -> f
    com.urbanairship.location.LocationPreferences access$100(com.urbanairship.location.UALocationManager) -> a
    void access$200() -> g
    void access$300() -> h
    com.urbanairship.location.ILocationService access$402(com.urbanairship.location.ILocationService) -> a
    boolean access$502(boolean) -> a
    android.content.Context access$600() -> i
com.urbanairship.location.UALocationManager$1 -> aya:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.urbanairship.location.UALocationManager$2 -> ayb:
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.urbanairship.preference.ApidPreference -> com.urbanairship.preference.ApidPreference:
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
com.urbanairship.preference.LocationBackgroundEnablePreference -> com.urbanairship.preference.LocationBackgroundEnablePreference:
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
com.urbanairship.preference.LocationEnablePreference -> com.urbanairship.preference.LocationEnablePreference:
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
com.urbanairship.preference.LocationForegroundEnablePreference -> com.urbanairship.preference.LocationForegroundEnablePreference:
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
com.urbanairship.preference.PushEnablePreference -> com.urbanairship.preference.PushEnablePreference:
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
com.urbanairship.preference.QuietTimeEnablePreference -> com.urbanairship.preference.QuietTimeEnablePreference:
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
com.urbanairship.preference.QuietTimeEndPreference -> com.urbanairship.preference.QuietTimeEndPreference:
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
    java.lang.String getSummary() -> b
    void onDialogClosed(boolean) -> onDialogClosed
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
com.urbanairship.preference.QuietTimePickerPreference -> com.urbanairship.preference.QuietTimePickerPreference:
    android.widget.TimePicker timePicker -> a
    long currentTime -> b
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
    android.view.View onCreateDialogView() -> onCreateDialogView
    void onDialogClosed(boolean) -> onDialogClosed
    java.lang.String getSummary() -> b
    java.util.Calendar getCalendar() -> c
    boolean shouldPersist() -> shouldPersist
    java.lang.CharSequence getSummary() -> getSummary
com.urbanairship.preference.QuietTimeStartPreference -> com.urbanairship.preference.QuietTimeStartPreference:
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
    java.lang.String getSummary() -> b
    void onDialogClosed(boolean) -> onDialogClosed
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
com.urbanairship.preference.SoundEnablePreference -> com.urbanairship.preference.SoundEnablePreference:
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
com.urbanairship.preference.UACheckBoxPreference -> com.urbanairship.preference.UACheckBoxPreference:
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
    boolean shouldPersist() -> shouldPersist
com.urbanairship.preference.UAPreference -> ayc:
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
com.urbanairship.preference.UAPreference$PreferenceType -> ayd:
    com.urbanairship.preference.UAPreference$PreferenceType PUSH_ENABLE -> a
    com.urbanairship.preference.UAPreference$PreferenceType SOUND_ENABLE -> b
    com.urbanairship.preference.UAPreference$PreferenceType VIBRATE_ENABLE -> c
    com.urbanairship.preference.UAPreference$PreferenceType QUIET_TIME_ENABLE -> d
    com.urbanairship.preference.UAPreference$PreferenceType QUIET_TIME_START -> e
    com.urbanairship.preference.UAPreference$PreferenceType QUIET_TIME_END -> f
    com.urbanairship.preference.UAPreference$PreferenceType LOCATION_ENABLE -> g
    com.urbanairship.preference.UAPreference$PreferenceType LOCATION_FOREGROUND_ENABLE -> h
    com.urbanairship.preference.UAPreference$PreferenceType LOCATION_BACKGROUND_ENABLE -> i
    com.urbanairship.preference.UAPreference$PreferenceType APID -> j
    com.urbanairship.preference.UAPreference$PreferenceType USER_ID -> k
    com.urbanairship.preference.UAPreference$PreferenceType[] $VALUES -> l
    com.urbanairship.preference.UAPreference$PreferenceType[] values() -> values
    com.urbanairship.preference.UAPreference$PreferenceType valueOf(java.lang.String) -> valueOf
com.urbanairship.preference.UserIdPreference -> com.urbanairship.preference.UserIdPreference:
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
com.urbanairship.preference.VibrateEnablePreference -> com.urbanairship.preference.VibrateEnablePreference:
    com.urbanairship.preference.UAPreference$PreferenceType getPreferenceType() -> a
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
com.urbanairship.push.BasicPushNotificationBuilder -> aye:
    int iconDrawableId -> a
    java.lang.String appName -> b
    int constantNotificationId -> c
    android.app.Notification buildNotification(java.lang.String,java.util.Map) -> a
    int getNextId(java.lang.String,java.util.Map) -> b
com.urbanairship.push.GCMMessageHandler -> ayf:
    void handleIntentMessage(android.content.Intent) -> a
com.urbanairship.push.GCMPushReceiver -> com.urbanairship.push.GCMPushReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.urbanairship.push.GCMRegistrar -> ayg:
    long backoffTime -> a
    void register() -> a
    void unregister() -> b
    void handleRegistrationIntent(android.content.Intent) -> a
    void retryRegistration() -> d
    void registrationFailed(java.lang.String) -> a
    boolean isNewAppOrDevice() -> e
    void validateManifest() -> c
    boolean isGCMAvailable() -> f
    boolean isPermissionKnown(java.lang.String) -> b
    void checkRequiredPermission(java.lang.String) -> c
    boolean startService(android.content.Intent) -> b
com.urbanairship.push.PushManager -> ayh:
    com.urbanairship.push.PushManager instance -> a
    com.urbanairship.push.PushNotificationBuilder notificationBuilder -> b
    java.lang.Class intentReceiver -> c
    com.urbanairship.push.PushPreferences preferences -> d
    boolean deviceTagsEnabled -> e
    java.util.HashSet canonicalIds -> f
    void init() -> a
    com.urbanairship.push.PushManager shared() -> b
    void startService() -> c
    void enablePush() -> d
    void disablePush() -> e
    void setNotificationBuilder(com.urbanairship.push.PushNotificationBuilder) -> a
    void setIntentReceiver(java.lang.Class) -> a
    com.urbanairship.push.PushNotificationBuilder getNotificationBuilder() -> f
    java.lang.Class getIntentReceiver() -> g
    com.urbanairship.push.PushPreferences getPreferences() -> h
    void sendRegistrationFinishedBroadcast(boolean) -> a
    void updateApidIfNecessary() -> i
    void updateApid() -> j
    void deleteApid(java.lang.String) -> a
    void setAlias(java.lang.String) -> b
    void setTags(java.util.Set) -> a
    java.lang.String getAPID() -> k
    void setGcmId(java.lang.String) -> c
    boolean getDeviceTagsEnabled() -> l
    void createPushArrivedEvent(java.lang.String) -> d
    boolean isCorrectApid(java.lang.String) -> e
    boolean isPushEnabled() -> n
    boolean isUniqueCanonicalId(java.lang.String) -> f
    void alertHostApplication(com.urbanairship.push.PushMessage,int) -> a
    void deliverPush(com.urbanairship.push.PushMessage) -> a
    void validateManifest() -> m
com.urbanairship.push.PushMessage -> ayi:
    java.lang.String alert -> a
    java.lang.String pushId -> b
    java.util.Map extras -> c
    java.lang.String pushApid -> d
    java.lang.String canonicalPushId -> e
    boolean isExpired() -> a
    boolean isPing() -> b
    java.lang.String getCanonicalPushId() -> c
    java.lang.String getPushApid() -> d
    java.util.Map getMessageExtras() -> e
    int buildAndDisplayNotification() -> f
    android.os.Bundle createMessageBundle() -> g
com.urbanairship.push.PushNotificationBuilder -> ayj:
    android.app.Notification buildNotification(java.lang.String,java.util.Map) -> a
    int getNextId(java.lang.String,java.util.Map) -> b
com.urbanairship.push.PushPreferences -> ayk:
    void sendPrefsChangedEvent() -> p
    boolean isPushEnabled() -> a
    void setPushEnabled(boolean) -> a
    boolean isSoundEnabled() -> b
    void setSoundEnabled(boolean) -> b
    boolean isVibrateEnabled() -> c
    void setVibrateEnabled(boolean) -> c
    boolean isAPIDReady() -> d
    void setAPIDReady(boolean) -> d
    java.lang.String getPushId() -> e
    boolean setPushId(java.lang.String) -> c
    boolean setPushSecret(java.lang.String) -> d
    boolean isQuietTimeEnabled() -> f
    boolean isInQuietTime() -> g
    java.util.Date[] getQuietTimeInterval() -> h
    java.lang.String getAlias() -> i
    void setAlias(java.lang.String) -> e
    java.util.Set getTags() -> j
    void setTags(java.util.Set) -> a
    java.lang.String getGcmId() -> k
    void setGcmId(java.lang.String) -> f
    void setApidUpdateNeeded(boolean) -> e
    boolean isApidUpdateNeeded() -> l
    void setAppVersionCode(int) -> a
    int getAppVersionCode() -> m
    void setDeviceId(java.lang.String) -> g
    java.lang.String getDeviceId() -> n
    long getLastApidRegistrationTime() -> o
    void setLastApidRegistrationTime(long) -> a
com.urbanairship.push.PushRegistrationBuilder -> ayl:
    com.urbanairship.push.PushRegistrationPayload buildWithCurrentPreferences() -> a
com.urbanairship.push.PushRegistrationPayload -> aym:
    java.lang.String alias -> a
    java.lang.String gcmRegistrationId -> b
    java.util.Set tags -> c
    org.json.JSONObject asJSON() -> a
com.urbanairship.push.PushService -> com.urbanairship.push.PushService:
    com.urbanairship.push.PushPreferences preferences -> a
    android.os.PowerManager$WakeLock wakeLock -> b
    void onCreate() -> onCreate
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void runGcmIntentInService(android.content.Context,android.content.Intent) -> a
    void scheduleAction(java.lang.String,java.lang.String) -> a
    void updateApid() -> a
    void deleteApid(java.lang.String) -> a
    void startPushService() -> b
com.urbanairship.push.embedded.BoxOfficeClient -> ayn:
    java.lang.String ANDROID_LIB_VERSION_PREFIX -> a
    java.lang.String generateApid() -> b
    java.lang.String generateOrRetrieveApid() -> c
    java.lang.String firstRun() -> a
    void setRequestHeaders(com.urbanairship.restclient.Request) -> a
    java.lang.String getHashedDeviceId(android.content.Context) -> a
com.urbanairship.push.embedded.BoxOfficeClient$BoxOfficeException -> ayo:
com.urbanairship.push.embedded.BoxOfficeClient$FatalBoxOfficeException -> ayp:
com.urbanairship.push.embedded.BoxOfficeClient$FirstRunForbiddenException -> ayq:
com.urbanairship.push.embedded.Config -> ayr:
com.urbanairship.push.embedded.Config$BoxOffice -> ays:
    java.lang.String url -> a
com.urbanairship.push.embedded.Network -> ayt:
    android.net.ConnectivityManager connMan() -> b
    android.net.NetworkInfo info() -> c
    boolean isConnected() -> a
com.urbanairship.restclient.AppAuthenticatedRequest -> ayu:
com.urbanairship.restclient.Request -> ayv:
    boolean verifySSLHostnames -> a
    java.lang.String method -> b
    org.apache.http.impl.client.DefaultHttpClient httpClient -> c
    void setUserAgent() -> b
    void setTimeout(int) -> a
    void setSocketBufferSize(int) -> b
    void setPreemptiveAuth(java.lang.String,java.lang.String) -> a
    java.lang.String getMethod() -> getMethod
    com.urbanairship.restclient.Response execute() -> a
com.urbanairship.restclient.Response -> ayw:
    org.apache.http.HttpResponse resp -> a
    java.lang.String body -> b
    int status() -> a
    org.apache.http.Header getFirstHeader(java.lang.String) -> a
    java.lang.String body() -> b
com.urbanairship.richpush.RichPushInbox -> ayx:
    com.urbanairship.richpush.RichPushInbox instance -> a
    com.urbanairship.richpush.RichPushInbox$SentAtRichPushMessageComparator richPushMessageComparator -> b
    java.util.List listeners -> c
    com.urbanairship.richpush.RichPushMessageCache messageCache -> d
    java.util.concurrent.ExecutorService executor -> e
    com.urbanairship.richpush.RichPushInbox shared() -> a
    com.urbanairship.richpush.RichPushMessage getMessage(java.lang.String) -> a
    void registerDatabaseChangeReceiver() -> b
    void buildCache() -> c
    void notifyListeners() -> d
    void access$000(com.urbanairship.richpush.RichPushInbox) -> a
    void access$100(com.urbanairship.richpush.RichPushInbox) -> b
    java.util.concurrent.ExecutorService access$200(com.urbanairship.richpush.RichPushInbox) -> c
com.urbanairship.richpush.RichPushInbox$1 -> ayy:
    com.urbanairship.richpush.RichPushInbox this$0 -> a
    void run() -> run
com.urbanairship.richpush.RichPushInbox$2 -> ayz:
    android.os.Handler val$handler -> a
    java.lang.Runnable val$notifyRunner -> b
    com.urbanairship.richpush.RichPushInbox this$0 -> c
    void run() -> run
com.urbanairship.richpush.RichPushInbox$3 -> aza:
    java.lang.Runnable val$updateRunner -> a
    com.urbanairship.richpush.RichPushInbox this$0 -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.urbanairship.richpush.RichPushInbox$Listener -> azb:
    void onUpdateInbox() -> a
com.urbanairship.richpush.RichPushInbox$SentAtRichPushMessageComparator -> azc:
    int compare(com.urbanairship.richpush.RichPushMessage,com.urbanairship.richpush.RichPushMessage) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.urbanairship.richpush.RichPushManager -> com.urbanairship.richpush.RichPushManager:
    com.urbanairship.richpush.RichPushManager instance -> d
    java.lang.Class jsInterface -> e
    java.lang.String jsIdentifier -> f
    com.urbanairship.richpush.RichPushUser user -> g
    com.urbanairship.richpush.RichPushManager$UpdateResultReceiver updateMessagesResultReceiver -> h
    com.urbanairship.richpush.RichPushManager$UpdateResultReceiver updateUserResultReceiver -> a
    com.urbanairship.richpush.RichPushManager$UpdateResultReceiver retrieveMessageResultReceiver -> b
    boolean isRefreshingMessages -> i
    com.urbanairship.richpush.RichPushResolver resolver -> c
    java.util.Vector listeners -> j
    com.urbanairship.richpush.RichPushManager shared() -> a
    com.urbanairship.richpush.RichPushUser getRichPushUser() -> b
    void init() -> c
    void retrieveRichPushMessage(java.util.Map) -> a
    void updateUser() -> d
    void updateUserIfNecessary() -> e
    void retrieveMessage(java.lang.String) -> a
    void startUpdateService(java.lang.String,android.os.Bundle) -> a
    boolean isRichPushMessage(java.util.Map) -> b
    boolean access$002(com.urbanairship.richpush.RichPushManager,boolean) -> a
    java.util.Vector access$100(com.urbanairship.richpush.RichPushManager) -> a
    com.urbanairship.richpush.RichPushManager access$200() -> f
    com.urbanairship.richpush.RichPushUser access$300(com.urbanairship.richpush.RichPushManager) -> b
com.urbanairship.richpush.RichPushManager$1 -> com.urbanairship.richpush.RichPushManager$1:
    com.urbanairship.richpush.RichPushManager this$0 -> a
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.urbanairship.richpush.RichPushManager$2 -> com.urbanairship.richpush.RichPushManager$2:
    com.urbanairship.richpush.RichPushManager this$0 -> a
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.urbanairship.richpush.RichPushManager$3 -> com.urbanairship.richpush.RichPushManager$3:
    com.urbanairship.richpush.RichPushManager this$0 -> a
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.urbanairship.richpush.RichPushManager$Listener -> azd:
    void onUpdateMessages(boolean) -> a
    void onUpdateUser(boolean) -> b
    void onRetrieveMessage(boolean,java.lang.String) -> a
com.urbanairship.richpush.RichPushManager$UpdateResultReceiver -> com.urbanairship.richpush.RichPushManager$UpdateResultReceiver:
    com.urbanairship.richpush.RichPushManager this$0 -> b
com.urbanairship.richpush.RichPushMessage -> aze:
    java.text.SimpleDateFormat UA_DATE_FORMATTER -> a
    boolean deleted -> b
    boolean unread -> c
    android.os.Bundle extras -> d
    long sentMS -> e
    java.lang.Integer databaseId -> f
    java.lang.String messageId -> g
    java.lang.String messageUrl -> h
    java.lang.String messageBodyUrl -> i
    java.lang.String messageReadUrl -> j
    java.lang.String title -> k
    com.urbanairship.richpush.RichPushMessage messageFromCursor(android.database.Cursor) -> a
    com.urbanairship.richpush.RichPushMessage messageFromJson(java.lang.String,org.json.JSONObject) -> a
    android.content.ContentValues contentValuesFromJson(java.lang.String,org.json.JSONObject) -> b
    long getMillisecondsFromTimeStamp(java.lang.String) -> a
    java.lang.String getTimeStampFromMS(long) -> a
    android.os.Bundle jsonToBundle(org.json.JSONObject) -> a
    org.json.JSONObject bundleToJson(android.os.Bundle) -> a
    android.content.ContentValues toContentValues() -> a
    java.lang.String getMessageId() -> b
    java.lang.String getTitle() -> c
    boolean isRead() -> d
    java.util.Date getSentDate() -> e
    long getSentDateMS() -> f
    void markRead() -> g
    void markUnread() -> h
    int compareTo(com.urbanairship.richpush.RichPushMessage) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isDeleted() -> i
    int compareTo(java.lang.Object) -> compareTo
com.urbanairship.richpush.RichPushMessageCache -> azf:
    java.util.Map unreadMessages -> a
    java.util.Map readMessages -> b
    void addMessage(com.urbanairship.richpush.RichPushMessage) -> a
    com.urbanairship.richpush.RichPushMessage getMessage(java.lang.String) -> a
    void removeMessage(com.urbanairship.richpush.RichPushMessage) -> b
com.urbanairship.richpush.RichPushMessageJavaScript -> azg:
    java.lang.String deviceModel -> a
    java.text.SimpleDateFormat dateFormatter -> d
    java.lang.String messageId -> b
    android.view.View view -> c
    int getViewHeight() -> getViewHeight
    java.lang.String getMessageId() -> getMessageId
    java.lang.String getMessageTitle() -> getMessageTitle
    java.lang.String getMessageSentDate() -> getMessageSentDate
    long getMessageSentDateMS() -> getMessageSentDateMS
    boolean isMessageRead() -> isMessageRead
    void markMessageRead() -> markMessageRead
    void markMessageUnread() -> markMessageUnread
    java.lang.String getUserId() -> getUserId
    java.lang.String getDeviceModel() -> getDeviceModel
    void navigateTo(java.lang.String) -> navigateTo
    java.lang.String getDeviceOrientation() -> getDeviceOrientation
    com.urbanairship.richpush.RichPushMessage getMessage() -> a
com.urbanairship.richpush.RichPushResolver -> azh:
    android.database.Cursor getNewestMessageId() -> a
    android.database.Cursor getAllUndeletedMessages() -> b
    android.database.Cursor getReadUpdatedMessages() -> c
    android.database.Cursor getDeletedMessages() -> d
    int markMessageRead(java.lang.String) -> a
    int markMessageUnread(java.lang.String) -> b
    int deleteMessages(java.util.Set) -> a
    android.net.Uri insertMessage(android.content.ContentValues) -> a
    int insertMessages(com.urbanairship.richpush.RichPushMessage[]) -> a
    int updateMessage(java.lang.String,android.content.ContentValues) -> a
    int updateMessages(java.util.Set,android.content.ContentValues) -> a
    android.net.Uri appendMessageIdsToUri(java.util.Collection) -> a
    android.net.Uri appendMessageIdToUri(java.lang.String) -> c
com.urbanairship.richpush.RichPushUpdateService -> com.urbanairship.richpush.RichPushUpdateService:
    void onCreate() -> onCreate
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void respond(android.os.ResultReceiver,boolean,android.os.Bundle) -> a
    void respond(android.os.ResultReceiver,boolean) -> a
    void messagesUpdate(android.os.ResultReceiver) -> a
    void userUpdate(android.os.ResultReceiver) -> b
    void retrieveMessage(java.lang.String,android.os.ResultReceiver) -> a
    boolean createUser() -> a
    boolean updateUser() -> b
    void handleDeletedMessages() -> c
    void handleReadMessages() -> d
    boolean updateMessages() -> e
    boolean deleteMessagesOnServer(java.util.Set) -> a
    boolean markMessagesReadOnServer(java.util.Set) -> b
    com.urbanairship.richpush.RichPushMessage[] getMessagesFromServer(java.lang.String) -> a
    com.urbanairship.restclient.Response sendRequest(java.lang.String,java.lang.String,org.apache.http.HttpEntity) -> a
    boolean sendRequest(java.lang.String,java.lang.String,org.apache.http.HttpEntity,int) -> a
    com.urbanairship.restclient.Request buildRequest(java.lang.String,java.lang.String,org.apache.http.HttpEntity) -> b
    org.apache.http.HttpEntity buildMessagesPayload(java.lang.String,java.util.Set) -> a
    java.lang.String formatUrl(java.lang.String,java.lang.String[],java.util.List) -> a
    java.util.Set idSetFromCursor(android.database.Cursor) -> a
    com.urbanairship.richpush.RichPushMessage[] messageArrayFromResponse(com.urbanairship.restclient.Response) -> a
    java.lang.String getNewestMessageId() -> f
    java.util.Set getIds(int) -> a
    com.urbanairship.richpush.RichPushUser getUser() -> g
    java.lang.String getHostUrl() -> h
com.urbanairship.richpush.RichPushUser -> azi:
    java.lang.Object lock -> b
    com.urbanairship.richpush.RichPushUser$UserPreferences preferences -> a
    boolean isCreated() -> a
    java.lang.String newUserUrl() -> b
    java.lang.String userUrl() -> c
    void updateUserAttributes(java.lang.String) -> a
    org.json.JSONObject getUserAttributes() -> d
    java.util.HashSet addCurrentApid(java.util.HashSet) -> a
    java.util.HashSet jsonArrayToSet(org.json.JSONArray) -> a
    com.urbanairship.richpush.RichPushInbox getInbox() -> e
    java.lang.String getId() -> f
    java.lang.String getPassword() -> g
    long getLastUpdateTime() -> h
    void setLastUpdateTime(long) -> a
com.urbanairship.richpush.RichPushUser$UserPreferences -> azj:
    java.util.HashSet getSet(java.lang.String,java.util.HashSet) -> a
    void putSet(java.lang.String,java.util.HashSet) -> b
com.urbanairship.richpush.RichPushUserAuthenticatedRequest -> azk:
com.urbanairship.util.DataManager -> azl:
    android.database.sqlite.SQLiteOpenHelper openHelper -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void bindValuesToSqlLiteStatment(android.database.sqlite.SQLiteStatement,android.content.ContentValues) -> a
    android.database.sqlite.SQLiteStatement getInsertStatement(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> d
    android.database.sqlite.SQLiteDatabase getReadableDatabase() -> e
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String buildInsertStatement(java.lang.String,java.lang.String[]) -> a
    void bind(android.database.sqlite.SQLiteStatement,int,int) -> a
    void bind(android.database.sqlite.SQLiteStatement,int,boolean) -> a
    void bind(android.database.sqlite.SQLiteStatement,int,java.lang.String) -> a
    int delete(java.lang.String,java.lang.String,java.lang.String[]) -> a
    java.util.List bulkInsert(java.lang.String,android.content.ContentValues[]) -> a
    long insert(java.lang.String,android.content.ContentValues) -> a
    int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> a
    android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String) -> a
    void close() -> f
    boolean tryExecuteStatement(android.database.sqlite.SQLiteStatement,android.content.ContentValues) -> b
com.urbanairship.util.DataManager$1 -> azm:
    com.urbanairship.util.DataManager this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.urbanairship.util.IntentUtils -> azn:
    void scheduleIntent(android.content.Context,android.content.Intent,long) -> a
    void scheduleIntent(android.content.Context,android.content.Intent,int,long) -> a
com.urbanairship.util.NotificationIDGenerator -> azo:
    int start -> a
    int range -> b
    android.content.SharedPreferences getPreferences() -> b
    void putInt(java.lang.String,int) -> a
    int getInt(java.lang.String,int) -> b
    int nextID() -> a
com.urbanairship.util.UAStringUtil -> azp:
    java.lang.String repeat(java.lang.String,int,java.lang.String) -> a
    boolean isEmpty(java.lang.String) -> a
    boolean equals(java.lang.String,java.lang.String) -> a
    java.lang.String join(java.util.Collection,java.lang.String) -> a
com.urbanairship.widget.RichPushMessageView -> com.urbanairship.widget.RichPushMessageView:
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void configureWebView() -> a
com.urbanairship.widget.RichPushMessageView$1 -> azq:
    com.urbanairship.widget.RichPushMessageView this$0 -> a
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.viewpagerindicator.CirclePageIndicator -> com.viewpagerindicator.CirclePageIndicator:
    float mRadius -> a
    android.graphics.Paint mPaintPageFill -> b
    android.graphics.Paint mPaintStroke -> c
    android.graphics.Paint mPaintFill -> d
    android.support.v4.view.ViewPager mViewPager -> e
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> f
    int mCurrentPage -> g
    int mSnapPage -> h
    float mPageOffset -> i
    int mScrollState -> j
    int mOrientation -> k
    boolean mCentered -> l
    boolean mSnap -> m
    int mTouchSlop -> n
    float mLastMotionX -> o
    int mActivePointerId -> p
    boolean mIsDragging -> q
    void setCentered(boolean) -> setCentered
    void setPageColor(int) -> setPageColor
    int getPageColor() -> getPageColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setSnap(boolean) -> setSnap
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> c_
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureLong(int) -> c
    int measureShort(int) -> d
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.viewpagerindicator.CirclePageIndicator$SavedState -> com.viewpagerindicator.CirclePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.CirclePageIndicator$SavedState$1 -> azr:
    com.viewpagerindicator.CirclePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.CirclePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.IconPageIndicator -> com.viewpagerindicator.IconPageIndicator:
    com.viewpagerindicator.IcsLinearLayout mIconsLayout -> a
    android.support.v4.view.ViewPager mViewPager -> b
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> c
    java.lang.Runnable mIconSelector -> d
    int mSelectedIndex -> e
    void animateToIcon(int) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> c_
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void notifyDataSetChanged() -> a
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void access$0(com.viewpagerindicator.IconPageIndicator,java.lang.Runnable) -> a
com.viewpagerindicator.IconPageIndicator$1 -> azs:
    com.viewpagerindicator.IconPageIndicator this$0 -> a
    android.view.View val$iconView -> b
    void run() -> run
com.viewpagerindicator.IconPagerAdapter -> azt:
    int getIconResId(int) -> a
    int getCount() -> getCount
com.viewpagerindicator.IcsLinearLayout -> azu:
    int[] LL -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerWidth -> c
    int mDividerHeight -> d
    int mShowDividers -> e
    int mDividerPadding -> f
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> a
    void drawDividersHorizontal(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasDividerBeforeChildAt(int) -> a
com.viewpagerindicator.LinePageIndicator -> com.viewpagerindicator.LinePageIndicator:
    android.graphics.Paint mPaintUnselected -> a
    android.graphics.Paint mPaintSelected -> b
    android.support.v4.view.ViewPager mViewPager -> c
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> d
    int mCurrentPage -> e
    boolean mCentered -> f
    float mLineWidth -> g
    float mGapWidth -> h
    int mTouchSlop -> i
    float mLastMotionX -> j
    int mActivePointerId -> k
    boolean mIsDragging -> l
    void setCentered(boolean) -> setCentered
    void setUnselectedColor(int) -> setUnselectedColor
    int getUnselectedColor() -> getUnselectedColor
    void setSelectedColor(int) -> setSelectedColor
    int getSelectedColor() -> getSelectedColor
    void setLineWidth(float) -> setLineWidth
    float getLineWidth() -> getLineWidth
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setGapWidth(float) -> setGapWidth
    float getGapWidth() -> getGapWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> c_
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> c
    int measureHeight(int) -> d
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.viewpagerindicator.LinePageIndicator$SavedState -> com.viewpagerindicator.LinePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.LinePageIndicator$SavedState$1 -> azv:
    com.viewpagerindicator.LinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.LinePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.PageIndicator -> azw:
com.viewpagerindicator.R -> azx:
com.viewpagerindicator.R$attr -> azy:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonStyleSmall -> buttonStyleSmall
    int centered -> centered
    int clipPadding -> clipPadding
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int fadeDelay -> fadeDelay
    int fadeLength -> fadeLength
    int fades -> fades
    int fillColor -> fillColor
    int footerColor -> footerColor
    int footerIndicatorHeight -> footerIndicatorHeight
    int footerIndicatorStyle -> footerIndicatorStyle
    int footerIndicatorUnderlinePadding -> footerIndicatorUnderlinePadding
    int footerLineHeight -> footerLineHeight
    int footerPadding -> footerPadding
    int gapWidth -> gapWidth
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int linePosition -> linePosition
    int lineWidth -> lineWidth
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int pageColor -> pageColor
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryHint -> queryHint
    int radius -> radius
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int selectedBold -> selectedBold
    int selectedColor -> selectedColor
    int snap -> snap
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int strokeColor -> strokeColor
    int strokeWidth -> strokeWidth
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titlePadding -> titlePadding
    int titleTextStyle -> titleTextStyle
    int topPadding -> topPadding
    int unselectedColor -> unselectedColor
    int verticalDivider -> verticalDivider
    int vpiCirclePageIndicatorStyle -> vpiCirclePageIndicatorStyle
    int vpiIconPageIndicatorStyle -> vpiIconPageIndicatorStyle
    int vpiLinePageIndicatorStyle -> vpiLinePageIndicatorStyle
    int vpiTabPageIndicatorStyle -> vpiTabPageIndicatorStyle
    int vpiTitlePageIndicatorStyle -> vpiTitlePageIndicatorStyle
    int vpiUnderlinePageIndicatorStyle -> vpiUnderlinePageIndicatorStyle
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
com.viewpagerindicator.R$bool -> azz:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
    int default_circle_indicator_centered -> default_circle_indicator_centered
    int default_circle_indicator_snap -> default_circle_indicator_snap
    int default_line_indicator_centered -> default_line_indicator_centered
    int default_title_indicator_selected_bold -> default_title_indicator_selected_bold
    int default_underline_indicator_fades -> default_underline_indicator_fades
com.viewpagerindicator.R$color -> baa:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__bright_foreground_inverse_holo_dark -> abs__bright_foreground_inverse_holo_dark
    int abs__bright_foreground_inverse_holo_light -> abs__bright_foreground_inverse_holo_light
    int abs__holo_blue_light -> abs__holo_blue_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
    int default_circle_indicator_fill_color -> default_circle_indicator_fill_color
    int default_circle_indicator_page_color -> default_circle_indicator_page_color
    int default_circle_indicator_stroke_color -> default_circle_indicator_stroke_color
    int default_line_indicator_selected_color -> default_line_indicator_selected_color
    int default_line_indicator_unselected_color -> default_line_indicator_unselected_color
    int default_title_indicator_footer_color -> default_title_indicator_footer_color
    int default_title_indicator_selected_color -> default_title_indicator_selected_color
    int default_title_indicator_text_color -> default_title_indicator_text_color
    int default_underline_indicator_selected_color -> default_underline_indicator_selected_color
    int vpi__background_holo_dark -> vpi__background_holo_dark
    int vpi__background_holo_light -> vpi__background_holo_light
    int vpi__bright_foreground_disabled_holo_dark -> vpi__bright_foreground_disabled_holo_dark
    int vpi__bright_foreground_disabled_holo_light -> vpi__bright_foreground_disabled_holo_light
    int vpi__bright_foreground_holo_dark -> vpi__bright_foreground_holo_dark
    int vpi__bright_foreground_holo_light -> vpi__bright_foreground_holo_light
    int vpi__bright_foreground_inverse_holo_dark -> vpi__bright_foreground_inverse_holo_dark
    int vpi__bright_foreground_inverse_holo_light -> vpi__bright_foreground_inverse_holo_light
    int vpi__dark_theme -> vpi__dark_theme
    int vpi__light_theme -> vpi__light_theme
com.viewpagerindicator.R$dimen -> bab:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__alert_dialog_title_height -> abs__alert_dialog_title_height
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int action_button_min_width -> action_button_min_width
    int default_circle_indicator_radius -> default_circle_indicator_radius
    int default_circle_indicator_stroke_width -> default_circle_indicator_stroke_width
    int default_line_indicator_gap_width -> default_line_indicator_gap_width
    int default_line_indicator_line_width -> default_line_indicator_line_width
    int default_line_indicator_stroke_width -> default_line_indicator_stroke_width
    int default_title_indicator_clip_padding -> default_title_indicator_clip_padding
    int default_title_indicator_footer_indicator_height -> default_title_indicator_footer_indicator_height
    int default_title_indicator_footer_indicator_underline_padding -> default_title_indicator_footer_indicator_underline_padding
    int default_title_indicator_footer_line_height -> default_title_indicator_footer_line_height
    int default_title_indicator_footer_padding -> default_title_indicator_footer_padding
    int default_title_indicator_text_size -> default_title_indicator_text_size
    int default_title_indicator_title_padding -> default_title_indicator_title_padding
    int default_title_indicator_top_padding -> default_title_indicator_top_padding
com.viewpagerindicator.R$integer -> bac:
    int abs__max_action_buttons -> abs__max_action_buttons
    int default_circle_indicator_orientation -> default_circle_indicator_orientation
    int default_title_indicator_footer_indicator_style -> default_title_indicator_footer_indicator_style
    int default_title_indicator_line_position -> default_title_indicator_line_position
    int default_underline_indicator_fade_delay -> default_underline_indicator_fade_delay
    int default_underline_indicator_fade_length -> default_underline_indicator_fade_length
com.viewpagerindicator.R$styleable -> bad:
    int[] CirclePageIndicator -> CirclePageIndicator
    int CirclePageIndicator_android_background -> CirclePageIndicator_android_background
    int CirclePageIndicator_android_orientation -> CirclePageIndicator_android_orientation
    int CirclePageIndicator_centered -> CirclePageIndicator_centered
    int CirclePageIndicator_fillColor -> CirclePageIndicator_fillColor
    int CirclePageIndicator_pageColor -> CirclePageIndicator_pageColor
    int CirclePageIndicator_radius -> CirclePageIndicator_radius
    int CirclePageIndicator_snap -> CirclePageIndicator_snap
    int CirclePageIndicator_strokeColor -> CirclePageIndicator_strokeColor
    int CirclePageIndicator_strokeWidth -> CirclePageIndicator_strokeWidth
    int[] LinePageIndicator -> LinePageIndicator
    int LinePageIndicator_android_background -> LinePageIndicator_android_background
    int LinePageIndicator_centered -> LinePageIndicator_centered
    int LinePageIndicator_gapWidth -> LinePageIndicator_gapWidth
    int LinePageIndicator_lineWidth -> LinePageIndicator_lineWidth
    int LinePageIndicator_selectedColor -> LinePageIndicator_selectedColor
    int LinePageIndicator_strokeWidth -> LinePageIndicator_strokeWidth
    int LinePageIndicator_unselectedColor -> LinePageIndicator_unselectedColor
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_android_windowIsFloating -> SherlockTheme_android_windowIsFloating
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int[] TitlePageIndicator -> TitlePageIndicator
    int TitlePageIndicator_android_background -> TitlePageIndicator_android_background
    int TitlePageIndicator_android_textColor -> TitlePageIndicator_android_textColor
    int TitlePageIndicator_android_textSize -> TitlePageIndicator_android_textSize
    int TitlePageIndicator_clipPadding -> TitlePageIndicator_clipPadding
    int TitlePageIndicator_footerColor -> TitlePageIndicator_footerColor
    int TitlePageIndicator_footerIndicatorHeight -> TitlePageIndicator_footerIndicatorHeight
    int TitlePageIndicator_footerIndicatorStyle -> TitlePageIndicator_footerIndicatorStyle
    int TitlePageIndicator_footerIndicatorUnderlinePadding -> TitlePageIndicator_footerIndicatorUnderlinePadding
    int TitlePageIndicator_footerLineHeight -> TitlePageIndicator_footerLineHeight
    int TitlePageIndicator_footerPadding -> TitlePageIndicator_footerPadding
    int TitlePageIndicator_linePosition -> TitlePageIndicator_linePosition
    int TitlePageIndicator_selectedBold -> TitlePageIndicator_selectedBold
    int TitlePageIndicator_selectedColor -> TitlePageIndicator_selectedColor
    int TitlePageIndicator_titlePadding -> TitlePageIndicator_titlePadding
    int TitlePageIndicator_topPadding -> TitlePageIndicator_topPadding
    int[] UnderlinePageIndicator -> UnderlinePageIndicator
    int UnderlinePageIndicator_android_background -> UnderlinePageIndicator_android_background
    int UnderlinePageIndicator_fadeDelay -> UnderlinePageIndicator_fadeDelay
    int UnderlinePageIndicator_fadeLength -> UnderlinePageIndicator_fadeLength
    int UnderlinePageIndicator_fades -> UnderlinePageIndicator_fades
    int UnderlinePageIndicator_selectedColor -> UnderlinePageIndicator_selectedColor
    int[] ViewPagerIndicator -> ViewPagerIndicator
    int ViewPagerIndicator_vpiCirclePageIndicatorStyle -> ViewPagerIndicator_vpiCirclePageIndicatorStyle
    int ViewPagerIndicator_vpiIconPageIndicatorStyle -> ViewPagerIndicator_vpiIconPageIndicatorStyle
    int ViewPagerIndicator_vpiLinePageIndicatorStyle -> ViewPagerIndicator_vpiLinePageIndicatorStyle
    int ViewPagerIndicator_vpiTabPageIndicatorStyle -> ViewPagerIndicator_vpiTabPageIndicatorStyle
    int ViewPagerIndicator_vpiTitlePageIndicatorStyle -> ViewPagerIndicator_vpiTitlePageIndicatorStyle
    int ViewPagerIndicator_vpiUnderlinePageIndicatorStyle -> ViewPagerIndicator_vpiUnderlinePageIndicatorStyle
com.viewpagerindicator.TabPageIndicator -> com.viewpagerindicator.TabPageIndicator:
    java.lang.CharSequence EMPTY_TITLE -> a
    java.lang.Runnable mTabSelector -> b
    android.view.View$OnClickListener mTabClickListener -> c
    com.viewpagerindicator.IcsLinearLayout mTabLayout -> d
    android.support.v4.view.ViewPager mViewPager -> e
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> f
    int mMaxTabWidth -> g
    int mSelectedTabIndex -> h
    com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener mTabReselectedListener -> i
    void setOnTabReselectedListener(com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener) -> setOnTabReselectedListener
    void onMeasure(int,int) -> onMeasure
    void animateToTab(int) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addTab(int,java.lang.CharSequence,int) -> a
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> c_
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void notifyDataSetChanged() -> a
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    android.support.v4.view.ViewPager access$0(com.viewpagerindicator.TabPageIndicator) -> a
    com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener access$1(com.viewpagerindicator.TabPageIndicator) -> b
    int access$2(com.viewpagerindicator.TabPageIndicator) -> c
    void access$3(com.viewpagerindicator.TabPageIndicator,java.lang.Runnable) -> a
com.viewpagerindicator.TabPageIndicator$1 -> bae:
    com.viewpagerindicator.TabPageIndicator this$0 -> a
    void onClick(android.view.View) -> onClick
com.viewpagerindicator.TabPageIndicator$2 -> baf:
    com.viewpagerindicator.TabPageIndicator this$0 -> a
    android.view.View val$tabView -> b
    void run() -> run
com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener -> bag:
    void onTabReselected(int) -> a
com.viewpagerindicator.TabPageIndicator$TabView -> bah:
    int mIndex -> b
    com.viewpagerindicator.TabPageIndicator this$0 -> a
    void onMeasure(int,int) -> onMeasure
    int getIndex() -> a
    void access$0(com.viewpagerindicator.TabPageIndicator$TabView,int) -> a
com.viewpagerindicator.TitlePageIndicator -> com.viewpagerindicator.TitlePageIndicator:
    android.support.v4.view.ViewPager mViewPager -> a
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> b
    int mCurrentPage -> c
    float mPageOffset -> d
    int mScrollState -> e
    android.graphics.Paint mPaintText -> f
    boolean mBoldText -> g
    int mColorText -> h
    int mColorSelected -> i
    android.graphics.Path mPath -> j
    android.graphics.Rect mBounds -> k
    android.graphics.Paint mPaintFooterLine -> l
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle mFooterIndicatorStyle -> m
    com.viewpagerindicator.TitlePageIndicator$LinePosition mLinePosition -> n
    android.graphics.Paint mPaintFooterIndicator -> o
    float mFooterIndicatorHeight -> p
    float mFooterIndicatorUnderlinePadding -> q
    float mFooterPadding -> r
    float mTitlePadding -> s
    float mTopPadding -> t
    float mClipPadding -> u
    float mFooterLineHeight -> v
    int mTouchSlop -> w
    float mLastMotionX -> x
    int mActivePointerId -> y
    boolean mIsDragging -> z
    com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener mCenterItemClickListener -> A
    int[] $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle -> B
    int getFooterColor() -> getFooterColor
    void setFooterColor(int) -> setFooterColor
    float getFooterLineHeight() -> getFooterLineHeight
    void setFooterLineHeight(float) -> setFooterLineHeight
    float getFooterIndicatorHeight() -> getFooterIndicatorHeight
    void setFooterIndicatorHeight(float) -> setFooterIndicatorHeight
    float getFooterIndicatorPadding() -> getFooterIndicatorPadding
    void setFooterIndicatorPadding(float) -> setFooterIndicatorPadding
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle getFooterIndicatorStyle() -> getFooterIndicatorStyle
    void setFooterIndicatorStyle(com.viewpagerindicator.TitlePageIndicator$IndicatorStyle) -> setFooterIndicatorStyle
    com.viewpagerindicator.TitlePageIndicator$LinePosition getLinePosition() -> getLinePosition
    void setLinePosition(com.viewpagerindicator.TitlePageIndicator$LinePosition) -> setLinePosition
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    void setSelectedBold(boolean) -> setSelectedBold
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    float getTitlePadding() -> getTitlePadding
    void setTitlePadding(float) -> setTitlePadding
    float getTopPadding() -> getTopPadding
    void setTopPadding(float) -> setTopPadding
    float getClipPadding() -> getClipPadding
    void setClipPadding(float) -> setClipPadding
    void setTypeface(android.graphics.Typeface) -> setTypeface
    android.graphics.Typeface getTypeface() -> getTypeface
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void clipViewOnTheRight(android.graphics.Rect,float,int) -> a
    void clipViewOnTheLeft(android.graphics.Rect,float,int) -> b
    java.util.ArrayList calculateAllBounds(android.graphics.Paint) -> a
    android.graphics.Rect calcBounds(int,android.graphics.Paint) -> a
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setOnCenterItemClickListener(com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener) -> setOnCenterItemClickListener
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> c_
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    java.lang.CharSequence getTitle(int) -> c
    int[] $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle() -> a
com.viewpagerindicator.TitlePageIndicator$IndicatorStyle -> bai:
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle None -> a
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Triangle -> b
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Underline -> c
    int value -> d
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] ENUM$VALUES -> e
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle fromValue(int) -> a
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] values() -> values
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle valueOf(java.lang.String) -> valueOf
com.viewpagerindicator.TitlePageIndicator$LinePosition -> baj:
    com.viewpagerindicator.TitlePageIndicator$LinePosition Bottom -> a
    com.viewpagerindicator.TitlePageIndicator$LinePosition Top -> b
    int value -> c
    com.viewpagerindicator.TitlePageIndicator$LinePosition[] ENUM$VALUES -> d
    com.viewpagerindicator.TitlePageIndicator$LinePosition fromValue(int) -> a
    com.viewpagerindicator.TitlePageIndicator$LinePosition[] values() -> values
    com.viewpagerindicator.TitlePageIndicator$LinePosition valueOf(java.lang.String) -> valueOf
com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener -> bak:
    void onCenterItemClick(int) -> a
com.viewpagerindicator.TitlePageIndicator$SavedState -> com.viewpagerindicator.TitlePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.TitlePageIndicator$SavedState$1 -> bal:
    com.viewpagerindicator.TitlePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.TitlePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.UnderlinePageIndicator -> com.viewpagerindicator.UnderlinePageIndicator:
    android.graphics.Paint mPaint -> a
    boolean mFades -> b
    int mFadeDelay -> c
    int mFadeLength -> d
    int mFadeBy -> e
    android.support.v4.view.ViewPager mViewPager -> f
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> g
    int mScrollState -> h
    int mCurrentPage -> i
    float mPositionOffset -> j
    int mTouchSlop -> k
    float mLastMotionX -> l
    int mActivePointerId -> m
    boolean mIsDragging -> n
    java.lang.Runnable mFadeRunnable -> o
    boolean getFades() -> getFades
    void setFades(boolean) -> setFades
    int getFadeDelay() -> getFadeDelay
    void setFadeDelay(int) -> setFadeDelay
    int getFadeLength() -> getFadeLength
    void setFadeLength(int) -> setFadeLength
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> c_
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean access$0(com.viewpagerindicator.UnderlinePageIndicator) -> a
    android.graphics.Paint access$1(com.viewpagerindicator.UnderlinePageIndicator) -> b
    int access$2(com.viewpagerindicator.UnderlinePageIndicator) -> c
    java.lang.Runnable access$3(com.viewpagerindicator.UnderlinePageIndicator) -> d
com.viewpagerindicator.UnderlinePageIndicator$1 -> bam:
    com.viewpagerindicator.UnderlinePageIndicator this$0 -> a
    void run() -> run
com.viewpagerindicator.UnderlinePageIndicator$2 -> ban:
    com.viewpagerindicator.UnderlinePageIndicator this$0 -> a
    void run() -> run
com.viewpagerindicator.UnderlinePageIndicator$SavedState -> com.viewpagerindicator.UnderlinePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.UnderlinePageIndicator$SavedState$1 -> bao:
    com.viewpagerindicator.UnderlinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.UnderlinePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
de.akquinet.android.androlog.Log -> bap:
    boolean activated -> a
    int defaultLogLevel -> b
    int defaultReportLevel -> c
    java.lang.reflect.Method wtfTagMessageMethod -> d
    java.lang.reflect.Method wtfTagErrorMethod -> e
    java.lang.reflect.Method wtfTagMessageErrorMethod -> f
    boolean useWTF -> g
    java.util.List entries -> h
    boolean enableLogEntryCollection -> i
    int maxOfEntriesInReports -> j
    boolean reportingActivated -> k
    java.util.List reporters -> l
    android.content.Context context -> m
    java.util.Map logLevels -> n
    int reportTriggerLevel -> o
    boolean exceptionHandlerActivated -> p
    boolean exceptionHandlerPropagation -> q
    java.util.List CLASSNAME_TO_ESCAPE -> r
    void activateLogging() -> a
    void deactivateLogging() -> b
    void activateReporting() -> c
    void deactivateReporting() -> d
    void reset() -> e
    void init(android.content.Context) -> a
    void init(android.content.Context,java.lang.String) -> a
    java.io.InputStream getConfigurationFileFromSDCard(java.lang.String) -> c
    java.io.InputStream getConfigurationFileFromAssets(android.content.Context,java.lang.String) -> b
    int getLevel(java.lang.String) -> d
    void configure(java.util.Properties) -> a
    void detectWTFMethods() -> g
    int v(java.lang.String,java.lang.String) -> a
    int d(java.lang.String,java.lang.String) -> b
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    int i(java.lang.String,java.lang.String) -> c
    int w(java.lang.String,java.lang.String) -> d
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    int w(java.lang.String) -> a
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> c
    int e(java.lang.String) -> b
    boolean isLoggable(java.lang.String,int) -> a
    boolean isReportable(int) -> a
    java.lang.String getStackTraceString(java.lang.Throwable) -> a
    java.lang.String print(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    boolean report(java.lang.String,java.lang.Throwable) -> a
    void collectLogEntry(int,java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void closeQuietly(java.io.InputStream) -> a
    java.lang.String getCaller() -> h
    boolean access$000() -> f
de.akquinet.android.androlog.Log$1 -> baq:
    java.lang.Thread$UncaughtExceptionHandler val$originalHandler -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
de.akquinet.android.androlog.Log$2 -> bar:
    java.lang.String val$message -> a
    java.lang.Throwable val$err -> b
    void run() -> run
de.akquinet.android.androlog.reporter.Reporter -> bas:
    void configure(java.util.Properties) -> a
    boolean send(android.content.Context,java.lang.String,java.lang.Throwable) -> a
de.akquinet.android.androlog.reporter.ReporterFactory -> bat:
    java.lang.Class load(java.lang.String) -> a
    de.akquinet.android.androlog.reporter.Reporter newInstance(java.lang.String) -> b
net.hockeyapp.android.Constants -> bau:
    java.lang.String FILES_PATH -> a
    java.lang.String APP_VERSION -> b
    java.lang.String APP_PACKAGE -> c
    java.lang.String ANDROID_VERSION -> d
    java.lang.String PHONE_MODEL -> e
    java.lang.String PHONE_MANUFACTURER -> f
    void loadFromContext(android.content.Context) -> a
net.hockeyapp.android.CrashManager -> bav:
    java.lang.String identifier -> a
    java.lang.String urlString -> b
    void register(android.content.Context,java.lang.String,net.hockeyapp.android.CrashManagerListener) -> a
    void register(android.content.Context,java.lang.String,java.lang.String,net.hockeyapp.android.CrashManagerListener) -> a
    void execute(android.content.Context,net.hockeyapp.android.CrashManagerListener) -> a
    int hasStackTraces(android.content.Context) -> a
    void submitStackTraces(android.content.Context,net.hockeyapp.android.CrashManagerListener) -> b
    void deleteStackTraces(android.content.Context) -> b
    void initialize(android.content.Context,java.lang.String,java.lang.String,net.hockeyapp.android.CrashManagerListener,boolean) -> a
    void showDialog(android.content.Context,net.hockeyapp.android.CrashManagerListener,boolean) -> c
    void sendCrashes(android.content.Context,net.hockeyapp.android.CrashManagerListener,boolean) -> d
    void registerHandler(android.content.Context,net.hockeyapp.android.CrashManagerListener,boolean) -> e
    java.lang.String getURLString() -> a
    void deleteStackTrace(android.content.Context,java.lang.String) -> a
    java.lang.String contentsOfFile(android.content.Context,java.lang.String) -> b
    void saveConfirmedStackTraces(android.content.Context) -> c
    java.lang.String joinArray(java.lang.String[],java.lang.String) -> a
    java.lang.String[] searchForStackTraces() -> b
    void access$0(android.content.Context,net.hockeyapp.android.CrashManagerListener,boolean) -> a
    void access$1(android.content.Context,net.hockeyapp.android.CrashManagerListener,boolean) -> b
net.hockeyapp.android.CrashManager$1 -> baw:
    android.content.Context val$context -> a
    net.hockeyapp.android.CrashManagerListener val$listener -> b
    boolean val$ignoreDefaultHandler -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.CrashManager$2 -> bax:
    android.content.Context val$context -> a
    net.hockeyapp.android.CrashManagerListener val$listener -> b
    boolean val$ignoreDefaultHandler -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.CrashManager$3 -> bay:
    android.content.Context val$context -> a
    net.hockeyapp.android.CrashManagerListener val$listener -> b
    boolean val$ignoreDefaultHandler -> c
    void run() -> run
net.hockeyapp.android.CrashManager$4 -> baz:
    boolean accept(java.io.File,java.lang.String) -> accept
net.hockeyapp.android.CrashManagerListener -> bba:
    java.lang.Boolean ignoreDefaultHandler() -> a
    java.lang.String getContact() -> b
    java.lang.String getDescription() -> c
    java.lang.String getUserID() -> d
    java.lang.Boolean onCrashesFound() -> e
    void onCrashesSent() -> f
    void onCrashesNotSent() -> g
net.hockeyapp.android.ExpiryInfoActivity -> net.hockeyapp.android.ExpiryInfoActivity:
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View getLayoutView() -> a
    java.lang.String getStringResource(int) -> a
net.hockeyapp.android.StringListener -> bbb:
    java.lang.String getStringForResource(int) -> a
net.hockeyapp.android.Strings -> bbc:
    java.lang.String[] ENGLISH -> a
    java.lang.String get(net.hockeyapp.android.StringListener,int) -> a
net.hockeyapp.android.Tracking -> bbd:
    long getUsageTime(android.content.Context) -> a
    boolean checkVersion(android.content.Context) -> b
    android.content.SharedPreferences getPreferences(android.content.Context) -> c
net.hockeyapp.android.UpdateActivity -> net.hockeyapp.android.UpdateActivity:
    net.hockeyapp.android.internal.DownloadFileTask downloadTask -> a
    net.hockeyapp.android.internal.VersionHelper versionHelper -> b
    void onCreate(android.os.Bundle) -> onCreate
    void configureView() -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void startDownloadTask() -> f
    void createDownloadTask(java.lang.String,net.hockeyapp.android.internal.DownloadFileListener) -> a
    void enableUpdateButton() -> b
    int getCurrentVersionCode() -> c
    android.view.ViewGroup getLayoutView() -> d
    java.lang.String getAppName() -> e
    void onClick(android.view.View) -> onClick
    void access$1(net.hockeyapp.android.UpdateActivity) -> a
net.hockeyapp.android.UpdateActivity$1 -> bbe:
    net.hockeyapp.android.UpdateActivity this$0 -> a
    void downloadSuccessful(net.hockeyapp.android.internal.DownloadFileTask) -> a
    void downloadFailed(net.hockeyapp.android.internal.DownloadFileTask,java.lang.Boolean) -> a
    java.lang.String getStringForResource(int) -> a
net.hockeyapp.android.UpdateFragment -> bbf:
    net.hockeyapp.android.internal.DownloadFileTask downloadTask -> a
    org.json.JSONArray versionInfo -> b
    java.lang.String urlString -> c
    net.hockeyapp.android.internal.VersionHelper versionHelper -> d
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void startDownloadTask(android.app.Activity) -> a
    int getCurrentVersionCode() -> c
    java.lang.String getAppName() -> a
    android.view.View getLayoutView() -> b
    void access$0(net.hockeyapp.android.UpdateFragment,android.app.Activity) -> a
net.hockeyapp.android.UpdateFragment$1 -> bbg:
    net.hockeyapp.android.UpdateFragment this$0 -> a
    android.app.Activity val$activity -> b
    void downloadFailed(net.hockeyapp.android.internal.DownloadFileTask,java.lang.Boolean) -> a
    void downloadSuccessful(net.hockeyapp.android.internal.DownloadFileTask) -> a
    java.lang.String getStringForResource(int) -> a
net.hockeyapp.android.UpdateInfoListener -> bbh:
    int getCurrentVersionCode() -> c
net.hockeyapp.android.UpdateManager -> bbi:
    net.hockeyapp.android.internal.CheckUpdateTask updateTask -> a
    net.hockeyapp.android.UpdateManagerListener lastListener -> b
    void register(android.app.Activity,java.lang.String,net.hockeyapp.android.UpdateManagerListener) -> a
    void register(android.app.Activity,java.lang.String,java.lang.String,net.hockeyapp.android.UpdateManagerListener) -> a
    boolean checkExpiryDate(android.app.Activity,net.hockeyapp.android.UpdateManagerListener) -> a
    void startExpiryInfoIntent(android.app.Activity) -> b
    void startUpdateTask(android.app.Activity,java.lang.String,java.lang.String,net.hockeyapp.android.UpdateManagerListener) -> b
    boolean dialogShown(android.app.Activity) -> c
    java.lang.Boolean fragmentsSupported() -> a
    java.lang.Boolean runsOnTablet(android.app.Activity) -> a
    net.hockeyapp.android.UpdateManagerListener getLastListener() -> b
net.hockeyapp.android.UpdateManagerListener -> bbj:
    java.lang.Class getUpdateActivityClass() -> a
    java.lang.Class getUpdateFragmentClass() -> b
    void onNoUpdateAvailable() -> c
    void onUpdateAvailable() -> d
    java.util.Date getExpiryDate() -> e
    boolean onBuildExpired() -> f
net.hockeyapp.android.internal.CheckUpdateTask -> bbk:
    java.lang.String urlString -> a
    java.lang.String appIdentifier -> b
    android.app.Activity activity -> c
    java.lang.Boolean mandatory -> d
    net.hockeyapp.android.UpdateManagerListener listener -> e
    long usageTime -> f
    void attach(android.app.Activity) -> a
    int getVersionCode() -> a
    org.json.JSONArray doInBackground(java.lang.String[]) -> a
    java.net.URLConnection createConnection(java.net.URL) -> a
    boolean findNewVersion(org.json.JSONArray,int) -> a
    void onPostExecute(org.json.JSONArray) -> a
    void cleanUp() -> c
    java.lang.String getURLString(java.lang.String) -> a
    java.lang.String encodeParam(java.lang.String) -> b
    void showDialog(org.json.JSONArray) -> b
    void startUpdateIntent(org.json.JSONArray,java.lang.Boolean) -> a
    void showUpdateFragment(org.json.JSONArray) -> c
    java.lang.String convertStreamToString(java.io.InputStream) -> a
    boolean getCachingEnabled() -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void access$2(net.hockeyapp.android.internal.CheckUpdateTask) -> a
    android.app.Activity access$3(net.hockeyapp.android.internal.CheckUpdateTask) -> b
    void access$4(net.hockeyapp.android.internal.CheckUpdateTask,org.json.JSONArray) -> a
    void access$5(net.hockeyapp.android.internal.CheckUpdateTask,org.json.JSONArray,java.lang.Boolean) -> a
net.hockeyapp.android.internal.CheckUpdateTask$1 -> bbl:
    net.hockeyapp.android.internal.CheckUpdateTask this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.internal.CheckUpdateTask$2 -> bbm:
    net.hockeyapp.android.internal.CheckUpdateTask this$0 -> a
    org.json.JSONArray val$updateInfo -> b
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.internal.DownloadFileListener -> bbn:
    void downloadFailed(net.hockeyapp.android.internal.DownloadFileTask,java.lang.Boolean) -> a
    void downloadSuccessful(net.hockeyapp.android.internal.DownloadFileTask) -> a
net.hockeyapp.android.internal.DownloadFileTask -> bbo:
    android.content.Context context -> a
    net.hockeyapp.android.internal.DownloadFileListener notifier -> b
    java.lang.String urlString -> c
    java.lang.String filename -> d
    java.lang.String filePath -> e
    android.app.ProgressDialog progressDialog -> f
    void attach(android.content.Context) -> a
    void detach() -> a
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    java.net.URLConnection createConnection(java.net.URL) -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    java.lang.String getURLString() -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    net.hockeyapp.android.internal.DownloadFileListener access$3(net.hockeyapp.android.internal.DownloadFileTask) -> a
net.hockeyapp.android.internal.DownloadFileTask$1 -> bbp:
    net.hockeyapp.android.internal.DownloadFileTask this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.internal.DownloadFileTask$2 -> bbq:
    net.hockeyapp.android.internal.DownloadFileTask this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.internal.ExceptionHandler -> bbr:
    boolean ignoreDefaultHandler -> a
    net.hockeyapp.android.CrashManagerListener listener -> b
    java.lang.Thread$UncaughtExceptionHandler defaultExceptionHandler -> c
    void saveException(java.lang.Throwable,net.hockeyapp.android.CrashManagerListener) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void writeValueToFile(java.lang.String,java.lang.String) -> a
    java.lang.String limitedString(java.lang.String) -> a
net.hockeyapp.android.internal.ExpiryInfoView -> net.hockeyapp.android.internal.ExpiryInfoView:
    void loadLayoutParams(android.content.Context) -> a
    void loadShadowView(android.content.Context) -> b
    void loadTextView(android.content.Context,java.lang.String) -> a
net.hockeyapp.android.internal.UpdateView -> net.hockeyapp.android.internal.UpdateView:
    android.widget.RelativeLayout headerView -> a
    boolean layoutHorizontally -> b
    boolean limitHeight -> c
    void setLayoutHorizontally(android.content.Context) -> setLayoutHorizontally
    void loadLayoutParams(android.content.Context) -> a
    void loadHeaderView(android.content.Context) -> b
    void loadTitleLabel(android.widget.RelativeLayout,android.content.Context) -> a
    void loadVersionLabel(android.widget.RelativeLayout,android.content.Context) -> b
    void loadUpdateButton(android.widget.RelativeLayout,android.content.Context) -> c
    android.graphics.drawable.Drawable getButtonSelector() -> getButtonSelector
    void loadShadow(android.widget.RelativeLayout,android.content.Context) -> d
    void loadWebView(android.content.Context) -> c
net.hockeyapp.android.internal.VersionCache -> bbs:
    java.lang.String VERSION_INFO_KEY -> a
    void setVersionInfo(android.content.Context,java.lang.String) -> a
    java.lang.String getVersionInfo(android.content.Context) -> a
net.hockeyapp.android.internal.VersionHelper -> bbt:
    java.util.ArrayList sortedVersions -> a
    org.json.JSONObject newest -> b
    net.hockeyapp.android.UpdateInfoListener listener -> c
    void loadVersions(java.lang.String) -> a
    void sortVersions() -> d
    java.lang.String getVersionString() -> a
    java.lang.String getFileInfoString() -> b
    java.lang.String failSafeGetStringFromJSON(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    int failSafeGetIntFromJSON(org.json.JSONObject,java.lang.String,int) -> a
    java.lang.String getReleaseNotes() -> c
    java.lang.Object getVersionLine(int,org.json.JSONObject) -> a
    java.lang.Object getVersionNotes(int,org.json.JSONObject) -> b
net.hockeyapp.android.internal.VersionHelper$1 -> bbu:
    net.hockeyapp.android.internal.VersionHelper this$0 -> a
    int compare(org.json.JSONObject,org.json.JSONObject) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
net.hockeyapp.android.internal.ViewHelper -> bbv:
    android.graphics.drawable.Drawable getGradient() -> a
oak.Base64 -> bbw:
    boolean $assertionsDisabled -> a
    byte[] decode(java.lang.String,int) -> a
    byte[] decode(byte[],int) -> a
    byte[] decode(byte[],int,int,int) -> a
    byte[] encode(byte[],int) -> b
    byte[] encode(byte[],int,int,int) -> b
oak.Base64$Coder -> bbx:
    byte[] output -> a
    int op -> b
oak.Base64$Decoder -> bby:
    int[] DECODE -> c
    int[] DECODE_WEBSAFE -> d
    int state -> e
    int value -> f
    int[] alphabet -> g
    boolean process(byte[],int,int,boolean) -> a
oak.Base64$Encoder -> bbz:
    byte[] ENCODE -> h
    byte[] ENCODE_WEBSAFE -> i
    byte[] tail -> j
    int tailLen -> c
    int count -> k
    boolean do_padding -> d
    boolean do_newline -> e
    boolean do_cr -> f
    byte[] alphabet -> l
    boolean $assertionsDisabled -> g
    boolean process(byte[],int,int,boolean) -> a
oak.ObscuredSharedPreferences -> bca:
    android.content.SharedPreferences delegate -> a
    android.content.Context context -> b
    char[] getSpecialCode() -> a
    oak.ObscuredSharedPreferences$Editor edit() -> b
    java.util.Map getAll() -> getAll
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    float getFloat(java.lang.String,float) -> getFloat
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    boolean contains(java.lang.String) -> contains
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    java.lang.String encrypt(java.lang.String) -> a
    java.lang.String getAndroidId() -> c
    java.lang.String decrypt(java.lang.String) -> b
    android.content.SharedPreferences$Editor edit() -> edit
oak.ObscuredSharedPreferences$Editor -> bcb:
    android.content.SharedPreferences$Editor delegate -> a
    oak.ObscuredSharedPreferences this$0 -> b
    oak.ObscuredSharedPreferences$Editor putBoolean(java.lang.String,boolean) -> a
    oak.ObscuredSharedPreferences$Editor putFloat(java.lang.String,float) -> a
    oak.ObscuredSharedPreferences$Editor putInt(java.lang.String,int) -> a
    oak.ObscuredSharedPreferences$Editor putLong(java.lang.String,long) -> a
    oak.ObscuredSharedPreferences$Editor putString(java.lang.String,java.lang.String) -> a
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
    oak.ObscuredSharedPreferences$Editor clear() -> a
    boolean commit() -> commit
    void apply() -> apply
    oak.ObscuredSharedPreferences$Editor remove(java.lang.String) -> a
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor clear() -> clear
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
org.holoeverywhere.FontLoader -> bcc:
    org.holoeverywhere.FontLoader$FontCollector ROBOTO -> a
    org.holoeverywhere.FontLoader$Font ROBOTO_BLACK -> b
    org.holoeverywhere.FontLoader$Font ROBOTO_BLACKITALIC -> c
    org.holoeverywhere.FontLoader$Font ROBOTO_BOLD -> d
    org.holoeverywhere.FontLoader$Font ROBOTO_BOLDCONDENSED -> e
    org.holoeverywhere.FontLoader$Font ROBOTO_BOLDCONDENSEDITALIC -> f
    org.holoeverywhere.FontLoader$Font ROBOTO_BOLDITALIC -> g
    org.holoeverywhere.FontLoader$Font ROBOTO_CONDENSED -> h
    org.holoeverywhere.FontLoader$Font ROBOTO_CONDENSEDITALIC -> i
    org.holoeverywhere.FontLoader$Font ROBOTO_ITALIC -> j
    org.holoeverywhere.FontLoader$Font ROBOTO_LIGHT -> k
    org.holoeverywhere.FontLoader$Font ROBOTO_LIGHTITALIC -> l
    org.holoeverywhere.FontLoader$Font ROBOTO_MEDIUM -> m
    org.holoeverywhere.FontLoader$Font ROBOTO_MEDIUMITALIC -> n
    org.holoeverywhere.FontLoader$Font ROBOTO_REGULAR -> o
    org.holoeverywhere.FontLoader$Font ROBOTO_THIN -> p
    org.holoeverywhere.FontLoader$Font ROBOTO_THINITALIC -> q
    org.holoeverywhere.FontLoader$Font sDefaultFont -> z
    java.util.List sFontStyleKeys -> A
    java.util.Map sFontStyleMapping -> B
    int sNextTextStyleOffset -> C
    int TEXT_STYLE_BLACK -> r
    int TEXT_STYLE_BOLD -> s
    int TEXT_STYLE_CONDENDSED -> t
    int TEXT_STYLE_ITALIC -> u
    int TEXT_STYLE_LIGHT -> v
    int TEXT_STYLE_MEDIUM -> w
    int TEXT_STYLE_NORMAL -> x
    int TEXT_STYLE_THIN -> y
    android.view.View apply(android.view.View,org.holoeverywhere.FontLoader$Font) -> a
    android.view.View applyDefaultFont(android.view.View) -> a
    void applyInternal(android.view.View,org.holoeverywhere.FontLoader$Font) -> b
    boolean equals(java.lang.Object,java.lang.Object) -> a
    java.lang.Object[] parseFontStyle(java.lang.String) -> a
    int registerTextStyle(java.lang.String) -> b
org.holoeverywhere.FontLoader$Font -> bcd:
    android.content.Context mContext -> a
    java.lang.String mFontFamily -> b
    int mFontStyle -> c
    boolean mLockModifing -> d
    android.graphics.Typeface mTypeface -> e
    boolean mTypefaceLoaded -> f
    void assertContext() -> a
    void assertModifing() -> b
    org.holoeverywhere.FontLoader$Font clone() -> c
    android.content.Context getContext() -> d
    android.graphics.Typeface getTypeface(java.lang.String,int) -> a
    android.graphics.Typeface loadTypeface() -> e
    void lock() -> f
    void resetTypeface() -> g
    org.holoeverywhere.FontLoader$Font setFontFamily(java.lang.String) -> a
    org.holoeverywhere.FontLoader$Font setFontStyle(int) -> a
    java.lang.Object clone() -> clone
    java.lang.String access$1(org.holoeverywhere.FontLoader$Font) -> a
    int access$2(org.holoeverywhere.FontLoader$Font) -> b
    void access$3(org.holoeverywhere.FontLoader$Font,android.content.Context) -> a
org.holoeverywhere.FontLoader$FontCollector -> bce:
    boolean mAllowAnyFontFamily -> a
    org.holoeverywhere.FontLoader$Font mDefaultFont -> b
    java.util.List mFonts -> c
    org.holoeverywhere.FontLoader$Font mLastUsedFont -> d
    org.holoeverywhere.FontLoader$FontCollector allowAnyFontFamily() -> h
    org.holoeverywhere.FontLoader$FontCollector asDefaultFont() -> i
    org.holoeverywhere.FontLoader$FontCollector clone() -> j
    android.graphics.Typeface getTypeface(java.lang.String,int) -> a
    android.graphics.Typeface getTypeface(org.holoeverywhere.FontLoader$Font,java.lang.String,int) -> a
    org.holoeverywhere.FontLoader$FontCollector register(org.holoeverywhere.FontLoader$Font) -> c
    org.holoeverywhere.FontLoader$Font clone() -> c
org.holoeverywhere.FontLoader$FontStyleProvider -> bcf:
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setFontStyle(java.lang.String,int) -> setFontStyle
    void setTypeface(android.graphics.Typeface) -> setTypeface
org.holoeverywhere.FontLoader$RawFont -> bcg:
    int mRawResourceId -> a
    org.holoeverywhere.FontLoader$RawFont clone() -> h
    android.graphics.Typeface loadTypeface() -> e
    android.graphics.Typeface loadTypeface(boolean) -> a
    android.graphics.Typeface loadTypeface(java.io.File,boolean) -> a
    void setRawResourceId(int) -> b
    org.holoeverywhere.FontLoader$Font clone() -> c
org.holoeverywhere.FontLoader$RawLazyFont -> bch:
    java.lang.String mRawResourceName -> a
    org.holoeverywhere.FontLoader$RawLazyFont clone() -> i
    android.graphics.Typeface loadTypeface() -> e
    org.holoeverywhere.FontLoader$RawFont clone() -> h
org.holoeverywhere.FontLoader$RobotoRawFont -> bci:
org.holoeverywhere.FontLoader$RobotoRawLazyFont -> bcj:
org.holoeverywhere.HoloEverywhere -> bck:
    boolean ALWAYS_USE_PARENT_THEME -> a
    boolean DEBUG -> b
    boolean DISABLE_OVERSCROLL_EFFECT -> c
    boolean NAMED_PREFERENCES -> d
    java.lang.String PACKAGE -> e
    org.holoeverywhere.HoloEverywhere$PreferenceImpl PREFERENCE_IMPL -> f
    boolean WRAP_TO_NATIVE_CONTEXT_MENU -> g
org.holoeverywhere.HoloEverywhere$PreferenceImpl -> bcl:
    org.holoeverywhere.HoloEverywhere$PreferenceImpl JSON -> a
    org.holoeverywhere.HoloEverywhere$PreferenceImpl XML -> b
    org.holoeverywhere.HoloEverywhere$PreferenceImpl[] ENUM$VALUES -> c
    org.holoeverywhere.HoloEverywhere$PreferenceImpl[] values() -> values
    org.holoeverywhere.HoloEverywhere$PreferenceImpl valueOf(java.lang.String) -> valueOf
org.holoeverywhere.LayoutInflater -> org.holoeverywhere.LayoutInflater:
    java.util.HashMap sConstructorMap -> a
    java.lang.Class[] sConstructorSignature -> b
    java.util.Map sFinishInflateMethods -> c
    java.util.Map sInstances -> d
    org.holoeverywhere.LayoutInflater$OnInitInflaterListener sListener -> e
    java.util.List sPackages -> f
    java.util.Map sRemaps -> g
    org.holoeverywhere.app.Fragment mChildFragment -> h
    java.util.Map mClonedInstances -> i
    java.lang.Object[] mConstructorArgs -> j
    android.content.Context mContext -> k
    java.util.List mFactories -> l
    android.view.LayoutInflater$Filter mFilter -> m
    java.util.HashMap mFilterMap -> n
    android.support.v4.app.FragmentActivity mFragmentActivity -> o
    java.util.Map mFragmentChildInstances -> p
    org.holoeverywhere.LayoutInflater mParentInflater -> q
    void asInternal(java.lang.Class) -> a
    org.holoeverywhere.LayoutInflater from(android.content.Context) -> a
    android.view.View inflate(android.content.Context,int) -> a
    android.view.View inflate(android.content.Context,int,android.view.ViewGroup,boolean) -> a
    void register(java.lang.String,java.lang.String) -> a
    void registerPackage(java.lang.String) -> a
    void removeInstance(android.content.Context) -> b
    android.view.View _createView(java.lang.String,java.lang.String,android.util.AttributeSet) -> a
    void addFactory(org.holoeverywhere.LayoutInflater$Factory,int) -> a
    void checkFactoryOnNull(org.holoeverywhere.LayoutInflater$Factory) -> b
    org.holoeverywhere.LayoutInflater cloneInContext(android.content.Context) -> c
    android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet) -> a
    void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet) -> b
    android.view.LayoutInflater$Filter getFilter() -> getFilter
    android.support.v4.app.FragmentActivity getFragmentActivity() -> a
    android.view.View inflate(int,android.view.ViewGroup) -> inflate
    android.view.View inflate(int,android.view.ViewGroup,boolean) -> inflate
    android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup) -> inflate
    android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean) -> inflate
    org.holoeverywhere.LayoutInflater obtainFragmentChildInflater(org.holoeverywhere.app.Fragment) -> a
    android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet) -> onCreateView
    void parseInclude(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet) -> a
    void parseRequestFocus(org.xmlpull.v1.XmlPullParser,android.view.View) -> a
    android.view.View prepareView(android.view.View) -> a
    void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean) -> a
    void setFactory(android.view.LayoutInflater$Factory) -> setFactory
    void setFactory(org.holoeverywhere.LayoutInflater$Factory) -> a
    void setFactory2(android.view.LayoutInflater$Factory2) -> setFactory2
    void setFilter(android.view.LayoutInflater$Filter) -> setFilter
    void setFragmentActivity(android.support.v4.app.FragmentActivity) -> a
    org.holoeverywhere.LayoutInflater setParent(android.view.LayoutInflater) -> a
    android.view.LayoutInflater cloneInContext(android.content.Context) -> cloneInContext
org.holoeverywhere.LayoutInflater$BlinkLayout -> org.holoeverywhere.LayoutInflater$BlinkLayout:
    boolean mBlink -> a
    boolean mBlinkState -> b
    android.os.Handler mHandler -> c
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void makeBlink() -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean access$0(org.holoeverywhere.LayoutInflater$BlinkLayout) -> a
    boolean access$1(org.holoeverywhere.LayoutInflater$BlinkLayout) -> b
    void access$2(org.holoeverywhere.LayoutInflater$BlinkLayout,boolean) -> a
    void access$3(org.holoeverywhere.LayoutInflater$BlinkLayout) -> c
org.holoeverywhere.LayoutInflater$BlinkLayout$1 -> bcm:
    org.holoeverywhere.LayoutInflater$BlinkLayout this$1 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
org.holoeverywhere.LayoutInflater$Factory -> bcn:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
org.holoeverywhere.LayoutInflater$Factory2Wrapper -> bco:
    android.view.LayoutInflater$Factory2 mFactory -> a
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
org.holoeverywhere.LayoutInflater$FactoryWrapper -> bcp:
    android.view.LayoutInflater$Factory mFactory -> a
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
org.holoeverywhere.LayoutInflater$LayoutInflaterCreator -> bcq:
    org.holoeverywhere.LayoutInflater createService(android.content.Context) -> a
    java.lang.Object createService(android.content.Context) -> b
org.holoeverywhere.LayoutInflater$OnInitInflaterListener -> bcr:
    void onInitInflater(org.holoeverywhere.LayoutInflater) -> a
org.holoeverywhere.R -> bcs:
org.holoeverywhere.R$attr -> bct:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int alertDialogTitleDividerColor -> alertDialogTitleDividerColor
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int borderlessButtonStyle -> borderlessButtonStyle
    int bottomBright -> bottomBright
    int bottomDark -> bottomDark
    int bottomMedium -> bottomMedium
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonStyleSmall -> buttonStyleSmall
    int calendarViewShown -> calendarViewShown
    int calendarViewStyle -> calendarViewStyle
    int centerBright -> centerBright
    int centerDark -> centerDark
    int centerMedium -> centerMedium
    int customNavigationLayout -> customNavigationLayout
    int datePickerStyle -> datePickerStyle
    int dateTextAppearance -> dateTextAppearance
    int detailsElementBackground -> detailsElementBackground
    int dialogItemBackground -> dialogItemBackground
    int dialogItemTextAppearance -> dialogItemTextAppearance
    int dialogTheme -> dialogTheme
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerVertical -> dividerVertical
    int dropDownHorizontalOffset -> dropDownHorizontalOffset
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropDownVerticalOffset -> dropDownVerticalOffset
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int endYear -> endYear
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int fastScrollOverlayPosition -> fastScrollOverlayPosition
    int fastScrollPreviewBackgroundLeft -> fastScrollPreviewBackgroundLeft
    int fastScrollPreviewBackgroundRight -> fastScrollPreviewBackgroundRight
    int fastScrollTextColor -> fastScrollTextColor
    int fastScrollThumbDrawable -> fastScrollThumbDrawable
    int fastScrollTrackDrawable -> fastScrollTrackDrawable
    int firstDayOfWeek -> firstDayOfWeek
    int flingable -> flingable
    int focusedMonthDateColor -> focusedMonthDateColor
    int forceShownState -> forceShownState
    int fullBright -> fullBright
    int fullDark -> fullDark
    int gravity -> gravity
    int headerBackground -> headerBackground
    int height -> height
    int holoTheme -> holoTheme
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int horizontalProgressLayout -> horizontalProgressLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int layout -> layout
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int maxDate -> maxDate
    int minDate -> minDate
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationMode -> navigationMode
    int numberPickerDownButtonStyle -> numberPickerDownButtonStyle
    int numberPickerInputTextStyle -> numberPickerInputTextStyle
    int numberPickerStyle -> numberPickerStyle
    int numberPickerUpButtonStyle -> numberPickerUpButtonStyle
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int popupWindowStyle -> popupWindowStyle
    int preferenceTheme -> preferenceTheme
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int progressLayout -> progressLayout
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int segmentedButtonStyle -> segmentedButtonStyle
    int selectableItemBackground -> selectableItemBackground
    int selectedDateVerticalBar -> selectedDateVerticalBar
    int selectedWeekBackgroundColor -> selectedWeekBackgroundColor
    int selectionDivider -> selectionDivider
    int selectionDividerHeight -> selectionDividerHeight
    int selectionDividersDistance -> selectionDividersDistance
    int showWeekNumber -> showWeekNumber
    int shownWeekCount -> shownWeekCount
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int solidColor -> solidColor
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int spinnersShown -> spinnersShown
    int startYear -> startYear
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchStyleOld -> switchStyleOld
    int switchTextAppearance -> switchTextAppearance
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int textOff -> textOff
    int textOn -> textOn
    int thumb -> thumb
    int thumbTextPadding -> thumbTextPadding
    int timePickerStyle -> timePickerStyle
    int title -> title
    int titleTextStyle -> titleTextStyle
    int toggleWhenClick -> toggleWhenClick
    int topBright -> topBright
    int topDark -> topDark
    int track -> track
    int unfocusedMonthDateColor -> unfocusedMonthDateColor
    int verticalDivider -> verticalDivider
    int virtualButtonPressedDrawable -> virtualButtonPressedDrawable
    int weekDayTextAppearance -> weekDayTextAppearance
    int weekNumberColor -> weekNumberColor
    int weekSeparatorLineColor -> weekSeparatorLineColor
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinHeightMajor -> windowMinHeightMajor
    int windowMinHeightMinor -> windowMinHeightMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
org.holoeverywhere.R$dimen -> bcu:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__alert_dialog_title_height -> abs__alert_dialog_title_height
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int action_button_min_width -> action_button_min_width
    int alert_dialog_button_bar_height -> alert_dialog_button_bar_height
    int alert_dialog_title_height -> alert_dialog_title_height
    int config_prefDialogWidth -> config_prefDialogWidth
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int dialog_min_width_major -> dialog_min_width_major
    int dialog_min_width_minor -> dialog_min_width_minor
    int fastscroll_overlay_size -> fastscroll_overlay_size
    int fastscroll_thumb_height -> fastscroll_thumb_height
    int fastscroll_thumb_width -> fastscroll_thumb_width
org.holoeverywhere.R$drawable -> bcv:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
    int actionoverflow -> actionoverflow
    int actionoverflow_selected -> actionoverflow_selected
    int activated_background_holo -> activated_background_holo
    int activity_picker_bg -> activity_picker_bg
    int activity_picker_bg_activated -> activity_picker_bg_activated
    int activity_picker_bg_focused -> activity_picker_bg_focused
    int background_cache_hint_selector_holo_dark -> background_cache_hint_selector_holo_dark
    int background_cache_hint_selector_holo_light -> background_cache_hint_selector_holo_light
    int background_holo_dark -> background_holo_dark
    int background_holo_light -> background_holo_light
    int btn_check_label_background -> btn_check_label_background
    int btn_check_off_disabled_focused_holo_dark -> btn_check_off_disabled_focused_holo_dark
    int btn_check_off_disabled_focused_holo_light -> btn_check_off_disabled_focused_holo_light
    int btn_check_off_disabled_holo_dark -> btn_check_off_disabled_holo_dark
    int btn_check_off_disabled_holo_light -> btn_check_off_disabled_holo_light
    int btn_check_off_focused_holo_dark -> btn_check_off_focused_holo_dark
    int btn_check_off_focused_holo_light -> btn_check_off_focused_holo_light
    int btn_check_off_holo_dark -> btn_check_off_holo_dark
    int btn_check_off_holo_light -> btn_check_off_holo_light
    int btn_check_off_pressed_holo_dark -> btn_check_off_pressed_holo_dark
    int btn_check_off_pressed_holo_light -> btn_check_off_pressed_holo_light
    int btn_check_on_disabled_focused_holo_dark -> btn_check_on_disabled_focused_holo_dark
    int btn_check_on_disabled_focused_holo_light -> btn_check_on_disabled_focused_holo_light
    int btn_check_on_disabled_holo_dark -> btn_check_on_disabled_holo_dark
    int btn_check_on_disabled_holo_light -> btn_check_on_disabled_holo_light
    int btn_check_on_focused_holo_dark -> btn_check_on_focused_holo_dark
    int btn_check_on_focused_holo_light -> btn_check_on_focused_holo_light
    int btn_check_on_holo_dark -> btn_check_on_holo_dark
    int btn_check_on_holo_light -> btn_check_on_holo_light
    int btn_check_on_pressed_holo_dark -> btn_check_on_pressed_holo_dark
    int btn_check_on_pressed_holo_light -> btn_check_on_pressed_holo_light
    int btn_checkbox_holo_dark -> btn_checkbox_holo_dark
    int btn_checkbox_holo_light -> btn_checkbox_holo_light
    int btn_default_disabled_focused_holo_dark -> btn_default_disabled_focused_holo_dark
    int btn_default_disabled_focused_holo_light -> btn_default_disabled_focused_holo_light
    int btn_default_disabled_holo_dark -> btn_default_disabled_holo_dark
    int btn_default_disabled_holo_light -> btn_default_disabled_holo_light
    int btn_default_focused_holo_dark -> btn_default_focused_holo_dark
    int btn_default_focused_holo_light -> btn_default_focused_holo_light
    int btn_default_holo_dark -> btn_default_holo_dark
    int btn_default_holo_light -> btn_default_holo_light
    int btn_default_normal_holo_dark -> btn_default_normal_holo_dark
    int btn_default_normal_holo_light -> btn_default_normal_holo_light
    int btn_default_pressed_holo_dark -> btn_default_pressed_holo_dark
    int btn_default_pressed_holo_light -> btn_default_pressed_holo_light
    int btn_group_disabled_holo_dark -> btn_group_disabled_holo_dark
    int btn_group_disabled_holo_light -> btn_group_disabled_holo_light
    int btn_group_holo_dark -> btn_group_holo_dark
    int btn_group_holo_light -> btn_group_holo_light
    int btn_group_normal_holo_dark -> btn_group_normal_holo_dark
    int btn_group_normal_holo_light -> btn_group_normal_holo_light
    int btn_radio_holo_dark -> btn_radio_holo_dark
    int btn_radio_holo_light -> btn_radio_holo_light
    int btn_radio_label_background -> btn_radio_label_background
    int btn_radio_off_disabled_focused_holo_dark -> btn_radio_off_disabled_focused_holo_dark
    int btn_radio_off_disabled_focused_holo_light -> btn_radio_off_disabled_focused_holo_light
    int btn_radio_off_disabled_holo_dark -> btn_radio_off_disabled_holo_dark
    int btn_radio_off_disabled_holo_light -> btn_radio_off_disabled_holo_light
    int btn_radio_off_focused_holo_dark -> btn_radio_off_focused_holo_dark
    int btn_radio_off_focused_holo_light -> btn_radio_off_focused_holo_light
    int btn_radio_off_holo_dark -> btn_radio_off_holo_dark
    int btn_radio_off_holo_light -> btn_radio_off_holo_light
    int btn_radio_off_pressed_holo_dark -> btn_radio_off_pressed_holo_dark
    int btn_radio_off_pressed_holo_light -> btn_radio_off_pressed_holo_light
    int btn_radio_on_disabled_focused_holo_dark -> btn_radio_on_disabled_focused_holo_dark
    int btn_radio_on_disabled_focused_holo_light -> btn_radio_on_disabled_focused_holo_light
    int btn_radio_on_disabled_holo_dark -> btn_radio_on_disabled_holo_dark
    int btn_radio_on_disabled_holo_light -> btn_radio_on_disabled_holo_light
    int btn_radio_on_focused_holo_dark -> btn_radio_on_focused_holo_dark
    int btn_radio_on_focused_holo_light -> btn_radio_on_focused_holo_light
    int btn_radio_on_holo_dark -> btn_radio_on_holo_dark
    int btn_radio_on_holo_light -> btn_radio_on_holo_light
    int btn_radio_on_pressed_holo_dark -> btn_radio_on_pressed_holo_dark
    int btn_radio_on_pressed_holo_light -> btn_radio_on_pressed_holo_light
    int btn_rating_star_off_focused_holo_dark -> btn_rating_star_off_focused_holo_dark
    int btn_rating_star_off_focused_holo_light -> btn_rating_star_off_focused_holo_light
    int btn_rating_star_off_normal_holo_dark -> btn_rating_star_off_normal_holo_dark
    int btn_rating_star_off_normal_holo_light -> btn_rating_star_off_normal_holo_light
    int btn_rating_star_off_pressed_holo_dark -> btn_rating_star_off_pressed_holo_dark
    int btn_rating_star_off_pressed_holo_light -> btn_rating_star_off_pressed_holo_light
    int btn_rating_star_on_focused_holo_dark -> btn_rating_star_on_focused_holo_dark
    int btn_rating_star_on_focused_holo_light -> btn_rating_star_on_focused_holo_light
    int btn_rating_star_on_normal_holo_dark -> btn_rating_star_on_normal_holo_dark
    int btn_rating_star_on_normal_holo_light -> btn_rating_star_on_normal_holo_light
    int btn_rating_star_on_pressed_holo_dark -> btn_rating_star_on_pressed_holo_dark
    int btn_rating_star_on_pressed_holo_light -> btn_rating_star_on_pressed_holo_light
    int btn_toggle_holo_dark -> btn_toggle_holo_dark
    int btn_toggle_holo_light -> btn_toggle_holo_light
    int btn_toggle_off_disabled_focused_holo_dark -> btn_toggle_off_disabled_focused_holo_dark
    int btn_toggle_off_disabled_focused_holo_light -> btn_toggle_off_disabled_focused_holo_light
    int btn_toggle_off_disabled_holo_dark -> btn_toggle_off_disabled_holo_dark
    int btn_toggle_off_disabled_holo_light -> btn_toggle_off_disabled_holo_light
    int btn_toggle_off_focused_holo_dark -> btn_toggle_off_focused_holo_dark
    int btn_toggle_off_focused_holo_light -> btn_toggle_off_focused_holo_light
    int btn_toggle_off_normal_holo_dark -> btn_toggle_off_normal_holo_dark
    int btn_toggle_off_normal_holo_light -> btn_toggle_off_normal_holo_light
    int btn_toggle_off_pressed_holo_dark -> btn_toggle_off_pressed_holo_dark
    int btn_toggle_off_pressed_holo_light -> btn_toggle_off_pressed_holo_light
    int btn_toggle_on_disabled_focused_holo_dark -> btn_toggle_on_disabled_focused_holo_dark
    int btn_toggle_on_disabled_focused_holo_light -> btn_toggle_on_disabled_focused_holo_light
    int btn_toggle_on_disabled_holo_dark -> btn_toggle_on_disabled_holo_dark
    int btn_toggle_on_disabled_holo_light -> btn_toggle_on_disabled_holo_light
    int btn_toggle_on_focused_holo_dark -> btn_toggle_on_focused_holo_dark
    int btn_toggle_on_focused_holo_light -> btn_toggle_on_focused_holo_light
    int btn_toggle_on_normal_holo_dark -> btn_toggle_on_normal_holo_dark
    int btn_toggle_on_normal_holo_light -> btn_toggle_on_normal_holo_light
    int btn_toggle_on_pressed_holo_dark -> btn_toggle_on_pressed_holo_dark
    int btn_toggle_on_pressed_holo_light -> btn_toggle_on_pressed_holo_light
    int day_picker_week_view_dayline_holo -> day_picker_week_view_dayline_holo
    int dialog_bottom_holo_dark -> dialog_bottom_holo_dark
    int dialog_bottom_holo_light -> dialog_bottom_holo_light
    int dialog_full_holo_dark -> dialog_full_holo_dark
    int dialog_full_holo_light -> dialog_full_holo_light
    int dialog_middle_holo_dark -> dialog_middle_holo_dark
    int dialog_middle_holo_light -> dialog_middle_holo_light
    int dialog_top_holo_dark -> dialog_top_holo_dark
    int dialog_top_holo_light -> dialog_top_holo_light
    int edit_text_holo_dark -> edit_text_holo_dark
    int edit_text_holo_light -> edit_text_holo_light
    int expander_close_holo_dark -> expander_close_holo_dark
    int expander_close_holo_light -> expander_close_holo_light
    int expander_group_holo_dark -> expander_group_holo_dark
    int expander_group_holo_light -> expander_group_holo_light
    int expander_open_holo_dark -> expander_open_holo_dark
    int expander_open_holo_light -> expander_open_holo_light
    int fastscroll_label_left_holo_dark -> fastscroll_label_left_holo_dark
    int fastscroll_label_left_holo_light -> fastscroll_label_left_holo_light
    int fastscroll_label_right_holo_dark -> fastscroll_label_right_holo_dark
    int fastscroll_label_right_holo_light -> fastscroll_label_right_holo_light
    int fastscroll_thumb_default_holo -> fastscroll_thumb_default_holo
    int fastscroll_thumb_holo -> fastscroll_thumb_holo
    int fastscroll_thumb_pressed_holo -> fastscroll_thumb_pressed_holo
    int fastscroll_track_default_holo_dark -> fastscroll_track_default_holo_dark
    int fastscroll_track_default_holo_light -> fastscroll_track_default_holo_light
    int fastscroll_track_holo_dark -> fastscroll_track_holo_dark
    int fastscroll_track_holo_light -> fastscroll_track_holo_light
    int fastscroll_track_pressed_holo_dark -> fastscroll_track_pressed_holo_dark
    int fastscroll_track_pressed_holo_light -> fastscroll_track_pressed_holo_light
    int item_background_holo_dark -> item_background_holo_dark
    int item_background_holo_light -> item_background_holo_light
    int list_activated_holo -> list_activated_holo
    int list_divider_holo_dark -> list_divider_holo_dark
    int list_divider_holo_light -> list_divider_holo_light
    int list_focused_holo -> list_focused_holo
    int list_longpressed_holo -> list_longpressed_holo
    int list_pressed_holo_dark -> list_pressed_holo_dark
    int list_pressed_holo_light -> list_pressed_holo_light
    int list_section_divider_holo_dark -> list_section_divider_holo_dark
    int list_section_divider_holo_light -> list_section_divider_holo_light
    int list_selector_background_transition_holo_dark -> list_selector_background_transition_holo_dark
    int list_selector_background_transition_holo_light -> list_selector_background_transition_holo_light
    int list_selector_disabled_holo_dark -> list_selector_disabled_holo_dark
    int list_selector_disabled_holo_light -> list_selector_disabled_holo_light
    int list_selector_holo_dark -> list_selector_holo_dark
    int list_selector_holo_light -> list_selector_holo_light
    int logo_ic_text -> logo_ic_text
    int menu_background_fill_parent_width_holo_dark -> menu_background_fill_parent_width_holo_dark
    int menu_background_fill_parent_width_holo_light -> menu_background_fill_parent_width_holo_light
    int menu_dropdown_panel_holo_dark -> menu_dropdown_panel_holo_dark
    int menu_dropdown_panel_holo_light -> menu_dropdown_panel_holo_light
    int menu_hardkey_panel_holo_dark -> menu_hardkey_panel_holo_dark
    int menu_hardkey_panel_holo_light -> menu_hardkey_panel_holo_light
    int numberpicker_selection_divider -> numberpicker_selection_divider
    int old_switch_thumb_activated_holo_dark -> old_switch_thumb_activated_holo_dark
    int old_switch_thumb_activated_holo_light -> old_switch_thumb_activated_holo_light
    int old_switch_thumb_disabled_holo_dark -> old_switch_thumb_disabled_holo_dark
    int old_switch_thumb_disabled_holo_light -> old_switch_thumb_disabled_holo_light
    int old_switch_thumb_holo_dark -> old_switch_thumb_holo_dark
    int old_switch_thumb_holo_light -> old_switch_thumb_holo_light
    int old_switch_thumb_pressed_holo_dark -> old_switch_thumb_pressed_holo_dark
    int old_switch_thumb_pressed_holo_light -> old_switch_thumb_pressed_holo_light
    int panel_bg_holo_dark -> panel_bg_holo_dark
    int panel_bg_holo_light -> panel_bg_holo_light
    int progress_bg_holo_dark -> progress_bg_holo_dark
    int progress_bg_holo_light -> progress_bg_holo_light
    int progress_horizontal_holo_dark -> progress_horizontal_holo_dark
    int progress_horizontal_holo_light -> progress_horizontal_holo_light
    int progress_indeterminate_horizontal_holo -> progress_indeterminate_horizontal_holo
    int progress_large_holo -> progress_large_holo
    int progress_medium_holo -> progress_medium_holo
    int progress_primary_holo_dark -> progress_primary_holo_dark
    int progress_primary_holo_light -> progress_primary_holo_light
    int progress_secondary_holo_dark -> progress_secondary_holo_dark
    int progress_secondary_holo_light -> progress_secondary_holo_light
    int progress_small_holo -> progress_small_holo
    int progressbar_indeterminate_holo1 -> progressbar_indeterminate_holo1
    int progressbar_indeterminate_holo2 -> progressbar_indeterminate_holo2
    int progressbar_indeterminate_holo3 -> progressbar_indeterminate_holo3
    int progressbar_indeterminate_holo4 -> progressbar_indeterminate_holo4
    int progressbar_indeterminate_holo5 -> progressbar_indeterminate_holo5
    int progressbar_indeterminate_holo6 -> progressbar_indeterminate_holo6
    int progressbar_indeterminate_holo7 -> progressbar_indeterminate_holo7
    int progressbar_indeterminate_holo8 -> progressbar_indeterminate_holo8
    int rate_star_big_half_holo_dark -> rate_star_big_half_holo_dark
    int rate_star_big_half_holo_light -> rate_star_big_half_holo_light
    int rate_star_big_off_holo_dark -> rate_star_big_off_holo_dark
    int rate_star_big_off_holo_light -> rate_star_big_off_holo_light
    int rate_star_big_on_holo_dark -> rate_star_big_on_holo_dark
    int rate_star_big_on_holo_light -> rate_star_big_on_holo_light
    int rate_star_small_half_holo_dark -> rate_star_small_half_holo_dark
    int rate_star_small_half_holo_light -> rate_star_small_half_holo_light
    int rate_star_small_off_holo_dark -> rate_star_small_off_holo_dark
    int rate_star_small_off_holo_light -> rate_star_small_off_holo_light
    int rate_star_small_on_holo_dark -> rate_star_small_on_holo_dark
    int rate_star_small_on_holo_light -> rate_star_small_on_holo_light
    int ratingbar_full_empty_holo_dark -> ratingbar_full_empty_holo_dark
    int ratingbar_full_empty_holo_light -> ratingbar_full_empty_holo_light
    int ratingbar_full_filled_holo_dark -> ratingbar_full_filled_holo_dark
    int ratingbar_full_filled_holo_light -> ratingbar_full_filled_holo_light
    int ratingbar_full_holo_dark -> ratingbar_full_holo_dark
    int ratingbar_full_holo_light -> ratingbar_full_holo_light
    int ratingbar_holo_dark -> ratingbar_holo_dark
    int ratingbar_holo_light -> ratingbar_holo_light
    int ratingbar_small_holo_dark -> ratingbar_small_holo_dark
    int ratingbar_small_holo_light -> ratingbar_small_holo_light
    int scrollbar_handle_holo_dark -> scrollbar_handle_holo_dark
    int scrollbar_handle_holo_light -> scrollbar_handle_holo_light
    int scrubber_control_disabled_holo -> scrubber_control_disabled_holo
    int scrubber_control_focused_holo -> scrubber_control_focused_holo
    int scrubber_control_normal_holo -> scrubber_control_normal_holo
    int scrubber_control_pressed_holo -> scrubber_control_pressed_holo
    int scrubber_control_selector_holo -> scrubber_control_selector_holo
    int scrubber_primary_holo -> scrubber_primary_holo
    int scrubber_progress_horizontal_holo_dark -> scrubber_progress_horizontal_holo_dark
    int scrubber_progress_horizontal_holo_light -> scrubber_progress_horizontal_holo_light
    int scrubber_secondary_holo -> scrubber_secondary_holo
    int scrubber_track_holo_dark -> scrubber_track_holo_dark
    int scrubber_track_holo_light -> scrubber_track_holo_light
    int spinner_16_inner_holo -> spinner_16_inner_holo
    int spinner_16_outer_holo -> spinner_16_outer_holo
    int spinner_20_inner_holo -> spinner_20_inner_holo
    int spinner_48_inner_holo -> spinner_48_inner_holo
    int spinner_48_outer_holo -> spinner_48_outer_holo
    int spinner_76_inner_holo -> spinner_76_inner_holo
    int spinner_76_outer_holo -> spinner_76_outer_holo
    int spinner_background_holo_dark -> spinner_background_holo_dark
    int spinner_background_holo_light -> spinner_background_holo_light
    int spinner_default_holo_dark -> spinner_default_holo_dark
    int spinner_default_holo_light -> spinner_default_holo_light
    int spinner_disabled_holo_dark -> spinner_disabled_holo_dark
    int spinner_disabled_holo_light -> spinner_disabled_holo_light
    int spinner_focused_holo_dark -> spinner_focused_holo_dark
    int spinner_focused_holo_light -> spinner_focused_holo_light
    int spinner_pressed_holo_dark -> spinner_pressed_holo_dark
    int spinner_pressed_holo_light -> spinner_pressed_holo_light
    int switch_bg_focused_holo_dark -> switch_bg_focused_holo_dark
    int switch_bg_focused_holo_light -> switch_bg_focused_holo_light
    int switch_bg_holo_dark -> switch_bg_holo_dark
    int switch_bg_holo_light -> switch_bg_holo_light
    int switch_inner_holo_dark -> switch_inner_holo_dark
    int switch_inner_holo_light -> switch_inner_holo_light
    int switch_old_inner_holo_dark -> switch_old_inner_holo_dark
    int switch_old_inner_holo_light -> switch_old_inner_holo_light
    int switch_thumb_activated_holo_dark -> switch_thumb_activated_holo_dark
    int switch_thumb_activated_holo_light -> switch_thumb_activated_holo_light
    int switch_thumb_disabled_holo_dark -> switch_thumb_disabled_holo_dark
    int switch_thumb_disabled_holo_light -> switch_thumb_disabled_holo_light
    int switch_thumb_holo_dark -> switch_thumb_holo_dark
    int switch_thumb_holo_light -> switch_thumb_holo_light
    int switch_thumb_pressed_holo_dark -> switch_thumb_pressed_holo_dark
    int switch_thumb_pressed_holo_light -> switch_thumb_pressed_holo_light
    int switch_track_holo_dark -> switch_track_holo_dark
    int switch_track_holo_light -> switch_track_holo_light
    int textfield_activated_holo_dark -> textfield_activated_holo_dark
    int textfield_activated_holo_light -> textfield_activated_holo_light
    int textfield_default_holo_dark -> textfield_default_holo_dark
    int textfield_default_holo_light -> textfield_default_holo_light
    int textfield_disabled_focused_holo_dark -> textfield_disabled_focused_holo_dark
    int textfield_disabled_focused_holo_light -> textfield_disabled_focused_holo_light
    int textfield_disabled_holo_dark -> textfield_disabled_holo_dark
    int textfield_disabled_holo_light -> textfield_disabled_holo_light
    int toast_frame -> toast_frame
    int transparent -> transparent
org.holoeverywhere.R$id -> bcw:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__titleDivider -> abs__titleDivider
    int abs__up -> abs__up
    int alertTitle -> alertTitle
    int amPm -> amPm
    int atThumb -> atThumb
    int bottom -> bottom
    int button1 -> button1
    int button2 -> button2
    int button3 -> button3
    int buttonPanel -> buttonPanel
    int buttonPanelTopDivivder -> buttonPanelTopDivivder
    int button_always -> button_always
    int button_bar -> button_bar
    int button_once -> button_once
    int calendar_view -> calendar_view
    int center -> center
    int center_horizontal -> center_horizontal
    int center_vertical -> center_vertical
    int checkbox -> checkbox
    int clip -> clip
    int clip_horizontal -> clip_horizontal
    int clip_vertical -> clip_vertical
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int dark -> dark
    int datePicker -> datePicker
    int day -> day
    int day_names -> day_names
    int decrement -> decrement
    int dialog -> dialog
    int disableHome -> disableHome
    int divider -> divider
    int dropdown -> dropdown
    int edit -> edit
    int edit_query -> edit_query
    int empty -> empty
    int end -> end
    int expanded_menu -> expanded_menu
    int fill -> fill
    int fill_horizontal -> fill_horizontal
    int fill_vertical -> fill_vertical
    int floating -> floating
    int fontLoaderFont -> fontLoaderFont
    int fontLoaderFontFamily -> fontLoaderFontFamily
    int fontLoaderFontStyle -> fontLoaderFontStyle
    int homeAsUp -> homeAsUp
    int hour -> hour
    int icon -> icon
    int increment -> increment
    int internalEmpty -> internalEmpty
    int invalid -> invalid
    int left -> left
    int leftSpacer -> leftSpacer
    int light -> light
    int list -> list
    int listContainer -> listContainer
    int listMode -> listMode
    int message -> message
    int minute -> minute
    int mixed -> mixed
    int month -> month
    int month_name -> month_name
    int normal -> normal
    int numberpicker_input -> numberpicker_input
    int parentPanel -> parentPanel
    int pickers -> pickers
    int preference -> preference
    int progress -> progress
    int progressContainer -> progressContainer
    int progress_number -> progress_number
    int progress_percent -> progress_percent
    int radio -> radio
    int resolver_grid -> resolver_grid
    int right -> right
    int rightSpacer -> rightSpacer
    int scrollView -> scrollView
    int secondaryProgress -> secondaryProgress
    int select_dialog_listview -> select_dialog_listview
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int start -> start
    int tabMode -> tabMode
    int tabSwipePager -> tabSwipePager
    int timePicker -> timePicker
    int title -> title
    int titleDivider -> titleDivider
    int titleDividerTop -> titleDividerTop
    int title_template -> title_template
    int top -> top
    int topPanel -> topPanel
    int typeface -> typeface
    int useLogo -> useLogo
    int wrap_content -> wrap_content
    int year -> year
org.holoeverywhere.R$integer -> bcx:
    int abs__max_action_buttons -> abs__max_action_buttons
    int config_activityDefaultDur -> config_activityDefaultDur
    int config_activityShortDur -> config_activityShortDur
    int config_longAnimTime -> config_longAnimTime
    int config_maxResolverActivityColumns -> config_maxResolverActivityColumns
    int config_mediumAnimTime -> config_mediumAnimTime
    int config_shortAnimTime -> config_shortAnimTime
org.holoeverywhere.R$layout -> bcy:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__dialog_title_holo -> abs__dialog_title_holo
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int alert_dialog_holo -> alert_dialog_holo
    int alert_dialog_progress_holo -> alert_dialog_progress_holo
    int calendar_view -> calendar_view
    int date_picker_dialog -> date_picker_dialog
    int date_picker_holo -> date_picker_holo
    int expandable_list_content -> expandable_list_content
    int expanded_menu_layout -> expanded_menu_layout
    int grid_content -> grid_content
    int list_content -> list_content
    int list_menu_item_checkbox -> list_menu_item_checkbox
    int list_menu_item_icon -> list_menu_item_icon
    int list_menu_item_layout -> list_menu_item_layout
    int list_menu_item_radio -> list_menu_item_radio
    int number_picker_with_selector_wheel -> number_picker_with_selector_wheel
    int popup_menu_item_layout -> popup_menu_item_layout
    int progress_dialog_holo -> progress_dialog_holo
    int resolve_list_item -> resolve_list_item
    int resolver_grid -> resolver_grid
    int select_dialog_holo -> select_dialog_holo
    int select_dialog_item_holo -> select_dialog_item_holo
    int select_dialog_multichoice_holo -> select_dialog_multichoice_holo
    int select_dialog_singlechoice_holo -> select_dialog_singlechoice_holo
    int simple_dropdown_hint -> simple_dropdown_hint
    int simple_dropdown_item_1line -> simple_dropdown_item_1line
    int simple_spinner_dropdown_item -> simple_spinner_dropdown_item
    int simple_spinner_item -> simple_spinner_item
    int tab_swipe -> tab_swipe
    int time_picker_dialog -> time_picker_dialog
    int time_picker_holo -> time_picker_holo
org.holoeverywhere.R$raw -> bcz:
    int roboto_bold -> roboto_bold
    int roboto_bolditalic -> roboto_bolditalic
    int roboto_italic -> roboto_italic
    int roboto_regular -> roboto_regular
org.holoeverywhere.R$string -> bda:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_dialog_title_default -> abs__activity_chooser_view_dialog_title_default
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__share_action_provider_share_with -> abs__share_action_provider_share_with
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
    int activity_resolver_use_always -> activity_resolver_use_always
    int activity_resolver_use_once -> activity_resolver_use_once
    int candidates_style -> candidates_style
    int capital_off -> capital_off
    int capital_on -> capital_on
    int chooseActivity -> chooseActivity
    int date_picker_decrement_day_button -> date_picker_decrement_day_button
    int date_picker_decrement_month_button -> date_picker_decrement_month_button
    int date_picker_decrement_year_button -> date_picker_decrement_year_button
    int date_picker_dialog_title -> date_picker_dialog_title
    int date_picker_increment_day_button -> date_picker_increment_day_button
    int date_picker_increment_month_button -> date_picker_increment_month_button
    int date_picker_increment_year_button -> date_picker_increment_year_button
    int date_time_done -> date_time_done
    int date_time_set -> date_time_set
    int loading -> loading
    int noApplications -> noApplications
    int number_picker_decrement_button -> number_picker_decrement_button
    int number_picker_increment_button -> number_picker_increment_button
    int number_picker_increment_scroll_action -> number_picker_increment_scroll_action
    int number_picker_increment_scroll_mode -> number_picker_increment_scroll_mode
    int ringtone_default -> ringtone_default
    int ringtone_picker_title -> ringtone_picker_title
    int ringtone_silent -> ringtone_silent
    int time_picker_decrement_hour_button -> time_picker_decrement_hour_button
    int time_picker_decrement_minute_button -> time_picker_decrement_minute_button
    int time_picker_decrement_set_am_button -> time_picker_decrement_set_am_button
    int time_picker_dialog_title -> time_picker_dialog_title
    int time_picker_increment_hour_button -> time_picker_increment_hour_button
    int time_picker_increment_minute_button -> time_picker_increment_minute_button
    int time_picker_increment_set_pm_button -> time_picker_increment_set_pm_button
    int time_picker_separator -> time_picker_separator
    int whichApplication -> whichApplication
org.holoeverywhere.R$style -> bdb:
    int Holo -> Holo
    int Holo_AlertDialog -> Holo_AlertDialog
    int Holo_AlertDialog_Light -> Holo_AlertDialog_Light
    int Holo_Animation -> Holo_Animation
    int Holo_Animation_Dialog -> Holo_Animation_Dialog
    int Holo_Animation_DropDownDown -> Holo_Animation_DropDownDown
    int Holo_Animation_DropDownUp -> Holo_Animation_DropDownUp
    int Holo_Animation_PopupWindow -> Holo_Animation_PopupWindow
    int Holo_AutoCompleteTextView -> Holo_AutoCompleteTextView
    int Holo_AutoCompleteTextView_Light -> Holo_AutoCompleteTextView_Light
    int Holo_Base_Theme -> Holo_Base_Theme
    int Holo_Base_Theme_Light -> Holo_Base_Theme_Light
    int Holo_Base_Theme_Light_DarkActionBar -> Holo_Base_Theme_Light_DarkActionBar
    int Holo_Button -> Holo_Button
    int Holo_ButtonBar -> Holo_ButtonBar
    int Holo_ButtonBar_AlertDialog -> Holo_ButtonBar_AlertDialog
    int Holo_Button_Borderless -> Holo_Button_Borderless
    int Holo_Button_Borderless_Light -> Holo_Button_Borderless_Light
    int Holo_Button_Borderless_Small -> Holo_Button_Borderless_Small
    int Holo_Button_Borderless_Small_Light -> Holo_Button_Borderless_Small_Light
    int Holo_Button_Light -> Holo_Button_Light
    int Holo_Button_Small -> Holo_Button_Small
    int Holo_Button_Small_Light -> Holo_Button_Small_Light
    int Holo_Button_Toggle -> Holo_Button_Toggle
    int Holo_Button_Toggle_Light -> Holo_Button_Toggle_Light
    int Holo_CalendarView -> Holo_CalendarView
    int Holo_CalendarView_Light -> Holo_CalendarView_Light
    int Holo_CompoundButton -> Holo_CompoundButton
    int Holo_CompoundButton_CheckBox -> Holo_CompoundButton_CheckBox
    int Holo_CompoundButton_CheckBox_Light -> Holo_CompoundButton_CheckBox_Light
    int Holo_CompoundButton_RadioButton -> Holo_CompoundButton_RadioButton
    int Holo_CompoundButton_RadioButton_Light -> Holo_CompoundButton_RadioButton_Light
    int Holo_DatePicker -> Holo_DatePicker
    int Holo_DialogWindowTitle -> Holo_DialogWindowTitle
    int Holo_DialogWindowTitle_Light -> Holo_DialogWindowTitle_Light
    int Holo_DropDownItem -> Holo_DropDownItem
    int Holo_EditText -> Holo_EditText
    int Holo_EditText_Light -> Holo_EditText_Light
    int Holo_EditText_NumberPickerInputText -> Holo_EditText_NumberPickerInputText
    int Holo_ExpandableListView -> Holo_ExpandableListView
    int Holo_ExpandableListView_Light -> Holo_ExpandableListView_Light
    int Holo_GridView -> Holo_GridView
    int Holo_ImageButton -> Holo_ImageButton
    int Holo_ImageButton_Light -> Holo_ImageButton_Light
    int Holo_ListPopupWindow -> Holo_ListPopupWindow
    int Holo_ListPopupWindow_Light -> Holo_ListPopupWindow_Light
    int Holo_ListView -> Holo_ListView
    int Holo_ListView_DropDown -> Holo_ListView_DropDown
    int Holo_ListView_DropDown_Light -> Holo_ListView_DropDown_Light
    int Holo_ListView_Light -> Holo_ListView_Light
    int Holo_NumberPicker -> Holo_NumberPicker
    int Holo_PopupWindow -> Holo_PopupWindow
    int Holo_PopupWindow_Light -> Holo_PopupWindow_Light
    int Holo_ProgressBar -> Holo_ProgressBar
    int Holo_ProgressBar_Horizontal -> Holo_ProgressBar_Horizontal
    int Holo_ProgressBar_Horizontal_Light -> Holo_ProgressBar_Horizontal_Light
    int Holo_ProgressBar_Large -> Holo_ProgressBar_Large
    int Holo_ProgressBar_Small -> Holo_ProgressBar_Small
    int Holo_RatingBar -> Holo_RatingBar
    int Holo_RatingBar_Indicator -> Holo_RatingBar_Indicator
    int Holo_RatingBar_Indicator_Light -> Holo_RatingBar_Indicator_Light
    int Holo_RatingBar_Light -> Holo_RatingBar_Light
    int Holo_RatingBar_Small -> Holo_RatingBar_Small
    int Holo_RatingBar_Small_Light -> Holo_RatingBar_Small_Light
    int Holo_SeekBar -> Holo_SeekBar
    int Holo_SeekBar_Light -> Holo_SeekBar_Light
    int Holo_SegmentedButton -> Holo_SegmentedButton
    int Holo_SegmentedButton_Light -> Holo_SegmentedButton_Light
    int Holo_Spinner -> Holo_Spinner
    int Holo_Spinner_Light -> Holo_Spinner_Light
    int Holo_Switch -> Holo_Switch
    int Holo_Switch_Light -> Holo_Switch_Light
    int Holo_Switch_Light_Old -> Holo_Switch_Light_Old
    int Holo_Switch_Old -> Holo_Switch_Old
    int Holo_Switch_TextAppearance -> Holo_Switch_TextAppearance
    int Holo_Switch_TextAppearance_Light -> Holo_Switch_TextAppearance_Light
    int Holo_TextAppearance -> Holo_TextAppearance
    int Holo_TextAppearance_CalendarView_WeekDayView -> Holo_TextAppearance_CalendarView_WeekDayView
    int Holo_TextAppearance_DialogWindowTitle -> Holo_TextAppearance_DialogWindowTitle
    int Holo_TextAppearance_DialogWindowTitle_Light -> Holo_TextAppearance_DialogWindowTitle_Light
    int Holo_TextAppearance_DropDownItem -> Holo_TextAppearance_DropDownItem
    int Holo_TextAppearance_Inverse -> Holo_TextAppearance_Inverse
    int Holo_TextAppearance_Inverse_Light -> Holo_TextAppearance_Inverse_Light
    int Holo_TextAppearance_Large -> Holo_TextAppearance_Large
    int Holo_TextAppearance_Large_Inverse -> Holo_TextAppearance_Large_Inverse
    int Holo_TextAppearance_Large_Inverse_Light -> Holo_TextAppearance_Large_Inverse_Light
    int Holo_TextAppearance_Large_Light -> Holo_TextAppearance_Large_Light
    int Holo_TextAppearance_Light -> Holo_TextAppearance_Light
    int Holo_TextAppearance_Medium -> Holo_TextAppearance_Medium
    int Holo_TextAppearance_Medium_Inverse -> Holo_TextAppearance_Medium_Inverse
    int Holo_TextAppearance_Medium_Inverse_Light -> Holo_TextAppearance_Medium_Inverse_Light
    int Holo_TextAppearance_Medium_Light -> Holo_TextAppearance_Medium_Light
    int Holo_TextAppearance_PopupMenu -> Holo_TextAppearance_PopupMenu
    int Holo_TextAppearance_PopupMenu_Large -> Holo_TextAppearance_PopupMenu_Large
    int Holo_TextAppearance_PopupMenu_Light -> Holo_TextAppearance_PopupMenu_Light
    int Holo_TextAppearance_PopupMenu_Light_Large -> Holo_TextAppearance_PopupMenu_Light_Large
    int Holo_TextAppearance_PopupMenu_Light_Small -> Holo_TextAppearance_PopupMenu_Light_Small
    int Holo_TextAppearance_PopupMenu_Small -> Holo_TextAppearance_PopupMenu_Small
    int Holo_TextAppearance_Small -> Holo_TextAppearance_Small
    int Holo_TextAppearance_Small_Inverse -> Holo_TextAppearance_Small_Inverse
    int Holo_TextAppearance_Small_Inverse_Light -> Holo_TextAppearance_Small_Inverse_Light
    int Holo_TextAppearance_Small_Light -> Holo_TextAppearance_Small_Light
    int Holo_TextAppearance_TextView -> Holo_TextAppearance_TextView
    int Holo_TextAppearance_TextView_SpinnerItem -> Holo_TextAppearance_TextView_SpinnerItem
    int Holo_TextAppearance_TextView_SpinnerItem_Light -> Holo_TextAppearance_TextView_SpinnerItem_Light
    int Holo_TextAppearance_Widget_IconMenu_Item -> Holo_TextAppearance_Widget_IconMenu_Item
    int Holo_TextView -> Holo_TextView
    int Holo_TextView_ListSeparator -> Holo_TextView_ListSeparator
    int Holo_TextView_ListSeparator_Light -> Holo_TextView_ListSeparator_Light
    int Holo_TextView_SpinnerItem -> Holo_TextView_SpinnerItem
    int Holo_TextView_SpinnerItem_DropDown -> Holo_TextView_SpinnerItem_DropDown
    int Holo_TextView_SpinnerItem_DropDown_Light -> Holo_TextView_SpinnerItem_DropDown_Light
    int Holo_TextView_SpinnerItem_Light -> Holo_TextView_SpinnerItem_Light
    int Holo_Theme -> Holo_Theme
    int Holo_Theme_Dialog -> Holo_Theme_Dialog
    int Holo_Theme_DialogWhenLarge -> Holo_Theme_DialogWhenLarge
    int Holo_Theme_DialogWhenLarge_Light -> Holo_Theme_DialogWhenLarge_Light
    int Holo_Theme_DialogWhenLarge_Light_DarkActionBar -> Holo_Theme_DialogWhenLarge_Light_DarkActionBar
    int Holo_Theme_DialogWhenLarge_Light_DarkActionBar_NoActionBar -> Holo_Theme_DialogWhenLarge_Light_DarkActionBar_NoActionBar
    int Holo_Theme_DialogWhenLarge_Light_NoActionBar -> Holo_Theme_DialogWhenLarge_Light_NoActionBar
    int Holo_Theme_DialogWhenLarge_NoActionBar -> Holo_Theme_DialogWhenLarge_NoActionBar
    int Holo_Theme_Dialog_Alert -> Holo_Theme_Dialog_Alert
    int Holo_Theme_Dialog_Alert_Light -> Holo_Theme_Dialog_Alert_Light
    int Holo_Theme_Dialog_FixedSize -> Holo_Theme_Dialog_FixedSize
    int Holo_Theme_Dialog_Light -> Holo_Theme_Dialog_Light
    int Holo_Theme_Dialog_Light_FixedSize -> Holo_Theme_Dialog_Light_FixedSize
    int Holo_Theme_Dialog_Light_NoFrame -> Holo_Theme_Dialog_Light_NoFrame
    int Holo_Theme_Dialog_NoFrame -> Holo_Theme_Dialog_NoFrame
    int Holo_Theme_Fullscreen -> Holo_Theme_Fullscreen
    int Holo_Theme_Fullscreen_Wallpaper -> Holo_Theme_Fullscreen_Wallpaper
    int Holo_Theme_Light -> Holo_Theme_Light
    int Holo_Theme_Light_DarkActionBar -> Holo_Theme_Light_DarkActionBar
    int Holo_Theme_Light_DarkActionBar_Fullscreen -> Holo_Theme_Light_DarkActionBar_Fullscreen
    int Holo_Theme_Light_DarkActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_DarkActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_DarkActionBar_NoActionBar -> Holo_Theme_Light_DarkActionBar_NoActionBar
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen -> Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Wallpaper -> Holo_Theme_Light_DarkActionBar_NoActionBar_Wallpaper
    int Holo_Theme_Light_DarkActionBar_Wallpaper -> Holo_Theme_Light_DarkActionBar_Wallpaper
    int Holo_Theme_Light_Fullscreen -> Holo_Theme_Light_Fullscreen
    int Holo_Theme_Light_Fullscreen_Wallpaper -> Holo_Theme_Light_Fullscreen_Wallpaper
    int Holo_Theme_Light_NoActionBar -> Holo_Theme_Light_NoActionBar
    int Holo_Theme_Light_NoActionBar_Fullscreen -> Holo_Theme_Light_NoActionBar_Fullscreen
    int Holo_Theme_Light_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_NoActionBar_Wallpaper -> Holo_Theme_Light_NoActionBar_Wallpaper
    int Holo_Theme_Light_Wallpaper -> Holo_Theme_Light_Wallpaper
    int Holo_Theme_NoActionBar -> Holo_Theme_NoActionBar
    int Holo_Theme_NoActionBar_Fullscreen -> Holo_Theme_NoActionBar_Fullscreen
    int Holo_Theme_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_NoActionBar_Wallpaper -> Holo_Theme_NoActionBar_Wallpaper
    int Holo_Theme_Wallpaper -> Holo_Theme_Wallpaper
    int Holo_TimePicker -> Holo_TimePicker
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int TextAppearance_Sherlock -> TextAppearance_Sherlock
    int TextAppearance_Sherlock_Light_SearchResult -> TextAppearance_Sherlock_Light_SearchResult
    int TextAppearance_Sherlock_Light_SearchResult_Subtitle -> TextAppearance_Sherlock_Light_SearchResult_Subtitle
    int TextAppearance_Sherlock_Light_SearchResult_Title -> TextAppearance_Sherlock_Light_SearchResult_Title
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_SearchResult -> TextAppearance_Sherlock_SearchResult
    int TextAppearance_Sherlock_SearchResult_Subtitle -> TextAppearance_Sherlock_SearchResult_Subtitle
    int TextAppearance_Sherlock_SearchResult_Title -> TextAppearance_Sherlock_SearchResult_Title
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
org.holoeverywhere.R$styleable -> bdc:
    int[] AbsListView -> AbsListView
    int AbsListView_android_choiceMode -> AbsListView_android_choiceMode
    int AbsListView_android_fastScrollAlwaysVisible -> AbsListView_android_fastScrollAlwaysVisible
    int AbsListView_android_fastScrollEnabled -> AbsListView_android_fastScrollEnabled
    int[] AbsSpinner -> AbsSpinner
    int AbsSpinner_android_entries -> AbsSpinner_android_entries
    int[] AlertDialog -> AlertDialog
    int AlertDialog_bottomBright -> AlertDialog_bottomBright
    int AlertDialog_bottomDark -> AlertDialog_bottomDark
    int AlertDialog_bottomMedium -> AlertDialog_bottomMedium
    int AlertDialog_centerBright -> AlertDialog_centerBright
    int AlertDialog_centerDark -> AlertDialog_centerDark
    int AlertDialog_centerMedium -> AlertDialog_centerMedium
    int AlertDialog_fullBright -> AlertDialog_fullBright
    int AlertDialog_fullDark -> AlertDialog_fullDark
    int AlertDialog_gravity -> AlertDialog_gravity
    int AlertDialog_horizontalProgressLayout -> AlertDialog_horizontalProgressLayout
    int AlertDialog_layout -> AlertDialog_layout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_progressLayout -> AlertDialog_progressLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int AlertDialog_topBright -> AlertDialog_topBright
    int AlertDialog_topDark -> AlertDialog_topDark
    int[] AutoCompleteTextView -> AutoCompleteTextView
    int AutoCompleteTextView_android_completionHint -> AutoCompleteTextView_android_completionHint
    int AutoCompleteTextView_android_completionHintView -> AutoCompleteTextView_android_completionHintView
    int AutoCompleteTextView_android_completionThreshold -> AutoCompleteTextView_android_completionThreshold
    int AutoCompleteTextView_android_dropDownAnchor -> AutoCompleteTextView_android_dropDownAnchor
    int AutoCompleteTextView_android_dropDownHeight -> AutoCompleteTextView_android_dropDownHeight
    int AutoCompleteTextView_android_dropDownSelector -> AutoCompleteTextView_android_dropDownSelector
    int AutoCompleteTextView_android_dropDownWidth -> AutoCompleteTextView_android_dropDownWidth
    int AutoCompleteTextView_android_entries -> AutoCompleteTextView_android_entries
    int AutoCompleteTextView_android_inputType -> AutoCompleteTextView_android_inputType
    int AutoCompleteTextView_dropDownHorizontalOffset -> AutoCompleteTextView_dropDownHorizontalOffset
    int AutoCompleteTextView_dropDownVerticalOffset -> AutoCompleteTextView_dropDownVerticalOffset
    int[] CalendarView -> CalendarView
    int CalendarView_dateTextAppearance -> CalendarView_dateTextAppearance
    int CalendarView_firstDayOfWeek -> CalendarView_firstDayOfWeek
    int CalendarView_focusedMonthDateColor -> CalendarView_focusedMonthDateColor
    int CalendarView_maxDate -> CalendarView_maxDate
    int CalendarView_minDate -> CalendarView_minDate
    int CalendarView_selectedDateVerticalBar -> CalendarView_selectedDateVerticalBar
    int CalendarView_selectedWeekBackgroundColor -> CalendarView_selectedWeekBackgroundColor
    int CalendarView_showWeekNumber -> CalendarView_showWeekNumber
    int CalendarView_shownWeekCount -> CalendarView_shownWeekCount
    int CalendarView_unfocusedMonthDateColor -> CalendarView_unfocusedMonthDateColor
    int CalendarView_weekDayTextAppearance -> CalendarView_weekDayTextAppearance
    int CalendarView_weekNumberColor -> CalendarView_weekNumberColor
    int CalendarView_weekSeparatorLineColor -> CalendarView_weekSeparatorLineColor
    int[] ColorDrawable -> ColorDrawable
    int ColorDrawable_android_color -> ColorDrawable_android_color
    int[] DatePicker -> DatePicker
    int DatePicker_calendarViewShown -> DatePicker_calendarViewShown
    int DatePicker_endYear -> DatePicker_endYear
    int DatePicker_forceShownState -> DatePicker_forceShownState
    int DatePicker_layout -> DatePicker_layout
    int DatePicker_maxDate -> DatePicker_maxDate
    int DatePicker_minDate -> DatePicker_minDate
    int DatePicker_spinnersShown -> DatePicker_spinnersShown
    int DatePicker_startYear -> DatePicker_startYear
    int[] Divider -> Divider
    int Divider_android_orientation -> Divider_android_orientation
    int[] ExpandableListView -> ExpandableListView
    int ExpandableListView_android_childDivider -> ExpandableListView_android_childDivider
    int ExpandableListView_android_childIndicator -> ExpandableListView_android_childIndicator
    int ExpandableListView_android_childIndicatorLeft -> ExpandableListView_android_childIndicatorLeft
    int ExpandableListView_android_childIndicatorRight -> ExpandableListView_android_childIndicatorRight
    int ExpandableListView_android_groupIndicator -> ExpandableListView_android_groupIndicator
    int ExpandableListView_android_indicatorLeft -> ExpandableListView_android_indicatorLeft
    int ExpandableListView_android_indicatorRight -> ExpandableListView_android_indicatorRight
    int[] FastScroll -> FastScroll
    int FastScroll_fastScrollOverlayPosition -> FastScroll_fastScrollOverlayPosition
    int FastScroll_fastScrollPreviewBackgroundLeft -> FastScroll_fastScrollPreviewBackgroundLeft
    int FastScroll_fastScrollPreviewBackgroundRight -> FastScroll_fastScrollPreviewBackgroundRight
    int FastScroll_fastScrollTextColor -> FastScroll_fastScrollTextColor
    int FastScroll_fastScrollThumbDrawable -> FastScroll_fastScrollThumbDrawable
    int FastScroll_fastScrollTrackDrawable -> FastScroll_fastScrollTrackDrawable
    int[] IconMenuView -> IconMenuView
    int IconMenuView_android_maxItems -> IconMenuView_android_maxItems
    int IconMenuView_android_maxItemsPerRow -> IconMenuView_android_maxItemsPerRow
    int IconMenuView_android_maxRows -> IconMenuView_android_maxRows
    int IconMenuView_android_moreIcon -> IconMenuView_android_moreIcon
    int IconMenuView_android_rowHeight -> IconMenuView_android_rowHeight
    int[] LayerDrawable -> LayerDrawable
    int[] LayerDrawableItem -> LayerDrawableItem
    int LayerDrawableItem_android_bottom -> LayerDrawableItem_android_bottom
    int LayerDrawableItem_android_drawable -> LayerDrawableItem_android_drawable
    int LayerDrawableItem_android_id -> LayerDrawableItem_android_id
    int LayerDrawableItem_android_left -> LayerDrawableItem_android_left
    int LayerDrawableItem_android_right -> LayerDrawableItem_android_right
    int LayerDrawableItem_android_top -> LayerDrawableItem_android_top
    int LayerDrawable_android_opacity -> LayerDrawable_android_opacity
    int[] LinearLayout -> LinearLayout
    int LinearLayout_android_baselineAligned -> LinearLayout_android_baselineAligned
    int LinearLayout_android_baselineAlignedChildIndex -> LinearLayout_android_baselineAlignedChildIndex
    int LinearLayout_android_divider -> LinearLayout_android_divider
    int LinearLayout_android_dividerPadding -> LinearLayout_android_dividerPadding
    int LinearLayout_android_gravity -> LinearLayout_android_gravity
    int LinearLayout_android_measureWithLargestChild -> LinearLayout_android_measureWithLargestChild
    int LinearLayout_android_orientation -> LinearLayout_android_orientation
    int LinearLayout_android_showDividers -> LinearLayout_android_showDividers
    int LinearLayout_android_weightSum -> LinearLayout_android_weightSum
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_dialogItemBackground -> MenuView_dialogItemBackground
    int MenuView_dialogItemTextAppearance -> MenuView_dialogItemTextAppearance
    int[] NumberPicker -> NumberPicker
    int NumberPicker_android_fadingEdgeLength -> NumberPicker_android_fadingEdgeLength
    int NumberPicker_android_layout -> NumberPicker_android_layout
    int NumberPicker_android_maxHeight -> NumberPicker_android_maxHeight
    int NumberPicker_android_maxWidth -> NumberPicker_android_maxWidth
    int NumberPicker_android_minHeight -> NumberPicker_android_minHeight
    int NumberPicker_android_minWidth -> NumberPicker_android_minWidth
    int NumberPicker_android_orientation -> NumberPicker_android_orientation
    int NumberPicker_flingable -> NumberPicker_flingable
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
    int NumberPicker_virtualButtonPressedDrawable -> NumberPicker_virtualButtonPressedDrawable
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int[] ProgressBar -> ProgressBar
    int ProgressBar_android_indeterminate -> ProgressBar_android_indeterminate
    int ProgressBar_android_indeterminateBehavior -> ProgressBar_android_indeterminateBehavior
    int ProgressBar_android_indeterminateDrawable -> ProgressBar_android_indeterminateDrawable
    int ProgressBar_android_indeterminateDuration -> ProgressBar_android_indeterminateDuration
    int ProgressBar_android_indeterminateOnly -> ProgressBar_android_indeterminateOnly
    int ProgressBar_android_interpolator -> ProgressBar_android_interpolator
    int ProgressBar_android_max -> ProgressBar_android_max
    int ProgressBar_android_maxHeight -> ProgressBar_android_maxHeight
    int ProgressBar_android_maxWidth -> ProgressBar_android_maxWidth
    int ProgressBar_android_minHeight -> ProgressBar_android_minHeight
    int ProgressBar_android_minWidth -> ProgressBar_android_minWidth
    int ProgressBar_android_progress -> ProgressBar_android_progress
    int ProgressBar_android_progressDrawable -> ProgressBar_android_progressDrawable
    int ProgressBar_android_secondaryProgress -> ProgressBar_android_secondaryProgress
    int[] RotateDrawable -> RotateDrawable
    int RotateDrawable_android_drawable -> RotateDrawable_android_drawable
    int RotateDrawable_android_fromDegrees -> RotateDrawable_android_fromDegrees
    int RotateDrawable_android_pivotX -> RotateDrawable_android_pivotX
    int RotateDrawable_android_pivotY -> RotateDrawable_android_pivotY
    int RotateDrawable_android_toDegrees -> RotateDrawable_android_toDegrees
    int RotateDrawable_android_visible -> RotateDrawable_android_visible
    int[] SeekBar -> SeekBar
    int SeekBar_android_disabledAlpha -> SeekBar_android_disabledAlpha
    int SeekBar_android_thumb -> SeekBar_android_thumb
    int SeekBar_android_thumbOffset -> SeekBar_android_thumbOffset
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_android_windowIsFloating -> SherlockTheme_android_windowIsFloating
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int[] Spinner -> Spinner
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_dropDownHorizontalOffset -> Spinner_dropDownHorizontalOffset
    int Spinner_dropDownVerticalOffset -> Spinner_dropDownVerticalOffset
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] StateListDrawable -> StateListDrawable
    int StateListDrawable_android_constantSize -> StateListDrawable_android_constantSize
    int StateListDrawable_android_dither -> StateListDrawable_android_dither
    int StateListDrawable_android_enterFadeDuration -> StateListDrawable_android_enterFadeDuration
    int StateListDrawable_android_exitFadeDuration -> StateListDrawable_android_exitFadeDuration
    int StateListDrawable_android_variablePadding -> StateListDrawable_android_variablePadding
    int StateListDrawable_android_visible -> StateListDrawable_android_visible
    int[] Switch -> Switch
    int Switch_switchMinWidth -> Switch_switchMinWidth
    int Switch_switchPadding -> Switch_switchPadding
    int Switch_switchTextAppearance -> Switch_switchTextAppearance
    int Switch_textOff -> Switch_textOff
    int Switch_textOn -> Switch_textOn
    int Switch_thumb -> Switch_thumb
    int Switch_thumbTextPadding -> Switch_thumbTextPadding
    int Switch_toggleWhenClick -> Switch_toggleWhenClick
    int Switch_track -> Switch_track
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_fontFamily -> TextAppearance_android_fontFamily
    int TextAppearance_android_textAllCaps -> TextAppearance_android_textAllCaps
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHighlight -> TextAppearance_android_textColorHighlight
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int[] TextView -> TextView
    int TextView_android_textAppearance -> TextView_android_textAppearance
    int[] TimePicker -> TimePicker
    int TimePicker_layout -> TimePicker_layout
    int[] WindowSizes -> WindowSizes
    int WindowSizes_windowFixedHeightMajor -> WindowSizes_windowFixedHeightMajor
    int WindowSizes_windowFixedHeightMinor -> WindowSizes_windowFixedHeightMinor
    int WindowSizes_windowFixedWidthMajor -> WindowSizes_windowFixedWidthMajor
    int WindowSizes_windowFixedWidthMinor -> WindowSizes_windowFixedWidthMinor
    int WindowSizes_windowMinHeightMajor -> WindowSizes_windowMinHeightMajor
    int WindowSizes_windowMinHeightMinor -> WindowSizes_windowMinHeightMinor
    int WindowSizes_windowMinWidthMajor -> WindowSizes_windowMinWidthMajor
    int WindowSizes_windowMinWidthMinor -> WindowSizes_windowMinWidthMinor
org.holoeverywhere.SystemServiceManager -> bdd:
    java.util.Map CREATORS_MAP -> a
    java.util.Map MAP -> b
    java.lang.Object getSuperSystemService(android.content.Context,java.lang.String) -> b
    java.lang.Object getSystemService(android.content.Context,java.lang.String) -> a
    void register(java.lang.Class) -> a
org.holoeverywhere.SystemServiceManager$SuperSystemService -> bde:
    java.lang.Object superGetSystemService(java.lang.String) -> b
org.holoeverywhere.SystemServiceManager$SystemServiceCreator -> bdf:
    java.lang.Object createService(android.content.Context) -> b
org.holoeverywhere.SystemServiceManager$SystemServiceCreator$SystemService -> bdg:
    java.lang.String value() -> a
org.holoeverywhere.ThemeManager -> bdh:
    int _DEFAULT_THEME -> j
    org.holoeverywhere.ThemeManager$ThemeGetter _THEME_GETTER -> k
    int _THEME_MASK -> l
    int _THEME_MODIFIER -> m
    android.util.SparseIntArray _THEMES_MAP -> n
    int COLOR_SCHEME_MASK -> a
    int DARK -> b
    int DIALOG -> c
    int DIALOG_WHEN_LARGE -> d
    int FULLSCREEN -> e
    int LIGHT -> f
    int MIXED -> g
    int NEXT_OFFSET -> o
    int NO_ACTION_BAR -> h
    java.util.List sThemeSetters -> p
    int WALLPAPER -> i
    void applyTheme(org.holoeverywhere.app.Activity,boolean) -> a
    void cloneTheme(android.content.Intent,android.content.Intent,boolean) -> a
    int getDefaultTheme() -> a
    int getTheme(org.holoeverywhere.app.Activity) -> a
    int getTheme(android.content.Intent) -> a
    int getTheme(android.content.Intent,boolean) -> a
    int getThemeResource(org.holoeverywhere.app.Activity) -> b
    int getThemeResource(int) -> a
    int getThemeResource(int,boolean) -> a
    int getThemeType(android.content.Context) -> a
    boolean hasSpecifiedTheme(org.holoeverywhere.app.Activity) -> c
    boolean hasSpecifiedTheme(android.content.Intent) -> b
    boolean is(int,int) -> b
    boolean isDark(int) -> b
    boolean isDialog(int) -> c
    boolean isDialogWhenLarge(int) -> d
    boolean isFullScreen(int) -> e
    boolean isLight(int) -> f
    boolean isMixed(int) -> g
    boolean isNoActionBar(int) -> h
    boolean isWallpaper(int) -> i
    int makeNewFlag() -> b
    void map(int,int) -> a
    int prepareFlags(int,boolean) -> b
    void reset() -> c
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> a
    void startActivity(android.content.Context,android.content.Intent,int,android.os.Bundle) -> a
org.holoeverywhere.ThemeManager$SuperStartActivity -> bdi:
    void superStartActivity(android.content.Intent,int,android.os.Bundle) -> a
org.holoeverywhere.ThemeManager$ThemeGetter -> bdj:
    int getThemeResource(org.holoeverywhere.ThemeManager$ThemeGetter$ThemeTag) -> a
org.holoeverywhere.ThemeManager$ThemeGetter$ThemeTag -> bdk:
    boolean dark -> a
    boolean fullscreen -> b
    boolean light -> c
    boolean mixed -> d
    boolean noActionBar -> e
    boolean wallpaper -> f
    boolean dialog -> g
    boolean dialogWhenLarge -> h
    int flags -> i
org.holoeverywhere.ThemeManager$ThemeSetter -> bdl:
    void setupThemes() -> a
org.holoeverywhere.addon.AddonSherlock -> bdm:
org.holoeverywhere.addon.AddonSherlock$AddonSherlockA -> bdn:
    boolean mIgnoreNativeCreate -> a
    boolean mIgnoreNativePrepare -> b
    boolean mIgnoreNativeSelected -> c
    com.actionbarsherlock.ActionBarSherlock mSherlock -> d
    boolean closeOptionsMenu() -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> b
    boolean installDecorView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    boolean invalidateOptionsMenu() -> c
    void onConfigurationChanged(android.content.res.Configuration,android.content.res.Configuration) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    void onDestroy() -> d
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onMenuOpened(int,android.view.Menu) -> b
    void onPanelClosed(int,android.view.Menu) -> c
    void onPause() -> e
    void onPostCreate(android.os.Bundle) -> a
    void onPostResume() -> f
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    void onStop() -> g
    void onTitleChanged(java.lang.CharSequence,int) -> a
    boolean openOptionsMenu() -> h
    boolean requestWindowFeature(int) -> a
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
org.holoeverywhere.addon.AddonSherlock$AddonSherlockApplication -> bdo:
    void onCreate() -> a
org.holoeverywhere.addon.AddonSherlock$HoloActionBarSherlockCompat -> bdp:
    android.content.Context getThemedContext() -> j
org.holoeverywhere.addon.AddonSherlock$HoloActionBarSherlockNative -> bdq:
    android.content.Context getThemedContext() -> j
org.holoeverywhere.addon.IAddon -> bdr:
    java.util.Map sAddonsMap -> a
    java.util.Map mStatesMap -> b
    java.util.Map mTypesMap -> c
    org.holoeverywhere.addon.IAddon addon(java.lang.Class) -> a
    java.lang.Class makeAddonClass(java.lang.String) -> a
    org.holoeverywhere.addon.IAddonBase obtain(java.lang.Class,java.lang.Object) -> a
    org.holoeverywhere.addon.IAddonBase obtain(java.lang.Object) -> a
    void register(java.lang.Class,java.lang.Class) -> a
    void registerActivity(java.lang.Class) -> b
    void registerApplication(java.lang.Class) -> c
org.holoeverywhere.addon.IAddon$Addon -> bds:
    java.lang.Class[] conflict() -> a
    java.lang.String[] conflictStrings() -> b
    boolean inhert() -> c
    int weight() -> d
org.holoeverywhere.addon.IAddonActivity -> bdt:
    boolean closeOptionsMenu() -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    android.view.View findViewById(int) -> b
    boolean installDecorView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    boolean invalidateOptionsMenu() -> c
    void onActivityResult(int,int,android.content.Intent) -> a
    void onConfigurationChanged(android.content.res.Configuration,android.content.res.Configuration) -> a
    void onContentChanged() -> i
    void onCreate(android.os.Bundle) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    void onDestroy() -> d
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onMenuOpened(int,android.view.Menu) -> b
    void onNewIntent(android.content.Intent) -> a
    void onPanelClosed(int,android.view.Menu) -> c
    void onPause() -> e
    void onPostCreate(android.os.Bundle) -> a
    void onPostResume() -> f
    void onPreCreate(android.os.Bundle) -> c
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    void onRestart() -> j
    void onResume() -> k
    void onSaveInstanceState(android.os.Bundle) -> d
    void onStart() -> l
    void onStop() -> g
    void onTitleChanged(java.lang.CharSequence,int) -> a
    boolean openOptionsMenu() -> h
    boolean requestWindowFeature(int) -> a
org.holoeverywhere.addon.IAddonApplication -> bdu:
    void onCreate() -> a
    void onPreCreate() -> b
org.holoeverywhere.addon.IAddonAttacher -> bdv:
    void lockAttaching() -> d
    java.util.Collection obtainAddonsList() -> b_
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
org.holoeverywhere.addon.IAddonAttacher$AddonCallback -> bdw:
    boolean action(java.lang.Object) -> a
    void justAction(java.lang.Object) -> b
    void justPost() -> a
    boolean post() -> b
org.holoeverywhere.addon.IAddonAttacher$AttachException -> bdx:
    org.holoeverywhere.addon.IAddonAttacher$AttachException afterInit(java.lang.Object,java.lang.Class) -> a
    org.holoeverywhere.addon.IAddonAttacher$AttachException conflict(java.lang.String) -> a
org.holoeverywhere.addon.IAddonBase -> bdy:
    java.lang.Object mObject -> a
    org.holoeverywhere.addon.IAddon mParent -> b
    void attach(java.lang.Object,org.holoeverywhere.addon.IAddon) -> a
    java.lang.Object get() -> m
    org.holoeverywhere.addon.IAddon getParent() -> n
    void onAttach(java.lang.Object) -> a
org.holoeverywhere.addon.IAddonBasicAttacher -> bdz:
    java.util.Map mAddons -> a
    java.util.List mAddonsList -> b
    java.util.Set mAddonsSet -> c
    boolean mLockAttaching -> d
    java.lang.Object mObject -> e
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class) -> a
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class,boolean) -> a
    void addon(java.util.Collection) -> a
    org.holoeverywhere.addon.IAddonBase addon(java.lang.String) -> a
    void checkConflicts() -> b
    void inhert(java.util.Collection) -> b
    void inhert(org.holoeverywhere.addon.IAddonAttacher) -> a
    void lockAttaching() -> d
    java.util.Collection obtainAddonsList() -> b_
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
    void reset() -> a
org.holoeverywhere.addon.IAddonBasicAttacher$AddonComparator -> bea:
    org.holoeverywhere.addon.IAddonBasicAttacher this$0 -> a
    int compare(org.holoeverywhere.addon.IAddonBase,org.holoeverywhere.addon.IAddonBase) -> a
    int getWeight(org.holoeverywhere.addon.IAddon) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.holoeverywhere.addon.IAddonFragment -> beb:
    void onCreate(android.os.Bundle) -> a
    void onDestroyView() -> a
    void onPreCreate(android.os.Bundle) -> b
    void onViewCreated(android.view.View,android.os.Bundle) -> a
org.holoeverywhere.app.Activity -> org.holoeverywhere.app.Activity:
    org.holoeverywhere.addon.IAddonBasicAttacher mAttacher -> n
    boolean mCreatedByThemeManager -> o
    org.holoeverywhere.app.Activity$FindViewAction mFindViewAction -> p
    org.holoeverywhere.app.Activity$KeyEventAction mKeyEventAction -> q
    org.holoeverywhere.addon.IAddonActivity addon(java.lang.Class) -> a
    org.holoeverywhere.addon.IAddonActivity addon(java.lang.String) -> c
    org.holoeverywhere.addon.AddonSherlock$AddonSherlockA addonSherlock() -> k
    void closeOptionsMenu() -> closeOptionsMenu
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    android.view.View findViewById(int) -> findViewById
    android.os.Bundle instanceState(android.os.Bundle) -> d
    void lockAttaching() -> d
    java.util.Collection obtainAddonsList() -> b_
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> a
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    void onDestroy() -> onDestroy
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onPostInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> b
    void onPostResume() -> onPostResume
    void onPreInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> c
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    void openOptionsMenu() -> openOptionsMenu
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
    void requestWindowFeature(long) -> a
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    void supportInvalidateOptionsMenu() -> c
    boolean access$2(org.holoeverywhere.app.Activity,android.view.KeyEvent) -> a
    void access$3(org.holoeverywhere.app.Activity) -> a
    boolean access$4(org.holoeverywhere.app.Activity,int,android.view.Menu) -> a
    boolean access$5(org.holoeverywhere.app.Activity,int,android.view.MenuItem) -> a
    boolean access$6(org.holoeverywhere.app.Activity,int,android.view.Menu) -> b
    boolean access$7(org.holoeverywhere.app.Activity,int,android.view.View,android.view.Menu) -> a
    void access$8(org.holoeverywhere.app.Activity) -> b
    void access$9(org.holoeverywhere.app.Activity) -> c
org.holoeverywhere.app.Activity$1 -> bec:
    org.holoeverywhere.app.Activity this$0 -> a
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> a
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$10 -> bed:
    org.holoeverywhere.app.Activity this$0 -> a
    int val$featureId -> b
    android.view.Menu val$menu -> c
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$11 -> bee:
    org.holoeverywhere.app.Activity this$0 -> a
    android.content.Intent val$intent -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$12 -> bef:
    org.holoeverywhere.app.Activity this$0 -> a
    int val$featureId -> b
    android.view.Menu val$menu -> c
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$13 -> beg:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$14 -> beh:
    org.holoeverywhere.app.Activity this$0 -> a
    android.os.Bundle val$savedInstanceState -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$15 -> bei:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$16 -> bej:
    org.holoeverywhere.app.Activity this$0 -> a
    int val$featureId -> b
    android.view.View val$view -> c
    android.view.Menu val$menu -> d
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$17 -> bek:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$18 -> bel:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$19 -> bem:
    org.holoeverywhere.app.Activity this$0 -> a
    android.os.Bundle val$outState -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$2 -> ben:
    org.holoeverywhere.app.Activity this$0 -> a
    int val$requestCode -> b
    int val$resultCode -> c
    android.content.Intent val$data -> d
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$20 -> beo:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$21 -> bep:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$22 -> beq:
    org.holoeverywhere.app.Activity this$0 -> a
    java.lang.CharSequence val$title -> b
    int val$color -> c
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$23 -> ber:
    org.holoeverywhere.app.Activity this$0 -> a
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> a
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$24 -> bes:
    org.holoeverywhere.app.Activity this$0 -> a
    int val$featureId -> b
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> a
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$25 -> bet:
    org.holoeverywhere.app.Activity this$0 -> a
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> a
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$3 -> beu:
    org.holoeverywhere.app.Activity this$0 -> a
    android.content.res.Configuration val$oldConfig -> b
    android.content.res.Configuration val$newConfig -> c
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$4 -> bev:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$5 -> bew:
    org.holoeverywhere.app.Activity this$0 -> a
    android.os.Bundle val$state -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$6 -> bex:
    org.holoeverywhere.app.Activity this$0 -> a
    android.os.Bundle val$state -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$7 -> bey:
    org.holoeverywhere.app.Activity this$0 -> a
    int val$featureId -> b
    android.view.Menu val$menu -> c
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$8 -> bez:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$9 -> bfa:
    org.holoeverywhere.app.Activity this$0 -> a
    int val$featureId -> b
    android.view.MenuItem val$item -> c
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$Addons -> bfb:
    java.lang.String[] value() -> a
org.holoeverywhere.app.Activity$FindViewAction -> bfc:
    int mId -> b
    android.view.View mView -> c
    org.holoeverywhere.app.Activity this$0 -> a
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
    void access$2(org.holoeverywhere.app.Activity$FindViewAction,android.view.View) -> a
    void access$3(org.holoeverywhere.app.Activity$FindViewAction,int) -> a
    android.view.View access$4(org.holoeverywhere.app.Activity$FindViewAction) -> a
org.holoeverywhere.app.Activity$KeyEventAction -> bfd:
    android.view.KeyEvent mEvent -> b
    org.holoeverywhere.app.Activity this$0 -> a
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
    void access$2(org.holoeverywhere.app.Activity$KeyEventAction,android.view.KeyEvent) -> a
org.holoeverywhere.app.AlertActivity -> org.holoeverywhere.app.AlertActivity:
    org.holoeverywhere.internal.AlertController mAlert -> n
    org.holoeverywhere.internal.AlertController$AlertParams mAlertParams -> o
    void cancel() -> cancel
    void dismiss() -> dismiss
    void installDecorView(android.content.Context,int) -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setupAlert() -> l
org.holoeverywhere.app.AlertDialog -> bfe:
    org.holoeverywhere.internal.AlertController mAlert -> a
    int resolveDialogTheme(android.content.Context,int) -> b
    void installDecorView(android.content.Context,int) -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setTitle(java.lang.CharSequence) -> setTitle
    org.holoeverywhere.internal.AlertController access$0(org.holoeverywhere.app.AlertDialog) -> a
org.holoeverywhere.app.AlertDialog$Builder -> bff:
    java.lang.Class[] CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class mDialogClass -> b
    org.holoeverywhere.internal.AlertController$AlertParams mParams -> c
    org.holoeverywhere.app.AlertDialog create() -> a
    android.content.Context getContext() -> b
    org.holoeverywhere.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setCustomTitle(android.view.View) -> a
    org.holoeverywhere.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> a
    org.holoeverywhere.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> a
    org.holoeverywhere.app.AlertDialog show() -> c
org.holoeverywhere.app.Application -> org.holoeverywhere.app.Application:
    java.util.List sInitialAddons -> a
    org.holoeverywhere.app.Application sLastInstance -> b
    org.holoeverywhere.addon.IAddonBasicAttacher mAttacher -> c
    void addInitialAddon(java.lang.Class) -> a
    org.holoeverywhere.app.Application getLastInstance() -> a
    void addon(java.util.Collection) -> a
    org.holoeverywhere.preference.SharedPreferences getSharedPreferences(java.lang.String,int) -> a
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    void lockAttaching() -> d
    java.util.Collection obtainAddonsList() -> b_
    void onCreate() -> onCreate
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
    void startActivities(android.content.Intent[]) -> startActivities
    void startActivities(android.content.Intent[],android.os.Bundle) -> startActivities
    void startActivity(android.content.Intent) -> startActivity
    void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    java.lang.Object superGetSystemService(java.lang.String) -> b
    void superStartActivity(android.content.Intent,int,android.os.Bundle) -> a
    android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
org.holoeverywhere.app.Application$1 -> bfg:
    org.holoeverywhere.app.Application this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonApplication) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Application$2 -> bfh:
    org.holoeverywhere.app.Application this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonApplication) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.ContextThemeWrapperPlus -> bfi:
    int mTheme -> a
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    void setTheme(int) -> setTheme
    java.lang.Object superGetSystemService(java.lang.String) -> b
org.holoeverywhere.app.Dialog -> bfj:
    java.util.Map mContextMenuListeners -> a
    org.holoeverywhere.internal.WindowDecorView mDecorView -> b
    int checkTheme(android.content.Context,int) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    com.actionbarsherlock.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> a
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> a
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onContextItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    void onContextMenuClosed(com.actionbarsherlock.view.ContextMenu) -> a
    void onContextMenuClosed(android.view.Menu) -> onContextMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onCreateContextMenu(com.actionbarsherlock.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> a
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void registerForContextMenu(android.view.View,com.actionbarsherlock.internal.view.menu.ContextMenuListener) -> a
    boolean requestDecorView(android.view.View,android.view.ViewGroup$LayoutParams,int) -> a
    void setCancelable(boolean) -> setCancelable
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
org.holoeverywhere.app.ExpandableListActivity -> org.holoeverywhere.app.ExpandableListActivity:
    android.widget.ExpandableListAdapter mAdapter -> n
    boolean mFinishedStart -> o
    org.holoeverywhere.widget.ExpandableListView mList -> p
    void ensureList() -> l
    void onContentChanged() -> onContentChanged
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void setListAdapter(android.widget.ExpandableListAdapter) -> a
org.holoeverywhere.app.Fragment -> bfk:
    org.holoeverywhere.addon.IAddonBasicAttacher mAttacher -> b
    org.holoeverywhere.LayoutInflater mLayoutInflater -> c
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> a
    void lockAttaching() -> d
    java.util.Collection obtainAddonsList() -> b_
    void onAttach(org.holoeverywhere.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    void onDestroyView() -> f
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
org.holoeverywhere.app.Fragment$1 -> bfl:
    org.holoeverywhere.app.Fragment this$0 -> a
    android.os.Bundle val$savedInstanceState -> b
    void justAction(org.holoeverywhere.addon.IAddonFragment) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Fragment$2 -> bfm:
    org.holoeverywhere.app.Fragment this$0 -> a
    android.os.Bundle val$savedInstanceState -> b
    void justAction(org.holoeverywhere.addon.IAddonFragment) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Fragment$3 -> bfn:
    org.holoeverywhere.app.Fragment this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonFragment) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Fragment$4 -> bfo:
    org.holoeverywhere.app.Fragment this$0 -> a
    android.view.View val$view -> b
    android.os.Bundle val$savedInstanceState -> c
    void justAction(org.holoeverywhere.addon.IAddonFragment) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.ListActivity -> org.holoeverywhere.app.ListActivity:
    android.widget.ListAdapter mAdapter -> n
    boolean mFinishedStart -> p
    android.os.Handler mHandler -> q
    org.holoeverywhere.widget.ListView mList -> o
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> r
    java.lang.Runnable mRequestFocus -> s
    void ensureList() -> l
    void onContentChanged() -> onContentChanged
    void onDestroy() -> onDestroy
    void onListItemClick(org.holoeverywhere.widget.ListView,android.view.View,int,long) -> a
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void setListAdapter(android.widget.ListAdapter) -> a
org.holoeverywhere.app.ListActivity$1 -> bfp:
    org.holoeverywhere.app.ListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.holoeverywhere.app.ListActivity$2 -> bfq:
    org.holoeverywhere.app.ListActivity this$0 -> a
    void run() -> run
org.holoeverywhere.app.ResolverActivity -> org.holoeverywhere.app.ResolverActivity:
    org.holoeverywhere.app.ResolverActivity$ResolveListAdapter mAdapter -> p
    org.holoeverywhere.widget.Button mAlwaysButton -> q
    boolean mAlwaysUseOption -> r
    org.holoeverywhere.widget.GridView mGrid -> s
    int mIconDpi -> t
    int mIconSize -> u
    int mLastSelected -> v
    int mLaunchedFromUid -> w
    int mMaxColumns -> x
    org.holoeverywhere.widget.Button mOnceButton -> y
    android.content.pm.PackageManager mPm -> z
    boolean mShowExtended -> A
    int getAppId(int) -> a
    boolean isIsolated(int) -> b
    boolean isSameApp(int,int) -> a
    int checkComponentPermission(java.lang.String,int,int,boolean) -> a
    android.graphics.drawable.Drawable getIcon(android.content.res.Resources,int) -> a
    int getLauncherLargeIconDensity(android.app.ActivityManager) -> a
    int getLauncherLargeIconSize(android.app.ActivityManager) -> b
    android.graphics.drawable.Drawable loadIconForResolveInfo(android.content.pm.ResolveInfo) -> a
    android.content.Intent makeMyIntent() -> n
    void onButtonClick(android.view.View) -> onButtonClick
    void onCreate(android.os.Bundle) -> onCreate
    void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean) -> a
    void onIntentSelected(android.content.pm.ResolveInfo,android.content.Intent,boolean) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onRestart() -> onRestart
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onStop() -> onStop
    void resizeGrid() -> m
    void showAppDetails(android.content.pm.ResolveInfo) -> b
    void startSelected(int,boolean) -> b
    org.holoeverywhere.app.ResolverActivity$ResolveListAdapter access$0(org.holoeverywhere.app.ResolverActivity) -> a
    boolean access$1(org.holoeverywhere.app.ResolverActivity) -> b
    int access$2(org.holoeverywhere.app.ResolverActivity) -> c
    void access$3(org.holoeverywhere.app.ResolverActivity,boolean) -> a
    android.content.pm.PackageManager access$4(org.holoeverywhere.app.ResolverActivity) -> d
    boolean access$5(org.holoeverywhere.app.ResolverActivity) -> e
org.holoeverywhere.app.ResolverActivity$DisplayResolveInfo -> bfr:
    android.graphics.drawable.Drawable displayIcon -> a
    java.lang.CharSequence displayLabel -> b
    java.lang.CharSequence extendedInfo -> c
    android.content.Intent origIntent -> d
    android.content.pm.ResolveInfo ri -> e
    org.holoeverywhere.app.ResolverActivity this$0 -> f
org.holoeverywhere.app.ResolverActivity$ItemLongClickListener -> bfs:
    org.holoeverywhere.app.ResolverActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
org.holoeverywhere.app.ResolverActivity$ResolveListAdapter -> bft:
    java.util.List mBaseResolveList -> b
    java.util.List mCurrentResolveList -> c
    org.holoeverywhere.LayoutInflater mInflater -> d
    android.content.Intent[] mInitialIntents -> e
    android.content.Intent mIntent -> f
    int mLaunchedFromUid -> g
    java.util.List mList -> h
    org.holoeverywhere.app.ResolverActivity this$0 -> a
    void bindView(android.view.View,org.holoeverywhere.app.ResolverActivity$DisplayResolveInfo) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void handlePackagesChanged() -> a
    android.content.Intent intentForPosition(int) -> a
    void processGroup(java.util.List,int,int,android.content.pm.ResolveInfo,java.lang.CharSequence) -> a
    void rebuildList() -> b
    android.content.pm.ResolveInfo resolveInfoForPosition(int) -> b
    java.util.List access$0(org.holoeverywhere.app.ResolverActivity$ResolveListAdapter) -> a
org.holoeverywhere.app.TabSwipeActivity -> org.holoeverywhere.app.TabSwipeActivity:
org.holoeverywhere.content.ChooserActivity -> org.holoeverywhere.content.ChooserActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.holoeverywhere.drawable.ColorDrawable -> bfu:
    android.graphics.Paint mPaint -> a
    org.holoeverywhere.drawable.ColorDrawable$ColorState mState -> b
    void draw(android.graphics.Canvas) -> draw
    int getAlpha() -> getAlpha
    int getChangingConfigurations() -> getChangingConfigurations
    int getColor() -> getColor
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getOpacity() -> getOpacity
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void setAlpha(int) -> setAlpha
    void setColor(int) -> setColor
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
org.holoeverywhere.drawable.ColorDrawable$ColorState -> bfv:
    int mBaseColor -> a
    int mChangingConfigurations -> b
    int mUseColor -> c
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
org.holoeverywhere.drawable.DrawableCompat -> bfw:
    java.util.Map CLASS_MAP -> a
    android.support.v4.util.LongSparseArray sDrawableCache -> b
    android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options) -> a
    android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser) -> a
    android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> a
    android.graphics.drawable.Drawable getCachedDrawable(long,android.content.res.Resources) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int) -> a
    android.graphics.drawable.Drawable loadDrawable(android.content.res.Resources,android.util.TypedValue) -> a
org.holoeverywhere.drawable.DrawableContainer -> bfx:
    int mAlpha -> a
    java.lang.Runnable mAnimationRunnable -> b
    android.graphics.ColorFilter mColorFilter -> c
    int mCurIndex -> d
    android.graphics.drawable.Drawable mCurrDrawable -> e
    org.holoeverywhere.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState -> f
    long mEnterAnimationEnd -> g
    long mExitAnimationEnd -> h
    android.graphics.drawable.Drawable mLastDrawable -> i
    boolean mMutated -> j
    void animate(boolean) -> a
    void draw(android.graphics.Canvas) -> draw
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getMinimumHeight() -> getMinimumHeight
    int getMinimumWidth() -> getMinimumWidth
    int getOpacity() -> getOpacity
    boolean getPadding(android.graphics.Rect) -> getPadding
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isStateful() -> isStateful
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.drawable.Drawable mutate() -> mutate
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onLevelChange(int) -> onLevelChange
    boolean onStateChange(int[]) -> onStateChange
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    boolean selectDrawable(int) -> a
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setConstantState(org.holoeverywhere.drawable.DrawableContainer$DrawableContainerState) -> a
    void setDither(boolean) -> setDither
    boolean setVisible(boolean,boolean) -> setVisible
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
org.holoeverywhere.drawable.DrawableContainer$1 -> bfy:
    org.holoeverywhere.drawable.DrawableContainer this$0 -> a
    void run() -> run
org.holoeverywhere.drawable.DrawableContainer$DrawableContainerState -> bfz:
    boolean mCanConstantState -> a
    int mChangingConfigurations -> b
    boolean mCheckedConstantState -> c
    int mChildrenChangingConfigurations -> d
    boolean mComputedConstantSize -> e
    int mConstantHeight -> f
    int mConstantMinimumHeight -> g
    int mConstantMinimumWidth -> h
    android.graphics.Rect mConstantPadding -> i
    boolean mConstantSize -> j
    int mConstantWidth -> k
    boolean mDither -> l
    android.graphics.drawable.Drawable[] mDrawables -> m
    int mEnterFadeDuration -> n
    int mExitFadeDuration -> o
    boolean mHaveOpacity -> p
    boolean mHaveStateful -> q
    int mNumChildren -> r
    int mOpacity -> s
    org.holoeverywhere.drawable.DrawableContainer mOwner -> t
    boolean mPaddingChecked -> u
    boolean mStateful -> v
    boolean mVariablePadding -> w
    int addChild(android.graphics.drawable.Drawable) -> a
    boolean canConstantState() -> a
    void computeConstantSize() -> b
    int getChangingConfigurations() -> getChangingConfigurations
    int getChildCount() -> c
    android.graphics.drawable.Drawable[] getChildren() -> d
    int getConstantHeight() -> e
    int getConstantMinimumHeight() -> f
    int getConstantMinimumWidth() -> g
    android.graphics.Rect getConstantPadding() -> h
    int getConstantWidth() -> i
    int getOpacity() -> j
    void growArray(int,int) -> a
    boolean isConstantSize() -> k
    boolean isStateful() -> l
    void setConstantSize(boolean) -> a
    void setEnterFadeDuration(int) -> a
    void setExitFadeDuration(int) -> b
    void setVariablePadding(boolean) -> b
org.holoeverywhere.drawable.LayerDrawable -> bga:
    org.holoeverywhere.drawable.LayerDrawable$LayerState mLayerState -> a
    boolean mMutated -> b
    int mOpacityOverride -> c
    int[] mPaddingB -> d
    int[] mPaddingL -> e
    int[] mPaddingR -> f
    int[] mPaddingT -> g
    android.graphics.Rect mTmpRect -> h
    void addLayer(android.graphics.drawable.Drawable,int,int,int,int,int) -> a
    org.holoeverywhere.drawable.LayerDrawable$LayerState createConstantState(org.holoeverywhere.drawable.LayerDrawable$LayerState,android.content.res.Resources) -> a
    void draw(android.graphics.Canvas) -> draw
    void ensurePadding() -> a
    android.graphics.drawable.Drawable$Callback getCallback() -> getCallback
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getOpacity() -> getOpacity
    boolean getPadding(android.graphics.Rect) -> getPadding
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isStateful() -> isStateful
    android.graphics.drawable.Drawable mutate() -> mutate
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onLevelChange(int) -> onLevelChange
    boolean onStateChange(int[]) -> onStateChange
    boolean reapplyPadding(int,org.holoeverywhere.drawable.LayerDrawable$ChildDrawable) -> a
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setDither(boolean) -> setDither
    boolean setVisible(boolean,boolean) -> setVisible
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
org.holoeverywhere.drawable.LayerDrawable$ChildDrawable -> bgb:
    android.graphics.drawable.Drawable mDrawable -> a
    int mId -> b
    int mInsetL -> c
    int mInsetT -> d
    int mInsetR -> e
    int mInsetB -> f
org.holoeverywhere.drawable.LayerDrawable$LayerState -> bgc:
    boolean mCanConstantState -> e
    int mChangingConfigurations -> a
    boolean mCheckedConstantState -> f
    org.holoeverywhere.drawable.LayerDrawable$ChildDrawable[] mChildren -> b
    int mChildrenChangingConfigurations -> c
    boolean mHaveOpacity -> g
    boolean mHaveStateful -> h
    int mNum -> d
    int mOpacity -> i
    boolean mStateful -> j
    boolean canConstantState() -> a
    int getChangingConfigurations() -> getChangingConfigurations
    int getOpacity() -> b
    boolean isStateful() -> c
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
org.holoeverywhere.drawable.RotateDrawable -> bgd:
    boolean mMutated -> a
    org.holoeverywhere.drawable.RotateDrawable$RotateState mState -> b
    void draw(android.graphics.Canvas) -> draw
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getOpacity() -> getOpacity
    boolean getPadding(android.graphics.Rect) -> getPadding
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isStateful() -> isStateful
    android.graphics.drawable.Drawable mutate() -> mutate
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onLevelChange(int) -> onLevelChange
    boolean onStateChange(int[]) -> onStateChange
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean setVisible(boolean,boolean) -> setVisible
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
org.holoeverywhere.drawable.RotateDrawable$RotateState -> bge:
    boolean mCanConstantState -> j
    int mChangingConfigurations -> a
    boolean mCheckedConstantState -> k
    float mCurrentDegrees -> b
    android.graphics.drawable.Drawable mDrawable -> c
    float mFromDegrees -> d
    float mPivotX -> e
    boolean mPivotXRel -> f
    float mPivotY -> g
    boolean mPivotYRel -> h
    float mToDegrees -> i
    boolean canConstantState() -> a
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
org.holoeverywhere.drawable.StateListDrawable -> bgf:
    boolean mMutated -> a
    org.holoeverywhere.drawable.StateListDrawable$StateListState mStateListState -> b
    int getStateCount() -> a
    android.graphics.drawable.Drawable getStateDrawable(int) -> b
    int getStateDrawableIndex(int[]) -> a
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    boolean isStateful() -> isStateful
    android.graphics.drawable.Drawable mutate() -> mutate
    boolean onStateChange(int[]) -> onStateChange
org.holoeverywhere.drawable.StateListDrawable$StateListState -> bgg:
    int[][] mStateSets -> x
    int addStateSet(int[],android.graphics.drawable.Drawable) -> a
    void growArray(int,int) -> a
    int indexOfStateSet(int[]) -> a
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int access$0(org.holoeverywhere.drawable.StateListDrawable$StateListState,int[]) -> a
org.holoeverywhere.internal.AlertController -> bgh:
    android.widget.ListAdapter mAdapter -> a
    int mAlertDialogLayout -> b
    int mButtonBehavior -> c
    android.view.View$OnClickListener mButtonHandler -> d
    org.holoeverywhere.widget.Button mButtonNegative -> e
    android.os.Message mButtonNegativeMessage -> f
    java.lang.CharSequence mButtonNegativeText -> g
    org.holoeverywhere.widget.Button mButtonNeutral -> h
    android.os.Message mButtonNeutralMessage -> i
    java.lang.CharSequence mButtonNeutralText -> j
    org.holoeverywhere.widget.Button mButtonPositive -> k
    android.os.Message mButtonPositiveMessage -> l
    java.lang.CharSequence mButtonPositiveText -> m
    int mCheckedItem -> n
    android.content.Context mContext -> o
    android.view.View mCustomTitleView -> p
    org.holoeverywhere.internal.AlertController$AlertDecorViewInstaller mDecorViewInstaller -> q
    android.content.DialogInterface mDialogInterface -> r
    boolean mForceInverseBackground -> s
    android.os.Handler mHandler -> t
    android.graphics.drawable.Drawable mIcon -> u
    int mIconId -> v
    android.widget.ImageView mIconView -> w
    int mListItemLayout -> x
    int mListLayout -> y
    org.holoeverywhere.widget.ListView mListView -> z
    java.lang.CharSequence mMessage -> A
    org.holoeverywhere.widget.TextView mMessageView -> B
    int mMultiChoiceItemLayout -> C
    android.widget.ScrollView mScrollView -> D
    int mSingleChoiceItemLayout -> E
    java.lang.CharSequence mTitle -> F
    org.holoeverywhere.widget.TextView mTitleView -> G
    android.view.View mView -> H
    int mViewSpacingBottom -> I
    int mViewSpacingLeft -> J
    int mViewSpacingRight -> K
    boolean mViewSpacingSpecified -> L
    int mViewSpacingTop -> M
    android.view.Window mWindow -> N
    boolean canTextInput(android.view.View) -> a
    boolean shouldCenterSingleButton(android.content.Context) -> a
    void centerButton(org.holoeverywhere.widget.Button) -> a
    void installContent() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> b
    void setBackground(org.holoeverywhere.widget.LinearLayout,org.holoeverywhere.widget.LinearLayout,android.view.View,boolean,android.content.res.TypedArray,boolean,android.view.View) -> a
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message) -> a
    void setButtonBehavior(int) -> a
    void setCustomTitle(android.view.View) -> b
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setIcon(int) -> b
    void setInverseBackgroundForced(boolean) -> a
    void setMessage(java.lang.CharSequence) -> a
    void setTitle(java.lang.CharSequence) -> b
    boolean setupButtons() -> b
    void setupContent(org.holoeverywhere.widget.LinearLayout) -> a
    boolean setupTitle(org.holoeverywhere.widget.LinearLayout) -> b
    void setupView() -> c
    void setView(android.view.View) -> c
    void setView(android.view.View,int,int,int,int) -> a
    int access$0(org.holoeverywhere.internal.AlertController) -> a
    org.holoeverywhere.widget.Button access$1(org.holoeverywhere.internal.AlertController) -> b
    org.holoeverywhere.widget.Button access$2(org.holoeverywhere.internal.AlertController) -> c
    org.holoeverywhere.widget.Button access$3(org.holoeverywhere.internal.AlertController) -> d
    android.os.Message access$4(org.holoeverywhere.internal.AlertController) -> e
    android.os.Message access$5(org.holoeverywhere.internal.AlertController) -> f
    android.os.Message access$6(org.holoeverywhere.internal.AlertController) -> g
    android.os.Handler access$7(org.holoeverywhere.internal.AlertController) -> h
    android.content.DialogInterface access$8(org.holoeverywhere.internal.AlertController) -> i
    int access$9(org.holoeverywhere.internal.AlertController) -> j
    int access$10(org.holoeverywhere.internal.AlertController) -> k
    int access$11(org.holoeverywhere.internal.AlertController) -> l
    int access$12(org.holoeverywhere.internal.AlertController) -> m
    void access$13(org.holoeverywhere.internal.AlertController,android.widget.ListAdapter) -> a
    void access$14(org.holoeverywhere.internal.AlertController,int) -> a
    void access$15(org.holoeverywhere.internal.AlertController,org.holoeverywhere.widget.ListView) -> a
org.holoeverywhere.internal.AlertController$1 -> bgi:
    org.holoeverywhere.internal.AlertController this$0 -> a
    boolean needToDismiss(int) -> a
    void onClick(android.view.View) -> onClick
    void send(android.os.Message) -> a
org.holoeverywhere.internal.AlertController$AlertDecorViewInstaller -> bgj:
    void installDecorView(android.content.Context,int) -> a
org.holoeverywhere.internal.AlertController$AlertParams -> bgk:
    android.widget.ListAdapter mAdapter -> a
    int mButtonBehavior -> b
    boolean mCancelable -> c
    int mCheckedItem -> d
    boolean[] mCheckedItems -> e
    android.content.Context mContext -> f
    android.database.Cursor mCursor -> g
    android.view.View mCustomTitleView -> h
    boolean mForceInverseBackground -> i
    android.graphics.drawable.Drawable mIcon -> j
    int mIconId -> k
    org.holoeverywhere.LayoutInflater mInflater -> l
    java.lang.String mIsCheckedColumn -> m
    boolean mIsMultiChoice -> n
    boolean mIsSingleChoice -> o
    java.lang.CharSequence[] mItems -> p
    java.lang.String mLabelColumn -> q
    java.lang.CharSequence mMessage -> r
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> s
    java.lang.CharSequence mNegativeButtonText -> t
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> u
    java.lang.CharSequence mNeutralButtonText -> v
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> w
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> x
    android.content.DialogInterface$OnClickListener mOnClickListener -> y
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> z
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> A
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> B
    org.holoeverywhere.internal.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener -> C
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> D
    java.lang.CharSequence mPositiveButtonText -> E
    int mTheme -> F
    java.lang.CharSequence mTitle -> G
    android.view.View mView -> H
    int mViewSpacingBottom -> I
    int mViewSpacingLeft -> J
    int mViewSpacingRight -> K
    boolean mViewSpacingSpecified -> L
    int mViewSpacingTop -> M
    void apply(org.holoeverywhere.internal.AlertController) -> a
    void createListView(org.holoeverywhere.internal.AlertController) -> b
org.holoeverywhere.internal.AlertController$AlertParams$1 -> bgl:
    org.holoeverywhere.internal.AlertController$AlertParams this$1 -> a
    org.holoeverywhere.widget.ListView val$listView -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.holoeverywhere.internal.AlertController$AlertParams$2 -> bgm:
    int mIsCheckedIndex -> k
    int mLabelIndex -> l
    org.holoeverywhere.internal.AlertController$AlertParams this$1 -> j
    org.holoeverywhere.widget.ListView val$listView -> m
    org.holoeverywhere.internal.AlertController val$dialog -> n
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
org.holoeverywhere.internal.AlertController$AlertParams$3 -> bgn:
    org.holoeverywhere.internal.AlertController$AlertParams this$1 -> a
    org.holoeverywhere.internal.AlertController val$dialog -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.holoeverywhere.internal.AlertController$AlertParams$4 -> bgo:
    org.holoeverywhere.internal.AlertController$AlertParams this$1 -> a
    org.holoeverywhere.widget.ListView val$listView -> b
    org.holoeverywhere.internal.AlertController val$dialog -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.holoeverywhere.internal.AlertController$AlertParams$OnPrepareListViewListener -> bgp:
    void onPrepareListView(org.holoeverywhere.widget.ListView) -> a
org.holoeverywhere.internal.AlertController$ButtonHandler -> bgq:
    java.lang.ref.WeakReference mDialog -> a
    void handleMessage(android.os.Message) -> handleMessage
org.holoeverywhere.internal.DialogTitle -> org.holoeverywhere.internal.DialogTitle:
    void onMeasure(int,int) -> onMeasure
org.holoeverywhere.internal.NumberPickerEditText -> org.holoeverywhere.internal.NumberPickerEditText:
    void onEditorAction(int) -> onEditorAction
org.holoeverywhere.internal.WindowDecorView -> org.holoeverywhere.internal.WindowDecorView:
    android.util.TypedValue mFixedHeightMajor -> a
    android.util.TypedValue mFixedHeightMinor -> b
    android.util.TypedValue mFixedWidthMajor -> c
    android.util.TypedValue mFixedWidthMinor -> d
    android.util.TypedValue mMinHeightMajor -> e
    android.util.TypedValue mMinHeightMinor -> f
    android.util.TypedValue mMinWidthMajor -> g
    android.util.TypedValue mMinWidthMinor -> h
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void onMeasure(int,int) -> onMeasure
org.holoeverywhere.internal._View -> org.holoeverywhere.internal._View:
    int[] PRESSED_STATE_SET -> a
    int[] SUPPORT_EMPTY_STATE_SET -> b
    int[] SUPPORT_WINDOW_FOCUSED_STATE_SET -> c
    int[] SUPPORT_SELECTED_STATE_SET -> d
    int[] SUPPORT_SELECTED_WINDOW_FOCUSED_STATE_SET -> e
    int[] SUPPORT_FOCUSED_STATE_SET -> f
    int[] SUPPORT_FOCUSED_WINDOW_FOCUSED_STATE_SET -> g
    int[] SUPPORT_FOCUSED_SELECTED_STATE_SET -> h
    int[] SUPPORT_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET -> i
    int[] SUPPORT_ENABLED_STATE_SET -> j
    int[] SUPPORT_ENABLED_WINDOW_FOCUSED_STATE_SET -> k
    int[] SUPPORT_ENABLED_SELECTED_STATE_SET -> l
    int[] SUPPORT_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET -> m
    int[] SUPPORT_ENABLED_FOCUSED_STATE_SET -> n
    int[] SUPPORT_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET -> o
    int[] SUPPORT_ENABLED_FOCUSED_SELECTED_STATE_SET -> p
    int[] SUPPORT_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET -> q
    int[] SUPPORT_PRESSED_WINDOW_FOCUSED_STATE_SET -> r
    int[] SUPPORT_PRESSED_STATE_SET -> s
    int[] SUPPORT_PRESSED_SELECTED_STATE_SET -> t
    int[] SUPPORT_PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET -> u
    int[] SUPPORT_PRESSED_FOCUSED_STATE_SET -> v
    int[] SUPPORT_PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET -> w
    int[] SUPPORT_PRESSED_FOCUSED_SELECTED_STATE_SET -> x
    int[] SUPPORT_PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET -> y
    int[] SUPPORT_PRESSED_ENABLED_STATE_SET -> z
    int[] SUPPORT_PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET -> A
    int[] SUPPORT_PRESSED_ENABLED_SELECTED_STATE_SET -> B
    int[] SUPPORT_PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET -> C
    int[] SUPPORT_PRESSED_ENABLED_FOCUSED_STATE_SET -> D
    int[] SUPPORT_PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET -> E
    int[] SUPPORT_PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET -> F
    int[] SUPPORT_PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET -> G
    int[][] VIEW_STATE_SETS -> I
    int[] ViewDrawableStates -> J
    int[] Z_VIEW_STATE_IDS -> H
    int supportResolveSizeAndState(int,int,int) -> a
    int getMeasuredStateInt() -> getMeasuredStateInt
org.holoeverywhere.internal._ViewGroup -> org.holoeverywhere.internal._ViewGroup:
    boolean isAccessibilityManagerEnabled(android.content.Context) -> a
    boolean isAccessibilityManagerEnabled() -> a
org.holoeverywhere.preference.PreferenceManagerHelper -> bgr:
    org.holoeverywhere.preference.PreferenceManagerHelper$PreferenceManagerImpl IMPL -> a
    void checkImpl() -> b
    int obtainThemeTag() -> a
    org.holoeverywhere.preference.SharedPreferences wrap(android.content.Context,org.holoeverywhere.HoloEverywhere$PreferenceImpl,java.lang.String,int) -> a
    org.holoeverywhere.preference.SharedPreferences wrap(android.content.Context,java.lang.String,int) -> a
org.holoeverywhere.preference.PreferenceManagerHelper$PreferenceManagerImpl -> bgs:
    int obtainThemeTag() -> a
    org.holoeverywhere.preference.SharedPreferences wrap(android.content.Context,org.holoeverywhere.HoloEverywhere$PreferenceImpl,java.lang.String,int) -> a
org.holoeverywhere.preference.SharedPreferences -> bgt:
org.holoeverywhere.text.AllCapsTransformationMethod -> bgu:
    boolean mEnabled -> a
    java.util.Locale mLocale -> b
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
    void setLengthChangesAllowed(boolean) -> a
org.holoeverywhere.text.TransformationMethod -> bgv:
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void setLengthChangesAllowed(boolean) -> a
org.holoeverywhere.util.ArrayUtils -> bgw:
    java.lang.Object[] EMPTY -> a
    java.lang.Object[] sCache -> b
    int idealByteArraySize(int) -> a
    int idealIntArraySize(int) -> b
org.holoeverywhere.util.Arrays -> bgx:
    java.lang.Object[] copyOfRange(java.lang.Object[],int,int) -> a
    java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class) -> a
org.holoeverywhere.util.FinitePool -> bgy:
    boolean mInfinite -> a
    int mLimit -> b
    org.holoeverywhere.util.PoolableManager mManager -> c
    int mPoolCount -> d
    org.holoeverywhere.util.Poolable mRoot -> e
    org.holoeverywhere.util.Poolable acquire() -> a
    void release(org.holoeverywhere.util.Poolable) -> a
org.holoeverywhere.util.Pool -> bgz:
    org.holoeverywhere.util.Poolable acquire() -> a
    void release(org.holoeverywhere.util.Poolable) -> a
org.holoeverywhere.util.Poolable -> bha:
    java.lang.Object getNextPoolable() -> a
    boolean isPooled() -> b
    void setNextPoolable(java.lang.Object) -> a
    void setPooled(boolean) -> a
org.holoeverywhere.util.PoolableManager -> bhb:
    org.holoeverywhere.util.Poolable newInstance() -> a
    void onAcquired(org.holoeverywhere.util.Poolable) -> a
    void onReleased(org.holoeverywhere.util.Poolable) -> b
org.holoeverywhere.util.Pools -> bhc:
    org.holoeverywhere.util.Pool finitePool(org.holoeverywhere.util.PoolableManager,int) -> a
    org.holoeverywhere.util.Pool synchronizedPool(org.holoeverywhere.util.Pool) -> a
org.holoeverywhere.util.ReflectHelper -> bhd:
    java.lang.Class[] classess(java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.Class,boolean,java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object[]) -> a
org.holoeverywhere.util.SparseIntArray -> org.holoeverywhere.util.SparseIntArray:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int[] mKeys -> a
    int mSize -> b
    int[] mValues -> c
    int binarySearch(int[],int,int,int) -> a
    org.holoeverywhere.util.SparseIntArray clone() -> a
    int describeContents() -> describeContents
    int get(int,int) -> a
    int keyAt(int) -> a
    void put(int,int) -> b
    int size() -> b
    int valueAt(int) -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
    void access$1(org.holoeverywhere.util.SparseIntArray,int) -> a
    void access$2(org.holoeverywhere.util.SparseIntArray,int[]) -> a
    void access$3(org.holoeverywhere.util.SparseIntArray,int[]) -> b
org.holoeverywhere.util.SparseIntArray$1 -> bhe:
    org.holoeverywhere.util.SparseIntArray createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.util.SparseIntArray[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
org.holoeverywhere.util.SynchronizedPool -> bhf:
    java.lang.Object mLock -> a
    org.holoeverywhere.util.Pool mPool -> b
    org.holoeverywhere.util.Poolable acquire() -> a
    void release(org.holoeverywhere.util.Poolable) -> a
org.holoeverywhere.util.WeaklyMap -> bhg:
    java.util.WeakHashMap mMap -> a
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.util.Set keySet() -> keySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    int size() -> size
    java.util.Collection values() -> values
org.holoeverywhere.util.WeaklyMap$1 -> bhh:
    org.holoeverywhere.util.WeaklyMap this$0 -> a
    java.util.Set val$entrySet -> b
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.holoeverywhere.util.WeaklyMap$1$1 -> bhi:
    org.holoeverywhere.util.WeaklyMap$1 this$1 -> a
    java.util.Iterator val$iterator -> b
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
org.holoeverywhere.util.WeaklyMap$2 -> bhj:
    org.holoeverywhere.util.WeaklyMap this$0 -> a
    java.util.Collection val$values -> b
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.holoeverywhere.util.WeaklyMap$2$1 -> bhk:
    org.holoeverywhere.util.WeaklyMap$2 this$1 -> a
    java.util.Iterator val$iterator -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.holoeverywhere.util.WeaklyMap$WeaklyEntry -> bhl:
    java.util.Map$Entry mEntry -> a
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.holoeverywhere.util.WeaklyMap$WeaklyReference -> bhm:
    boolean equals(java.lang.Object) -> equals
org.holoeverywhere.widget.AbsSeekBar -> org.holoeverywhere.widget.AbsSeekBar:
    float mDisabledAlpha -> g
    boolean mIsDragging -> h
    boolean mIsUserSeekable -> a
    int mKeyProgressIncrement -> i
    int mScaledTouchSlop -> j
    android.graphics.drawable.Drawable mThumb -> k
    int mThumbOffset -> l
    float mTouchDownX -> m
    float mTouchProgressOffset -> b
    void attemptClaimDrag() -> g
    void drawableStateChanged() -> drawableStateChanged
    int getKeyProgressIncrement() -> getKeyProgressIncrement
    android.graphics.drawable.Drawable getThumb() -> getThumb
    int getThumbOffset() -> getThumbOffset
    boolean isInScrollingContainer() -> a
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onKeyChange() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onMeasure(int,int) -> onMeasure
    void onProgressRefresh(float,boolean) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onStartTrackingTouch() -> c
    void onStopTrackingTouch() -> d
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    void setKeyProgressIncrement(int) -> setKeyProgressIncrement
    void setMax(int) -> setMax
    void setThumb(android.graphics.drawable.Drawable) -> setThumb
    void setThumbOffset(int) -> setThumbOffset
    void setThumbPos(int,android.graphics.drawable.Drawable,float,int) -> a
    void trackTouchEvent(android.view.MotionEvent) -> a
    void updateThumbPos(int,int) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
org.holoeverywhere.widget.AbsSpinner -> org.holoeverywhere.widget.AbsSpinner:
    android.widget.SpinnerAdapter mAdapter -> a
    android.database.DataSetObserver mDataSetObserver -> E
    int mHeightMeasureSpec -> b
    org.holoeverywhere.widget.AbsSpinner$RecycleBin mRecycler -> c
    int mSelectionBottomPadding -> d
    int mSelectionLeftPadding -> e
    int mSelectionRightPadding -> f
    int mSelectionTopPadding -> g
    android.graphics.Rect mSpinnerPadding -> h
    int mWidthMeasureSpec -> i
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    int getCount() -> getCount
    android.view.View getSelectedView() -> getSelectedView
    void initAbsSpinner() -> k
    void layout(int,boolean) -> a
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void recycleAllViews() -> b
    void requestLayout() -> requestLayout
    void resetList() -> c
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void setSelection(int) -> setSelection
    void setSelection(int,boolean) -> setSelection
    void setSelectionInt(int,boolean) -> b
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(org.holoeverywhere.widget.AbsSpinner,android.view.View,boolean) -> a
org.holoeverywhere.widget.AbsSpinner$RecycleBin -> bhn:
    android.util.SparseArray mScrapHeap -> b
    org.holoeverywhere.widget.AbsSpinner this$0 -> a
    void clear() -> a
    android.view.View get(int) -> a
    void put(int,android.view.View) -> a
org.holoeverywhere.widget.AbsSpinner$SavedState -> org.holoeverywhere.widget.AbsSpinner$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int position -> a
    long selectedId -> b
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.AbsSpinner$SavedState$1 -> bho:
    org.holoeverywhere.widget.AbsSpinner$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.AbsSpinner$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
org.holoeverywhere.widget.AdapterView -> org.holoeverywhere.widget.AdapterView:
    boolean mBlockLayoutRequests -> j
    boolean mDataChanged -> k
    boolean mDesiredFocusableInTouchModeState -> a
    boolean mDesiredFocusableState -> b
    android.view.View mEmptyView -> c
    int mFirstPosition -> l
    boolean mInLayout -> m
    int mItemCount -> n
    int mLayoutHeight -> d
    boolean mNeedSync -> o
    int mNextSelectedPosition -> p
    long mNextSelectedRowId -> q
    int mOldItemCount -> r
    int mOldSelectedPosition -> s
    long mOldSelectedRowId -> t
    org.holoeverywhere.widget.AdapterView$OnItemClickListener mOnItemClickListener -> u
    org.holoeverywhere.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener -> v
    org.holoeverywhere.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> w
    int mSelectedPosition -> x
    long mSelectedRowId -> y
    org.holoeverywhere.widget.AdapterView$SelectionNotifier mSelectionNotifier -> e
    int mSpecificTop -> z
    long mSyncHeight -> A
    int mSyncMode -> B
    int mSyncPosition -> C
    long mSyncRowId -> D
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    boolean canAnimate() -> canAnimate
    void checkFocus() -> d
    void checkSelectionChanged() -> e
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    int findSyncPosition() -> f
    void fireOnSelected() -> b
    android.widget.Adapter getAdapter() -> getAdapter
    int getCount() -> getCount
    android.view.View getEmptyView() -> getEmptyView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    long getItemIdAtPosition(int) -> a
    int getLastVisiblePosition() -> getLastVisiblePosition
    org.holoeverywhere.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    org.holoeverywhere.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    org.holoeverywhere.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    java.lang.Object getSelectedItem() -> getSelectedItem
    long getSelectedItemId() -> getSelectedItemId
    int getSelectedItemPosition() -> getSelectedItemPosition
    android.view.View getSelectedView() -> getSelectedView
    void handleDataChanged() -> g
    boolean isInFilterMode() -> h
    boolean isScrollableForAccessibility() -> c
    int lookForSelectablePosition(int,boolean) -> c
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void performAccessibilityActionsOnSelected() -> k
    boolean performItemClick(android.view.View,int,long) -> a
    void rememberSyncState() -> i
    void removeAllViews() -> removeAllViews
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void selectionChanged() -> j
    void setAdapter(android.widget.Adapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setOnItemClickListener(org.holoeverywhere.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(org.holoeverywhere.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    void setOnItemSelectedListener(org.holoeverywhere.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setSelection(int) -> setSelection
    void updateEmptyStatus(boolean) -> a
    void access$0(org.holoeverywhere.widget.AdapterView,android.os.Parcelable) -> a
    android.os.Parcelable access$1(org.holoeverywhere.widget.AdapterView) -> a
    void access$2(org.holoeverywhere.widget.AdapterView) -> b
    void access$3(org.holoeverywhere.widget.AdapterView) -> c
org.holoeverywhere.widget.AdapterView$AdapterDataSetObserver -> bhp:
    android.os.Parcelable mInstanceState -> b
    org.holoeverywhere.widget.AdapterView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
org.holoeverywhere.widget.AdapterView$OnItemClickListener -> bhq:
    void onItemClick(org.holoeverywhere.widget.AdapterView,android.view.View,int,long) -> a
org.holoeverywhere.widget.AdapterView$OnItemLongClickListener -> bhr:
org.holoeverywhere.widget.AdapterView$OnItemSelectedListener -> bhs:
    void onItemSelected(org.holoeverywhere.widget.AdapterView,android.view.View,int,long) -> a
    void onNothingSelected(org.holoeverywhere.widget.AdapterView) -> a
org.holoeverywhere.widget.AdapterView$SelectionNotifier -> bht:
    org.holoeverywhere.widget.AdapterView this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ArrayAdapter -> bhu:
    boolean mAutoSetNotifyFlag -> a
    android.content.Context mContext -> b
    int mDropDownResource -> c
    int mFieldId -> d
    org.holoeverywhere.widget.ArrayAdapter$ArrayFilter mFilter -> e
    org.holoeverywhere.LayoutInflater mInflater -> f
    java.lang.Object mLock -> g
    boolean mNotifyOnChange -> h
    java.util.List mObjects -> i
    java.util.ArrayList mOriginalValues -> j
    int mResource -> k
    android.view.View createViewFromResource(int,android.view.View,android.view.ViewGroup,int) -> a
    int getCount() -> getCount
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.widget.Filter getFilter() -> getFilter
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void init(android.content.Context,int,int,java.util.List) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setDropDownViewResource(int) -> a
    java.util.ArrayList access$0(org.holoeverywhere.widget.ArrayAdapter) -> a
    java.lang.Object access$1(org.holoeverywhere.widget.ArrayAdapter) -> b
    java.util.List access$2(org.holoeverywhere.widget.ArrayAdapter) -> c
    void access$3(org.holoeverywhere.widget.ArrayAdapter,java.util.ArrayList) -> a
    void access$4(org.holoeverywhere.widget.ArrayAdapter,java.util.List) -> a
org.holoeverywhere.widget.ArrayAdapter$ArrayFilter -> bhv:
    org.holoeverywhere.widget.ArrayAdapter this$0 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
org.holoeverywhere.widget.AutoCompleteTextView -> org.holoeverywhere.widget.AutoCompleteTextView:
    android.widget.ListAdapter mAdapter -> a
    boolean mBlockCompletion -> b
    int mDropDownAnchorId -> c
    boolean mDropDownDismissedOnCompletion -> d
    android.widget.Filter mFilter -> e
    int mHintResource -> f
    java.lang.CharSequence mHintText -> g
    org.holoeverywhere.widget.TextView mHintView -> h
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> i
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> j
    int mLastKeyCode -> k
    org.holoeverywhere.widget.AutoCompleteTextView$PopupDataSetObserver mObserver -> l
    boolean mOpenBefore -> m
    org.holoeverywhere.widget.AutoCompleteTextView$PassThroughClickListener mPassThroughClickListener -> n
    org.holoeverywhere.widget.ListPopupWindow mPopup -> o
    boolean mPopupCanBeUpdated -> p
    int mThreshold -> q
    org.holoeverywhere.widget.AutoCompleteTextView$Validator mValidator -> r
    void buildImeCompletions() -> j
    void clearListSelection() -> a
    java.lang.CharSequence convertSelectionToString(java.lang.Object) -> a
    void dismissDropDown() -> b
    void doAfterTextChanged() -> c
    void doBeforeTextChanged() -> d
    boolean enoughToFilter() -> e
    void ensureImeVisible(boolean) -> a
    android.widget.ListAdapter getAdapter() -> getAdapter
    java.lang.CharSequence getCompletionHint() -> getCompletionHint
    int getDropDownAnchor() -> getDropDownAnchor
    int getDropDownAnimationStyle() -> getDropDownAnimationStyle
    android.graphics.drawable.Drawable getDropDownBackground() -> getDropDownBackground
    int getDropDownHeight() -> getDropDownHeight
    int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    int getDropDownWidth() -> getDropDownWidth
    android.widget.Filter getFilter() -> getFilter
    int getListSelection() -> getListSelection
    android.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    int getThreshold() -> getThreshold
    org.holoeverywhere.widget.AutoCompleteTextView$Validator getValidator() -> getValidator
    boolean isPopupShowing() -> f
    void onClickImpl() -> k
    void onCommitCompletion(android.view.inputmethod.CompletionInfo) -> onCommitCompletion
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDisplayHint(int) -> onDisplayHint
    void onFilterComplete(int) -> onFilterComplete
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onLoadEntries(java.lang.CharSequence[]) -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void performCompletion() -> g
    void performCompletion(android.view.View,int,long) -> a
    void performFiltering(java.lang.CharSequence,int) -> a
    void performValidation() -> h
    void replaceText(java.lang.CharSequence) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setCompletionHint(java.lang.CharSequence) -> setCompletionHint
    void setDropDownAlwaysVisible(boolean) -> setDropDownAlwaysVisible
    void setDropDownAnchor(int) -> setDropDownAnchor
    void setDropDownAnimationStyle(int) -> setDropDownAnimationStyle
    void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable) -> setDropDownBackgroundDrawable
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void setDropDownDismissedOnCompletion(boolean) -> setDropDownDismissedOnCompletion
    void setDropDownHeight(int) -> setDropDownHeight
    void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    void setDropDownWidth(int) -> setDropDownWidth
    void setForceIgnoreOutsideTouch(boolean) -> setForceIgnoreOutsideTouch
    boolean setFrame(int,int,int,int) -> setFrame
    void setListSelection(int) -> setListSelection
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setText(java.lang.CharSequence,boolean) -> setText
    void setThreshold(int) -> setThreshold
    void setValidator(org.holoeverywhere.widget.AutoCompleteTextView$Validator) -> setValidator
    void showDropDown() -> i
    void updateDropDownForFilter(int) -> a
    void access$0(org.holoeverywhere.widget.AutoCompleteTextView,android.view.View,int,long) -> a
    void access$1(org.holoeverywhere.widget.AutoCompleteTextView) -> a
    android.widget.ListAdapter access$2(org.holoeverywhere.widget.AutoCompleteTextView) -> b
    void access$3(org.holoeverywhere.widget.AutoCompleteTextView,int) -> a
org.holoeverywhere.widget.AutoCompleteTextView$DropDownItemClickListener -> bhw:
    org.holoeverywhere.widget.AutoCompleteTextView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.holoeverywhere.widget.AutoCompleteTextView$MyWatcher -> bhx:
    org.holoeverywhere.widget.AutoCompleteTextView this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
org.holoeverywhere.widget.AutoCompleteTextView$PassThroughClickListener -> bhy:
    android.view.View$OnClickListener mWrapped -> b
    org.holoeverywhere.widget.AutoCompleteTextView this$0 -> a
    void onClick(android.view.View) -> onClick
    void access$1(org.holoeverywhere.widget.AutoCompleteTextView$PassThroughClickListener,android.view.View$OnClickListener) -> a
org.holoeverywhere.widget.AutoCompleteTextView$PopupDataSetObserver -> bhz:
    org.holoeverywhere.widget.AutoCompleteTextView this$0 -> a
    void onChanged() -> onChanged
    org.holoeverywhere.widget.AutoCompleteTextView access$1(org.holoeverywhere.widget.AutoCompleteTextView$PopupDataSetObserver) -> a
org.holoeverywhere.widget.AutoCompleteTextView$PopupDataSetObserver$1 -> bia:
    org.holoeverywhere.widget.AutoCompleteTextView$PopupDataSetObserver this$1 -> a
    void run() -> run
org.holoeverywhere.widget.AutoCompleteTextView$Validator -> bib:
    java.lang.CharSequence fixText(java.lang.CharSequence) -> a
    boolean isValid(java.lang.CharSequence) -> b
org.holoeverywhere.widget.Button -> org.holoeverywhere.widget.Button:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> setFontStyle
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.CalendarView -> org.holoeverywhere.widget.CalendarView:
    java.lang.String LOG_TAG -> a
    org.holoeverywhere.widget.CalendarView$WeeksAdapter mAdapter -> b
    int mBottomBuffer -> c
    java.util.Locale mCurrentLocale -> d
    int mCurrentMonthDisplayed -> e
    int mCurrentScrollState -> f
    int mCurrentYearDisplayed -> g
    java.text.DateFormat mDateFormat -> h
    int mDateTextSize -> i
    java.lang.String[] mDayLabels -> j
    android.view.ViewGroup mDayNamesHeader -> k
    int mDaysPerWeek -> l
    java.util.Calendar mFirstDayOfMonth -> m
    int mFirstDayOfWeek -> n
    int mFocusedMonthDateColor -> o
    float mFriction -> p
    boolean mIsScrollingUp -> q
    int mListScrollTopOffset -> r
    org.holoeverywhere.widget.ListView mListView -> s
    java.util.Calendar mMaxDate -> t
    java.util.Calendar mMinDate -> u
    org.holoeverywhere.widget.TextView mMonthName -> v
    org.holoeverywhere.widget.CalendarView$OnDateChangeListener mOnDateChangeListener -> w
    long mPreviousScrollPosition -> x
    int mPreviousScrollState -> y
    org.holoeverywhere.widget.CalendarView$ScrollStateRunnable mScrollStateChangedRunnable -> z
    android.graphics.drawable.Drawable mSelectedDateVerticalBar -> A
    int mSelectedDateVerticalBarWidth -> B
    int mSelectedWeekBackgroundColor -> C
    int mShownWeekCount -> D
    boolean mShowWeekNumber -> E
    java.util.Calendar mTempDate -> F
    int mUnfocusedMonthDateColor -> G
    float mVelocityScale -> H
    int mWeekMinVisibleHeight -> I
    int mWeekNumberColor -> J
    int mWeekSeparatorLineColor -> K
    int mWeekSeperatorLineWidth -> L
    java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale) -> a
    long getDate() -> getDate
    int getFirstDayOfWeek() -> getFirstDayOfWeek
    long getMaxDate() -> getMaxDate
    long getMinDate() -> getMinDate
    boolean getShowWeekNumber() -> getShowWeekNumber
    int getWeeksSinceMinDate(java.util.Calendar) -> a
    void goTo(java.util.Calendar,boolean,boolean,boolean) -> a
    boolean isEnabled() -> isEnabled
    boolean isSameDate(java.util.Calendar,java.util.Calendar) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> a
    boolean parseDate(java.lang.String,java.util.Calendar) -> a
    void setCurrentLocale(java.util.Locale) -> setCurrentLocale
    void setDate(long) -> setDate
    void setDate(long,boolean,boolean) -> setDate
    void setEnabled(boolean) -> setEnabled
    void setFirstDayOfWeek(int) -> setFirstDayOfWeek
    void setMaxDate(long) -> setMaxDate
    void setMinDate(long) -> setMinDate
    void setMonthDisplayed(java.util.Calendar) -> setMonthDisplayed
    void setOnDateChangeListener(org.holoeverywhere.widget.CalendarView$OnDateChangeListener) -> setOnDateChangeListener
    void setShowWeekNumber(boolean) -> setShowWeekNumber
    void setUpAdapter() -> a
    void setUpHeader(int) -> setUpHeader
    void setUpListView() -> b
    void access$0(org.holoeverywhere.widget.CalendarView,int) -> a
    int access$1(org.holoeverywhere.widget.CalendarView) -> a
    int access$2(org.holoeverywhere.widget.CalendarView) -> b
    boolean access$3(org.holoeverywhere.widget.CalendarView) -> c
    void access$4(org.holoeverywhere.widget.CalendarView,int) -> b
    int access$5(org.holoeverywhere.widget.CalendarView,java.util.Calendar) -> a
    java.util.Calendar access$6(org.holoeverywhere.widget.CalendarView) -> d
    java.util.Calendar access$7(org.holoeverywhere.widget.CalendarView) -> e
    int access$8(org.holoeverywhere.widget.CalendarView) -> f
    void access$9(org.holoeverywhere.widget.CalendarView,java.util.Calendar) -> b
    org.holoeverywhere.widget.ListView access$10(org.holoeverywhere.widget.CalendarView) -> g
    java.util.Calendar access$11(org.holoeverywhere.widget.CalendarView) -> h
    int access$12(org.holoeverywhere.widget.CalendarView) -> i
    int access$13(org.holoeverywhere.widget.CalendarView) -> j
    int access$14(org.holoeverywhere.widget.CalendarView) -> k
    boolean access$15(org.holoeverywhere.widget.CalendarView) -> l
    android.graphics.drawable.Drawable access$16(org.holoeverywhere.widget.CalendarView) -> m
    int access$17(org.holoeverywhere.widget.CalendarView) -> n
    int access$18(org.holoeverywhere.widget.CalendarView) -> o
    int access$19(org.holoeverywhere.widget.CalendarView) -> p
    int access$20(org.holoeverywhere.widget.CalendarView) -> q
    int access$21(org.holoeverywhere.widget.CalendarView) -> r
    int access$22(org.holoeverywhere.widget.CalendarView) -> s
    int access$23(org.holoeverywhere.widget.CalendarView) -> t
    org.holoeverywhere.widget.CalendarView$OnDateChangeListener access$24(org.holoeverywhere.widget.CalendarView) -> u
    org.holoeverywhere.widget.CalendarView$WeeksAdapter access$25(org.holoeverywhere.widget.CalendarView) -> v
    void access$26(org.holoeverywhere.widget.CalendarView,android.widget.AbsListView,int,int,int) -> a
    void access$27(org.holoeverywhere.widget.CalendarView,android.widget.AbsListView,int) -> a
org.holoeverywhere.widget.CalendarView$1 -> bic:
    org.holoeverywhere.widget.CalendarView this$0 -> a
    void onChanged() -> onChanged
org.holoeverywhere.widget.CalendarView$2 -> bid:
    org.holoeverywhere.widget.CalendarView this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
org.holoeverywhere.widget.CalendarView$OnDateChangeListener -> bie:
    void onSelectedDayChange(org.holoeverywhere.widget.CalendarView,int,int,int) -> a
org.holoeverywhere.widget.CalendarView$ScrollStateRunnable -> bif:
    int mNewState -> b
    android.widget.AbsListView mView -> c
    org.holoeverywhere.widget.CalendarView this$0 -> a
    void doScrollStateChange(android.widget.AbsListView,int) -> a
    void run() -> run
org.holoeverywhere.widget.CalendarView$WeekView -> big:
    java.lang.String[] mDayNumbers -> b
    android.graphics.Paint mDrawPaint -> c
    java.util.Calendar mFirstDay -> d
    boolean[] mFocusDay -> e
    boolean mHasSelectedDay -> f
    int mHeight -> g
    int mLastWeekDayMonth -> h
    android.graphics.Paint mMonthNumDrawPaint -> i
    int mMonthOfFirstWeekDay -> j
    int mNumCells -> k
    int mSelectedDay -> l
    int mSelectedLeft -> m
    int mSelectedRight -> n
    android.graphics.Rect mTempRect -> o
    int mWeek -> p
    int mWidth -> q
    org.holoeverywhere.widget.CalendarView this$0 -> a
    void drawBackground(android.graphics.Canvas) -> a
    void drawSelectedDateVerticalBars(android.graphics.Canvas) -> b
    void drawWeekNumbers(android.graphics.Canvas) -> c
    void drawWeekSeparators(android.graphics.Canvas) -> d
    boolean getDayFromLocation(float,java.util.Calendar) -> a
    java.util.Calendar getFirstDay() -> a
    int getMonthOfFirstWeekDay() -> b
    int getMonthOfLastWeekDay() -> c
    void init(int,int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setPaintProperties() -> d
    void updateSelectionPositions() -> e
org.holoeverywhere.widget.CalendarView$WeeksAdapter -> bih:
    android.content.Context context -> b
    int mFocusedMonth -> c
    android.view.GestureDetector mGestureDetector -> d
    java.util.Calendar mSelectedDate -> e
    int mSelectedWeek -> f
    int mTotalWeekCount -> g
    org.holoeverywhere.widget.CalendarView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    java.util.Calendar getSelectedDay() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void init() -> b
    void onDateTapped(java.util.Calendar) -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setFocusMonth(int) -> a
    void setSelectedDay(java.util.Calendar) -> a
    java.util.Calendar access$0(org.holoeverywhere.widget.CalendarView$WeeksAdapter) -> a
    void access$1(org.holoeverywhere.widget.CalendarView$WeeksAdapter) -> b
org.holoeverywhere.widget.CalendarView$WeeksAdapter$CalendarGestureListener -> bii:
    org.holoeverywhere.widget.CalendarView$WeeksAdapter this$1 -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
org.holoeverywhere.widget.CheckBox -> org.holoeverywhere.widget.CheckBox:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> setFontStyle
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.CheckedTextView -> org.holoeverywhere.widget.CheckedTextView:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> setFontStyle
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.DatePicker -> org.holoeverywhere.widget.DatePicker:
    java.lang.String LOG_TAG -> a
    org.holoeverywhere.widget.DatePicker$Callback callback -> b
    java.text.DateFormat dateFormat -> c
    org.holoeverywhere.widget.NumberPicker daySpinner -> d
    org.holoeverywhere.widget.NumberPicker monthSpinner -> e
    org.holoeverywhere.widget.NumberPicker yearSpinner -> f
    android.view.inputmethod.InputMethodManager inputMethodManager -> g
    java.util.Locale locale -> h
    org.holoeverywhere.widget.CalendarView mCalendarView -> i
    int numberOfMonths -> j
    org.holoeverywhere.widget.DatePicker$OnDateChangedListener onDateChangedListener -> k
    java.lang.String[] shortMonths -> l
    org.holoeverywhere.widget.LinearLayout spinners -> m
    java.util.Calendar tempDate -> n
    java.util.Calendar minDate -> o
    java.util.Calendar maxDate -> p
    java.util.Calendar currentDate -> q
    java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale) -> a
    void setContentDescription(android.view.View,int,int) -> a
    void checkInputState(org.holoeverywhere.widget.NumberPicker[]) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    org.holoeverywhere.widget.CalendarView getCalendarView() -> getCalendarView
    boolean getCalendarViewShown() -> getCalendarViewShown
    int getDayOfMonth() -> getDayOfMonth
    long getMaxDate() -> getMaxDate
    long getMinDate() -> getMinDate
    int getMonth() -> getMonth
    org.holoeverywhere.widget.DatePicker$OnDateChangedListener getOnDateChangedListener() -> getOnDateChangedListener
    boolean getSpinnersShown() -> getSpinnersShown
    int getYear() -> getYear
    void init(int,int,int,org.holoeverywhere.widget.DatePicker$OnDateChangedListener) -> a
    boolean isNewDate(int,int,int) -> b
    void notifyDateChanged() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean parseDate(java.lang.String,java.util.Calendar) -> a
    void pushSpinner(org.holoeverywhere.widget.NumberPicker,int,int) -> a
    void reorderSpinners() -> b
    void setCalendarViewShown(boolean) -> setCalendarViewShown
    void setContentDescriptions() -> c
    void setDate(int,int,int) -> c
    void setEnabled(boolean) -> setEnabled
    void setImeOptions(org.holoeverywhere.widget.NumberPicker,int,int) -> b
    void setLocale(java.util.Locale) -> setLocale
    void setMaxDate(long) -> setMaxDate
    void setMinDate(long) -> setMinDate
    void setOnDateChangedListener(org.holoeverywhere.widget.DatePicker$OnDateChangedListener) -> setOnDateChangedListener
    void setSpinnersShown(boolean) -> setSpinnersShown
    void updateCalendarView() -> d
    void updateDate(int,int,int) -> a
    void updateInputState() -> e
    void updateSpinners() -> f
    void access$0(org.holoeverywhere.widget.DatePicker,int,int,int) -> a
    void access$1(org.holoeverywhere.widget.DatePicker) -> a
    void access$2(org.holoeverywhere.widget.DatePicker) -> b
    void access$3(org.holoeverywhere.widget.DatePicker) -> c
    java.util.Calendar access$4(org.holoeverywhere.widget.DatePicker) -> d
    java.util.Calendar access$5(org.holoeverywhere.widget.DatePicker) -> e
    org.holoeverywhere.widget.NumberPicker access$6(org.holoeverywhere.widget.DatePicker) -> f
    org.holoeverywhere.widget.NumberPicker access$7(org.holoeverywhere.widget.DatePicker) -> g
    org.holoeverywhere.widget.NumberPicker access$8(org.holoeverywhere.widget.DatePicker) -> h
    void access$9(org.holoeverywhere.widget.DatePicker) -> i
org.holoeverywhere.widget.DatePicker$Callback -> bij:
    org.holoeverywhere.widget.DatePicker this$0 -> a
    void onSelectedDayChange(org.holoeverywhere.widget.CalendarView,int,int,int) -> a
    void onValueChange(org.holoeverywhere.widget.NumberPicker,int,int) -> a
org.holoeverywhere.widget.DatePicker$OnDateChangedListener -> bik:
    void onDateChanged(org.holoeverywhere.widget.DatePicker,int,int,int) -> a
org.holoeverywhere.widget.DatePicker$SavedState -> org.holoeverywhere.widget.DatePicker$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int year -> a
    int month -> b
    int day -> c
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int access$1(org.holoeverywhere.widget.DatePicker$SavedState) -> a
    int access$2(org.holoeverywhere.widget.DatePicker$SavedState) -> b
    int access$3(org.holoeverywhere.widget.DatePicker$SavedState) -> c
org.holoeverywhere.widget.DatePicker$SavedState$1 -> bil:
    org.holoeverywhere.widget.DatePicker$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.DatePicker$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
org.holoeverywhere.widget.Divider -> org.holoeverywhere.widget.Divider:
    void init(android.content.Context,android.util.AttributeSet,int) -> a
org.holoeverywhere.widget.DrawerLayout -> org.holoeverywhere.widget.DrawerLayout:
    boolean mFitSystemWindows -> a
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void setFitsSystemWindows(boolean) -> setFitsSystemWindows
org.holoeverywhere.widget.EditText -> org.holoeverywhere.widget.EditText:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> setFontStyle
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.ExpandableListConnector -> org.holoeverywhere.widget.ExpandableListConnector:
    android.database.DataSetObserver mDataSetObserver -> a
    android.widget.ExpandableListAdapter mExpandableListAdapter -> b
    java.util.ArrayList mExpGroupMetadataList -> c
    int mMaxExpGroupCount -> d
    int mTotalExpChildrenCount -> e
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean collapseGroup(int) -> a
    boolean collapseGroup(org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata) -> a
    boolean expandGroup(org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata) -> b
    int findGroupPosition(long,int) -> a
    android.widget.ExpandableListAdapter getAdapter() -> a
    int getCount() -> getCount
    java.util.ArrayList getExpandedGroupMetadataList() -> b
    android.widget.Filter getFilter() -> getFilter
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata getFlattenedPos(org.holoeverywhere.widget.ExpandableListPosition) -> a
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata getUnflattenedPos(int) -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    void refreshExpGroupMetadataList(boolean,boolean) -> a
    void setExpandableListAdapter(android.widget.ExpandableListAdapter) -> a
    void setExpandedGroupMetadataList(java.util.ArrayList) -> a
    void access$0(org.holoeverywhere.widget.ExpandableListConnector,boolean,boolean) -> a
org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata -> org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int flPos -> a
    long gId -> b
    int gPos -> c
    int lastChildFlPos -> d
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata obtain(int,int,int,long) -> a
    int compareTo(org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int compareTo(java.lang.Object) -> compareTo
org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata$1 -> bim:
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
org.holoeverywhere.widget.ExpandableListConnector$MyDataSetObserver -> bin:
    org.holoeverywhere.widget.ExpandableListConnector this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata -> bio:
    java.util.ArrayList sPool -> d
    int groupInsertIndex -> a
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata groupMetadata -> b
    org.holoeverywhere.widget.ExpandableListPosition position -> c
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata getRecycledOrCreate() -> c
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata obtain(int,int,int,int,org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata,int) -> a
    boolean isExpanded() -> a
    void recycle() -> b
    void resetState() -> d
org.holoeverywhere.widget.ExpandableListPosition -> bip:
    java.util.ArrayList sPool -> e
    int childPos -> a
    int flatListPos -> b
    int groupPos -> c
    int type -> d
    org.holoeverywhere.widget.ExpandableListPosition getRecycledOrCreate() -> c
    org.holoeverywhere.widget.ExpandableListPosition obtain(int,int,int,int) -> a
    org.holoeverywhere.widget.ExpandableListPosition obtainGroupPosition(int) -> a
    org.holoeverywhere.widget.ExpandableListPosition obtainPosition(long) -> a
    long getPackedPosition() -> a
    void recycle() -> b
    void resetState() -> d
org.holoeverywhere.widget.ExpandableListView -> org.holoeverywhere.widget.ExpandableListView:
    int[] CHILD_LAST_STATE_SET -> a
    int[] EMPTY_STATE_SET -> b
    int[] GROUP_EMPTY_STATE_SET -> c
    int[] GROUP_EXPANDED_EMPTY_STATE_SET -> d
    int[] GROUP_EXPANDED_STATE_SET -> e
    int[][] GROUP_STATE_SETS -> f
    android.widget.ExpandableListAdapter mAdapter -> g
    android.graphics.drawable.Drawable mChildDivider -> h
    android.graphics.drawable.Drawable mChildIndicator -> i
    int mChildIndicatorLeft -> j
    int mChildIndicatorRight -> k
    boolean mClipToPadding -> l
    org.holoeverywhere.widget.ExpandableListConnector mConnector -> m
    android.graphics.drawable.Drawable mGroupIndicator -> n
    int mIndicatorLeft -> o
    android.graphics.Rect mIndicatorRect -> p
    int mIndicatorRight -> q
    org.holoeverywhere.widget.ExpandableListView$OnChildClickListener mOnChildClickListener -> r
    org.holoeverywhere.widget.ExpandableListView$OnGroupClickListener mOnGroupClickListener -> s
    org.holoeverywhere.widget.ExpandableListView$OnGroupCollapseListener mOnGroupCollapseListener -> t
    org.holoeverywhere.widget.ExpandableListView$OnGroupExpandListener mOnGroupExpandListener -> u
    int getPackedPositionChild(long) -> a
    long getPackedPositionForChild(int,int) -> a
    long getPackedPositionForGroup(int) -> a
    int getPackedPositionGroup(long) -> b
    int getPackedPositionType(long) -> c
    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    int getAbsoluteFlatPosition(int) -> d
    long getChildOrGroupId(org.holoeverywhere.widget.ExpandableListPosition) -> a
    android.widget.ExpandableListAdapter getExpandableListAdapter() -> getExpandableListAdapter
    long getExpandableListPosition(int) -> b
    int getFlatListPosition(long) -> d
    int getFlatPositionForConnector(int) -> e
    android.graphics.drawable.Drawable getIndicator(org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata) -> a
    long getSelectedId() -> getSelectedId
    long getSelectedPosition() -> getSelectedPosition
    boolean handleItemClick(android.view.View,int,long) -> b
    boolean isHeaderOrFooterPosition(int) -> f
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setAdapter(android.widget.ExpandableListAdapter) -> setAdapter
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setChildDivider(android.graphics.drawable.Drawable) -> setChildDivider
    void setChildIndicator(android.graphics.drawable.Drawable) -> setChildIndicator
    void setChildIndicatorBounds(int,int) -> setChildIndicatorBounds
    void setClipToPadding(boolean) -> setClipToPadding
    void setGroupIndicator(android.graphics.drawable.Drawable) -> setGroupIndicator
    void setIndicatorBounds(int,int) -> setIndicatorBounds
    void setOnChildClickListener(org.holoeverywhere.widget.ExpandableListView$OnChildClickListener) -> setOnChildClickListener
    void setOnGroupClickListener(org.holoeverywhere.widget.ExpandableListView$OnGroupClickListener) -> setOnGroupClickListener
    void setOnGroupCollapseListener(org.holoeverywhere.widget.ExpandableListView$OnGroupCollapseListener) -> setOnGroupCollapseListener
    void setOnGroupExpandListener(org.holoeverywhere.widget.ExpandableListView$OnGroupExpandListener) -> setOnGroupExpandListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setSelectedGroup(int) -> setSelectedGroup
org.holoeverywhere.widget.ExpandableListView$ExpandableListContextMenuInfo -> biq:
    long id -> a
    long packedPosition -> b
    android.view.View targetView -> c
org.holoeverywhere.widget.ExpandableListView$OnChildClickListener -> bir:
    boolean onChildClick(org.holoeverywhere.widget.ExpandableListView,android.view.View,int,int,long) -> a
org.holoeverywhere.widget.ExpandableListView$OnGroupClickListener -> bis:
    boolean onGroupClick(org.holoeverywhere.widget.ExpandableListView,android.view.View,int,long) -> a
org.holoeverywhere.widget.ExpandableListView$OnGroupCollapseListener -> bit:
    void onGroupCollapse(int) -> a
org.holoeverywhere.widget.ExpandableListView$OnGroupExpandListener -> biu:
    void onGroupExpand(int) -> a_
org.holoeverywhere.widget.ExpandableListView$SavedState -> org.holoeverywhere.widget.ExpandableListView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.ArrayList expandedGroupMetadataList -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.ExpandableListView$SavedState$1 -> biv:
    org.holoeverywhere.widget.ExpandableListView$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ExpandableListView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
org.holoeverywhere.widget.FastScroller -> biw:
    int[] DEFAULT_STATES -> i
    int MIN_PAGES -> j
    int[] PRESSED_STATES -> k
    boolean mAlwaysShow -> l
    boolean mChangedBounds -> m
    java.lang.Runnable mDeferStartDrag -> n
    boolean mDrawOverlay -> o
    android.os.Handler mHandler -> p
    float mInitialTouchY -> a
    int mItemCount -> q
    android.widget.AbsListView mList -> b
    android.widget.ListAdapter mListAdapter -> c
    int mListOffset -> r
    boolean mLongList -> s
    boolean mMatchDragPosition -> t
    android.graphics.drawable.Drawable mOverlayDrawable -> u
    android.graphics.drawable.Drawable mOverlayDrawableLeft -> v
    android.graphics.drawable.Drawable mOverlayDrawableRight -> w
    android.graphics.RectF mOverlayPos -> x
    int mOverlayPosition -> y
    int mOverlaySize -> z
    android.graphics.Paint mPaint -> A
    boolean mPendingDrag -> d
    int mPosition -> B
    int mScaledTouchSlop -> C
    boolean mScrollCompleted -> e
    org.holoeverywhere.widget.FastScroller$ScrollFade mScrollFade -> D
    android.widget.SectionIndexer mSectionIndexer -> E
    java.lang.Object[] mSections -> F
    java.lang.String mSectionText -> G
    int mState -> H
    android.graphics.drawable.Drawable mThumbDrawable -> I
    int mThumbH -> f
    int mThumbW -> g
    int mThumbY -> h
    android.graphics.Rect mTmpRect -> J
    android.graphics.drawable.Drawable mTrackDrawable -> K
    void beginDrag() -> a
    void cancelFling() -> j
    void cancelPendingDrag() -> b
    void draw(android.graphics.Canvas) -> a
    void getSectionsFromIndexer() -> c
    int getState() -> d
    int getWidth() -> e
    void init(android.content.Context) -> a
    boolean isAlwaysShowEnabled() -> f
    boolean isPointInside(float,float) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> a
    void onItemCountChanged(int,int) -> a
    void onSectionsChanged() -> g
    void onSizeChanged(int,int,int,int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> b
    void refreshDrawableState() -> k
    void resetThumbPos() -> l
    void scrollTo(float) -> a
    void setAlwaysShow(boolean) -> a
    void setScrollbarPosition(int) -> a
    void setState(int) -> b
    void startPendingDrag() -> h
    void stop() -> i
    void useThumbDrawable(android.content.Context,android.graphics.drawable.Drawable) -> a
org.holoeverywhere.widget.FastScroller$1 -> bix:
    org.holoeverywhere.widget.FastScroller this$0 -> a
    void run() -> run
org.holoeverywhere.widget.FastScroller$FastScrollerCallback -> biy:
    boolean isAttached() -> a
    boolean isInScrollingContainer() -> b
    void reportScrollStateChange(int) -> c
org.holoeverywhere.widget.FastScroller$ScrollFade -> biz:
    long mFadeDuration -> a
    long mStartTime -> b
    org.holoeverywhere.widget.FastScroller this$0 -> c
    int getAlpha() -> a
    void run() -> run
    void startFade() -> b
org.holoeverywhere.widget.FrameLayout -> org.holoeverywhere.widget.FrameLayout:
org.holoeverywhere.widget.GridView -> org.holoeverywhere.widget.GridView:
    boolean USE_ACTIVATED -> a
    org.holoeverywhere.app.Activity mActivity -> b
    org.holoeverywhere.widget.ListAdapterWrapper mAdapter -> c
    boolean mAdapterHasStableIds -> d
    android.support.v4.util.LongSparseArray mCheckedIdStates -> e
    int mCheckedItemCount -> f
    android.util.SparseBooleanArray mCheckStates -> g
    com.actionbarsherlock.view.ActionMode mChoiceActionMode -> h
    int mChoiceMode -> i
    android.view.ContextMenu$ContextMenuInfo mContextMenuInfo -> j
    boolean mFastScrollEnabled -> k
    org.holoeverywhere.widget.FastScroller mFastScroller -> l
    java.util.List mFooterViewInfos -> m
    java.util.List mHeaderViewInfos -> n
    boolean mForceFastScrollAlwaysVisibleDisable -> o
    boolean mForceHeaderListAdapter -> p
    boolean mIsAttached -> q
    int mLastScrollState -> r
    org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback mListAdapterCallback -> s
    org.holoeverywhere.widget.GridView$MultiChoiceModeWrapper mMultiChoiceModeCallback -> t
    org.holoeverywhere.widget.GridView$OnItemLongClickListenerWrapper mOnItemLongClickListenerWrapper -> u
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> v
    boolean mPaddingFromScroller -> w
    int mVerticalScrollbarPosition -> x
    void clearChoices() -> clearChoices
    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long) -> a
    void draw(android.graphics.Canvas) -> draw
    org.holoeverywhere.app.Activity getActivity() -> getActivity
    android.widget.ListAdapter getAdapterSource() -> getAdapterSource
    int getCheckedItemCount() -> getCheckedItemCount
    long[] getCheckedItemIds() -> getCheckedItemIds
    int getCheckedItemPosition() -> getCheckedItemPosition
    android.util.SparseBooleanArray getCheckedItemPositions() -> getCheckedItemPositions
    int getChoiceMode() -> getChoiceMode
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    int getFooterViewsCount() -> getFooterViewsCount
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getVerticalScrollbarPosition() -> getVerticalScrollbarPosition
    int getVerticalScrollbarWidth() -> getVerticalScrollbarWidth
    boolean isAttached() -> a
    boolean isFastScrollAlwaysVisible() -> isFastScrollAlwaysVisible
    boolean isFastScrollEnabled() -> isFastScrollEnabled
    boolean isInScrollingContainer() -> b
    boolean isItemChecked(int) -> isItemChecked
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.View onPrepareView(android.view.View,int) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    boolean performItemLongClick(android.view.View,int,long) -> b
    void recomputePaddingFromScroller() -> c
    void reportScrollStateChange(int) -> c
    void setActivity(org.holoeverywhere.app.Activity) -> setActivity
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setChoiceMode(int) -> setChoiceMode
    void setFastScrollAlwaysVisible(boolean) -> setFastScrollAlwaysVisible
    void setFastScrollEnabled(boolean) -> setFastScrollEnabled
    void setForceHeaderListAdapter(boolean) -> setForceHeaderListAdapter
    void setItemChecked(int,boolean) -> setItemChecked
    void setMultiChoiceModeListener(org.holoeverywhere.widget.ListView$MultiChoiceModeListener) -> setMultiChoiceModeListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setPaddingFromScroller(boolean) -> setPaddingFromScroller
    void setSelectionAfterHeaderView() -> setSelectionAfterHeaderView
    void setSelector(int) -> setSelector
    void setStateOnView(android.view.View,boolean) -> a
    void setVerticalScrollbarPosition(int) -> setVerticalScrollbarPosition
    boolean showContextMenuForChild(android.view.View) -> showContextMenuForChild
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    void updateOnScreenCheckedViews() -> d
    org.holoeverywhere.widget.FastScroller access$0(org.holoeverywhere.widget.GridView) -> a
    void access$1(org.holoeverywhere.widget.GridView,com.actionbarsherlock.view.ActionMode) -> a
    void access$2(org.holoeverywhere.widget.GridView) -> b
org.holoeverywhere.widget.GridView$1 -> bja:
    org.holoeverywhere.widget.GridView this$0 -> a
    void onChanged() -> a
    void onInvalidated() -> b
    android.view.View onPrepareView(android.view.View,int) -> a
org.holoeverywhere.widget.GridView$MultiChoiceModeWrapper -> bjb:
    org.holoeverywhere.widget.ListView$MultiChoiceModeListener mWrapped -> b
    org.holoeverywhere.widget.GridView this$0 -> a
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> a
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> a
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> a
    void onItemCheckedStateChanged(com.actionbarsherlock.view.ActionMode,int,long,boolean) -> a
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> b
    void setWrapped(org.holoeverywhere.widget.ListView$MultiChoiceModeListener) -> a
org.holoeverywhere.widget.GridView$OnItemLongClickListenerWrapper -> bjc:
    android.widget.AdapterView$OnItemLongClickListener wrapped -> b
    org.holoeverywhere.widget.GridView this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void setWrapped(android.widget.AdapterView$OnItemLongClickListener) -> a
    android.widget.AdapterView$OnItemLongClickListener access$1(org.holoeverywhere.widget.GridView$OnItemLongClickListenerWrapper) -> a
org.holoeverywhere.widget.GridView$SavedState -> org.holoeverywhere.widget.GridView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int checkedItemCount -> a
    android.support.v4.util.LongSparseArray checkIdState -> b
    android.util.SparseBooleanArray checkState -> c
    boolean inActionMode -> d
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.GridView$SavedState$1 -> bjd:
    org.holoeverywhere.widget.GridView$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.GridView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
org.holoeverywhere.widget.HeaderViewListAdapter -> bje:
    java.util.List EMPTY_INFO_LIST -> b
    boolean mAreAllFixedViewsSelectable -> a
    java.util.List mFooterViewInfos -> c
    java.util.List mHeaderViewInfos -> d
    boolean mIsFilterable -> e
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean areAllListInfosSelectable(java.util.List) -> a
    int getCount() -> getCount
    android.widget.Filter getFilter() -> getFilter
    int getFootersCount() -> a
    int getHeadersCount() -> b
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled(int) -> isEnabled
    boolean removeFooter(android.view.View) -> a
    boolean removeHeader(android.view.View) -> b
org.holoeverywhere.widget.HeaderViewListAdapter$ViewInfo -> bjf:
    java.lang.Object data -> a
    boolean isSelectable -> b
    android.view.View view -> c
org.holoeverywhere.widget.HeterogeneousExpandableList -> bjg:
    int getChildType(int,int) -> a
    int getChildTypeCount() -> a
    int getGroupType(int) -> a
    int getGroupTypeCount() -> b
org.holoeverywhere.widget.LinearLayout -> org.holoeverywhere.widget.LinearLayout:
    boolean mBaselineAligned -> a
    int mBaselineAlignedChildIndex -> b
    int mBaselineChildTop -> c
    android.graphics.drawable.Drawable mDivider -> d
    int mDividerHeight -> e
    int mDividerPadding -> f
    int mDividerWidth -> g
    int mGravity -> h
    int[] mMaxAscent -> i
    int[] mMaxDescent -> j
    int mOrientation -> k
    int mShowDividers -> l
    int mTotalLength -> m
    boolean mUseLargestChild -> n
    float mWeightSum -> o
    int getAbsoluteGravity(int,int) -> a
    int resolveSizeAndState(int,int,int) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void drawDividersHorizontal(android.graphics.Canvas) -> a
    void drawDividersVertical(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    void forceUniformHeight(int,int) -> d
    void forceUniformWidth(int,int) -> e
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    int getBaseline() -> getBaseline
    int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    int getChildrenSkipCount(android.view.View,int) -> a
    android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    int getLayoutDirection() -> getLayoutDirection
    int getLocationOffset(android.view.View) -> a
    int getNextLocationOffset(android.view.View) -> b
    int getOrientation() -> getOrientation
    int getShowDividers() -> getShowDividers
    android.view.View getVirtualChildAt(int) -> a
    int getVirtualChildCount() -> getVirtualChildCount
    float getWeightSum() -> getWeightSum
    boolean hasDividerBeforeChildAt(int) -> b
    boolean isBaselineAligned() -> isBaselineAligned
    boolean isLayoutRtl() -> b
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void layoutHorizontal() -> c
    void layoutVertical() -> d
    void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> a
    void measureHorizontal(int,int) -> b
    int measureNullChild(int) -> c
    void measureVertical(int,int) -> c
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setBaselineAligned(boolean) -> setBaselineAligned
    void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    void setChildFrame(android.view.View,int,int,int,int) -> a
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    void setGravity(int) -> setGravity
    void setHorizontalGravity(int) -> setHorizontalGravity
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    void setOrientation(int) -> setOrientation
    void setShowDividers(int) -> setShowDividers
    void setVerticalGravity(int) -> setVerticalGravity
    void setWeightSum(float) -> setWeightSum
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
org.holoeverywhere.widget.ListAdapterWrapper -> bjh:
    org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback mCallback -> a
    android.database.DataSetObserver mLastDataSetObserver -> b
    android.widget.ListAdapter mWrapped -> c
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    android.view.View onPrepareView(android.view.View,int) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback access$0(org.holoeverywhere.widget.ListAdapterWrapper) -> a
org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback -> bji:
    void onChanged() -> a
    void onInvalidated() -> b
    android.view.View onPrepareView(android.view.View,int) -> a
org.holoeverywhere.widget.ListAdapterWrapper$WrapperDataSetObserver -> bjj:
    android.database.DataSetObserver mDataSetObserver -> b
    org.holoeverywhere.widget.ListAdapterWrapper this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
org.holoeverywhere.widget.ListPopupWindow -> org.holoeverywhere.widget.ListPopupWindow:
    android.widget.ListAdapter mAdapter -> b
    android.content.Context mContext -> c
    boolean mDropDownAlwaysVisible -> d
    android.view.View mDropDownAnchorView -> e
    int mDropDownHeight -> f
    int mDropDownHorizontalOffset -> g
    org.holoeverywhere.widget.ListPopupWindow$DropDownListView mDropDownList -> h
    android.graphics.drawable.Drawable mDropDownListHighlight -> i
    int mDropDownVerticalOffset -> j
    boolean mDropDownVerticalOffsetSet -> k
    int mDropDownWidth -> l
    boolean mForceIgnoreOutsideTouch -> m
    android.os.Handler mHandler -> n
    org.holoeverywhere.widget.ListPopupWindow$ListSelectorHider mHideSelector -> o
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> p
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> q
    int mListItemExpandMaximum -> a
    boolean mModal -> r
    android.database.DataSetObserver mObserver -> s
    org.holoeverywhere.widget.PopupWindow mPopup -> t
    int mPromptPosition -> u
    android.view.View mPromptView -> v
    org.holoeverywhere.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> w
    org.holoeverywhere.widget.ListPopupWindow$PopupScrollListener mScrollListener -> x
    java.lang.Runnable mShowDropDownRunnable -> y
    android.graphics.Rect mTempRect -> z
    org.holoeverywhere.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> A
    int buildDropDown() -> s
    void clearListSelection() -> a
    void dismiss() -> b
    android.view.View getAnchorView() -> c
    int getAnimationStyle() -> d
    android.graphics.drawable.Drawable getBackground() -> e
    int getHeight() -> f
    int getHorizontalOffset() -> g
    org.holoeverywhere.widget.ListView getListView() -> h
    int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    java.lang.Object getSelectedItem() -> i
    long getSelectedItemId() -> j
    int getSelectedItemPosition() -> k
    android.view.View getSelectedView() -> l
    int getVerticalOffset() -> m
    int getWidth() -> n
    boolean isDropDownAlwaysVisible() -> o
    boolean isInputMethodNotNeeded() -> p
    boolean isShowing() -> q
    int measureHeightOfChildren(int,int,int,int,int) -> a
    void measureScrapChild(android.view.View,int,int) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> b
    boolean performItemClick(int) -> a
    void removePromptView() -> t
    void setAdapter(android.widget.ListAdapter) -> a
    void setAnchorView(android.view.View) -> a
    void setAnimationStyle(int) -> b
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setContentWidth(int) -> c
    void setDropDownAlwaysVisible(boolean) -> a
    void setForceIgnoreOutsideTouch(boolean) -> b
    void setHeight(int) -> d
    void setHorizontalOffset(int) -> e
    void setInputMethodMode(int) -> f
    void setListItemExpandMax(int) -> g
    void setListSelector(android.graphics.drawable.Drawable) -> b
    void setModal(boolean) -> c
    void setOnDismissListener(org.holoeverywhere.widget.PopupWindow$OnDismissListener) -> a
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void setPromptPosition(int) -> h
    void setPromptView(android.view.View) -> b
    void setSelection(int) -> i
    void setSoftInputMode(int) -> j
    void setVerticalOffset(int) -> k
    void setWidth(int) -> l
    void show() -> r
    org.holoeverywhere.widget.PopupWindow access$0(org.holoeverywhere.widget.ListPopupWindow) -> a
    android.os.Handler access$1(org.holoeverywhere.widget.ListPopupWindow) -> b
    org.holoeverywhere.widget.ListPopupWindow$ResizePopupRunnable access$2(org.holoeverywhere.widget.ListPopupWindow) -> c
    org.holoeverywhere.widget.ListPopupWindow$DropDownListView access$3(org.holoeverywhere.widget.ListPopupWindow) -> d
org.holoeverywhere.widget.ListPopupWindow$1 -> bjk:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ListPopupWindow$2 -> bjl:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
org.holoeverywhere.widget.ListPopupWindow$DropDownListView -> bjm:
    boolean mHijackFocus -> a
    boolean mListSelectionHidden -> b
    boolean hasFocus() -> hasFocus
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean isInTouchMode() -> isInTouchMode
    android.view.View onPrepareView(android.view.View,int) -> a
    void access$0(org.holoeverywhere.widget.ListPopupWindow$DropDownListView,boolean) -> a
org.holoeverywhere.widget.ListPopupWindow$ListSelectorHider -> bjn:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ListPopupWindow$PopupDataSetObserver -> bjo:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
org.holoeverywhere.widget.ListPopupWindow$PopupScrollListener -> bjp:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
org.holoeverywhere.widget.ListPopupWindow$PopupTouchInterceptor -> bjq:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.holoeverywhere.widget.ListPopupWindow$ResizePopupRunnable -> bjr:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ListView -> org.holoeverywhere.widget.ListView:
    boolean USE_ACTIVATED -> a
    org.holoeverywhere.app.Activity mActivity -> b
    org.holoeverywhere.widget.ListAdapterWrapper mAdapter -> c
    boolean mAdapterHasStableIds -> d
    android.support.v4.util.LongSparseArray mCheckedIdStates -> e
    int mCheckedItemCount -> f
    android.util.SparseBooleanArray mCheckStates -> g
    com.actionbarsherlock.view.ActionMode mChoiceActionMode -> h
    int mChoiceMode -> i
    android.view.ContextMenu$ContextMenuInfo mContextMenuInfo -> j
    boolean mFastScrollEnabled -> k
    org.holoeverywhere.widget.FastScroller mFastScroller -> l
    java.util.List mFooterViewInfos -> m
    java.util.List mHeaderViewInfos -> n
    boolean mForceFastScrollAlwaysVisibleDisable -> o
    boolean mForceHeaderListAdapter -> p
    boolean mIsAttached -> q
    int mLastScrollState -> r
    org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback mListAdapterCallback -> s
    org.holoeverywhere.widget.ListView$MultiChoiceModeWrapper mMultiChoiceModeCallback -> t
    org.holoeverywhere.widget.ListView$OnItemLongClickListenerWrapper mOnItemLongClickListenerWrapper -> u
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> v
    boolean mPaddingFromScroller -> w
    int mVerticalScrollbarPosition -> x
    void addFooterView(android.view.View) -> addFooterView
    void addFooterView(android.view.View,java.lang.Object,boolean) -> addFooterView
    void addHeaderView(android.view.View) -> addHeaderView
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> addHeaderView
    void clearChoices() -> clearChoices
    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long) -> a
    void draw(android.graphics.Canvas) -> draw
    org.holoeverywhere.app.Activity getActivity() -> getActivity
    android.widget.ListAdapter getAdapterSource() -> getAdapterSource
    int getCheckedItemCount() -> getCheckedItemCount
    long[] getCheckedItemIds() -> getCheckedItemIds
    int getCheckedItemPosition() -> getCheckedItemPosition
    android.util.SparseBooleanArray getCheckedItemPositions() -> getCheckedItemPositions
    long[] getCheckItemIds() -> getCheckItemIds
    int getChoiceMode() -> getChoiceMode
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    int getFooterViewsCount() -> getFooterViewsCount
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getVerticalScrollbarPosition() -> getVerticalScrollbarPosition
    int getVerticalScrollbarWidth() -> getVerticalScrollbarWidth
    boolean isAttached() -> a
    boolean isFastScrollAlwaysVisible() -> isFastScrollAlwaysVisible
    boolean isFastScrollEnabled() -> isFastScrollEnabled
    boolean isInScrollingContainer() -> b
    boolean isItemChecked(int) -> isItemChecked
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.View onPrepareView(android.view.View,int) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    boolean performItemLongClick(android.view.View,int,long) -> c
    void recomputePaddingFromScroller() -> c
    boolean removeFooterView(android.view.View) -> removeFooterView
    boolean removeHeaderView(android.view.View) -> removeHeaderView
    void removeViewInfo(android.view.View,java.util.List) -> a
    void reportScrollStateChange(int) -> c
    void setActivity(org.holoeverywhere.app.Activity) -> setActivity
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setChoiceMode(int) -> setChoiceMode
    void setFastScrollAlwaysVisible(boolean) -> setFastScrollAlwaysVisible
    void setFastScrollEnabled(boolean) -> setFastScrollEnabled
    void setForceHeaderListAdapter(boolean) -> setForceHeaderListAdapter
    void setItemChecked(int,boolean) -> setItemChecked
    void setMultiChoiceModeListener(org.holoeverywhere.widget.ListView$MultiChoiceModeListener) -> setMultiChoiceModeListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setPaddingFromScroller(boolean) -> setPaddingFromScroller
    void setSelectionAfterHeaderView() -> setSelectionAfterHeaderView
    void setSelector(int) -> setSelector
    void setStateOnView(android.view.View,boolean) -> a
    void setVerticalScrollbarPosition(int) -> setVerticalScrollbarPosition
    boolean showContextMenuForChild(android.view.View) -> showContextMenuForChild
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    void updateOnScreenCheckedViews() -> d
    org.holoeverywhere.widget.FastScroller access$0(org.holoeverywhere.widget.ListView) -> a
    void access$1(org.holoeverywhere.widget.ListView,com.actionbarsherlock.view.ActionMode) -> a
    void access$2(org.holoeverywhere.widget.ListView) -> b
org.holoeverywhere.widget.ListView$1 -> bjs:
    org.holoeverywhere.widget.ListView this$0 -> a
    void onChanged() -> a
    void onInvalidated() -> b
    android.view.View onPrepareView(android.view.View,int) -> a
org.holoeverywhere.widget.ListView$MultiChoiceModeListener -> bjt:
    void onItemCheckedStateChanged(com.actionbarsherlock.view.ActionMode,int,long,boolean) -> a
org.holoeverywhere.widget.ListView$MultiChoiceModeWrapper -> bju:
    org.holoeverywhere.widget.ListView$MultiChoiceModeListener mWrapped -> b
    org.holoeverywhere.widget.ListView this$0 -> a
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> a
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> a
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> a
    void onItemCheckedStateChanged(com.actionbarsherlock.view.ActionMode,int,long,boolean) -> a
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> b
    void setWrapped(org.holoeverywhere.widget.ListView$MultiChoiceModeListener) -> a
org.holoeverywhere.widget.ListView$OnItemLongClickListenerWrapper -> bjv:
    android.widget.AdapterView$OnItemLongClickListener wrapped -> b
    org.holoeverywhere.widget.ListView this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void setWrapped(android.widget.AdapterView$OnItemLongClickListener) -> a
    android.widget.AdapterView$OnItemLongClickListener access$1(org.holoeverywhere.widget.ListView$OnItemLongClickListenerWrapper) -> a
org.holoeverywhere.widget.ListView$SavedState -> org.holoeverywhere.widget.ListView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int checkedItemCount -> a
    android.support.v4.util.LongSparseArray checkIdState -> b
    android.util.SparseBooleanArray checkState -> c
    boolean inActionMode -> d
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.ListView$SavedState$1 -> bjw:
    org.holoeverywhere.widget.ListView$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ListView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
org.holoeverywhere.widget.MultiAutoCompleteTextView -> org.holoeverywhere.widget.MultiAutoCompleteTextView:
    org.holoeverywhere.widget.MultiAutoCompleteTextView$Tokenizer mTokenizer -> a
    boolean enoughToFilter() -> e
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLoadEntries(java.lang.CharSequence[]) -> a
    void performFiltering(java.lang.CharSequence,int) -> a
    void performFiltering(java.lang.CharSequence,int,int,int) -> a
    void performValidation() -> h
    void replaceText(java.lang.CharSequence) -> a
    void setTokenizer(org.holoeverywhere.widget.MultiAutoCompleteTextView$Tokenizer) -> setTokenizer
org.holoeverywhere.widget.MultiAutoCompleteTextView$CommaTokenizer -> bjx:
    int findTokenEnd(java.lang.CharSequence,int) -> a
    int findTokenStart(java.lang.CharSequence,int) -> b
    java.lang.CharSequence terminateToken(java.lang.CharSequence) -> a
org.holoeverywhere.widget.MultiAutoCompleteTextView$Tokenizer -> bjy:
    int findTokenEnd(java.lang.CharSequence,int) -> a
    int findTokenStart(java.lang.CharSequence,int) -> b
    java.lang.CharSequence terminateToken(java.lang.CharSequence) -> a
org.holoeverywhere.widget.NumberPicker -> org.holoeverywhere.widget.NumberPicker:
    int DEFAULT_LAYOUT_RESOURCE_ID -> b
    char[] DIGIT_CHARACTERS -> c
    org.holoeverywhere.widget.NumberPicker$Formatter TWO_DIGIT_FORMATTER -> a
    org.holoeverywhere.widget.Scroller mAdjustScroller -> d
    org.holoeverywhere.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand -> e
    int mBottomSelectionDividerBottom -> f
    org.holoeverywhere.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand -> g
    boolean mComputeMaxWidth -> h
    int mCurrentScrollOffset -> i
    android.widget.ImageButton mDecrementButton -> j
    boolean mDecrementVirtualButtonPressed -> k
    java.lang.String[] mDisplayedValues -> l
    org.holoeverywhere.widget.Scroller mFlingScroller -> m
    org.holoeverywhere.widget.NumberPicker$Formatter mFormatter -> n
    boolean mHasSelectorWheel -> o
    android.widget.ImageButton mIncrementButton -> p
    boolean mIncrementVirtualButtonPressed -> q
    boolean mIngonreMoveEvents -> r
    int mInitialScrollOffset -> s
    org.holoeverywhere.internal.NumberPickerEditText mInputText -> t
    long mLastDownEventTime -> u
    float mLastDownEventY -> v
    float mLastDownOrMoveEventY -> w
    long mLongPressUpdateInterval -> x
    int mMaxHeight -> y
    int mMaximumFlingVelocity -> z
    int mMaxValue -> A
    int mMaxWidth -> B
    int mMinHeight -> C
    int mMinimumFlingVelocity -> D
    int mMinValue -> E
    int mMinWidth -> F
    org.holoeverywhere.widget.NumberPicker$OnScrollListener mOnScrollListener -> G
    org.holoeverywhere.widget.NumberPicker$OnValueChangeListener mOnValueChangeListener -> H
    org.holoeverywhere.widget.NumberPicker$PressedStateHelper mPressedStateHelper -> I
    int mPreviousScrollerY -> J
    int mScrollState -> K
    android.graphics.drawable.Drawable mSelectionDivider -> L
    int mSelectionDividerHeight -> M
    int mSelectionDividersDistance -> N
    int mSelectorElementHeight -> O
    android.util.SparseArray mSelectorIndexToStringCache -> P
    int[] mSelectorIndices -> Q
    int mSelectorTextGapHeight -> R
    android.graphics.Paint mSelectorWheelPaint -> S
    org.holoeverywhere.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand -> T
    boolean mShowSoftInputOnTap -> U
    int mSolidColor -> V
    int mTextSize -> W
    int mTopSelectionDividerTop -> Z
    int mTouchSlop -> aa
    int mValue -> ab
    android.view.VelocityTracker mVelocityTracker -> ac
    android.graphics.drawable.Drawable mVirtualButtonPressedDrawable -> ad
    boolean mWrapSelectorWheel -> ae
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void changeValueByOne(boolean) -> a
    void computeScroll() -> computeScroll
    void decrementSelectorIndices(int[]) -> a
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    void ensureCachedScrollSelectorValue(int) -> d
    boolean ensureScrollWheelAdjusted() -> e
    void fling(int) -> e
    java.lang.String formatNumber(int) -> f
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    java.lang.String[] getDisplayedValues() -> getDisplayedValues
    org.holoeverywhere.internal.NumberPickerEditText getInputField() -> getInputField
    int getMaxValue() -> getMaxValue
    int getMinValue() -> getMinValue
    int getSelectedPos(java.lang.String) -> a
    int getSolidColor() -> getSolidColor
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    int getValue() -> getValue
    int getWrappedSelectorIndex(int) -> g
    boolean getWrapSelectorWheel() -> getWrapSelectorWheel
    void hideSoftInput() -> f
    void incrementSelectorIndices(int[]) -> b
    void initializeFadingEdges() -> g
    void initializeSelectorWheel() -> h
    void initializeSelectorWheelIndices() -> i
    int makeMeasureSpec(int,int) -> d
    boolean moveToFinalScrollerPosition(org.holoeverywhere.widget.Scroller) -> a
    void notifyChange(int,int) -> e
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onScrollerFinished(org.holoeverywhere.widget.Scroller) -> b
    void onScrollStateChange(int) -> h
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void postBeginSoftInputOnLongPressCommand() -> j
    void postChangeCurrentByOneFromLongPress(boolean,long) -> a
    void postSetSelectionCommand(int,int) -> f
    void removeAllCallbacks() -> k
    void removeBeginSoftInputCommand() -> l
    void removeChangeCurrentByOneFromLongPress() -> m
    int resolveSizeAndStateRespectingMinSize(int,int,int) -> b
    void scrollBy(int,int) -> scrollBy
    void setDisplayedValues(java.lang.String[]) -> setDisplayedValues
    void setEnabled(boolean) -> setEnabled
    void setFormatter(org.holoeverywhere.widget.NumberPicker$Formatter) -> setFormatter
    void setMaxValue(int) -> setMaxValue
    void setMinValue(int) -> setMinValue
    void setOnLongPressUpdateInterval(long) -> setOnLongPressUpdateInterval
    void setOnScrollListener(org.holoeverywhere.widget.NumberPicker$OnScrollListener) -> setOnScrollListener
    void setOnValueChangedListener(org.holoeverywhere.widget.NumberPicker$OnValueChangeListener) -> setOnValueChangedListener
    void setValue(int) -> setValue
    void setValueInternal(int,boolean) -> a
    void setWrapSelectorWheel(boolean) -> setWrapSelectorWheel
    void showSoftInput() -> n
    void tryComputeMaxWidth() -> o
    boolean updateInputTextView() -> p
    void validateInputTextView(org.holoeverywhere.internal.NumberPickerEditText) -> a
    void access$0(org.holoeverywhere.widget.NumberPicker) -> a
    void access$1(org.holoeverywhere.widget.NumberPicker,boolean) -> a
    void access$2(org.holoeverywhere.widget.NumberPicker,boolean) -> b
    long access$3(org.holoeverywhere.widget.NumberPicker) -> b
    java.lang.String[] access$4(org.holoeverywhere.widget.NumberPicker) -> c
    int access$5(org.holoeverywhere.widget.NumberPicker,java.lang.String) -> a
    int access$6(org.holoeverywhere.widget.NumberPicker) -> d
    void access$7(org.holoeverywhere.widget.NumberPicker,int,int) -> a
    char[] access$8() -> a
    boolean access$9(org.holoeverywhere.widget.NumberPicker) -> e
    void access$10(org.holoeverywhere.widget.NumberPicker,boolean) -> c
    int access$11(org.holoeverywhere.widget.NumberPicker) -> f
    void access$12(org.holoeverywhere.widget.NumberPicker,boolean) -> d
    boolean access$13(org.holoeverywhere.widget.NumberPicker) -> g
    int access$14(org.holoeverywhere.widget.NumberPicker) -> h
    org.holoeverywhere.internal.NumberPickerEditText access$15(org.holoeverywhere.widget.NumberPicker) -> i
    void access$16(org.holoeverywhere.widget.NumberPicker) -> j
    void access$17(org.holoeverywhere.widget.NumberPicker,boolean,long) -> a
    void access$18(org.holoeverywhere.widget.NumberPicker,org.holoeverywhere.internal.NumberPickerEditText) -> a
org.holoeverywhere.widget.NumberPicker$1 -> bjz:
    java.lang.Object[] mArgs -> a
    java.lang.StringBuilder mBuilder -> b
    java.util.Formatter mFmt -> c
    java.lang.String format(int) -> a
org.holoeverywhere.widget.NumberPicker$2 -> bka:
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void onClick(android.view.View) -> onClick
org.holoeverywhere.widget.NumberPicker$3 -> bkb:
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.holoeverywhere.widget.NumberPicker$4 -> bkc:
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
org.holoeverywhere.widget.NumberPicker$BeginSoftInputOnLongPressCommand -> bkd:
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void run() -> run
org.holoeverywhere.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand -> bke:
    boolean mIncrement -> b
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void run() -> run
    void setStep(boolean) -> a
    void access$0(org.holoeverywhere.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand,boolean) -> a
org.holoeverywhere.widget.NumberPicker$Formatter -> bkf:
    java.lang.String format(int) -> a
org.holoeverywhere.widget.NumberPicker$InputTextFilter -> bkg:
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
    char[] getAcceptedChars() -> getAcceptedChars
    int getInputType() -> getInputType
org.holoeverywhere.widget.NumberPicker$OnScrollListener -> bkh:
    void onScrollStateChange(org.holoeverywhere.widget.NumberPicker,int) -> a
org.holoeverywhere.widget.NumberPicker$OnValueChangeListener -> bki:
    void onValueChange(org.holoeverywhere.widget.NumberPicker,int,int) -> a
org.holoeverywhere.widget.NumberPicker$PressedStateHelper -> bkj:
    int mManagedButton -> b
    int mMode -> c
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void buttonPressDelayed(int) -> a
    void buttonTapped(int) -> b
    void cancel() -> a
    void run() -> run
org.holoeverywhere.widget.NumberPicker$SetSelectionCommand -> bkk:
    int mSelectionEnd -> b
    int mSelectionStart -> c
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void run() -> run
    void access$0(org.holoeverywhere.widget.NumberPicker$SetSelectionCommand,int) -> a
    void access$1(org.holoeverywhere.widget.NumberPicker$SetSelectionCommand,int) -> b
org.holoeverywhere.widget.PopupWindow -> org.holoeverywhere.widget.PopupWindow:
    int[] ABOVE_ANCHOR_STATE_SET -> a
    boolean mAboveAnchor -> b
    android.graphics.drawable.Drawable mAboveAnchorBackgroundDrawable -> c
    boolean mAllowScrollingAnchorParent -> d
    java.lang.ref.WeakReference mAnchor -> e
    int mAnchorXoff -> f
    int mAnchorYoff -> g
    int mAnimationStyle -> h
    android.graphics.drawable.Drawable mBackground -> i
    android.graphics.drawable.Drawable mBelowAnchorBackgroundDrawable -> j
    boolean mClippingEnabled -> k
    boolean mClipToScreen -> l
    android.view.View mContentView -> m
    android.content.Context mContext -> n
    int[] mDrawingLocation -> o
    boolean mFocusable -> p
    int mHeight -> q
    int mHeightMode -> r
    boolean mIgnoreCheekPress -> s
    int mInputMethodMode -> t
    boolean mIsDropdown -> u
    boolean mIsShowing -> v
    int mLastHeight -> w
    int mLastWidth -> x
    boolean mLayoutInScreen -> y
    boolean mLayoutInsetDecor -> z
    boolean mNotTouchModal -> A
    org.holoeverywhere.widget.PopupWindow$OnDismissListener mOnDismissListener -> B
    android.view.ViewTreeObserver$OnScrollChangedListener mOnScrollChangedListener -> C
    boolean mOutsideTouchable -> D
    int mPopupHeight -> E
    android.view.View mPopupView -> F
    int mPopupWidth -> G
    int[] mScreenLocation -> H
    int mSoftInputMode -> I
    int mSplitTouchEnabled -> J
    android.graphics.Rect mTempRect -> K
    boolean mTouchable -> L
    android.view.View$OnTouchListener mTouchInterceptor -> M
    int mWidth -> N
    int mWidthMode -> O
    int mWindowLayoutType -> P
    android.view.WindowManager mWindowManager -> Q
    int computeAnimationResource() -> l
    int computeFlags(int) -> f
    android.view.WindowManager$LayoutParams createPopupLayout(android.os.IBinder) -> a
    void dismiss() -> a
    boolean findDropDownPosition(android.view.View,android.view.WindowManager$LayoutParams,int,int) -> a
    int getAnimationStyle() -> b
    android.graphics.drawable.Drawable getBackground() -> c
    android.view.View getContentView() -> d
    int getHeight() -> e
    int getInputMethodMode() -> f
    int getWidth() -> g
    void invokePopup(android.view.WindowManager$LayoutParams) -> a
    boolean isAboveAnchor() -> h
    boolean isShowing() -> i
    boolean isSplitTouchEnabled() -> j
    void preparePopup(android.view.WindowManager$LayoutParams) -> b
    void registerForScrollChanged(android.view.View,int,int) -> b
    void setAllowScrollingAnchorParent(boolean) -> a
    void setAnimationStyle(int) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setClippingEnabled(boolean) -> b
    void setClipToScreenEnabled(boolean) -> c
    void setContentView(android.view.View) -> a
    void setFocusable(boolean) -> d
    void setHeight(int) -> b
    void setInputMethodMode(int) -> c
    void setOnDismissListener(org.holoeverywhere.widget.PopupWindow$OnDismissListener) -> a
    void setOutsideTouchable(boolean) -> e
    void setSoftInputMode(int) -> d
    void setTouchInterceptor(android.view.View$OnTouchListener) -> a
    void setWidth(int) -> e
    void setWindowLayoutMode(int,int) -> a
    void showAsDropDown(android.view.View,int,int) -> a
    void unregisterForScrollChanged() -> m
    void update(int,int,int,int,boolean) -> a
    void update(android.view.View,boolean,int,int,boolean,int,int) -> a
    void update(android.view.View,int,int,int,int) -> a
    void updateAboveAnchor(boolean) -> f
    java.lang.ref.WeakReference access$0(org.holoeverywhere.widget.PopupWindow) -> a
    android.view.View access$1(org.holoeverywhere.widget.PopupWindow) -> b
    int access$2(org.holoeverywhere.widget.PopupWindow) -> c
    int access$3(org.holoeverywhere.widget.PopupWindow) -> d
    boolean access$4(org.holoeverywhere.widget.PopupWindow,android.view.View,android.view.WindowManager$LayoutParams,int,int) -> a
    void access$5(org.holoeverywhere.widget.PopupWindow,boolean) -> a
    android.view.View$OnTouchListener access$6(org.holoeverywhere.widget.PopupWindow) -> e
    boolean access$7(org.holoeverywhere.widget.PopupWindow) -> f
    int[] access$8() -> k
    android.view.View access$9(org.holoeverywhere.widget.PopupWindow) -> g
org.holoeverywhere.widget.PopupWindow$1 -> bkl:
    org.holoeverywhere.widget.PopupWindow this$0 -> a
    void onScrollChanged() -> onScrollChanged
org.holoeverywhere.widget.PopupWindow$OnDismissListener -> bkm:
    void onDismiss() -> f_
org.holoeverywhere.widget.PopupWindow$PopupViewContainer -> bkn:
    org.holoeverywhere.widget.PopupWindow this$0 -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void sendAccessibilityEvent(int) -> sendAccessibilityEvent
org.holoeverywhere.widget.ProgressBar -> org.holoeverywhere.widget.ProgressBar:
    org.holoeverywhere.widget.ProgressBar$AccessibilityEventSender mAccessibilityEventSender -> a
    android.view.animation.AlphaAnimation mAnimation -> b
    boolean mAttached -> g
    int mBehavior -> h
    android.graphics.drawable.Drawable mCurrentDrawable -> i
    int mDuration -> j
    boolean mHasAnimation -> k
    boolean mIndeterminate -> l
    android.graphics.drawable.Drawable mIndeterminateDrawable -> m
    boolean mInDrawing -> n
    android.view.animation.Interpolator mInterpolator -> o
    int mMax -> p
    int mMinWidth -> c
    int mMaxWidth -> d
    int mMinHeight -> e
    int mMaxHeight -> f
    boolean mNoInvalidate -> q
    boolean mOnlyIndeterminate -> r
    int mProgress -> s
    android.graphics.drawable.Drawable mProgressDrawable -> t
    java.util.ArrayList mRefreshData -> u
    boolean mRefreshIsPosted -> v
    org.holoeverywhere.widget.ProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> w
    android.graphics.Bitmap mSampleTile -> x
    int mSecondaryProgress -> y
    boolean mShouldStartAnimationDrawable -> z
    android.view.animation.Transformation mTransformation -> A
    long mUiThreadId -> B
    void doRefreshProgress(int,int,boolean,boolean) -> a
    void drawableStateChanged() -> drawableStateChanged
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    int getMax() -> getMax
    int getProgress() -> getProgress
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    int getResolvedLayoutDirection() -> getResolvedLayoutDirection
    int getSecondaryProgress() -> getSecondaryProgress
    void initProgressBar() -> a
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isIndeterminate() -> isIndeterminate
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void onProgressRefresh(float,boolean) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void postInvalidate() -> postInvalidate
    void refreshProgress(int,int,boolean) -> a
    void scheduleAccessibilityEventSender() -> b
    void setIndeterminate(boolean) -> setIndeterminate
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    void setInterpolator(android.content.Context,int) -> setInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    void setMax(int) -> setMax
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> a
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    void setSecondaryProgress(int) -> setSecondaryProgress
    void setVisibility(int) -> setVisibility
    void startAnimation() -> e
    void stopAnimation() -> f
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void updateDrawableBounds(int,int) -> a
    void updateDrawableState() -> c
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    java.util.ArrayList access$0(org.holoeverywhere.widget.ProgressBar) -> a
    void access$1(org.holoeverywhere.widget.ProgressBar,int,int,boolean,boolean) -> a
    void access$2(org.holoeverywhere.widget.ProgressBar,boolean) -> a
org.holoeverywhere.widget.ProgressBar$AccessibilityEventSender -> bko:
    org.holoeverywhere.widget.ProgressBar this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ProgressBar$RefreshData -> bkp:
    org.holoeverywhere.util.Pool sPool -> d
    boolean fromUser -> a
    int id -> b
    boolean mIsPooled -> e
    org.holoeverywhere.widget.ProgressBar$RefreshData mNext -> f
    int progress -> c
    org.holoeverywhere.widget.ProgressBar$RefreshData obtain(int,int,boolean) -> a
    org.holoeverywhere.widget.ProgressBar$RefreshData getNextPoolable() -> c
    boolean isPooled() -> b
    void recycle() -> d
    void setNextPoolable(org.holoeverywhere.widget.ProgressBar$RefreshData) -> a
    void setPooled(boolean) -> a
    void setNextPoolable(java.lang.Object) -> a
    java.lang.Object getNextPoolable() -> a
org.holoeverywhere.widget.ProgressBar$RefreshData$1 -> bkq:
    org.holoeverywhere.widget.ProgressBar$RefreshData newInstance() -> b
    void onAcquired(org.holoeverywhere.widget.ProgressBar$RefreshData) -> a
    void onReleased(org.holoeverywhere.widget.ProgressBar$RefreshData) -> b
    org.holoeverywhere.util.Poolable newInstance() -> a
    void onAcquired(org.holoeverywhere.util.Poolable) -> a
    void onReleased(org.holoeverywhere.util.Poolable) -> b
org.holoeverywhere.widget.ProgressBar$RefreshProgressRunnable -> bkr:
    org.holoeverywhere.widget.ProgressBar this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ProgressBar$SavedState -> org.holoeverywhere.widget.ProgressBar$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int progress -> a
    int secondaryProgress -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.ProgressBar$SavedState$1 -> bks:
    org.holoeverywhere.widget.ProgressBar$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ProgressBar$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
org.holoeverywhere.widget.RadioButton -> org.holoeverywhere.widget.RadioButton:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> setFontStyle
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.Scroller -> bkt:
    float ALPHA -> a
    float DECELERATION_RATE -> b
    float END_TENSION -> c
    float[] SPLINE -> d
    float START_TENSION -> e
    float sViscousFluidNormalize -> f
    float sViscousFluidScale -> g
    int mCurrX -> h
    int mCurrY -> i
    float mDeceleration -> j
    float mDeltaX -> k
    float mDeltaY -> l
    int mDuration -> m
    float mDurationReciprocal -> n
    int mFinalX -> o
    int mFinalY -> p
    boolean mFinished -> q
    boolean mFlywheel -> r
    android.view.animation.Interpolator mInterpolator -> s
    int mMaxX -> t
    int mMaxY -> u
    int mMinX -> v
    int mMinY -> w
    int mMode -> x
    float mPpi -> y
    long mStartTime -> z
    int mStartX -> A
    int mStartY -> B
    float mVelocity -> C
    float viscousFluid(float) -> a
    float computeDeceleration(float) -> b
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    float getCurrVelocity() -> b
    int getCurrY() -> c
    int getFinalY() -> d
    int getStartY() -> e
    boolean isFinished() -> f
    void startScroll(int,int,int,int,int) -> a
    int timePassed() -> g
org.holoeverywhere.widget.SeekBar -> org.holoeverywhere.widget.SeekBar:
    org.holoeverywhere.widget.SeekBar$OnSeekBarChangeListener mOnSeekBarChangeListener -> g
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onProgressRefresh(float,boolean) -> a
    void onStartTrackingTouch() -> c
    void onStopTrackingTouch() -> d
    void setOnSeekBarChangeListener(org.holoeverywhere.widget.SeekBar$OnSeekBarChangeListener) -> setOnSeekBarChangeListener
org.holoeverywhere.widget.SeekBar$OnSeekBarChangeListener -> bku:
    void onProgressChanged(org.holoeverywhere.widget.SeekBar,int,boolean) -> a
    void onStartTrackingTouch(org.holoeverywhere.widget.SeekBar) -> a
    void onStopTrackingTouch(org.holoeverywhere.widget.SeekBar) -> b
org.holoeverywhere.widget.Spinner -> org.holoeverywhere.widget.Spinner:
    boolean mDisableChildrenWhenDisabled -> F
    int mDropDownWidth -> E
    int mGravity -> G
    org.holoeverywhere.widget.Spinner$SpinnerPopup mPopup -> H
    org.holoeverywhere.widget.Spinner$DropDownAdapter mTempAdapter -> I
    android.graphics.Rect mTempRect -> J
    int getBaseline() -> getBaseline
    int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    int getDropDownWidth() -> getDropDownWidth
    int getGravity() -> getGravity
    android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    java.lang.CharSequence getPrompt() -> getPrompt
    void layout(int,boolean) -> a
    android.view.View makeAndAddView(int) -> b
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean performClick() -> performClick
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    void setDropDownWidth(int) -> setDropDownWidth
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setOnItemClickListener(org.holoeverywhere.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    void setUpChild(android.view.View) -> setUpChild
    android.graphics.Rect access$0(org.holoeverywhere.widget.Spinner) -> a
org.holoeverywhere.widget.Spinner$DialogPopup -> bkv:
    android.widget.ListAdapter mListAdapter -> b
    org.holoeverywhere.app.AlertDialog mPopup -> c
    java.lang.CharSequence mPrompt -> d
    org.holoeverywhere.widget.Spinner this$0 -> a
    void dismiss() -> b
    android.graphics.drawable.Drawable getBackground() -> e
    java.lang.CharSequence getHintText() -> e_
    int getHorizontalOffset() -> g
    int getVerticalOffset() -> m
    boolean isShowing() -> q
    void onClick(android.content.DialogInterface,int) -> onClick
    void setAdapter(android.widget.ListAdapter) -> a
    void setHorizontalOffset(int) -> e
    void setPromptText(java.lang.CharSequence) -> a
    void setVerticalOffset(int) -> k
    void show() -> r
org.holoeverywhere.widget.Spinner$DropDownAdapter -> bkw:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getCount() -> getCount
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
org.holoeverywhere.widget.Spinner$DropdownPopup -> bkx:
    android.widget.ListAdapter mAdapter -> c
    java.lang.CharSequence mHintText -> d
    boolean mSelectionSetted -> e
    org.holoeverywhere.widget.Spinner this$0 -> b
    java.lang.CharSequence getHintText() -> e_
    void onDismiss() -> f_
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> r
    android.widget.ListAdapter access$0(org.holoeverywhere.widget.Spinner$DropdownPopup) -> a
    org.holoeverywhere.widget.Spinner access$1(org.holoeverywhere.widget.Spinner$DropdownPopup) -> b
org.holoeverywhere.widget.Spinner$DropdownPopup$1 -> bky:
    org.holoeverywhere.widget.Spinner$DropdownPopup this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.holoeverywhere.widget.Spinner$SpinnerPopup -> bkz:
    void dismiss() -> b
    android.graphics.drawable.Drawable getBackground() -> e
    java.lang.CharSequence getHintText() -> e_
    int getHorizontalOffset() -> g
    int getVerticalOffset() -> m
    boolean isShowing() -> q
    void setAdapter(android.widget.ListAdapter) -> a
    void setHorizontalOffset(int) -> e
    void setPromptText(java.lang.CharSequence) -> a
    void setVerticalOffset(int) -> k
    void show() -> r
org.holoeverywhere.widget.Switch -> org.holoeverywhere.widget.Switch:
    int[] CHECKED_STATE_SET -> a
    int mMinFlingVelocity -> b
    android.text.Layout mOffLayout -> c
    android.text.Layout mOnLayout -> d
    int mSwitchBottom -> e
    int mSwitchHeight -> f
    int mSwitchLeft -> g
    int mSwitchMinWidth -> h
    int mSwitchPadding -> i
    int mSwitchRight -> j
    int mSwitchTop -> k
    org.holoeverywhere.text.TransformationMethod mSwitchTransformationMethod -> l
    int mSwitchWidth -> m
    android.graphics.Rect mTempRect -> n
    android.content.res.ColorStateList mTextColors -> o
    java.lang.CharSequence mTextOff -> p
    java.lang.CharSequence mTextOn -> q
    android.text.TextPaint mTextPaint -> r
    android.graphics.drawable.Drawable mThumbDrawable -> s
    float mThumbPosition -> t
    int mThumbTextPadding -> u
    int mThumbWidth -> v
    boolean mToggleWhenClick -> w
    int mTouchMode -> x
    int mTouchSlop -> y
    float mTouchX -> z
    float mTouchY -> A
    android.graphics.drawable.Drawable mTrackDrawable -> B
    android.view.VelocityTracker mVelocityTracker -> C
    void animateThumbToCheckedState(boolean) -> a
    void cancelSuperTouch(android.view.MotionEvent) -> a
    void drawableStateChanged() -> drawableStateChanged
    int getCompoundPaddingRight() -> getCompoundPaddingRight
    int getSwitchMinWidth() -> getSwitchMinWidth
    int getSwitchPadding() -> getSwitchPadding
    boolean getTargetCheckedState() -> getTargetCheckedState
    java.lang.CharSequence getTextOff() -> getTextOff
    java.lang.CharSequence getTextOn() -> getTextOn
    android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    int getThumbScrollRange() -> getThumbScrollRange
    int getThumbTextPadding() -> getThumbTextPadding
    android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    boolean hitThumb(float,float) -> a
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    android.text.Layout makeLayout(java.lang.CharSequence) -> a
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setChecked(boolean) -> setChecked
    void setSwitchMinWidth(int) -> setSwitchMinWidth
    void setSwitchPadding(int) -> setSwitchPadding
    void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    void setSwitchTypefaceByIndex(int,int) -> a
    void setTextOff(java.lang.CharSequence) -> setTextOff
    void setTextOn(java.lang.CharSequence) -> setTextOn
    void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    void setThumbResource(int) -> setThumbResource
    void setThumbTextPadding(int) -> setThumbTextPadding
    void setToggleWhenClick(boolean) -> setToggleWhenClick
    void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    void setTrackResource(int) -> setTrackResource
    void stopDrag(android.view.MotionEvent) -> b
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
org.holoeverywhere.widget.TextView -> org.holoeverywhere.widget.TextView:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    void construct(android.widget.TextView,android.content.Context,android.util.AttributeSet,int) -> a
    java.lang.Object[] parseFontStyle(android.content.res.TypedArray) -> a
    void setAllCaps(android.widget.TextView,boolean) -> setAllCaps
    void setFontStyle(android.widget.TextView,java.lang.String,int) -> setFontStyle
    void setTextAppearance(android.widget.TextView,android.content.Context,int) -> setTextAppearance
    void setTextAppearance(android.widget.TextView,android.content.res.TypedArray) -> setTextAppearance
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> setFontStyle
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.TimePicker -> org.holoeverywhere.widget.TimePicker:
    org.holoeverywhere.widget.TimePicker$OnTimeChangedListener NO_OP_CHANGE_LISTENER -> a
    android.widget.Button mAmPmButton -> b
    java.lang.String[] mAmPmStrings -> c
    android.content.Context mContext -> d
    java.util.Locale mCurrentLocale -> e
    org.holoeverywhere.widget.TextView mDivider -> f
    org.holoeverywhere.widget.NumberPicker mHourSpinner -> g
    org.holoeverywhere.widget.NumberPicker mMinuteSpinner -> h
    org.holoeverywhere.widget.NumberPicker mAmPmSpinner -> i
    org.holoeverywhere.internal.NumberPickerEditText mHourSpinnerInput -> j
    org.holoeverywhere.internal.NumberPickerEditText mMinuteSpinnerInput -> k
    org.holoeverywhere.internal.NumberPickerEditText mAmPmSpinnerInput -> l
    boolean mIs24HourView -> m
    boolean mIsAm -> n
    boolean mIsEnabled -> o
    org.holoeverywhere.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener -> p
    java.util.Calendar mTempCalendar -> q
    void setContentDescription(android.view.View,int,int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    int getBaseline() -> getBaseline
    java.lang.Integer getCurrentHour() -> getCurrentHour
    java.lang.Integer getCurrentMinute() -> getCurrentMinute
    boolean is24HourView() -> a
    boolean isEnabled() -> isEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onTimeChanged() -> b
    void setContentDescriptions() -> c
    void setCurrentHour(java.lang.Integer) -> setCurrentHour
    void setCurrentLocale(java.util.Locale) -> setCurrentLocale
    void setCurrentMinute(java.lang.Integer) -> setCurrentMinute
    void setEnabled(boolean) -> setEnabled
    void setIs24HourView(java.lang.Boolean) -> setIs24HourView
    void setOnTimeChangedListener(org.holoeverywhere.widget.TimePicker$OnTimeChangedListener) -> setOnTimeChangedListener
    void updateAmPmControl() -> d
    void updateHourControl() -> e
    void updateInputState() -> f
    void access$0(org.holoeverywhere.widget.TimePicker) -> a
    boolean access$1(org.holoeverywhere.widget.TimePicker) -> b
    void access$2(org.holoeverywhere.widget.TimePicker,boolean) -> a
    void access$3(org.holoeverywhere.widget.TimePicker) -> c
    void access$4(org.holoeverywhere.widget.TimePicker) -> d
    org.holoeverywhere.widget.NumberPicker access$5(org.holoeverywhere.widget.TimePicker) -> e
    org.holoeverywhere.widget.NumberPicker access$6(org.holoeverywhere.widget.TimePicker) -> f
org.holoeverywhere.widget.TimePicker$1 -> bla:
    void onTimeChanged(org.holoeverywhere.widget.TimePicker,int,int) -> a
org.holoeverywhere.widget.TimePicker$2 -> blb:
    org.holoeverywhere.widget.TimePicker this$0 -> a
    void onValueChange(org.holoeverywhere.widget.NumberPicker,int,int) -> a
org.holoeverywhere.widget.TimePicker$3 -> blc:
    org.holoeverywhere.widget.TimePicker this$0 -> a
    void onValueChange(org.holoeverywhere.widget.NumberPicker,int,int) -> a
org.holoeverywhere.widget.TimePicker$4 -> bld:
    org.holoeverywhere.widget.TimePicker this$0 -> a
    void onClick(android.view.View) -> onClick
org.holoeverywhere.widget.TimePicker$5 -> ble:
    org.holoeverywhere.widget.TimePicker this$0 -> a
    void onValueChange(org.holoeverywhere.widget.NumberPicker,int,int) -> a
org.holoeverywhere.widget.TimePicker$OnTimeChangedListener -> blf:
    void onTimeChanged(org.holoeverywhere.widget.TimePicker,int,int) -> a
org.holoeverywhere.widget.TimePicker$SavedState -> org.holoeverywhere.widget.TimePicker$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int mHour -> a
    int mMinute -> b
    int getHour() -> a
    int getMinute() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.TimePicker$SavedState$1 -> blg:
    org.holoeverywhere.widget.TimePicker$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.TimePicker$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
org.holoeverywhere.widget.Toast -> blh:
    org.holoeverywhere.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int) -> a
    void setText(java.lang.CharSequence) -> setText
org.holoeverywhere.widget.ToggleButton -> org.holoeverywhere.widget.ToggleButton:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> setFontStyle
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.ViewPager -> org.holoeverywhere.widget.ViewPager:
    boolean mSwipeEnabled -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setSwipeEnabled(boolean) -> setSwipeEnabled
pt.rocket.app.ApplicationComponent -> bli:
    pt.rocket.framework.ErrorCode result -> a
    pt.rocket.framework.ErrorCode init(android.app.Application) -> a
    pt.rocket.framework.ErrorCode initInternal(android.app.Application) -> b
pt.rocket.app.DarwinComponent -> blj:
    java.lang.String TAG -> a
    pt.rocket.framework.ErrorCode init(android.app.Application) -> a
    pt.rocket.framework.ErrorCode initInternal(android.app.Application) -> b
pt.rocket.app.JumiaApplication -> pt.rocket.app.JumiaApplication:
    java.lang.String TAG -> s
    int SHOP_ID -> a
    java.lang.String SHOP_NAME -> b
    pt.rocket.framework.objects.Customer CUSTOMER -> c
    int SHOP_ID_FOR_ADX -> d
    pt.rocket.app.JumiaApplication INSTANCE -> e
    boolean mIsBound -> f
    pt.rocket.framework.utils.CustomerUtils mCustomerUtils -> t
    boolean loggedIn -> u
    java.lang.Integer shopId -> v
    java.util.HashMap ratingOptions -> w
    pt.rocket.framework.objects.CompleteProduct currentProduct -> x
    pt.rocket.framework.objects.VersionInfo mVersionInfo -> y
    boolean resendInitializationSignal -> g
    java.util.Map itemSimpleDataRegistry -> z
    pt.rocket.framework.objects.ShoppingCart cart -> A
    java.util.HashMap formDataRegistry -> B
    pt.rocket.framework.utils.SingletonMap COMPONENTS -> h
    java.util.ArrayList navigationListComponents -> i
    java.util.HashMap responseCallbacks -> j
    boolean isInitializing -> C
    android.os.Handler resendHandler -> D
    android.os.Handler resendMenuHandler -> E
    android.os.Message resendMsg -> F
    java.util.HashMap requestsRetryBundleList -> G
    java.util.HashMap requestsRetryHelperList -> H
    java.util.HashMap requestsResponseList -> I
    pt.rocket.framework.service.IRemoteServiceCallback callBackWaitingService -> J
    java.util.ArrayList currentCategories -> k
    java.util.HashMap paymentsInfoList -> K
    pt.rocket.forms.Form registerForm -> l
    android.os.Bundle registerSavedInstanceState -> m
    int lastPaymentSelected -> n
    java.lang.String ADX_VERSION_NAME -> o
    java.lang.String ADX_DISPLAY_SIZE -> p
    boolean showRelatedItemsGlobal -> q
    android.content.ServiceConnection mConnection -> r
    android.content.ContentValues shippingMethod -> L
    android.content.ContentValues paymentMethod -> M
    pt.rocket.forms.PaymentMethodForm paymentMethodForm -> N
    void onCreate() -> onCreate
    void onLowMemory() -> onLowMemory
    void init(boolean,android.os.Handler) -> a
    void handleEvent(pt.rocket.framework.ErrorCode,pt.rocket.framework.utils.EventType,android.os.Handler) -> a
    void registerFragmentCallback(pt.rocket.framework.service.IRemoteServiceCallback) -> a
    void unRegisterFragmentCallback(pt.rocket.framework.service.IRemoteServiceCallback) -> b
    void registerCallBackIsWaiting() -> s
    java.lang.String sendRequest(pt.rocket.helpers.BaseHelper,android.os.Bundle,pt.rocket.interfaces.IResponseCallback) -> a
    void sendRequest(android.os.Bundle) -> a
    void lastBreath(java.lang.Exception) -> a
    java.util.HashMap getRatingOptions() -> a
    void setRatingOptions(java.util.HashMap) -> a
    pt.rocket.framework.objects.CompleteProduct getCurrentProduct() -> b
    void setCurrentProduct(pt.rocket.framework.objects.CompleteProduct) -> a
    pt.rocket.framework.objects.VersionInfo getVersionInfo() -> c
    void setVersionInfo(pt.rocket.framework.objects.VersionInfo) -> a
    pt.rocket.framework.utils.CustomerUtils getCustomerUtils() -> d
    pt.rocket.framework.objects.ShoppingCart getCart() -> e
    void setCart(pt.rocket.framework.objects.ShoppingCart) -> a
    java.util.Map getItemSimpleDataRegistry() -> f
    void setItemSimpleDataRegistry(java.util.Map) -> a
    java.util.HashMap getFormDataRegistry() -> g
    void setFormDataRegistry(java.util.HashMap) -> b
    void doBindService() -> h
    boolean isLoggedIn() -> i
    void setLoggedIn(boolean) -> a
    java.util.HashMap getRequestsRetryBundleList() -> j
    java.util.HashMap getRequestsRetryHelperList() -> k
    java.util.HashMap getRequestsResponseList() -> l
    void setResendHander(android.os.Handler) -> a
    void setResendMenuHander(android.os.Handler) -> b
    void setShippingMethod(android.content.ContentValues) -> a
    void setPaymentMethod(android.content.ContentValues) -> b
    void setPaymentMethodForm(pt.rocket.forms.PaymentMethodForm) -> a
    pt.rocket.forms.PaymentMethodForm getPaymentMethodForm() -> m
    java.util.HashMap getPaymentsInfoList() -> n
    void setPaymentsInfoList(java.util.HashMap) -> c
    void cleanCategoriesState() -> o
    java.lang.String getAppVersion() -> p
    float getScreenSizeInches(android.app.Activity) -> a
    void cleanAllPreviousCountryValues() -> q
    java.lang.String access$0() -> r
    android.os.Handler access$1(pt.rocket.app.JumiaApplication) -> a
    android.os.Message access$2(pt.rocket.app.JumiaApplication) -> b
    android.os.Handler access$3(pt.rocket.app.JumiaApplication) -> c
    void access$4(pt.rocket.app.JumiaApplication,android.os.Handler) -> a
    void access$5(pt.rocket.app.JumiaApplication) -> d
pt.rocket.app.JumiaApplication$1 -> blk:
    pt.rocket.app.JumiaApplication this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
pt.rocket.app.JumiaApplication$2 -> bll:
    pt.rocket.app.JumiaApplication this$0 -> a
    java.lang.String val$md5 -> b
    android.os.Bundle val$bundle -> c
    pt.rocket.helpers.BaseHelper val$helper -> d
    pt.rocket.interfaces.IResponseCallback val$responseCallback -> e
    void run() -> run
pt.rocket.app.JumiaApplication$2$1 -> blm:
    pt.rocket.app.JumiaApplication$2 this$1 -> a
    pt.rocket.helpers.BaseHelper val$helper -> b
    pt.rocket.interfaces.IResponseCallback val$responseCallback -> c
    void onRequestComplete(android.os.Bundle) -> b_
    void onRequestError(android.os.Bundle) -> a_
pt.rocket.app.UrbanAirshipComponent -> bln:
    java.lang.String TAG -> a
    android.content.Context context -> b
    pt.rocket.framework.ErrorCode initInternal(android.app.Application) -> b
    void setUserPushSettings() -> a
pt.rocket.constants.ConstantsSharedPrefs -> blo:
    java.lang.String SHARED_PREFERENCES -> a
    java.lang.String KEY_SHOW_TIPS -> b
    java.lang.String KEY_SHOW_PRODUCTS_TIPS -> c
    java.lang.String KEY_SHOW_PRODUCT_DETAILS_TIPS -> d
    java.lang.String KEY_SHOW_GALLERY_TIPS -> e
    java.lang.String KEY_SHOW_PROMOTIONS -> f
    java.lang.String KEY_COUNTRY -> g
    java.lang.String KEY_CATEGORY_SELECTED -> h
    java.lang.String KEY_SUB_CATEGORY_SELECTED -> i
    java.lang.String KEY_CURRENT_FRAGMENT -> j
    java.lang.String KEY_CHILD_CURRENT_FRAGMENT -> k
pt.rocket.controllers.ActivitiesWorkFlow -> blp:
    java.lang.String TAG -> a
    void splashActivityNewTask(android.app.Activity) -> a
    void homePageActivity(android.app.Activity) -> b
    void addStandardTransition(android.app.Activity) -> c
pt.rocket.controllers.CatalogPageModel -> blq:
    java.lang.String TAG -> a
    int pageNumber -> b
    boolean isLandScape -> c
    pt.rocket.framework.utils.ProductSort sort -> d
    pt.rocket.framework.utils.Direction dir -> e
    int MAX_PAGE_ITEMS -> f
    int NO_MORE_PAGES -> g
    int index -> h
    java.lang.String sortTitle -> i
    java.lang.String productsURL -> j
    java.lang.String searchQuery -> k
    java.lang.String navigationPath -> l
    java.lang.String title -> m
    int navigationSource -> n
    android.content.ContentValues filters -> o
    pt.rocket.controllers.ProductsListAdapter productsAdapter -> p
    int lastItem -> q
    android.widget.RelativeLayout relativeLayout -> r
    org.holoeverywhere.widget.TextView textViewSpnf -> s
    java.lang.String text -> t
    org.holoeverywhere.widget.Button buttonRavb -> u
    android.widget.RelativeLayout relativeLayoutPc -> v
    android.widget.LinearLayout linearLayoutLm -> w
    android.widget.ListView listView -> x
    android.widget.GridView gridView -> y
    android.widget.LinearLayout linearLayoutLb -> z
    android.widget.RelativeLayout relativeLayoutPt -> A
    pt.rocket.view.BaseActivity mActivity -> B
    long mBeginRequestMillis -> C
    boolean isLoadingMore -> D
    int totalProducts -> E
    boolean receivedError -> F
    java.lang.CharSequence totalItemsLable -> G
    android.support.v4.app.Fragment mFragment -> H
    android.widget.AbsListView$OnScrollListener scrollListener -> I
    pt.rocket.interfaces.IResponseCallback responseCallback -> J
    int getTotalProducts() -> a
    void notifyContentDataSetChanged() -> b
    void setVariables(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,android.content.ContentValues) -> a
    int getIndex() -> c
    void setIndex(int) -> a
    void setText(int) -> b
    android.widget.RelativeLayout getRelativeLayout() -> d
    void setRelativeLayout(android.widget.RelativeLayout) -> a
    java.lang.String getTitle() -> e
    void setTitle(java.lang.String) -> a
    void setTextViewSpnf(org.holoeverywhere.widget.TextView) -> a
    void setButtonRavb(org.holoeverywhere.widget.Button) -> a
    void setRelativeLayoutPc(android.widget.RelativeLayout) -> b
    void setLinearLayoutLm(android.widget.LinearLayout) -> a
    void setGridView(android.widget.GridView) -> a
    void setListView(android.widget.ListView) -> a
    void setLinearLayoutLb(android.widget.LinearLayout) -> b
    void setRelativeLayoutPt(android.widget.RelativeLayout) -> c
    void executeRequest() -> l
    void getMoreProducts() -> m
    void showProductsContent() -> n
    void showCatalogContent() -> o
    void showProductsLoading() -> p
    void hideProductsNotFound() -> q
    void hideProductsLoading() -> r
    void showTips() -> s
    void checkRedirectFromSearch(java.lang.String) -> b
    void showProductsNotfound() -> t
    void onErrorEvent(android.os.Bundle) -> a
    boolean isRequestFromFilter() -> u
    void setTotalItemLable() -> f
    void onSuccessEvent(android.os.Bundle) -> b
    boolean isLandScape() -> g
    void setLandScape(boolean) -> a
    void access$0(pt.rocket.controllers.CatalogPageModel,int) -> a
    int access$1(pt.rocket.controllers.CatalogPageModel) -> a
    java.lang.String access$2() -> h
    boolean access$3(pt.rocket.controllers.CatalogPageModel) -> b
    boolean access$4(pt.rocket.controllers.CatalogPageModel) -> c
    int access$5(pt.rocket.controllers.CatalogPageModel) -> d
    void access$6(pt.rocket.controllers.CatalogPageModel,boolean) -> a
    void access$7(pt.rocket.controllers.CatalogPageModel) -> e
    void access$8(pt.rocket.controllers.CatalogPageModel) -> f
    void access$9(pt.rocket.controllers.CatalogPageModel,boolean) -> b
    void access$10(pt.rocket.controllers.CatalogPageModel,android.os.Bundle) -> a
    void access$11(pt.rocket.controllers.CatalogPageModel,android.os.Bundle) -> b
    void access$12(pt.rocket.controllers.CatalogPageModel) -> g
    pt.rocket.framework.utils.Direction access$13(pt.rocket.controllers.CatalogPageModel) -> h
    pt.rocket.framework.utils.ProductSort access$14(pt.rocket.controllers.CatalogPageModel) -> i
    pt.rocket.controllers.ProductsListAdapter access$15(pt.rocket.controllers.CatalogPageModel) -> j
    int access$16() -> i
    java.lang.String access$17() -> j
    java.lang.String access$18() -> k
    pt.rocket.view.BaseActivity access$19(pt.rocket.controllers.CatalogPageModel) -> k
    void access$20(pt.rocket.controllers.CatalogPageModel) -> l
pt.rocket.controllers.CatalogPageModel$1 -> blr:
    pt.rocket.controllers.CatalogPageModel this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    pt.rocket.controllers.CatalogPageModel access$0(pt.rocket.controllers.CatalogPageModel$1) -> a
pt.rocket.controllers.CatalogPageModel$1$1 -> bls:
    pt.rocket.controllers.CatalogPageModel$1 this$1 -> a
    void run() -> run
pt.rocket.controllers.CatalogPageModel$2 -> blt:
    pt.rocket.controllers.CatalogPageModel this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.controllers.CatalogPageModel$3 -> blu:
    pt.rocket.controllers.CatalogPageModel this$0 -> a
    void run() -> run
pt.rocket.controllers.CatalogPageModel$4 -> blv:
    pt.rocket.controllers.CatalogPageModel this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
pt.rocket.controllers.CatalogPageModel$5 -> blw:
    pt.rocket.controllers.CatalogPageModel this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
pt.rocket.controllers.CatalogPageModel$6 -> blx:
    pt.rocket.controllers.CatalogPageModel this$0 -> a
    android.content.SharedPreferences val$sharedPrefs -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
pt.rocket.controllers.CatalogPageModel$7 -> bly:
    pt.rocket.controllers.CatalogPageModel this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.controllers.CategoriesAdapter -> blz:
    java.util.List categories -> a
    android.view.LayoutInflater inflater -> b
    int CATEGORIES_LAYOUT -> c
    android.app.Activity activity -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
pt.rocket.controllers.CategoriesAdapter$Item -> bma:
    org.holoeverywhere.widget.TextView categoryName -> a
pt.rocket.controllers.CountryAdapter -> bmb:
    android.content.Context context -> a
    java.lang.String[] values -> b
    android.content.res.TypedArray flags -> c
    android.view.LayoutInflater mInflater -> d
    void updateValues(java.lang.String[]) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
pt.rocket.controllers.FilterOptionArrayAdapter -> bmc:
    int layout -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
pt.rocket.controllers.GalleryPagerAdapter -> bmd:
    java.lang.String TAG -> a
    java.util.ArrayList mImageUrls -> b
    android.view.LayoutInflater mInflater -> c
    boolean isZoomAvailable -> d
    android.content.Context mContext -> e
    android.view.View primaryView -> f
    int getCount() -> getCount
    int getRealCount() -> c
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void replaceAll(java.util.ArrayList) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    java.lang.Object instantiateVirtualItem(android.view.ViewGroup,int) -> b
    void setImageToLoad(java.lang.String,android.view.View) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void resetPrimaryView(android.view.ViewGroup,int,java.lang.Object) -> c
pt.rocket.controllers.GalleryPagerAdapter$1 -> bme:
    pt.rocket.controllers.GalleryPagerAdapter this$0 -> i
    android.view.View val$progressBar -> j
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.controllers.GalleryPagerAdapter$2 -> bmf:
    pt.rocket.controllers.GalleryPagerAdapter this$0 -> i
    android.view.View val$progressBar -> j
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.controllers.LastViewedAdapter -> bmg:
    java.lang.String TAG -> d
    android.content.Context mContext -> a
    java.util.ArrayList mLastViewedList -> b
    android.view.LayoutInflater mLayoutInflater -> c
    int partialSize -> e
    int getItemPosition(java.lang.Object) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
pt.rocket.controllers.LastViewedAdapter$1 -> bmh:
    pt.rocket.controllers.LastViewedAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
pt.rocket.controllers.LastViewedAdapter$10 -> bmi:
    pt.rocket.controllers.LastViewedAdapter this$0 -> i
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.controllers.LastViewedAdapter$2 -> bmj:
    pt.rocket.controllers.LastViewedAdapter this$0 -> i
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.controllers.LastViewedAdapter$3 -> bmk:
    pt.rocket.controllers.LastViewedAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
pt.rocket.controllers.LastViewedAdapter$4 -> bml:
    pt.rocket.controllers.LastViewedAdapter this$0 -> i
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.controllers.LastViewedAdapter$5 -> bmm:
    pt.rocket.controllers.LastViewedAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
pt.rocket.controllers.LastViewedAdapter$6 -> bmn:
    pt.rocket.controllers.LastViewedAdapter this$0 -> i
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.controllers.LastViewedAdapter$7 -> bmo:
    pt.rocket.controllers.LastViewedAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
pt.rocket.controllers.LastViewedAdapter$8 -> bmp:
    pt.rocket.controllers.LastViewedAdapter this$0 -> i
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.controllers.LastViewedAdapter$9 -> bmq:
    pt.rocket.controllers.LastViewedAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
pt.rocket.controllers.LogOut -> bmr:
    void performLogOut(java.lang.ref.WeakReference) -> a
pt.rocket.controllers.LogOut$1 -> bms:
    java.lang.ref.WeakReference val$activityRef -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.controllers.MyAccountAdapter -> bmt:
    java.lang.String[] options -> a
    android.content.Context context -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
pt.rocket.controllers.NormalizingViewPagerWrapper -> pt.rocket.controllers.NormalizingViewPagerWrapper:
    java.lang.String TAG -> a
    int OFFSCREEN_PAGE_LIMIT -> b
    android.support.v4.view.ViewPager mViewPager -> c
    pt.rocket.controllers.NormalizingViewPagerWrapper$NormalizingPagerAdapter mNormPagerAdapter -> d
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    boolean isFakeDragging() -> f
    boolean beginFakeDrag() -> d
    void endFakeDrag() -> e
    void fakeDragBy(float) -> b
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int calcNextItem(int) -> d
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    int getIconResId(int) -> a
    int getCount() -> getCount
    java.lang.String access$0() -> j
    pt.rocket.controllers.NormalizingViewPagerWrapper$NormalizingPagerAdapter access$1(pt.rocket.controllers.NormalizingViewPagerWrapper) -> a
pt.rocket.controllers.NormalizingViewPagerWrapper$IPagerAdapter -> bmu:
    int getRealCount() -> c
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
pt.rocket.controllers.NormalizingViewPagerWrapper$NormalizingOnPageChangeListener -> bmv:
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> b
    pt.rocket.controllers.NormalizingViewPagerWrapper this$0 -> a
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> c_
    int calcVirtualPosition(int) -> c
pt.rocket.controllers.NormalizingViewPagerWrapper$NormalizingPagerAdapter -> bmw:
    pt.rocket.controllers.NormalizingViewPagerWrapper$IPagerAdapter mAdapter -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    int getIconResId(int) -> a
pt.rocket.controllers.ProductImagesAdapter -> bmx:
    java.lang.String TAG -> c
    android.content.Context context -> a
    java.util.ArrayList images -> b
    java.util.ArrayList createImageList(java.util.ArrayList) -> a
    void replaceAll(java.util.ArrayList) -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
pt.rocket.controllers.ProductImagesAdapter$1 -> bmy:
    pt.rocket.controllers.ProductImagesAdapter this$0 -> i
    pt.rocket.controllers.ProductImagesAdapter$Holder val$h -> j
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.controllers.ProductImagesAdapter$Holder -> bmz:
    android.widget.ImageView itemImage -> a
    android.widget.ProgressBar itemProgress -> b
    android.view.View itemMarker -> c
pt.rocket.controllers.ProductsListAdapter -> bna:
    java.lang.String TAG -> c
    java.util.ArrayList products -> a
    int counter -> b
    java.lang.String reviewLabel -> d
    android.view.LayoutInflater inflater -> e
    android.content.Context context -> f
    android.graphics.drawable.Drawable isNewDrawable -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void clearProducts() -> a
    void appendProducts(java.util.Collection) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
pt.rocket.controllers.ProductsListAdapter$Item -> bnb:
    android.widget.ImageView image -> a
    android.widget.ImageView promotion -> b
    android.view.View progress -> c
    org.holoeverywhere.widget.TextView name -> d
    android.widget.RatingBar rating -> e
    org.holoeverywhere.widget.TextView discount -> f
    org.holoeverywhere.widget.TextView price -> g
    org.holoeverywhere.widget.TextView discountPercentage -> h
    org.holoeverywhere.widget.TextView reviews -> i
    org.holoeverywhere.widget.TextView brand -> j
    android.widget.ImageView isNew -> k
pt.rocket.controllers.RelatedItemsAdapter -> bnc:
    java.lang.String TAG -> d
    android.content.Context mContext -> a
    java.util.ArrayList mRelatedItems -> b
    android.view.LayoutInflater mLayoutInflater -> c
    int partialSize -> e
    int getItemPosition(java.lang.Object) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
pt.rocket.controllers.RelatedItemsAdapter$1 -> bnd:
    pt.rocket.controllers.RelatedItemsAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
pt.rocket.controllers.RelatedItemsAdapter$2 -> bne:
    pt.rocket.controllers.RelatedItemsAdapter this$0 -> i
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.controllers.RelatedItemsAdapter$3 -> bnf:
    pt.rocket.controllers.RelatedItemsAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
pt.rocket.controllers.RelatedItemsAdapter$4 -> bng:
    pt.rocket.controllers.RelatedItemsAdapter this$0 -> i
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.controllers.RelatedItemsAdapter$5 -> bnh:
    pt.rocket.controllers.RelatedItemsAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
pt.rocket.controllers.RelatedItemsAdapter$6 -> bni:
    pt.rocket.controllers.RelatedItemsAdapter this$0 -> i
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.controllers.SearchDropDownAdapter -> bnj:
    java.lang.String TAG -> a
    android.view.LayoutInflater mInflater -> b
    java.lang.String mQuery -> c
    pt.rocket.framework.objects.SearchSuggestion getItem(int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setColorOnQuery(org.holoeverywhere.widget.TextView,java.lang.String,java.lang.String) -> a
    java.lang.Object getItem(int) -> getItem
pt.rocket.controllers.SearchSuggestionsAdapter -> bnk:
    android.view.LayoutInflater mInflater -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
pt.rocket.controllers.SubCategoriesAdapter -> bnl:
    java.lang.String TAG -> a
    java.util.List categories -> b
    android.view.LayoutInflater inflater -> c
    android.content.Context context -> d
    int CATEGORIES_LAYOUT -> e
    int CATEGORIES_ALL_LAYOUT -> f
    java.lang.String categoryName -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
pt.rocket.controllers.SubCategoriesAdapter$Item -> bnm:
    org.holoeverywhere.widget.TextView textView -> a
pt.rocket.controllers.fragments.FragmentController -> bnn:
    java.lang.String TAG -> f
    java.lang.Boolean ANIMATED -> a
    java.lang.Boolean NO_ANIMATED -> b
    java.lang.Boolean ADD_TO_BACK_STACK -> c
    java.lang.Boolean NO_ADD_TO_BACK_STACK -> d
    android.os.Bundle NO_BUNDLE -> e
    int POP_BACK_STACK_NO_INCLUSIVE -> g
    pt.rocket.controllers.fragments.FragmentController fragmentController -> h
    java.util.LinkedList backStack -> i
    pt.rocket.controllers.fragments.FragmentController getInstance() -> a
    void init() -> b
    int getBackStackSize() -> e
    void cleanBackStack() -> f
    void addToBackStack(java.lang.String) -> e
    void popLastEntry() -> c
    void popLastEntry(java.lang.String) -> a
    java.lang.String getLastEntry() -> d
    void removeAllEntriesWithTag(java.lang.String) -> b
    java.lang.Boolean hasEntry(java.lang.String) -> c
    java.lang.String removeEntriesUntilTag(java.lang.String) -> f
    void addEntryToBackStack(java.lang.String) -> d
    void startTransition(pt.rocket.view.BaseActivity,int,android.support.v4.app.Fragment,java.lang.String,java.lang.Boolean) -> a
    void fragmentBackPressed(pt.rocket.view.BaseActivity) -> a
    void popBackStack(pt.rocket.view.BaseActivity) -> b
    void popAllBackStack(pt.rocket.view.BaseActivity,java.lang.String) -> a
    void popAllEntriesUntil(pt.rocket.view.BaseActivity,java.lang.String) -> b
    void startTransition(pt.rocket.view.BaseActivity,int,android.support.v4.app.Fragment,java.lang.String,java.lang.Boolean,java.lang.Boolean) -> a
    void access$0(pt.rocket.controllers.fragments.FragmentController,java.lang.String) -> a
pt.rocket.controllers.fragments.FragmentController$1 -> bno:
    pt.rocket.controllers.fragments.FragmentController this$0 -> a
    java.lang.String val$tag -> b
    void run() -> run
pt.rocket.controllers.fragments.FragmentController$2 -> bnp:
    pt.rocket.controllers.fragments.FragmentController this$0 -> a
    java.lang.String val$tag -> b
    void run() -> run
pt.rocket.controllers.fragments.FragmentType -> bnq:
    pt.rocket.controllers.fragments.FragmentType UNKNOWN -> a
    pt.rocket.controllers.fragments.FragmentType LOGIN -> b
    pt.rocket.controllers.fragments.FragmentType REGISTER -> c
    pt.rocket.controllers.fragments.FragmentType FORGOT_PASSWORD -> d
    pt.rocket.controllers.fragments.FragmentType POPULARITY -> e
    pt.rocket.controllers.fragments.FragmentType MAIN_ONE_SLIDE_TEASER -> f
    pt.rocket.controllers.fragments.FragmentType PRODUCT_TEASER_LIST -> g
    pt.rocket.controllers.fragments.FragmentType CATEGORY_TEASER -> h
    pt.rocket.controllers.fragments.FragmentType STATIC_BANNER_TEASER -> i
    pt.rocket.controllers.fragments.FragmentType PRODUCT_VARIATION -> j
    pt.rocket.controllers.fragments.FragmentType PRODUCT_SHOWOFF -> k
    pt.rocket.controllers.fragments.FragmentType PRODUCT_SPECIFICATION -> l
    pt.rocket.controllers.fragments.FragmentType PRODUCT_BASIC_INFO -> m
    pt.rocket.controllers.fragments.FragmentType CATEGORIES_LEVEL_1 -> n
    pt.rocket.controllers.fragments.FragmentType CATEGORIES_LEVEL_2 -> o
    pt.rocket.controllers.fragments.FragmentType CATEGORIES_LEVEL_3 -> p
    pt.rocket.controllers.fragments.FragmentType HOME -> q
    pt.rocket.controllers.fragments.FragmentType SEARCH -> r
    pt.rocket.controllers.fragments.FragmentType PRODUCT_LIST -> s
    pt.rocket.controllers.fragments.FragmentType PRODUCT_DETAILS -> t
    pt.rocket.controllers.fragments.FragmentType WRITE_REVIEW -> u
    pt.rocket.controllers.fragments.FragmentType REVIEW -> v
    pt.rocket.controllers.fragments.FragmentType PRODUCT_DESCRIPTION -> w
    pt.rocket.controllers.fragments.FragmentType PRODUCT_GALLERY -> x
    pt.rocket.controllers.fragments.FragmentType SHOPPING_CART -> y
    pt.rocket.controllers.fragments.FragmentType CHECKOUT_BASKET -> z
    pt.rocket.controllers.fragments.FragmentType CHECKOUT_THANKS -> A
    pt.rocket.controllers.fragments.FragmentType TERMS -> B
    pt.rocket.controllers.fragments.FragmentType MY_ACCOUNT -> C
    pt.rocket.controllers.fragments.FragmentType MY_USER_DATA -> D
    pt.rocket.controllers.fragments.FragmentType TRACK_ORDER -> E
    pt.rocket.controllers.fragments.FragmentType CHANGE_COUNTRY -> F
    pt.rocket.controllers.fragments.FragmentType MY_ADDRESSES -> G
    pt.rocket.controllers.fragments.FragmentType CREATE_ADDRESS -> H
    pt.rocket.controllers.fragments.FragmentType EDIT_ADDRESS -> I
    pt.rocket.controllers.fragments.FragmentType SHIPPING_METHODS -> J
    pt.rocket.controllers.fragments.FragmentType PAYMENT_METHODS -> K
    pt.rocket.controllers.fragments.FragmentType ABOUT_YOU -> L
    pt.rocket.controllers.fragments.FragmentType MY_ORDER -> M
    pt.rocket.controllers.fragments.FragmentType POLL -> N
    pt.rocket.controllers.fragments.FragmentType CHECKOUT_EXTERNAL_PAYMENT -> O
    pt.rocket.controllers.fragments.FragmentType HEADLESS_CART -> P
    pt.rocket.controllers.fragments.FragmentType CAMPAIGNS -> Q
    pt.rocket.controllers.fragments.FragmentType[] ENUM$VALUES -> R
    pt.rocket.controllers.fragments.FragmentType[] values() -> values
    pt.rocket.controllers.fragments.FragmentType valueOf(java.lang.String) -> valueOf
pt.rocket.factories.FormFactory -> bnr:
    java.lang.String TAG -> a
    pt.rocket.factories.FormFactory factory -> b
    pt.rocket.pojo.DynamicForm addressForm -> c
    pt.rocket.pojo.DynamicForm addressEditForm -> d
    pt.rocket.pojo.DynamicForm loginForm -> e
    pt.rocket.pojo.DynamicForm paymentForm -> f
    pt.rocket.pojo.DynamicForm registerForm -> g
    pt.rocket.pojo.DynamicForm pollForm -> h
    pt.rocket.pojo.DynamicForm shippingForm -> i
    float scale -> j
    pt.rocket.pojo.DynamicForm signupForm -> k
    pt.rocket.factories.FormFactory getSingleton() -> a
    pt.rocket.pojo.DynamicForm CreateForm(int,android.content.Context,pt.rocket.forms.Form) -> a
    pt.rocket.pojo.DynamicForm createAddressForm(android.content.Context,pt.rocket.forms.Form) -> a
    pt.rocket.pojo.DynamicForm createEditAddressForm(android.content.Context,pt.rocket.forms.Form) -> b
    pt.rocket.pojo.DynamicForm createLoginForm(android.content.Context,pt.rocket.forms.Form) -> c
    pt.rocket.pojo.DynamicForm createPaymentMethodsForm(android.content.Context,pt.rocket.forms.Form) -> d
    pt.rocket.pojo.DynamicForm createRegistrationForm(android.content.Context,pt.rocket.forms.Form) -> e
    pt.rocket.pojo.DynamicForm createForgetPasswordForm(android.content.Context,pt.rocket.forms.Form) -> f
    pt.rocket.pojo.DynamicForm createPollForm(android.content.Context,pt.rocket.forms.Form) -> g
    pt.rocket.pojo.DynamicForm createSignupForm(android.content.Context,pt.rocket.forms.Form) -> h
    pt.rocket.pojo.DynamicForm createShippingMethodsForm(android.content.Context,pt.rocket.forms.Form) -> i
    pt.rocket.pojo.DynamicForm createGenericForm(android.content.Context,pt.rocket.forms.Form,pt.rocket.pojo.DynamicForm,android.view.ViewGroup$LayoutParams) -> a
    pt.rocket.pojo.DynamicForm createShippingMethodsForm(android.content.Context,pt.rocket.forms.Form,pt.rocket.pojo.DynamicForm,android.view.ViewGroup$LayoutParams) -> b
pt.rocket.factories.TeasersFactory -> bns:
    android.content.Context mContext -> a
    android.view.View$OnClickListener onTeaserClickListener -> b
    java.lang.String TAG -> c
    android.view.ViewGroup mainView -> d
    boolean isToResize -> e
    int[] $SWITCH_TABLE$pt$rocket$framework$objects$TeaserGroupType -> f
    android.view.View getSpecificTeaser(android.content.Context,android.view.ViewGroup,pt.rocket.framework.objects.TeaserSpecification,android.view.LayoutInflater,android.view.View$OnClickListener) -> a
    android.view.View getMainOneSlide(android.view.LayoutInflater,java.util.ArrayList) -> a
    android.view.View getStaticBanner(android.view.LayoutInflater,java.util.ArrayList) -> b
    android.view.View getCategoriesTeaser(android.view.LayoutInflater,pt.rocket.framework.objects.CategoryTeaserGroup) -> a
    android.view.View getProductsListTeaser(android.view.LayoutInflater,pt.rocket.framework.objects.ProductTeaserGroup) -> a
    android.view.View getBrandsListTeaser(android.view.LayoutInflater,pt.rocket.framework.objects.BrandsTeaserGroup) -> a
    android.view.View createImageTeaserView(pt.rocket.framework.objects.TeaserImage,android.view.ViewGroup,android.view.LayoutInflater,int) -> a
    void attachTeaserListener(pt.rocket.framework.objects.ITargeting,android.view.View) -> a
    android.view.View createCategoryTeaserView(pt.rocket.framework.objects.CategoryTeaserGroup$TeaserCategory,android.view.ViewGroup,android.view.LayoutInflater) -> a
    android.view.View createCategoryAllTeaserView(android.view.ViewGroup,android.view.LayoutInflater) -> a
    android.view.View createProductTeaserView(pt.rocket.framework.objects.ProductTeaserGroup$TeaserProduct,android.view.ViewGroup,android.view.LayoutInflater,int) -> a
    android.view.View createBrandTeaserView(pt.rocket.framework.objects.TeaserBrand,android.view.ViewGroup,android.view.LayoutInflater,int) -> a
    android.view.View getTeaserTopBrands(android.view.LayoutInflater,pt.rocket.framework.objects.TeaserGroupTopBrands) -> a
    android.view.View createTopBrandTeaserView(pt.rocket.framework.objects.TeaserGroupTopBrands$TeaserTopBrand,android.view.ViewGroup,android.view.LayoutInflater) -> a
    android.view.View getTeaserCampaigns(android.view.LayoutInflater,pt.rocket.framework.objects.TeaserGroupCampaigns) -> a
    android.view.View createCampaignTeaserView(pt.rocket.framework.objects.TeaserCampaign,android.view.ViewGroup,android.view.LayoutInflater) -> a
    void setImageToLoad(java.lang.String,android.view.View,int) -> a
    android.view.View access$0(pt.rocket.factories.TeasersFactory,pt.rocket.framework.objects.TeaserImage,android.view.ViewGroup,android.view.LayoutInflater,int) -> a
    void access$1(pt.rocket.factories.TeasersFactory,pt.rocket.framework.objects.ITargeting,android.view.View) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$objects$TeaserGroupType() -> a
pt.rocket.factories.TeasersFactory$1 -> bnt:
    pt.rocket.factories.TeasersFactory this$0 -> i
    boolean val$resize -> j
    android.view.View val$progressBar -> k
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.factories.TeasersFactory$ImagePagerAdapter -> bnu:
    java.util.List teaserImages -> b
    android.view.LayoutInflater mInflater -> c
    pt.rocket.factories.TeasersFactory this$0 -> a
    int getCount() -> getCount
    int getRealCount() -> c
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    java.lang.Object instantiateVirtualItem(android.view.ViewGroup,int) -> b
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    int getIconResId(int) -> a
pt.rocket.forms.FieldPaymentMethod -> pt.rocket.forms.FieldPaymentMethod:
    java.lang.String name -> a
    java.util.ArrayList fields -> b
    int value -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.forms.FieldPaymentMethod$1 -> bnv:
    pt.rocket.forms.FieldPaymentMethod createFromParcel(android.os.Parcel) -> a
    pt.rocket.forms.FieldPaymentMethod[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.forms.FieldValidation -> pt.rocket.forms.FieldValidation:
    java.lang.String TAG -> f
    int MIN_CHARACTERS -> g
    int MAX_CHARACTERS -> h
    java.lang.String DEFAULT_REGEX -> i
    boolean required -> a
    int min -> b
    int max -> c
    java.lang.String regex -> d
    java.lang.String message -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    boolean isRequired() -> a
    org.json.JSONObject toJSON() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.forms.FieldValidation$1 -> bnw:
    pt.rocket.forms.FieldValidation createFromParcel(android.os.Parcel) -> a
    pt.rocket.forms.FieldValidation[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.forms.Form -> pt.rocket.forms.Form:
    java.lang.String TAG -> j
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String method -> c
    java.lang.String action -> d
    java.lang.String submit -> e
    java.util.ArrayList fields -> f
    java.util.Map subForms -> g
    java.util.Map fieldMapping -> h
    java.util.Map mFieldKeyMap -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    org.json.JSONObject toJSON() -> a
    java.util.Map getFieldKeyMap() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.forms.Form$1 -> bnx:
    pt.rocket.forms.Form createFromParcel(android.os.Parcel) -> a
    pt.rocket.forms.Form[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.forms.FormData -> pt.rocket.forms.FormData:
    java.lang.String id -> a
    java.lang.String action -> b
    java.lang.String url -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getAction() -> a
    java.lang.String getUrl() -> b
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.forms.FormData$1 -> bny:
    pt.rocket.forms.FormData createFromParcel(android.os.Parcel) -> a
    pt.rocket.forms.FormData[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.forms.FormField -> pt.rocket.forms.FormField:
    java.lang.String TAG -> b
    pt.rocket.forms.Form parent -> c
    java.lang.String id -> d
    java.lang.String key -> e
    java.lang.String name -> f
    pt.rocket.utils.InputType inputType -> g
    java.lang.String label -> h
    java.lang.String linkText -> i
    java.lang.String scenario -> j
    java.util.LinkedHashMap dataSet -> k
    java.lang.String datasetSource -> l
    pt.rocket.forms.FormField$OnDataSetReceived dataset_Listener -> m
    pt.rocket.forms.FieldValidation validation -> n
    java.lang.String regEx -> o
    java.lang.String value -> p
    java.util.Map dataValues -> q
    java.util.HashMap dataCalls -> r
    java.util.HashMap dataOptions -> s
    java.util.HashMap paymentFields -> t
    java.util.LinkedHashMap extrasValues -> u
    pt.rocket.interfaces.IResponseCallback responseCallback -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int[] $SWITCH_TABLE$pt$rocket$utils$InputType -> v
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> w
    boolean initialize(org.json.JSONObject) -> a
    org.json.JSONObject toJSON() -> a
    pt.rocket.forms.Form getParent() -> b
    java.lang.String getKey() -> c
    java.lang.String getName() -> d
    pt.rocket.utils.InputType getInputType() -> e
    java.lang.String getLabel() -> f
    java.util.LinkedHashMap getDataSet() -> g
    java.util.HashMap getPaymentMethodsField() -> h
    void setPaymentMethodsField(java.util.HashMap) -> a
    java.util.Map getDataValues() -> i
    java.util.Map getDataCalls() -> j
    pt.rocket.forms.FieldValidation getValidation() -> k
    java.lang.String getValue() -> l
    java.util.Map getSubFormFields() -> m
    void setOnDataSetReceived(pt.rocket.forms.FormField$OnDataSetReceived) -> a
    void handleSuccessEvent(android.os.Bundle) -> a
    void handleErrorEvent(android.os.Bundle) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getLinkText() -> n
    java.util.Map getDataSet() -> o
    int[] $SWITCH_TABLE$pt$rocket$utils$InputType() -> p
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> q
pt.rocket.forms.FormField$1 -> bnz:
    pt.rocket.forms.FormField this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.forms.FormField$2 -> boa:
    pt.rocket.forms.FormField createFromParcel(android.os.Parcel) -> a
    pt.rocket.forms.FormField[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.forms.FormField$OnDataSetReceived -> bob:
    void DataSetReceived(java.util.Map) -> a
pt.rocket.forms.FormFieldMeta -> boc:
    pt.rocket.forms.IFormField metaFormField -> a
    java.util.Map subFormFields -> b
    pt.rocket.utils.InputType inputType -> c
    java.lang.String getKey() -> c
    java.lang.String getName() -> d
    pt.rocket.utils.InputType getInputType() -> e
    java.lang.String getLabel() -> f
    java.util.HashMap getDataSet() -> a
    void setOnDataSetReceived(pt.rocket.forms.FormField$OnDataSetReceived) -> a
    pt.rocket.forms.FieldValidation getValidation() -> k
    java.lang.String getValue() -> l
    java.util.Map getSubFormFields() -> m
    void setSubFormFields(java.util.Map) -> a
    java.lang.String subFieldKeyString() -> b
    java.util.Map getDataValues() -> i
    java.lang.String getLinkText() -> n
    java.util.Map getDataSet() -> o
pt.rocket.forms.FormsMapping -> bod:
    java.lang.String TAG -> e
    java.util.Map loginForm -> a
    java.util.Map registrationForm -> b
    java.util.Map addressForm -> c
    java.util.Map genericMapping -> d
    void removeUnsortedFields(pt.rocket.forms.Form,java.util.Map) -> a
pt.rocket.forms.FormsMapping$byFieldOrder -> boe:
    int compare(pt.rocket.forms.FormField,pt.rocket.forms.FormField) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
pt.rocket.forms.IFormField -> bof:
    java.lang.String getKey() -> c
    java.lang.String getName() -> d
    pt.rocket.utils.InputType getInputType() -> e
    java.lang.String getLabel() -> f
    java.lang.String getLinkText() -> n
    java.util.Map getDataSet() -> o
    void setOnDataSetReceived(pt.rocket.forms.FormField$OnDataSetReceived) -> a
    pt.rocket.forms.FieldValidation getValidation() -> k
    java.lang.String getValue() -> l
    java.util.Map getSubFormFields() -> m
    java.util.Map getDataValues() -> i
pt.rocket.forms.PaymentMethodForm -> pt.rocket.forms.PaymentMethodForm:
    java.lang.String TAG -> a
    int payment_type -> b
    java.lang.String action -> c
    pt.rocket.framework.enums.RequestType method -> d
    java.lang.String id -> e
    java.lang.String name -> f
    java.lang.String redirect -> g
    android.content.ContentValues contentValues -> h
    java.lang.String order_nr -> i
    java.lang.String customer_first_name -> j
    java.lang.String customer_last_name -> k
    boolean cameFromWebCheckout -> l
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getPaymentType() -> a
    void setPaymentType(int) -> a
    java.lang.String getAction() -> b
    void setAction(java.lang.String) -> a
    pt.rocket.framework.enums.RequestType getMethod() -> c
    void setMethod(pt.rocket.framework.enums.RequestType) -> a
    void setId(java.lang.String) -> b
    java.lang.String getName() -> d
    void setName(java.lang.String) -> c
    void setRedirect(java.lang.String) -> d
    android.content.ContentValues getContentValues() -> e
    void setContentValues(android.content.ContentValues) -> a
    java.lang.String getOrderNumber() -> f
    void setOrderNumber(java.lang.String) -> e
    void setCustomerFirstName(java.lang.String) -> f
    boolean isCameFromWebCheckout() -> g
    void setCameFromWebCheckout(boolean) -> a
pt.rocket.forms.PaymentMethodForm$1 -> bog:
    pt.rocket.forms.PaymentMethodForm createFromParcel(android.os.Parcel) -> a
    pt.rocket.forms.PaymentMethodForm[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.forms.ShippingMethodForm -> pt.rocket.forms.ShippingMethodForm:
    java.lang.String TAG -> j
    java.lang.String id -> a
    java.lang.String key -> b
    java.lang.String name -> c
    java.lang.String value -> d
    java.lang.String label -> e
    java.lang.String type -> f
    boolean required -> g
    java.util.ArrayList options -> h
    java.util.ArrayList subForms -> i
    pt.rocket.utils.ShippingRadioGroupList mShippingRadioGroupList -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    pt.rocket.utils.ShippingRadioGroupList generateForm(android.content.Context,android.view.ViewGroup) -> a
    android.content.ContentValues getContentValues() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.forms.ShippingMethodForm$1 -> boh:
    pt.rocket.forms.ShippingMethodForm createFromParcel(android.os.Parcel) -> a
    pt.rocket.forms.ShippingMethodForm[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.forms.ShippingMethodFormBuilder -> pt.rocket.forms.ShippingMethodFormBuilder:
    java.lang.String TAG -> f
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String method -> c
    java.lang.String action -> d
    float scale -> g
    java.util.ArrayList fields -> e
    java.util.ArrayList groupList -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    android.view.View generateForm(android.content.Context) -> a
    int getSelectionId(int) -> a
    int getSubSelectionId(int,int) -> a
    void setSelections(int,int,int) -> a
    android.content.ContentValues getValues() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.forms.ShippingMethodFormBuilder$1 -> boi:
    pt.rocket.forms.ShippingMethodFormBuilder createFromParcel(android.os.Parcel) -> a
    pt.rocket.forms.ShippingMethodFormBuilder[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.forms.ShippingMethodSubForm -> pt.rocket.forms.ShippingMethodSubForm:
    java.lang.String TAG -> k
    int lastID -> l
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener spinnerSelectedListener -> m
    java.lang.String key -> a
    java.lang.String scenario -> b
    java.util.ArrayList options -> c
    java.lang.String type -> d
    boolean required -> e
    java.lang.String value -> f
    java.lang.String name -> g
    java.lang.String id -> h
    java.lang.String label -> i
    android.view.View dataControl -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    int getNextId() -> a
    android.view.View generateForm(android.content.Context,android.widget.RelativeLayout$LayoutParams) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener access$1(pt.rocket.forms.ShippingMethodSubForm) -> a
pt.rocket.forms.ShippingMethodSubForm$1 -> boj:
    pt.rocket.forms.ShippingMethodSubForm createFromParcel(android.os.Parcel) -> a
    pt.rocket.forms.ShippingMethodSubForm[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.forms.ShippingMethodSubForm$2 -> bok:
    pt.rocket.forms.ShippingMethodSubForm this$0 -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
pt.rocket.framework.Darwin -> bol:
    java.lang.String TAG -> c
    pt.rocket.framework.DarwinMode mode -> d
    int SHOP_ID -> e
    android.content.Context context -> a
    int sVersionCode -> f
    java.lang.String KEY_COUNTRY -> b
    boolean initialize(pt.rocket.framework.DarwinMode,android.content.Context,int,boolean) -> a
    void setUAPushTags(android.content.Context,boolean) -> a
    void preInstallTag(android.content.Context,java.util.Set,java.lang.String) -> a
    void retrieveVersionCode() -> a
pt.rocket.framework.DarwinMode -> bom:
    pt.rocket.framework.DarwinMode DEBUG -> a
    pt.rocket.framework.DarwinMode RELEASE -> b
    pt.rocket.framework.DarwinMode[] ENUM$VALUES -> c
    pt.rocket.framework.DarwinMode[] values() -> values
    pt.rocket.framework.DarwinMode valueOf(java.lang.String) -> valueOf
pt.rocket.framework.ErrorCode -> bon:
    pt.rocket.framework.ErrorCode NO_ERROR -> a
    pt.rocket.framework.ErrorCode UNKNOWN_ERROR -> b
    pt.rocket.framework.ErrorCode NO_NETWORK -> c
    pt.rocket.framework.ErrorCode CONNECT_ERROR -> d
    pt.rocket.framework.ErrorCode TIME_OUT -> e
    pt.rocket.framework.ErrorCode ERROR_PARSING_SERVER_DATA -> f
    pt.rocket.framework.ErrorCode HTTP_PROTOCOL -> g
    pt.rocket.framework.ErrorCode IO -> h
    pt.rocket.framework.ErrorCode EMPTY_ENTITY -> i
    pt.rocket.framework.ErrorCode HTTP_STATUS -> j
    pt.rocket.framework.ErrorCode REQUEST_ERROR -> k
    pt.rocket.framework.ErrorCode AUTO_COUNTRY_SELECTION -> l
    pt.rocket.framework.ErrorCode INTERNAL_ERROR -> m
    pt.rocket.framework.ErrorCode REQUIRES_USER_INTERACTION -> n
    pt.rocket.framework.ErrorCode SERVER_IN_MAINTENANCE -> o
    int id -> p
    int[] $SWITCH_TABLE$pt$rocket$framework$ErrorCode -> q
    pt.rocket.framework.ErrorCode[] ENUM$VALUES -> r
    boolean isNetworkError() -> a
    boolean isNetworkError(pt.rocket.framework.ErrorCode) -> a
    pt.rocket.framework.ErrorCode[] values() -> values
    pt.rocket.framework.ErrorCode valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$pt$rocket$framework$ErrorCode() -> b
pt.rocket.framework.R -> boo:
pt.rocket.framework.R$array -> bop:
    int country_names -> country_names
    int country_protocol -> country_protocol
    int currency_codes -> currency_codes
    int feedback_ignored_packages -> feedback_ignored_packages
    int fkey_livekeys -> fkey_livekeys
    int fkey_testkeys -> fkey_testkeys
    int formatter_currency_codes -> formatter_currency_codes
    int formatter_currency_fraction_count -> formatter_currency_fraction_count
    int formatter_currency_fraction_delim -> formatter_currency_fraction_delim
    int formatter_currency_thousands_delim -> formatter_currency_thousands_delim
    int formatter_currency_unit_pattern -> formatter_currency_unit_pattern
    int ga_livekeys -> ga_livekeys
    int ga_testkeys -> ga_testkeys
    int icons -> icons
    int language_codes -> language_codes
    int passwords -> passwords
    int restbase_paths -> restbase_paths
    int servers -> servers
    int shop_names -> shop_names
    int users -> users
    int wifi_ap_security -> wifi_ap_security
    int wifi_eap_method -> wifi_eap_method
    int wifi_p2p_status -> wifi_p2p_status
    int wifi_p2p_wps_setup -> wifi_p2p_wps_setup
    int wifi_security -> wifi_security
    int wifi_security_no_eap -> wifi_security_no_eap
    int wifi_status -> wifi_status
    int wifi_status_with_ssid -> wifi_status_with_ssid
pt.rocket.framework.R$bool -> boq:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
    int adx_enable -> adx_enable
    int f_testmode -> f_testmode
    int flurry_enable -> flurry_enable
    int ga_autoActivityTracking -> ga_autoActivityTracking
    int ga_enable -> ga_enable
    int ga_reportUncaughtExceptions -> ga_reportUncaughtExceptions
    int ga_testmode -> ga_testmode
    int isTablet -> isTablet
    int mixpanel_enable -> mixpanel_enable
    int rest_host_auth_use_it -> rest_host_auth_use_it
pt.rocket.framework.R$drawable -> bor:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
    int actionoverflow -> actionoverflow
    int actionoverflow_selected -> actionoverflow_selected
    int ic_launcher -> ic_launcher
    int logo_ic_text -> logo_ic_text
    int seek_thumb_normal -> seek_thumb_normal
    int seek_thumb_pressed -> seek_thumb_pressed
pt.rocket.framework.R$string -> bos:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_dialog_title_default -> abs__activity_chooser_view_dialog_title_default
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__share_action_provider_share_with -> abs__share_action_provider_share_with
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
    int app_name -> app_name
    int category_label -> category_label
    int currency_code_egp -> currency_code_egp
    int currency_code_ksh -> currency_code_ksh
    int currency_code_mad -> currency_code_mad
    int currency_code_ngn -> currency_code_ngn
    int currency_code_ugx -> currency_code_ugx
    int currency_code_xof -> currency_code_xof
    int currency_fraction_count_cfa -> currency_fraction_count_cfa
    int currency_fraction_count_egp -> currency_fraction_count_egp
    int currency_fraction_count_ksh -> currency_fraction_count_ksh
    int currency_fraction_count_mad -> currency_fraction_count_mad
    int currency_fraction_count_ngn -> currency_fraction_count_ngn
    int currency_fraction_count_ugx -> currency_fraction_count_ugx
    int currency_fraction_delim_cfa -> currency_fraction_delim_cfa
    int currency_fraction_delim_egp -> currency_fraction_delim_egp
    int currency_fraction_delim_ksh -> currency_fraction_delim_ksh
    int currency_fraction_delim_mad -> currency_fraction_delim_mad
    int currency_fraction_delim_ngn -> currency_fraction_delim_ngn
    int currency_fraction_delim_ugx -> currency_fraction_delim_ugx
    int currency_thousands_delim_cfa -> currency_thousands_delim_cfa
    int currency_thousands_delim_egp -> currency_thousands_delim_egp
    int currency_thousands_delim_ksh -> currency_thousands_delim_ksh
    int currency_thousands_delim_mad -> currency_thousands_delim_mad
    int currency_thousands_delim_ngn -> currency_thousands_delim_ngn
    int currency_thousands_delim_ugx -> currency_thousands_delim_ugx
    int currency_unit_pattern_cfa -> currency_unit_pattern_cfa
    int currency_unit_pattern_egp -> currency_unit_pattern_egp
    int currency_unit_pattern_idr -> currency_unit_pattern_idr
    int currency_unit_pattern_ksh -> currency_unit_pattern_ksh
    int currency_unit_pattern_mad -> currency_unit_pattern_mad
    int currency_unit_pattern_ngn -> currency_unit_pattern_ngn
    int currency_unit_pattern_thb -> currency_unit_pattern_thb
    int currency_unit_pattern_ugx -> currency_unit_pattern_ugx
    int fcurrency -> fcurrency
    int fcustomerid -> fcustomerid
    int forderid -> forderid
    int fpurchase -> fpurchase
    int fsignin -> fsignin
    int fsigninauto -> fsigninauto
    int fsigninjust -> fsigninjust
    int fsignup -> fsignup
    int fuserid -> fuserid
    int fvalue -> fvalue
    int gNativeCheckout -> gNativeCheckout
    int gNativeCheckoutError -> gNativeCheckoutError
    int gPaymentMethod -> gPaymentMethod
    int gSignUp -> gSignUp
    int ga_trackingId -> ga_trackingId
    int gaccount -> gaccount
    int gaddtocart -> gaddtocart
    int gautologinfailed -> gautologinfailed
    int gautologinsuccess -> gautologinsuccess
    int gbrand_prefix -> gbrand_prefix
    int gbrands -> gbrands
    int gcart_prefix -> gcart_prefix
    int gcartempty -> gcartempty
    int gcartwithitems -> gcartwithitems
    int gcatalog -> gcatalog
    int gcategories -> gcategories
    int gcategory_prefix -> gcategory_prefix
    int gcheckout -> gcheckout
    int gcheckoutAboutYou -> gcheckoutAboutYou
    int gcheckoutCreateAddress -> gcheckoutCreateAddress
    int gcheckoutEditAddress -> gcheckoutEditAddress
    int gcheckoutExternalPayment -> gcheckoutExternalPayment
    int gcheckoutMyAddresses -> gcheckoutMyAddresses
    int gcheckoutMyOrder -> gcheckoutMyOrder
    int gcheckoutPaymentMethods -> gcheckoutPaymentMethods
    int gcheckoutPollQuestion -> gcheckoutPollQuestion
    int gcheckoutShippingMethods -> gcheckoutShippingMethods
    int gcheckoutbegin -> gcheckoutbegin
    int gcheckoutcontinueshopping -> gcheckoutcontinueshopping
    int gcheckoutfinal -> gcheckoutfinal
    int gcheckoutstart -> gcheckoutstart
    int gcontinueshopping -> gcontinueshopping
    int gcreatefailed -> gcreatefailed
    int gcreatesuccess -> gcreatesuccess
    int gcustomeraccount -> gcustomeraccount
    int gcustomerid -> gcustomerid
    int gfacebookloginsuccess -> gfacebookloginsuccess
    int gfacebooksignupsuccess -> gfacebooksignupsuccess
    int gfinished -> gfinished
    int ghomepage -> ghomepage
    int gload -> gload
    int glogin -> glogin
    int gloginfailed -> gloginfailed
    int gloginsuccess -> gloginsuccess
    int glogout -> glogout
    int glogoutfailed -> glogoutfailed
    int glogoutsuccess -> glogoutsuccess
    int gnavigation -> gnavigation
    int gorderid -> gorderid
    int gpdv -> gpdv
    int gproductdetail -> gproductdetail
    int gproductlist -> gproductlist
    int gproductreviews -> gproductreviews
    int gproductreviewscreate -> gproductreviewscreate
    int gpush_prefix -> gpush_prefix
    int grateproduct -> grateproduct
    int gregister -> gregister
    int gsearch -> gsearch
    int gsearch_prefix -> gsearch_prefix
    int gsearchsuggestions -> gsearchsuggestions
    int gshoppingcart -> gshoppingcart
    int gsignupsuccess -> gsignupsuccess
    int gsimplesku -> gsimplesku
    int gsocialshare -> gsocialshare
    int gstarted -> gstarted
    int gteaser_prefix -> gteaser_prefix
    int gteaserprod_prefix -> gteaserprod_prefix
    int gteaserrecentlyviewed_prefix -> gteaserrecentlyviewed_prefix
    int mixcart -> mixcart
    int mixcheckout -> mixcheckout
    int mixcustomer -> mixcustomer
    int mixlaunch -> mixlaunch
    int mixlogin -> mixlogin
    int mixloginWithFB -> mixloginWithFB
    int mixlogout -> mixlogout
    int mixnativecheckout -> mixnativecheckout
    int mixnativecheckouterror -> mixnativecheckouterror
    int mixpanel_token -> mixpanel_token
    int mixproduct -> mixproduct
    int mixprop_age -> mixprop_age
    int mixprop_appverion -> mixprop_appverion
    int mixprop_cartcategories -> mixprop_cartcategories
    int mixprop_cartitems -> mixprop_cartitems
    int mixprop_cartnumber -> mixprop_cartnumber
    int mixprop_carttotal -> mixprop_carttotal
    int mixprop_category -> mixprop_category
    int mixprop_checkout_about_you -> mixprop_checkout_about_you
    int mixprop_checkout_create_address -> mixprop_checkout_create_address
    int mixprop_checkout_edit_address -> mixprop_checkout_edit_address
    int mixprop_checkout_external_payment -> mixprop_checkout_external_payment
    int mixprop_checkout_my_addresses -> mixprop_checkout_my_addresses
    int mixprop_checkout_my_order -> mixprop_checkout_my_order
    int mixprop_checkout_payment_method -> mixprop_checkout_payment_method
    int mixprop_checkout_payment_methods -> mixprop_checkout_payment_methods
    int mixprop_checkout_poll_question -> mixprop_checkout_poll_question
    int mixprop_checkout_shipping_methods -> mixprop_checkout_shipping_methods
    int mixprop_country -> mixprop_country
    int mixprop_createdate -> mixprop_createdate
    int mixprop_email -> mixprop_email
    int mixprop_gender -> mixprop_gender
    int mixprop_itembrand -> mixprop_itembrand
    int mixprop_itemcategory -> mixprop_itemcategory
    int mixprop_itemid -> mixprop_itemid
    int mixprop_itemlocation -> mixprop_itemlocation
    int mixprop_itemlocationdetails -> mixprop_itemlocationdetails
    int mixprop_itemlocationwishlist -> mixprop_itemlocationwishlist
    int mixprop_itemname -> mixprop_itemname
    int mixprop_itemprice -> mixprop_itemprice
    int mixprop_itemquantity -> mixprop_itemquantity
    int mixprop_itemsubcategory -> mixprop_itemsubcategory
    int mixprop_loginlocation -> mixprop_loginlocation
    int mixprop_loginlocationautologin -> mixprop_loginlocationautologin
    int mixprop_loginlocationcart -> mixprop_loginlocationcart
    int mixprop_loginlocationcheckout -> mixprop_loginlocationcheckout
    int mixprop_loginlocationmyaccount -> mixprop_loginlocationmyaccount
    int mixprop_loginlocationreview -> mixprop_loginlocationreview
    int mixprop_loginlocationsidemenu -> mixprop_loginlocationsidemenu
    int mixprop_loginlocationwishlist -> mixprop_loginlocationwishlist
    int mixprop_loginmethod -> mixprop_loginmethod
    int mixprop_loginmethodemail -> mixprop_loginmethodemail
    int mixprop_loginmethodfacebook -> mixprop_loginmethodfacebook
    int mixprop_logoutlocation -> mixprop_logoutlocation
    int mixprop_native_checkout -> mixprop_native_checkout
    int mixprop_numberresults -> mixprop_numberresults
    int mixprop_page -> mixprop_page
    int mixprop_paymentmethod -> mixprop_paymentmethod
    int mixprop_platform -> mixprop_platform
    int mixprop_platformmobile -> mixprop_platformmobile
    int mixprop_preinstall -> mixprop_preinstall
    int mixprop_purchacecount -> mixprop_purchacecount
    int mixprop_pushnotifications -> mixprop_pushnotifications
    int mixprop_ratebrand -> mixprop_ratebrand
    int mixprop_ratecategory -> mixprop_ratecategory
    int mixprop_rateid -> mixprop_rateid
    int mixprop_ratename -> mixprop_ratename
    int mixprop_rateprice -> mixprop_rateprice
    int mixprop_ratesubcategory -> mixprop_ratesubcategory
    int mixprop_ratingappearance -> mixprop_ratingappearance
    int mixprop_ratingaverage -> mixprop_ratingaverage
    int mixprop_ratingprice -> mixprop_ratingprice
    int mixprop_ratingquality -> mixprop_ratingquality
    int mixprop_registrationlocation -> mixprop_registrationlocation
    int mixprop_registrationmethod -> mixprop_registrationmethod
    int mixprop_searchsort -> mixprop_searchsort
    int mixprop_searchtearm -> mixprop_searchtearm
    int mixprop_sharebrand -> mixprop_sharebrand
    int mixprop_sharecategory -> mixprop_sharecategory
    int mixprop_sharelocation -> mixprop_sharelocation
    int mixprop_sharelocationproduct -> mixprop_sharelocationproduct
    int mixprop_sharename -> mixprop_sharename
    int mixprop_sharenetwork -> mixprop_sharenetwork
    int mixprop_shareprice -> mixprop_shareprice
    int mixprop_shopcountry -> mixprop_shopcountry
    int mixprop_signup -> mixprop_signup
    int mixprop_signupplatform -> mixprop_signupplatform
    int mixprop_totalcart -> mixprop_totalcart
    int mixprop_totalitems -> mixprop_totalitems
    int mixprop_usevoucher -> mixprop_usevoucher
    int mixprop_voucheramout -> mixprop_voucheramout
    int mixproppeople_age -> mixproppeople_age
    int mixproppeople_country -> mixproppeople_country
    int mixproppeople_created -> mixproppeople_created
    int mixproppeople_email -> mixproppeople_email
    int mixproppeople_firstname -> mixproppeople_firstname
    int mixproppeople_gender -> mixproppeople_gender
    int mixproppeople_itemscategory -> mixproppeople_itemscategory
    int mixproppeople_lastname -> mixproppeople_lastname
    int mixproppeople_loginsused -> mixproppeople_loginsused
    int mixproppeople_numberitems -> mixproppeople_numberitems
    int mixproppeople_numberlogins -> mixproppeople_numberlogins
    int mixproppeople_numberlogouts -> mixproppeople_numberlogouts
    int mixproppeople_numbersearches -> mixproppeople_numbersearches
    int mixproppeople_numbershares -> mixproppeople_numbershares
    int mixproppeople_postalcode -> mixproppeople_postalcode
    int mixproppeople_preinstall -> mixproppeople_preinstall
    int mixproppeople_rateitemnumber -> mixproppeople_rateitemnumber
    int mixproppeople_sharenetwork -> mixproppeople_sharenetwork
    int mixproppeople_shopcountry -> mixproppeople_shopcountry
    int mixproppeople_signupplatform -> mixproppeople_signupplatform
    int mixproppeople_source -> mixproppeople_source
    int mixproppeople_totalnumpurchaces -> mixproppeople_totalnumpurchaces
    int mixproppeople_transations -> mixproppeople_transations
    int mixpushnotification -> mixpushnotification
    int mixrate -> mixrate
    int mixsale -> mixsale
    int mixsearch -> mixsearch
    int mixsearchviewsorted -> mixsearchviewsorted
    int mixshare -> mixshare
    int mixshop -> mixshop
    int mixsignup -> mixsignup
    int mixviewcart -> mixviewcart
    int mixviewcategory -> mixviewcategory
    int mixviewrate -> mixviewrate
    int ua_preisntall -> ua_preisntall
    int ua_store -> ua_store
    int wifi_security_eap -> wifi_security_eap
    int wifi_security_none -> wifi_security_none
    int wifi_security_psk_generic -> wifi_security_psk_generic
    int wifi_security_short_eap -> wifi_security_short_eap
    int wifi_security_short_psk_generic -> wifi_security_short_psk_generic
    int wifi_security_short_wep -> wifi_security_short_wep
    int wifi_security_short_wpa -> wifi_security_short_wpa
    int wifi_security_short_wpa2 -> wifi_security_short_wpa2
    int wifi_security_short_wpa_wpa2 -> wifi_security_short_wpa_wpa2
    int wifi_security_wep -> wifi_security_wep
    int wifi_security_wpa -> wifi_security_wpa
    int wifi_security_wpa2 -> wifi_security_wpa2
    int wifi_security_wpa_wpa2 -> wifi_security_wpa_wpa2
    int xFBlogin -> xFBlogin
    int xaddtocart -> xaddtocart
    int xcall -> xcall
    int xcheckoutaboutyou -> xcheckoutaboutyou
    int xcheckoutcreateaddress -> xcheckoutcreateaddress
    int xcheckouteditaddress -> xcheckouteditaddress
    int xcheckoutexternalpayment -> xcheckoutexternalpayment
    int xcheckoutmyaddresses -> xcheckoutmyaddresses
    int xcheckoutmyorder -> xcheckoutmyorder
    int xcheckoutpaymentmethods -> xcheckoutpaymentmethods
    int xcheckoutpollquestion -> xcheckoutpollquestion
    int xcheckoutshippingmethods -> xcheckoutshippingmethods
    int xcustomer -> xcustomer
    int xcustomersignup -> xcustomersignup
    int xdeeplinklaunch -> xdeeplinklaunch
    int xguestsale -> xguestsale
    int xlaunch -> xlaunch
    int xlogin -> xlogin
    int xlogout -> xlogout
    int xnativecheckout -> xnativecheckout
    int xnativecheckouterror -> xnativecheckouterror
    int xnetwork -> xnetwork
    int xpaymentmethod -> xpaymentmethod
    int xpreferences -> xpreferences
    int xpreinstall -> xpreinstall
    int xproductrate -> xproductrate
    int xreceiver -> xreceiver
    int xreference -> xreference
    int xreferral -> xreferral
    int xremovefromcart -> xremovefromcart
    int xsale -> xsale
    int xsaledata -> xsaledata
    int xsignup -> xsignup
    int xsocialshare -> xsocialshare
pt.rocket.framework.R$styleable -> bot:
    int[] LoadingBarView -> LoadingBarView
    int LoadingBarView_gifResource -> LoadingBarView_gifResource
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_android_windowIsFloating -> SherlockTheme_android_windowIsFloating
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int[] WifiEncryptionState -> WifiEncryptionState
    int WifiEncryptionState_state_encrypted -> WifiEncryptionState_state_encrypted
pt.rocket.framework.components.ExpandableGridViewComponent -> pt.rocket.framework.components.ExpandableGridViewComponent:
    boolean expanded -> a
    int bottomMargin -> b
    void onMeasure(int,int) -> onMeasure
    boolean isExpanded() -> a
    void setExpanded(boolean) -> setExpanded
    void setBottomMargin(int) -> setBottomMargin
pt.rocket.framework.components.HeaderGridView -> pt.rocket.framework.components.HeaderGridView:
    java.util.ArrayList mHeaderViewInfos -> a
    int mNumColumns -> b
    void initHeaderGridView() -> a
    void onMeasure(int,int) -> onMeasure
    void setClipChildren(boolean) -> setClipChildren
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> a
    void addHeaderView(android.view.View) -> a
    int getHeaderViewCount() -> getHeaderViewCount
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void saveNumColumnsFromAttrs(android.content.Context,android.util.AttributeSet) -> a
    int getNumColumnsCompat() -> getNumColumnsCompat
    int getNumColumnsV11() -> getNumColumnsV11
pt.rocket.framework.components.HeaderGridView$FixedViewInfo -> bou:
    android.view.View view -> a
    android.view.ViewGroup viewContainer -> b
    java.lang.Object data -> c
    boolean isSelectable -> d
pt.rocket.framework.components.HeaderGridView$FullWidthFixedViewLayout -> bov:
    pt.rocket.framework.components.HeaderGridView this$0 -> a
    void onMeasure(int,int) -> onMeasure
pt.rocket.framework.components.HeaderGridView$HeaderViewGridAdapter -> bow:
    android.database.DataSetObservable mDataSetObservable -> c
    android.widget.ListAdapter mAdapter -> d
    int mNumColumns -> e
    java.util.ArrayList mHeaderViewInfos -> a
    boolean mAreAllFixedViewsSelectable -> b
    boolean mIsFilterable -> f
    int getHeadersCount() -> a
    boolean isEmpty() -> isEmpty
    void setNumColumns(int) -> a
    boolean areAllListInfosSelectable(java.util.ArrayList) -> a
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    android.widget.Filter getFilter() -> getFilter
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
    void notifyDataSetChanged() -> b
pt.rocket.framework.components.NavigationListComponent -> pt.rocket.framework.components.NavigationListComponent:
    int element_id -> a
    java.lang.String element_text -> b
    java.lang.String element_url -> c
    java.lang.String element_image_url -> d
    java.lang.String getElementText() -> a
    java.lang.String getElementUrl() -> b
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.components.PinnedSectionListView -> pt.rocket.framework.components.PinnedSectionListView:
    android.graphics.Rect mTouchRect -> e
    android.graphics.PointF mTouchPoint -> f
    int mTouchSlop -> g
    android.view.View mTouchTarget -> h
    android.view.MotionEvent mDownEvent -> i
    android.graphics.drawable.GradientDrawable mShadowDrawable -> j
    int mSectionsDistanceY -> k
    int mShadowHeight -> l
    android.widget.AbsListView$OnScrollListener mDelegateOnScrollListener -> a
    pt.rocket.framework.components.PinnedSectionListView$PinnedSection mRecycleSection -> b
    pt.rocket.framework.components.PinnedSectionListView$PinnedSection mPinnedSection -> c
    int mTranslateY -> d
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> m
    android.database.DataSetObserver mDataSetObserver -> n
    void initView() -> c
    void setShadowVisible(boolean) -> setShadowVisible
    void initShadow(boolean) -> a
    void createPinnedShadow(int) -> a
    void destroyPinnedShadow() -> a
    void ensureShadowForPosition(int,int,int) -> a
    int findFirstVisibleSectionPosition(int,int) -> a
    int findCurrentSectionPosition(int) -> b
    void recreatePinnedShadow() -> b
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void onLayout(boolean,int,int,int,int) -> onLayout
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean isPinnedViewTouched(android.view.View,float,float) -> a
    void clearTouchTarget() -> d
    boolean performPinnedItemClick() -> e
    boolean isItemViewTypePinned(android.widget.ListAdapter,int) -> a
pt.rocket.framework.components.PinnedSectionListView$1 -> box:
    pt.rocket.framework.components.PinnedSectionListView this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
pt.rocket.framework.components.PinnedSectionListView$2 -> boy:
    pt.rocket.framework.components.PinnedSectionListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
pt.rocket.framework.components.PinnedSectionListView$3 -> boz:
    pt.rocket.framework.components.PinnedSectionListView this$0 -> a
    void run() -> run
pt.rocket.framework.components.PinnedSectionListView$PinnedSection -> bpa:
    android.view.View view -> a
    int position -> b
    long id -> c
pt.rocket.framework.components.PinnedSectionListView$PinnedSectionListAdapter -> bpb:
    boolean isItemViewTypePinned(int) -> a
pt.rocket.framework.components.RangeSeekBar -> pt.rocket.framework.components.RangeSeekBar:
    android.graphics.Paint paint -> b
    android.graphics.Bitmap thumbImage -> c
    android.graphics.Bitmap thumbPressedImage -> d
    float thumbWidth -> e
    float thumbHalfWidth -> f
    float thumbHalfHeight -> g
    float lineHeight -> h
    float padding -> i
    java.lang.Number absoluteMinValue -> j
    java.lang.Number absoluteMaxValue -> k
    pt.rocket.framework.components.RangeSeekBar$NumberType numberType -> l
    double absoluteMinValuePrim -> m
    double absoluteMaxValuePrim -> n
    double normalizedMinValue -> o
    double normalizedMaxValue -> p
    pt.rocket.framework.components.RangeSeekBar$Thumb pressedThumb -> q
    boolean notifyWhileDragging -> r
    pt.rocket.framework.components.RangeSeekBar$OnRangeSeekBarChangeListener listener -> s
    int DEFAULT_COLOR -> a
    float mDownMotionX -> t
    int mActivePointerId -> u
    int mScaledTouchSlop -> v
    boolean mIsDragging -> w
    void init() -> c
    void setNotifyWhileDragging(boolean) -> setNotifyWhileDragging
    java.lang.Number getAbsoluteMinValue() -> getAbsoluteMinValue
    java.lang.Number getAbsoluteMaxValue() -> getAbsoluteMaxValue
    java.lang.Number getSelectedMinValue() -> getSelectedMinValue
    void setSelectedMinValue(java.lang.Number) -> setSelectedMinValue
    java.lang.Number getSelectedMaxValue() -> getSelectedMaxValue
    void setSelectedMaxValue(java.lang.Number) -> setSelectedMaxValue
    void setOnRangeSeekBarChangeListener(pt.rocket.framework.components.RangeSeekBar$OnRangeSeekBarChangeListener) -> setOnRangeSeekBarChangeListener
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void trackTouchEvent(android.view.MotionEvent) -> b
    void attemptClaimDrag() -> d
    void onStartTrackingTouch() -> a
    void onStopTrackingTouch() -> b
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void drawThumb(float,boolean,android.graphics.Canvas) -> a
    pt.rocket.framework.components.RangeSeekBar$Thumb evalPressedThumb(float) -> a
    boolean isInThumbRange(float,double) -> a
    void setNormalizedMinValue(double) -> setNormalizedMinValue
    void setNormalizedMaxValue(double) -> setNormalizedMaxValue
    java.lang.Number normalizedToValue(double) -> a
    double valueToNormalized(java.lang.Number) -> a
    float normalizedToScreen(double) -> b
    double screenToNormalized(float) -> b
pt.rocket.framework.components.RangeSeekBar$NumberType -> bpc:
    pt.rocket.framework.components.RangeSeekBar$NumberType LONG -> a
    pt.rocket.framework.components.RangeSeekBar$NumberType DOUBLE -> b
    pt.rocket.framework.components.RangeSeekBar$NumberType INTEGER -> c
    pt.rocket.framework.components.RangeSeekBar$NumberType FLOAT -> d
    pt.rocket.framework.components.RangeSeekBar$NumberType SHORT -> e
    pt.rocket.framework.components.RangeSeekBar$NumberType BYTE -> f
    pt.rocket.framework.components.RangeSeekBar$NumberType BIG_DECIMAL -> g
    int[] $SWITCH_TABLE$pt$rocket$framework$components$RangeSeekBar$NumberType -> h
    pt.rocket.framework.components.RangeSeekBar$NumberType[] ENUM$VALUES -> i
    pt.rocket.framework.components.RangeSeekBar$NumberType fromNumber(java.lang.Number) -> a
    java.lang.Number toNumber(double) -> a
    pt.rocket.framework.components.RangeSeekBar$NumberType[] values() -> values
    pt.rocket.framework.components.RangeSeekBar$NumberType valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$pt$rocket$framework$components$RangeSeekBar$NumberType() -> a
pt.rocket.framework.components.RangeSeekBar$OnRangeSeekBarChangeListener -> bpd:
    void onRangeSeekBarValuesChanged(pt.rocket.framework.components.RangeSeekBar,java.lang.Object,java.lang.Object) -> a
pt.rocket.framework.components.RangeSeekBar$Thumb -> bpe:
    pt.rocket.framework.components.RangeSeekBar$Thumb MIN -> a
    pt.rocket.framework.components.RangeSeekBar$Thumb MAX -> b
    pt.rocket.framework.components.RangeSeekBar$Thumb[] ENUM$VALUES -> c
    pt.rocket.framework.components.RangeSeekBar$Thumb[] values() -> values
    pt.rocket.framework.components.RangeSeekBar$Thumb valueOf(java.lang.String) -> valueOf
pt.rocket.framework.components.ScrollViewEx -> pt.rocket.framework.components.ScrollViewEx:
    pt.rocket.framework.components.ScrollViewEx$OnScrollBottomReachedListener onScrollBottomReached -> a
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void setOnScrollBottomReached(pt.rocket.framework.components.ScrollViewEx$OnScrollBottomReachedListener) -> setOnScrollBottomReached
pt.rocket.framework.components.ScrollViewEx$OnScrollBottomReachedListener -> bpf:
    void OnScrollBottomReached() -> a
pt.rocket.framework.database.CategoriesTableHelper -> bpg:
    java.lang.String TAG -> a
    java.util.regex.Pattern pattern -> b
    void saveCategories(java.util.ArrayList) -> a
    void saveCategories(android.database.sqlite.SQLiteDatabase,java.util.ArrayList,long) -> a
    void saveCategory(android.database.sqlite.SQLiteDatabase,pt.rocket.framework.objects.Category,long) -> a
    void clearCategories(android.database.sqlite.SQLiteDatabase) -> a
    java.util.ArrayList getCategories() -> a
    java.util.ArrayList loadCategories(long,pt.rocket.framework.objects.Category) -> a
    java.lang.String getCategoryUrlForDB(java.lang.String) -> a
    java.lang.String getAbsoluteCategoryUrl(java.lang.String) -> b
    java.lang.String getCategoryUrlPrefix() -> b
    android.content.ContentValues getContentValues(pt.rocket.framework.objects.Category,long) -> a
pt.rocket.framework.database.DarwinDatabaseHelper -> bph:
    java.lang.String TAG -> a
    pt.rocket.framework.database.DarwinDatabaseHelper db -> b
    android.content.Context CONTEXT -> c
    void init(android.content.Context) -> a
    pt.rocket.framework.database.DarwinDatabaseHelper getInstance() -> a
    pt.rocket.framework.database.DarwinDatabaseHelper getInstance(android.content.Context) -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
pt.rocket.framework.database.ImageResolutionTableHelper -> bpi:
    java.lang.String TAG -> a
    pt.rocket.framework.objects.ImageResolution getBestImageResolution(java.lang.String) -> a
    void clearImageResolutions(android.database.sqlite.SQLiteDatabase) -> a
pt.rocket.framework.database.LastViewedTableHelper -> bpj:
    java.lang.String TAG -> a
    void insertViewedProduct(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean verifyIfExist(java.lang.String) -> a
    int getLastViewedEntriesCount() -> a
    java.util.ArrayList getLastViewedList() -> b
    void removeOldestEntry() -> c
    void deleteAllLastViewed() -> d
pt.rocket.framework.database.RelatedItemsTableHelper -> bpk:
    java.lang.String TAG -> a
    void insertRelatedItem(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void insertRelatedItems(android.content.Context,java.util.ArrayList) -> a
    void insertRelatedItemsAndClear(android.content.Context,java.util.ArrayList) -> b
    java.util.ArrayList getRelatedItemsList() -> a
    void clearRelatedItems(android.database.sqlite.SQLiteDatabase) -> a
pt.rocket.framework.database.SearchRecentQueriesTableHelper -> bpl:
    java.lang.String TAG -> a
    boolean insertQuery(java.lang.String) -> a
    java.util.ArrayList getAllRecentQueries() -> a
    java.util.ArrayList getFilteredRecentQueries(java.lang.String) -> b
    java.util.ArrayList getRecentQueries(java.lang.String) -> c
pt.rocket.framework.database.SectionsTablesHelper -> bpm:
    java.lang.String TAG -> a
    void saveSections(java.util.List) -> a
    void saveSection(android.database.sqlite.SQLiteDatabase,pt.rocket.framework.objects.Section) -> a
    java.util.List getSections() -> a
pt.rocket.framework.enums.RequestType -> bpn:
    pt.rocket.framework.enums.RequestType GET -> a
    pt.rocket.framework.enums.RequestType POST -> b
    pt.rocket.framework.enums.RequestType DELETE -> c
    pt.rocket.framework.enums.RequestType PUT -> d
    pt.rocket.framework.enums.RequestType[] ENUM$VALUES -> e
    pt.rocket.framework.enums.RequestType[] values() -> values
    pt.rocket.framework.enums.RequestType valueOf(java.lang.String) -> valueOf
pt.rocket.framework.network.ConfigurationConstants -> bpo:
    java.lang.Boolean LOG_DEBUG_ENABLED -> a
pt.rocket.framework.network.DarwinHttpClient -> bpp:
    java.lang.String TAG -> d
    ch.boye.httpclientandroidlib.HttpRequestInterceptor preemptiveAuth -> b
    ch.boye.httpclientandroidlib.client.HttpRequestRetryHandler retryHandler -> c
    java.lang.String access$0() -> I
pt.rocket.framework.network.DarwinHttpClient$1 -> bpq:
    pt.rocket.framework.network.DarwinHttpClient this$0 -> a
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
pt.rocket.framework.network.DarwinHttpClient$2 -> bpr:
    pt.rocket.framework.network.DarwinHttpClient this$0 -> a
    boolean retryRequest(java.io.IOException,int,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
pt.rocket.framework.network.DarwinHttpClient$3 -> bps:
    pt.rocket.framework.network.DarwinHttpClient this$0 -> a
    void process(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
pt.rocket.framework.network.DarwinHttpClient$4 -> bpt:
    pt.rocket.framework.network.DarwinHttpClient this$0 -> a
    void appendToBuffer(ch.boye.httpclientandroidlib.util.CharArrayBuffer,java.lang.String,java.lang.String,java.lang.String) -> a
    void process(ch.boye.httpclientandroidlib.HttpResponse,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    java.lang.String calcMaxAge(ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
pt.rocket.framework.network.HttpCacheDatabaseHelper -> bpu:
    java.lang.String TAG -> a
    pt.rocket.framework.network.HttpCacheDatabaseHelper sInstance -> b
    pt.rocket.framework.network.HttpCacheDatabaseHelper getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    long insert(java.lang.String,byte[]) -> a
    byte[] getCacheEntry(java.lang.String) -> a
    void delete(java.lang.String) -> b
pt.rocket.framework.network.LazHttpClientAndroidLog -> bpv:
    java.lang.String logTag -> a
    boolean debugEnabled -> b
    boolean errorEnabled -> c
    boolean traceEnabled -> d
    boolean warnEnabled -> e
    boolean infoEnabled -> f
    void enableDebug(boolean) -> a
    boolean isDebugEnabled() -> a
    void debug(java.lang.Object) -> a
    void debug(java.lang.Object,java.lang.Throwable) -> a
    void enableError(boolean) -> b
    boolean isErrorEnabled() -> b
    void error(java.lang.Object) -> b
    void error(java.lang.Object,java.lang.Throwable) -> b
    void enableWarn(boolean) -> c
    boolean isWarnEnabled() -> c
    void warn(java.lang.Object) -> c
    void warn(java.lang.Object,java.lang.Throwable) -> c
    void enableInfo(boolean) -> d
    boolean isInfoEnabled() -> d
    void info(java.lang.Object) -> d
    void enableTrace(boolean) -> e
    boolean isTraceEnabled() -> e
    void trace(java.lang.Object) -> e
pt.rocket.framework.objects.Address -> pt.rocket.framework.objects.Address:
    java.lang.String TAG -> a
    int id -> b
    java.lang.String firstName -> c
    java.lang.String lastName -> d
    java.lang.String address1 -> e
    java.lang.String address2 -> f
    java.lang.String city -> g
    java.lang.String postcode -> h
    java.lang.String phone -> i
    int fkCustomer -> j
    int fkCountry -> k
    int fkCustomerAddressRegion -> l
    int fkCustomerAddressCity -> m
    boolean isDefaultBilling -> n
    boolean isDefaultShipping -> o
    boolean hidden -> p
    java.lang.String createdAt -> q
    java.lang.String updatedAt -> r
    int createdBy -> s
    int updatedBy -> t
    java.lang.String region -> u
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    int getId() -> a
    java.lang.String getFirstName() -> b
    java.lang.String getLastName() -> c
    java.lang.String getAddress() -> d
    java.lang.String getAddress2() -> e
    java.lang.String getCity() -> f
    java.lang.String getPostcode() -> g
    java.lang.String getPhone() -> h
    int getFkCustomerAddressRegion() -> i
    int getFkCustomerAddressCity() -> j
    java.lang.String getRegion() -> k
    boolean isDefaultBilling() -> l
    boolean isDefaultShipping() -> m
    void setFirstName(java.lang.String) -> a
    void setLastName(java.lang.String) -> b
    void setAddress(java.lang.String) -> c
    void setAddress2(java.lang.String) -> d
    void setPhone(java.lang.String) -> e
    void setFkCustomerAddressRegion(int) -> a
    void setFkCustomerAddressCity(int) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Address$1 -> bpw:
    pt.rocket.framework.objects.Address createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Address[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.AddressCity -> pt.rocket.framework.objects.AddressCity:
    java.lang.String TAG -> a
    int id -> b
    java.lang.String value -> c
    java.lang.String group -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getId() -> a
    java.lang.String getValue() -> b
    java.lang.String toString() -> toString
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.AddressCity$1 -> bpx:
    pt.rocket.framework.objects.AddressCity createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.AddressCity[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.AddressRegion -> pt.rocket.framework.objects.AddressRegion:
    java.lang.String TAG -> a
    int id -> b
    int countryId -> c
    java.lang.String code -> d
    java.lang.String name -> e
    java.lang.String sort -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getId() -> a
    java.lang.String getName() -> b
    java.lang.String toString() -> toString
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.AddressRegion$1 -> bpy:
    pt.rocket.framework.objects.AddressRegion createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.AddressRegion[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Addresses -> pt.rocket.framework.objects.Addresses:
    java.lang.String TAG -> a
    pt.rocket.framework.objects.Address shippingAddress -> b
    pt.rocket.framework.objects.Address billingAddress -> c
    pt.rocket.framework.objects.Address fastline -> d
    java.util.HashMap addresses -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    pt.rocket.framework.objects.Address getShippingAddress() -> a
    pt.rocket.framework.objects.Address getBillingAddress() -> b
    java.util.HashMap getAddresses() -> c
    boolean hasShippingAddress() -> d
    boolean hasBillingAddress() -> e
    boolean hasDefaultShippingAndBillingAddress() -> f
    void switchShippingAddress(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Addresses$1 -> bpz:
    pt.rocket.framework.objects.Addresses createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Addresses[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Brand -> pt.rocket.framework.objects.Brand:
    java.lang.String id -> a
    java.lang.String url -> b
    java.lang.String name -> c
    pt.rocket.framework.objects.BrandImage image -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Brand$1 -> bqa:
    pt.rocket.framework.objects.Brand createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Brand[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.BrandAttributes -> pt.rocket.framework.objects.BrandAttributes:
    java.lang.String TAG -> a
    java.lang.String name -> b
    int id -> c
    java.lang.String image_url -> d
    java.lang.String brand_url -> e
    java.lang.String description -> f
    java.lang.String target_type -> g
    java.lang.String imageTableUrl -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getImageUrl() -> a
    java.lang.String getName() -> b
    pt.rocket.framework.objects.ITargeting$TargetType getTargetType() -> c
    java.lang.String getImageTableUrl() -> d
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.BrandAttributes$1 -> bqb:
    pt.rocket.framework.objects.BrandAttributes createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.BrandAttributes[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.BrandImage -> pt.rocket.framework.objects.BrandImage:
    java.lang.String url -> a
    java.lang.String width -> b
    java.lang.String height -> c
    java.lang.String format -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.BrandImage$1 -> bqc:
    pt.rocket.framework.objects.BrandImage createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.BrandImage[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.BrandsTeaserGroup -> pt.rocket.framework.objects.BrandsTeaserGroup:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    pt.rocket.framework.objects.TeaserBrand parseData(org.json.JSONObject) -> a
    pt.rocket.framework.objects.ITargeting parseData(org.json.JSONObject) -> b
pt.rocket.framework.objects.BrandsTeaserGroup$1 -> bqd:
    pt.rocket.framework.objects.BrandsTeaserGroup createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.BrandsTeaserGroup[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Campaign -> pt.rocket.framework.objects.Campaign:
    java.lang.String TAG -> a
    java.lang.String mBanner -> b
    java.lang.String mName -> c
    java.lang.String mStartTime -> d
    java.lang.String mEndTime -> e
    int mCount -> f
    java.util.ArrayList mItems -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String toString() -> toString
    java.lang.String getBanner() -> a
    java.util.ArrayList getItems() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Campaign$1 -> bqe:
    pt.rocket.framework.objects.Campaign createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Campaign[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.CampaignItem -> pt.rocket.framework.objects.CampaignItem:
    java.lang.String TAG -> a
    java.lang.Double mSavePrice -> b
    double mSpecialPrice -> c
    double mMaxSpecialPrice -> d
    double mPrice -> e
    double mMaxPrice -> f
    java.lang.String mSku -> g
    java.lang.String mBrand -> h
    java.lang.String mName -> i
    java.lang.String mImage -> j
    java.util.ArrayList mImages -> k
    int mStockPercentage -> l
    java.lang.String mMaxSavingPercentage -> m
    boolean hasUniqueSize -> n
    java.util.ArrayList mSizes -> o
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String toString() -> toString
    java.lang.Double getSavePrice() -> a
    double getSpecialPrice() -> b
    double getPrice() -> c
    java.lang.String getName() -> d
    java.lang.String getImage() -> e
    int getStockPercentage() -> f
    java.lang.String getMaxSavingPercentage() -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.CampaignItem$1 -> bqf:
    pt.rocket.framework.objects.CampaignItem createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.CampaignItem[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.CarouselItem -> pt.rocket.framework.objects.CarouselItem:
    java.lang.String id -> a
    java.lang.String description -> b
    java.lang.String url -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.CarouselItem$1 -> bqg:
    pt.rocket.framework.objects.CarouselItem createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.CarouselItem[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.CatalogFilter -> pt.rocket.framework.objects.CatalogFilter:
    java.lang.String TAG -> a
    java.util.ArrayList mFilterOptions -> b
    pt.rocket.framework.objects.CatalogFilterOption mFilterOption -> c
    java.lang.String mId -> d
    java.lang.String mName -> e
    boolean mMulti -> f
    int[] mRangeValues -> g
    boolean isRangeWithDiscount -> h
    android.util.SparseArray mSelectedOption -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.util.ArrayList createSections(java.util.ArrayList) -> a
    java.util.ArrayList getFilterOptions() -> a
    pt.rocket.framework.objects.CatalogFilterOption getFilterOption() -> b
    android.util.SparseArray getSelectedOption() -> c
    java.lang.String getId() -> d
    java.lang.String getName() -> e
    int getMinRangeValue() -> f
    int getMaxRangeValue() -> g
    boolean isRangeWithDiscount() -> h
    void setSelectedOption(android.util.SparseArray) -> a
    void cleanSelectedOption() -> i
    void setRangeValues(int,int) -> a
    void cleanRangeValues() -> j
    void setRangeWithDiscount(boolean) -> a
    boolean hasRangeValues() -> k
    boolean hasOptionSelected() -> l
    boolean isMulti() -> m
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.CatalogFilter$1 -> bqh:
    pt.rocket.framework.objects.CatalogFilter createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.CatalogFilter[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.CatalogFilter$AlphabeticComparator -> bqi:
    pt.rocket.framework.objects.CatalogFilter this$0 -> a
    int compare(pt.rocket.framework.objects.CatalogFilterOption,pt.rocket.framework.objects.CatalogFilterOption) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
pt.rocket.framework.objects.CatalogFilterOption -> pt.rocket.framework.objects.CatalogFilterOption:
    java.lang.String mId -> a
    java.lang.String mLabel -> b
    java.lang.String mValue -> c
    java.lang.String mCount -> d
    java.lang.String mHex -> e
    java.lang.String mImg -> f
    int mMax -> g
    int mMin -> h
    int mInterval -> i
    boolean isSelected -> j
    boolean isSectionBrand -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String getLabel() -> a
    java.lang.String getHex() -> b
    int getMax() -> c
    int getMin() -> d
    int getInterval() -> e
    boolean isSelected() -> f
    boolean isSectionItem() -> g
    void setId(java.lang.String) -> a
    void setLabel(java.lang.String) -> b
    void setValue(java.lang.String) -> c
    void setSelected(java.lang.Boolean) -> a
    void setSectionBrand(java.lang.Boolean) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.CatalogFilterOption$1 -> bqj:
    pt.rocket.framework.objects.CatalogFilterOption createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.CatalogFilterOption[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Category -> pt.rocket.framework.objects.Category:
    java.lang.String TAG -> a
    java.lang.String id -> b
    java.lang.String name -> c
    java.lang.String path -> d
    java.lang.String lft -> e
    java.lang.String rgt -> f
    java.lang.String urlKey -> g
    java.lang.String segments -> h
    java.lang.String infoUrl -> i
    java.lang.String apiUrl -> j
    pt.rocket.framework.objects.Category parent -> k
    java.util.ArrayList children -> l
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean getHasChildren() -> a
    java.lang.String getId() -> b
    java.lang.String getName() -> c
    java.lang.String getCategoryPath() -> d
    java.lang.String getUrlKey() -> e
    java.lang.String getSegments() -> f
    java.util.ArrayList getChildren() -> g
    java.lang.String getInfoUrl() -> h
    java.lang.String getApiUrl() -> i
    void setChildren(java.util.ArrayList) -> a
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String calcCategoryPath() -> j
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Category$1 -> bqk:
    pt.rocket.framework.objects.Category createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Category[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.CategoryFilterOption -> pt.rocket.framework.objects.CategoryFilterOption:
    java.lang.String TAG -> a
    java.lang.String mUrl -> b
    int mNumber -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.CategoryFilterOption$1 -> bql:
    pt.rocket.framework.objects.CategoryFilterOption createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.CategoryFilterOption[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.CategoryTeaserGroup -> pt.rocket.framework.objects.CategoryTeaserGroup:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    pt.rocket.framework.objects.CategoryTeaserGroup$TeaserCategory parseData(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    pt.rocket.framework.objects.ITargeting parseData(org.json.JSONObject) -> b
pt.rocket.framework.objects.CategoryTeaserGroup$1 -> bqm:
    pt.rocket.framework.objects.CategoryTeaserGroup createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.CategoryTeaserGroup[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.CategoryTeaserGroup$TeaserCategory -> pt.rocket.framework.objects.CategoryTeaserGroup$TeaserCategory:
    pt.rocket.framework.objects.CategoryTeaserGroup this$0 -> b
    java.lang.String getTargetUrl() -> j
    pt.rocket.framework.objects.ITargeting$TargetType getTargetType() -> k
    java.lang.String getTargetTitle() -> l
pt.rocket.framework.objects.CompleteProduct -> pt.rocket.framework.objects.CompleteProduct:
    java.lang.String TAG -> a
    java.lang.String sku -> b
    java.lang.String name -> c
    java.lang.String idCatalogConfig -> d
    java.lang.String attributeSetId -> e
    java.lang.String activatedAt -> f
    java.lang.String url -> g
    java.lang.String description -> h
    java.lang.String price -> i
    java.lang.String maxPrice -> j
    java.lang.String brand -> k
    double priceDouble -> l
    double maxPriceDouble -> m
    java.lang.String specialPrice -> n
    java.lang.String maxSpecialPrice -> o
    java.lang.Double maxSavingPercentage -> p
    java.lang.Double ratingsAverage -> q
    java.lang.Integer ratingsCount -> r
    java.util.ArrayList categories -> s
    java.util.HashMap attributes -> t
    java.util.HashMap shipmentData -> u
    java.util.ArrayList simples -> v
    java.util.ArrayList imageList -> w
    java.util.ArrayList variations -> x
    java.util.ArrayList known_variations -> y
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String getSku() -> a
    java.lang.String getName() -> b
    java.lang.String getPrice() -> c
    java.lang.Double getPriceAsDouble() -> d
    java.lang.String getMaxPrice() -> e
    java.lang.String getBrand() -> f
    java.util.ArrayList getCategories() -> g
    java.util.ArrayList getSimples() -> h
    java.util.ArrayList getImageList() -> i
    java.lang.String getUrl() -> j
    java.lang.String getImageUrl(java.lang.String) -> a
    java.lang.String getDescription() -> k
    java.lang.String getSpecialPrice() -> l
    java.lang.String getMaxSpecialPrice() -> m
    java.lang.Double getMaxSavingPercentage() -> n
    java.lang.Double getRatingsAverage() -> o
    java.lang.Integer getRatingsCount() -> p
    java.lang.String getShortDescription() -> q
    java.util.ArrayList getVariations() -> r
    java.util.ArrayList getKnownVariations() -> s
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.CompleteProduct$1 -> bqn:
    pt.rocket.framework.objects.CompleteProduct createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.CompleteProduct[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.CreditCard -> pt.rocket.framework.objects.CreditCard:
    java.lang.String cvc -> a
    int expiryMonth -> b
    int expiryYear -> c
    java.lang.String holderName -> d
    long number -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.CreditCard$1 -> bqo:
    pt.rocket.framework.objects.CreditCard createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.CreditCard[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Customer -> pt.rocket.framework.objects.Customer:
    java.lang.String TAG -> a
    java.lang.String id -> b
    pt.rocket.framework.objects.CustomerPrefix prefix -> c
    java.lang.String firstName -> d
    java.lang.String middleName -> e
    java.lang.String lastName -> f
    java.lang.String email -> g
    java.util.Date birthday -> h
    pt.rocket.framework.objects.CustomerGender gender -> i
    java.lang.String password -> j
    java.lang.String created_at -> k
    boolean guest -> l
    java.util.ArrayList addresses -> m
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getId() -> a
    java.lang.String getIdAsString() -> b
    java.lang.String getFirstName() -> c
    java.lang.String getLastName() -> d
    java.lang.String getEmail() -> e
    pt.rocket.framework.objects.CustomerGender getGender() -> f
    java.util.Date getBirthday() -> g
    java.lang.String getCreatedAt() -> h
    void setCreatedAt(java.lang.String) -> a
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean isGuest() -> i
    void setGuest(boolean) -> a
pt.rocket.framework.objects.Customer$1 -> bqp:
    pt.rocket.framework.objects.Customer createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Customer[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.CustomerGender -> bqq:
    pt.rocket.framework.objects.CustomerGender Gender -> a
    pt.rocket.framework.objects.CustomerGender Male -> b
    pt.rocket.framework.objects.CustomerGender Female -> c
    pt.rocket.framework.objects.CustomerGender Other -> d
    pt.rocket.framework.objects.CustomerGender UNKNOWN -> e
    pt.rocket.framework.objects.CustomerGender[] ENUM$VALUES -> f
    pt.rocket.framework.objects.CustomerGender[] values() -> values
    pt.rocket.framework.objects.CustomerGender valueOf(java.lang.String) -> valueOf
pt.rocket.framework.objects.CustomerPrefix -> bqr:
    pt.rocket.framework.objects.CustomerPrefix Prefix -> a
    pt.rocket.framework.objects.CustomerPrefix Ms -> b
    pt.rocket.framework.objects.CustomerPrefix Mr -> c
    pt.rocket.framework.objects.CustomerPrefix[] ENUM$VALUES -> d
    pt.rocket.framework.objects.CustomerPrefix[] values() -> values
    pt.rocket.framework.objects.CustomerPrefix valueOf(java.lang.String) -> valueOf
pt.rocket.framework.objects.Errors -> pt.rocket.framework.objects.Errors:
    java.lang.String TAG -> a
    java.util.List errorMessages -> b
    java.util.List validateMessages -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.HashMap createErrorMessageMap(org.json.JSONObject) -> a
    void dumpMessages() -> a
    boolean parseTagArray(org.json.JSONObject,java.lang.String) -> a
    boolean parseErrorArray(org.json.JSONObject) -> b
    boolean parseValidateArray(org.json.JSONObject) -> c
    boolean parseSuccessArray(org.json.JSONObject) -> d
    boolean parseErrorArrayWithObject(org.json.JSONObject) -> e
    java.util.ArrayList extractErrorMessagesOnly(java.util.ArrayList) -> a
    boolean parseValidateObjectWithObject(org.json.JSONObject) -> f
    boolean parseValidateObjectWithObjectWithArray(org.json.JSONObject) -> g
    java.util.ArrayList extractValidateMessagesOnly(java.util.HashMap) -> a
    java.util.List extractValidateMessageOnly(java.util.HashMap) -> b
    java.util.HashMap parseObjectWithObject(org.json.JSONObject) -> h
    java.util.HashMap parseObjectWithArray(org.json.JSONObject) -> i
    java.util.HashMap parseObjectWithStrings(org.json.JSONObject) -> j
    java.util.ArrayList parseArray(org.json.JSONArray) -> a
    java.util.ArrayList parseArrayWithObject(org.json.JSONArray) -> b
    java.util.HashMap parseObject(org.json.JSONObject) -> k
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Errors$1 -> bqs:
    pt.rocket.framework.objects.Errors createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Errors[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Homepage -> pt.rocket.framework.objects.Homepage:
    int homepageId -> a
    java.lang.String homepageTitle -> b
    boolean defaultHomepage -> c
    java.util.ArrayList teaserSpecifications -> d
    java.lang.String homepageLayout -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getHomepageTitle() -> a
    java.util.ArrayList getTeaserSpecification() -> b
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Homepage$1 -> bqt:
    pt.rocket.framework.objects.Homepage createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Homepage[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ITargeting -> bqu:
    java.lang.String getTargetUrl() -> j
    pt.rocket.framework.objects.ITargeting$TargetType getTargetType() -> k
    java.lang.String getTargetTitle() -> l
pt.rocket.framework.objects.ITargeting$TargetType -> bqv:
    pt.rocket.framework.objects.ITargeting$TargetType PRODUCT_LIST -> a
    pt.rocket.framework.objects.ITargeting$TargetType PRODUCT -> b
    pt.rocket.framework.objects.ITargeting$TargetType CATEGORY -> c
    pt.rocket.framework.objects.ITargeting$TargetType BRAND -> d
    pt.rocket.framework.objects.ITargeting$TargetType CAMPAIGN -> e
    pt.rocket.framework.objects.ITargeting$TargetType UNKNOWN -> f
    int value -> g
    pt.rocket.framework.objects.ITargeting$TargetType[] ENUM$VALUES -> h
    pt.rocket.framework.objects.ITargeting$TargetType byValue(int) -> a
    pt.rocket.framework.objects.ITargeting$TargetType[] values() -> values
    pt.rocket.framework.objects.ITargeting$TargetType valueOf(java.lang.String) -> valueOf
pt.rocket.framework.objects.Image -> pt.rocket.framework.objects.Image:
    java.lang.String url -> a
    java.lang.String format -> b
    java.lang.String width -> c
    java.lang.String height -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> a
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Image$1 -> bqw:
    pt.rocket.framework.objects.Image createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Image[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ImageResolution -> pt.rocket.framework.objects.ImageResolution:
    java.lang.String TAG -> a
    java.lang.String identifier -> b
    int width -> c
    int heigth -> d
    java.lang.String extension -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getIdentifier() -> a
    java.lang.String getExtension() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.ImageResolution$1 -> bqx:
    pt.rocket.framework.objects.ImageResolution createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ImageResolution[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ImageTeaserGroup -> pt.rocket.framework.objects.ImageTeaserGroup:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    pt.rocket.framework.objects.TeaserImage parseData(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    pt.rocket.framework.objects.ITargeting parseData(org.json.JSONObject) -> b
pt.rocket.framework.objects.ImageTeaserGroup$1 -> bqy:
    pt.rocket.framework.objects.ImageTeaserGroup createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ImageTeaserGroup[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.LastViewed -> bqz:
    java.lang.String TAG -> a
    java.lang.String product_sku -> b
    java.lang.String product_name -> c
    java.lang.String product_price -> d
    java.lang.String product_url -> e
    java.lang.String image_url -> f
    java.lang.String getProductSku() -> a
    void setProductSku(java.lang.String) -> a
    java.lang.String getProductName() -> b
    void setProductName(java.lang.String) -> b
    java.lang.String getProductPrice() -> c
    void setProductPrice(java.lang.String) -> c
    java.lang.String getImageUrl() -> d
    void setImageUrl(java.lang.String) -> d
    java.lang.String getProductUrl() -> e
    void setProductUrl(java.lang.String) -> e
pt.rocket.framework.objects.MinOrderAmount -> pt.rocket.framework.objects.MinOrderAmount:
    java.lang.String TAG -> a
    double value -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.MinOrderAmount$1 -> bra:
    pt.rocket.framework.objects.MinOrderAmount createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.MinOrderAmount[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Order -> pt.rocket.framework.objects.Order:
    java.lang.String TAG -> a
    java.lang.String mOrderNumber -> b
    java.lang.String mFirstName -> c
    java.lang.String mLastName -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Order$1 -> brb:
    pt.rocket.framework.objects.Order createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Order[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.OrderSummary -> pt.rocket.framework.objects.OrderSummary:
    java.lang.String TAG -> a
    java.lang.String mGrandTotal -> b
    java.lang.String mShippingAmount -> c
    java.lang.String mExtraCost -> d
    java.lang.String mDiscountAmount -> e
    java.lang.String mInstallmentFees -> f
    java.lang.String mTaxAmount -> g
    java.lang.String mCustomerDevice -> h
    pt.rocket.framework.objects.ShoppingCart mCart -> i
    java.lang.String mShippingMethod -> j
    java.lang.String mPaymentMethod -> k
    pt.rocket.framework.objects.Address mShippingAddress -> l
    pt.rocket.framework.objects.Address mBillingAddress -> m
    java.util.Map simpleData -> n
    java.lang.String mDiscountCouponValue -> o
    java.lang.String mDiscountCouponCode -> p
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String toString() -> toString
    java.lang.String getTotal() -> a
    java.lang.String getShippingAmount() -> b
    java.lang.String getTaxAmount() -> c
    pt.rocket.framework.objects.ShoppingCart getCart() -> d
    java.lang.String getShippingMethod() -> e
    java.lang.String getPaymentMethod() -> f
    pt.rocket.framework.objects.Address getShippingAddress() -> g
    pt.rocket.framework.objects.Address getBillingAddress() -> h
    java.lang.String getDiscountCouponValue() -> i
    java.lang.String getDiscountCouponCode() -> j
    boolean hasShippingAddress() -> k
    boolean hasShippingMethod() -> l
    boolean hasCouponCode() -> m
    boolean hasCouponDiscount() -> n
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.OrderSummary$1 -> brc:
    pt.rocket.framework.objects.OrderSummary createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.OrderSummary[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.OrderTracker -> pt.rocket.framework.objects.OrderTracker:
    java.lang.String TAG -> a
    java.lang.String order_id -> b
    java.lang.String creation_date -> c
    java.lang.String payment_method -> d
    java.lang.String last_order_update -> e
    java.util.ArrayList orderTracketItems -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> a
    java.lang.String getDate() -> b
    java.lang.String getPaymentMethod() -> c
    java.util.ArrayList getOrderTrackerItems() -> d
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.OrderTracker$1 -> brd:
    pt.rocket.framework.objects.OrderTracker createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.OrderTracker[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.OrderTrackerItem -> pt.rocket.framework.objects.OrderTrackerItem:
    java.lang.String TAG -> a
    java.lang.String sku -> b
    java.lang.String name -> c
    java.lang.String quantity -> d
    java.lang.String status -> e
    java.lang.String status_update -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> a
    java.lang.String getQuantity() -> b
    java.lang.String getStatus() -> c
    java.lang.String getUpdateDate() -> d
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.OrderTrackerItem$1 -> bre:
    pt.rocket.framework.objects.OrderTrackerItem createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.OrderTrackerItem[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.PaymentInfo -> pt.rocket.framework.objects.PaymentInfo:
    java.lang.String text -> a
    java.util.ArrayList images -> b
    java.lang.String tooltip_text -> c
    java.lang.String cvc_text -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getText() -> a
    void setText(java.lang.String) -> a
    java.util.ArrayList getImages() -> b
    void setImages(java.util.ArrayList) -> a
    void setTooltipText(java.lang.String) -> b
    void setCvcText(java.lang.String) -> c
pt.rocket.framework.objects.PaymentInfo$1 -> brf:
    pt.rocket.framework.objects.PaymentInfo createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.PaymentInfo[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.PaymentMethods -> pt.rocket.framework.objects.PaymentMethods:
    java.lang.String TAG -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.PaymentResult -> pt.rocket.framework.objects.PaymentResult:
    java.lang.String authCode -> a
    java.lang.String dccAmount -> b
    java.lang.String dccSignature -> c
    java.lang.String fraudResult -> d
    java.lang.String issuerUrl -> e
    java.lang.String md -> f
    java.lang.String paResult -> g
    long pspReference -> h
    java.lang.String refusalReason -> i
    java.lang.String resultCode -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.PaymentResult$1 -> brg:
    pt.rocket.framework.objects.PaymentResult createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.PaymentResult[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.PickUpStationObject -> pt.rocket.framework.objects.PickUpStationObject:
    java.lang.String TAG -> a
    java.lang.String id_pickupstation -> b
    java.lang.String name -> c
    java.lang.String pickup_id -> d
    java.lang.String image -> e
    java.lang.String address -> f
    java.lang.String place -> g
    java.lang.String city -> h
    java.lang.String opening_hours -> i
    java.lang.String id_pickupstation_region -> j
    java.util.ArrayList payment_method -> k
    java.util.ArrayList regions -> l
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getIdPickupstation() -> a
    java.lang.String getName() -> b
    java.lang.String getPickupId() -> c
    java.util.ArrayList getRegions() -> d
    void initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.PickUpStationObject$1 -> brh:
    pt.rocket.framework.objects.PickUpStationObject createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.PickUpStationObject[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.PollOption -> pt.rocket.framework.objects.PollOption:
    java.lang.String TAG -> a
    java.lang.String option -> b
    java.lang.String value -> c
    java.lang.String group -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String getOption() -> a
    java.lang.String getValue() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
pt.rocket.framework.objects.PollOption$1 -> bri:
    pt.rocket.framework.objects.PollOption createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.PollOption[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Product -> pt.rocket.framework.objects.Product:
    java.lang.String TAG -> a
    java.lang.String id -> b
    pt.rocket.framework.objects.ProductAttributes attributes -> c
    java.util.ArrayList images -> d
    java.util.ArrayList imagesTablet -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    pt.rocket.framework.objects.ProductAttributes getAttributes() -> a
    java.util.ArrayList getImages() -> b
    java.util.ArrayList getImagesTablet() -> c
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String getSKU() -> d
    java.lang.String getName() -> e
    java.lang.String getBrand() -> f
    java.lang.String getPrice() -> g
    java.lang.String getSuggestedPrice() -> h
    java.lang.Double getMaxSavingPercentage() -> i
    java.lang.Double getRating() -> m
    java.lang.Integer getReviews() -> n
    java.lang.String getUrl() -> o
    java.lang.String getSpecialPrice() -> p
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Product$1 -> brj:
    pt.rocket.framework.objects.Product createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Product[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ProductAttributes -> pt.rocket.framework.objects.ProductAttributes:
    java.lang.String TAG -> a
    java.lang.String sku -> b
    java.lang.String name -> c
    java.lang.String url -> d
    java.lang.String description -> e
    java.lang.String brand -> f
    java.lang.String maxPrice -> g
    java.lang.String price -> h
    java.lang.String specialPrice -> i
    java.lang.String maxSpecialPrice -> j
    java.lang.Double maxSavingPercentage -> k
    java.lang.Integer reviews -> l
    java.lang.Double rating -> m
    boolean isNew -> n
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.Integer getReviews() -> a
    java.lang.Double getRating() -> b
    java.lang.String getSku() -> c
    java.lang.String getName() -> d
    java.lang.String getBrand() -> e
    java.lang.String getMaxPrice() -> f
    java.lang.String getPrice() -> g
    java.lang.String getUrl() -> h
    java.lang.String getSpecialPrice() -> i
    java.lang.Double getMaxSavingPercentage() -> j
    boolean isNew() -> k
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.ProductAttributes$1 -> brk:
    pt.rocket.framework.objects.ProductAttributes createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ProductAttributes[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ProductImage -> pt.rocket.framework.objects.ProductImage:
    java.lang.String idCatalogProductImage -> a
    java.lang.Integer fkCatalogConfig -> b
    java.lang.Integer fkCatalogSimple -> c
    java.lang.String image -> d
    java.lang.String main -> e
    java.lang.String updatedAt -> f
    java.lang.String updatedAtTs -> g
    java.lang.String sku -> h
    java.lang.String fkCatalogBrand -> i
    java.lang.String skuSimple -> j
    java.lang.String idCatalogBrand -> k
    java.lang.String brandName -> l
    java.lang.String brandUrlKey -> m
    java.lang.String url -> n
    java.lang.String path -> o
    java.lang.String sprite -> p
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.ProductImage$1 -> brl:
    pt.rocket.framework.objects.ProductImage createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ProductImage[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ProductRatingPage -> pt.rocket.framework.objects.ProductRatingPage:
    double productRating -> a
    int commentsCount -> b
    java.util.ArrayList reviewComments -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.util.ArrayList getReviewComments() -> a
    int getCommentsCount() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.ProductRatingPage$1 -> brm:
    pt.rocket.framework.objects.ProductRatingPage createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ProductRatingPage[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ProductReviewComment -> pt.rocket.framework.objects.ProductReviewComment:
    java.lang.String title -> a
    java.lang.String comments -> b
    java.lang.String name -> c
    java.lang.String date -> d
    double rating -> e
    java.lang.String optionTitle -> f
    java.util.ArrayList ratingOptions -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String getTitle() -> a
    java.lang.String getComments() -> b
    java.lang.String getName() -> c
    java.lang.String getDate() -> d
    double getRating() -> e
    java.util.ArrayList getRatingOptions() -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.ProductReviewComment$1 -> brn:
    pt.rocket.framework.objects.ProductReviewComment createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ProductReviewComment[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ProductReviewCommentCreated -> pt.rocket.framework.objects.ProductReviewCommentCreated:
    java.lang.String title -> a
    java.lang.String comments -> b
    java.lang.String name -> c
    java.lang.String email -> d
    java.util.HashMap rating -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void addParameters(android.content.ContentValues) -> a
    void setTitle(java.lang.String) -> a
    java.lang.String getComments() -> a
    void setComments(java.lang.String) -> b
    void setName(java.lang.String) -> c
    java.util.HashMap getRating() -> b
    void setRating(java.util.HashMap) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.ProductReviewCommentCreated$1 -> bro:
    pt.rocket.framework.objects.ProductReviewCommentCreated createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ProductReviewCommentCreated[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ProductSimple -> pt.rocket.framework.objects.ProductSimple:
    java.util.HashMap attributes -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.util.HashMap getAttributes() -> a
    java.lang.String getAttributeByKey(java.lang.String) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.ProductSimple$1 -> brp:
    pt.rocket.framework.objects.ProductSimple createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ProductSimple[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ProductSimpleUnique -> pt.rocket.framework.objects.ProductSimpleUnique:
    java.lang.String sku -> a
    int quantity -> b
    java.lang.String variation -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.ProductSimpleUnique$1 -> brq:
    pt.rocket.framework.objects.ProductSimpleUnique createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ProductSimpleUnique[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ProductTeaserGroup -> pt.rocket.framework.objects.ProductTeaserGroup:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    pt.rocket.framework.objects.ProductTeaserGroup$TeaserProduct parseData(org.json.JSONObject) -> a
    pt.rocket.framework.objects.ITargeting parseData(org.json.JSONObject) -> b
pt.rocket.framework.objects.ProductTeaserGroup$1 -> brr:
    pt.rocket.framework.objects.ProductTeaserGroup createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ProductTeaserGroup[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ProductTeaserGroup$TeaserProduct -> pt.rocket.framework.objects.ProductTeaserGroup$TeaserProduct:
    pt.rocket.framework.objects.ProductTeaserGroup this$0 -> b
    java.lang.String getTargetUrl() -> j
    pt.rocket.framework.objects.ITargeting$TargetType getTargetType() -> k
    java.lang.String getTargetTitle() -> l
pt.rocket.framework.objects.ProductsPage -> pt.rocket.framework.objects.ProductsPage:
    java.lang.String TAG -> a
    int totalProducts -> b
    java.util.ArrayList products -> c
    java.util.ArrayList mFilters -> d
    java.lang.String mPageName -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    void parseCategoryFilter(org.json.JSONArray) -> a
    java.util.ArrayList getProducts() -> a
    int getTotalProducts() -> b
    java.util.ArrayList getFilters() -> c
    java.lang.String getName() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.ProductsPage$1 -> brs:
    pt.rocket.framework.objects.ProductsPage createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ProductsPage[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Promotion -> pt.rocket.framework.objects.Promotion:
    java.lang.String TAG -> a
    java.lang.String title -> b
    java.lang.String description -> c
    java.lang.String coupon_code -> d
    java.lang.String terms_conditions -> e
    java.lang.String end_date -> f
    boolean is_valid -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getTitle() -> a
    java.lang.String getDescription() -> b
    java.lang.String getCouponCode() -> c
    java.lang.String getTermsConditions() -> d
    java.lang.String getEndDate() -> e
    boolean getIsStillValid() -> f
    boolean initialize(org.json.JSONObject) -> a
    boolean compareDates(java.lang.String) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Promotion$1 -> brt:
    pt.rocket.framework.objects.Promotion createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Promotion[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.PurchaseItem -> pt.rocket.framework.objects.PurchaseItem:
    java.lang.String TAG -> h
    int INDEX_OFFSET -> i
    java.lang.String sku -> a
    java.lang.String name -> b
    java.lang.String category -> c
    java.lang.String paidprice -> d
    java.lang.Double paidpriceAsDouble -> e
    java.lang.String quantity -> f
    java.lang.Integer quantityAsInt -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean parseItem(org.json.JSONObject,int) -> a
    java.util.List parseItems(org.json.JSONObject) -> a
    java.util.List parseItems(java.util.Map) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.PurchaseItem$1 -> bru:
    pt.rocket.framework.objects.PurchaseItem createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.PurchaseItem[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.RatingOption -> pt.rocket.framework.objects.RatingOption:
    double rating -> a
    java.lang.String optionTitle -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    double getRating() -> a
    java.lang.String getTitle() -> b
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.RatingOption$1 -> brv:
    pt.rocket.framework.objects.RatingOption createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.RatingOption[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Region -> pt.rocket.framework.objects.Region:
    java.lang.String id -> a
    java.lang.String name -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Region$1 -> brw:
    pt.rocket.framework.objects.Region createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Region[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.SearchSuggestion -> pt.rocket.framework.objects.SearchSuggestion:
    java.lang.String TAG -> a
    java.lang.String result -> b
    int value -> c
    boolean recentQuery -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String getResult() -> a
    int getResultValue() -> b
    void setResult(java.lang.String) -> a
    void setIsRecentSearch(boolean) -> a
    boolean isRecentQuery() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.SearchSuggestion$1 -> brx:
    pt.rocket.framework.objects.SearchSuggestion createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.SearchSuggestion[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Section -> pt.rocket.framework.objects.Section:
    java.lang.String TAG -> a
    java.lang.String name -> b
    java.lang.String url -> c
    java.lang.String md5 -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> a
    java.lang.String getUrl() -> b
    java.lang.String getMd5() -> c
    void init(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean initialize(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Section$1 -> bry:
    pt.rocket.framework.objects.Section createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Section[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ShippingMethods -> pt.rocket.framework.objects.ShippingMethods:
    java.lang.String TAG -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.ShoppingCart -> pt.rocket.framework.objects.ShoppingCart:
    java.lang.String TAG -> a
    java.util.Map cartItems -> b
    java.lang.String cartValue -> c
    int cartCount -> d
    java.lang.String vat_value -> e
    java.lang.String shipping_value -> f
    java.lang.String extra_costs -> g
    java.lang.String sum_costs_value -> h
    boolean sum_costs -> i
    java.util.Map itemSimpleDataRegistry -> j
    java.lang.String cartCleanValue -> k
    java.lang.String couponDiscount -> l
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.Map getCartItems() -> a
    java.lang.String getCartValue() -> b
    int getCartCount() -> c
    java.lang.String getVatValue() -> d
    java.lang.String getShippingValue() -> e
    java.lang.String getCartCleanValue() -> f
    boolean initialize(org.json.JSONObject) -> a
    void fillCartHashMap(org.json.JSONObject) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getExtraCosts() -> g
    java.lang.String getSumCostsValue() -> h
    boolean isSumCosts() -> i
    java.lang.String getCouponDiscount() -> j
pt.rocket.framework.objects.ShoppingCart$1 -> brz:
    pt.rocket.framework.objects.ShoppingCart createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ShoppingCart[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.ShoppingCartItem -> pt.rocket.framework.objects.ShoppingCartItem:
    java.lang.String imageUrl -> a
    java.lang.String productUrl -> b
    java.lang.String configSKU -> c
    java.lang.String configSimpleSKU -> d
    long quantity -> e
    int maxQuantity -> f
    java.lang.String configId -> g
    java.lang.String name -> h
    long stock -> i
    java.lang.String specialPrice -> j
    java.lang.Double savingPercentage -> k
    java.lang.String price -> l
    double taxAmount -> m
    java.util.Map simpleData -> n
    double cartRuleDiscount -> o
    java.lang.String variation -> p
    double priceVal -> q
    double specialPriceVal -> r
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    void initialize(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,int) -> a
    java.lang.String getImageUrl() -> a
    java.lang.String getProductUrl() -> b
    java.lang.String getConfigSKU() -> c
    java.lang.String getConfigSimpleSKU() -> d
    void setQuantity(long) -> a
    long getQuantity() -> e
    int getMaxQuantity() -> f
    java.lang.String getName() -> g
    long getStock() -> h
    java.lang.String getSpecialPrice() -> i
    java.lang.Double getSpecialPriceVal() -> j
    java.lang.String getPrice() -> k
    java.lang.Double getPriceVal() -> l
    double getSavingPercentage() -> m
    java.util.Map getSimpleData() -> n
    void setSimpleData(java.util.Map) -> a
    java.lang.String getVariation() -> o
    java.lang.String getImageUrl(java.lang.String) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.ShoppingCartItem$1 -> bsa:
    pt.rocket.framework.objects.ShoppingCartItem createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.ShoppingCartItem[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.TeaserBrand -> pt.rocket.framework.objects.TeaserBrand:
    pt.rocket.framework.objects.ITargeting$TargetType getTargetType() -> k
    java.lang.String getTargetUrl() -> j
    java.lang.String getTargetTitle() -> l
    java.lang.String getImageTableUrl() -> a
pt.rocket.framework.objects.TeaserBrandElement -> pt.rocket.framework.objects.TeaserBrandElement:
    java.lang.String TAG -> a
    java.lang.String id -> b
    pt.rocket.framework.objects.BrandAttributes attributes -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String getName() -> b
    java.lang.String getImageUrl() -> c
    pt.rocket.framework.objects.ITargeting$TargetType getTargetType() -> k
    java.lang.String getImageTableUrl() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.TeaserBrandElement$1 -> bsb:
    pt.rocket.framework.objects.TeaserBrandElement createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.TeaserBrandElement[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.TeaserCampaign -> pt.rocket.framework.objects.TeaserCampaign:
    java.lang.String name -> a
    java.lang.String url -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    pt.rocket.framework.objects.ITargeting$TargetType getTargetType() -> k
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String getTargetUrl() -> j
    java.lang.String getTargetTitle() -> l
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.TeaserCampaign$1 -> bsc:
    pt.rocket.framework.objects.TeaserCampaign createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.TeaserCampaign[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.TeaserGroupCampaigns -> pt.rocket.framework.objects.TeaserGroupCampaigns:
    java.lang.String TAG -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    pt.rocket.framework.objects.TeaserCampaign parseData(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    pt.rocket.framework.objects.ITargeting parseData(org.json.JSONObject) -> b
pt.rocket.framework.objects.TeaserGroupCampaigns$1 -> bsd:
    pt.rocket.framework.objects.TeaserGroupCampaigns createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.TeaserGroupCampaigns[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.TeaserGroupTopBrands -> pt.rocket.framework.objects.TeaserGroupTopBrands:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    pt.rocket.framework.objects.TeaserGroupTopBrands$TeaserTopBrand parseData(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    pt.rocket.framework.objects.ITargeting parseData(org.json.JSONObject) -> b
pt.rocket.framework.objects.TeaserGroupTopBrands$1 -> bse:
    pt.rocket.framework.objects.TeaserGroupTopBrands createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.TeaserGroupTopBrands[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.TeaserGroupTopBrands$TeaserTopBrand -> pt.rocket.framework.objects.TeaserGroupTopBrands$TeaserTopBrand:
    pt.rocket.framework.objects.TeaserGroupTopBrands this$0 -> b
    pt.rocket.framework.objects.ITargeting$TargetType getTargetType() -> k
    java.lang.String getTargetTitle() -> l
    java.lang.String getTargetUrl() -> j
pt.rocket.framework.objects.TeaserGroupType -> bsf:
    pt.rocket.framework.objects.TeaserGroupType UNKNOWN -> a
    pt.rocket.framework.objects.TeaserGroupType MAIN_ONE_SLIDE -> b
    pt.rocket.framework.objects.TeaserGroupType STATIC_BANNER -> c
    pt.rocket.framework.objects.TeaserGroupType PRODUCT_LIST -> d
    pt.rocket.framework.objects.TeaserGroupType CATEGORIES -> e
    pt.rocket.framework.objects.TeaserGroupType BRANDS_LIST -> f
    pt.rocket.framework.objects.TeaserGroupType TOP_BRANDS_LIST -> g
    pt.rocket.framework.objects.TeaserGroupType CAMPAIGNS_LIST -> h
    int value -> i
    pt.rocket.framework.objects.TeaserGroupType[] ENUM$VALUES -> j
    pt.rocket.framework.objects.TeaserGroupType byValue(int) -> a
    pt.rocket.framework.objects.TeaserGroupType[] values() -> values
    pt.rocket.framework.objects.TeaserGroupType valueOf(java.lang.String) -> valueOf
pt.rocket.framework.objects.TeaserImage -> pt.rocket.framework.objects.TeaserImage:
    int id -> a
    java.lang.String width -> b
    java.lang.String height -> c
    java.lang.String format -> d
    java.lang.String imageUrl -> e
    java.lang.String navigationUrl -> f
    java.lang.String description -> g
    pt.rocket.framework.objects.ITargeting$TargetType targetType -> h
    java.lang.String imageTableUrl -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    java.lang.String getImageUrl() -> a
    java.lang.String getNavigationUrl() -> b
    void setDescription(java.lang.String) -> a
    java.lang.String getTargetUrl() -> j
    pt.rocket.framework.objects.ITargeting$TargetType getTargetType() -> k
    java.lang.String getTargetTitle() -> l
    java.lang.String getImageTableUrl() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.TeaserImage$1 -> bsg:
    pt.rocket.framework.objects.TeaserImage createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.TeaserImage[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.TeaserSpecification -> pt.rocket.framework.objects.TeaserSpecification:
    java.lang.String TAG -> b
    java.lang.String title -> a
    pt.rocket.framework.objects.TeaserGroupType type -> c
    java.util.ArrayList teasers -> d
    int[] $SWITCH_TABLE$pt$rocket$framework$objects$TeaserGroupType -> e
    pt.rocket.framework.objects.TeaserSpecification parse(org.json.JSONObject) -> c
    boolean initialize(org.json.JSONObject) -> d
    pt.rocket.framework.objects.ITargeting parseData(org.json.JSONObject) -> b
    pt.rocket.framework.objects.TeaserGroupType getType() -> a
    java.util.ArrayList getTeasers() -> b
    java.lang.String getTitle() -> c
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int[] $SWITCH_TABLE$pt$rocket$framework$objects$TeaserGroupType() -> d
pt.rocket.framework.objects.UnknownTeaserGroup -> pt.rocket.framework.objects.UnknownTeaserGroup:
    pt.rocket.framework.objects.UnknownTeaserGroup INSTANCE -> b
    pt.rocket.framework.objects.ITargeting parseData(org.json.JSONObject) -> b
    boolean initialize(org.json.JSONObject) -> d
pt.rocket.framework.objects.Variation -> pt.rocket.framework.objects.Variation:
    java.lang.String TAG -> a
    java.lang.String sku -> b
    java.lang.String link -> c
    java.lang.String image -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(java.lang.String,org.json.JSONObject) -> a
    java.lang.String getSKU() -> a
    java.lang.String getLink() -> b
    java.lang.String getImage() -> c
    java.lang.String getImageUrl(java.lang.String) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Variation$1 -> bsh:
    pt.rocket.framework.objects.Variation createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Variation[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Version -> pt.rocket.framework.objects.Version:
    java.lang.String TAG -> a
    int minimumVersion -> b
    int currentVersion -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    int getMinimumVersion() -> a
    int getCurrentVersion() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Version$1 -> bsi:
    pt.rocket.framework.objects.Version createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Version[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.VersionInfo -> pt.rocket.framework.objects.VersionInfo:
    java.lang.String TAG -> a
    java.util.HashMap mVersions -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean initialize(org.json.JSONObject) -> a
    pt.rocket.framework.objects.Version getEntryByKey(java.lang.String) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.VersionInfo$1 -> bsj:
    pt.rocket.framework.objects.VersionInfo createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.VersionInfo[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.objects.Voucher -> pt.rocket.framework.objects.Voucher:
    java.util.HashMap messages -> a
    java.lang.String cartValue -> b
    java.lang.String couponMoneyValue -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setMessages(java.util.HashMap) -> a
    void setCartValue(java.lang.String) -> a
    void setCouponMoneyValue(java.lang.String) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
pt.rocket.framework.objects.Voucher$1 -> bsk:
    pt.rocket.framework.objects.Voucher createFromParcel(android.os.Parcel) -> a
    pt.rocket.framework.objects.Voucher[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pt.rocket.framework.rest.RestClientSingleton -> bsl:
    java.lang.String TAG -> b
    java.util.regex.Pattern proxyPattern -> c
    int count -> d
    pt.rocket.framework.rest.RestClientSingleton INSTANCE -> a
    pt.rocket.framework.network.DarwinHttpClient darwinHttpClient -> e
    ch.boye.httpclientandroidlib.client.HttpClient httpClient -> f
    ch.boye.httpclientandroidlib.client.CookieStore cookieStore -> g
    ch.boye.httpclientandroidlib.protocol.HttpContext httpContext -> h
    ch.boye.httpclientandroidlib.client.cache.HttpCacheStorage cache -> i
    android.net.ConnectivityManager connManager -> j
    android.content.Context context -> k
    int[] $SWITCH_TABLE$ch$boye$httpclientandroidlib$client$cache$CacheResponseStatus -> l
    pt.rocket.framework.rest.RestClientSingleton init(android.content.Context) -> a
    pt.rocket.framework.rest.RestClientSingleton getSingleton(android.content.Context) -> b
    java.lang.String executeGetRestUrlString(android.net.Uri,android.os.Handler,android.os.Bundle) -> a
    java.lang.String executePostRestUrlString(android.net.Uri,android.content.ContentValues,android.os.Handler,android.os.Bundle) -> a
    java.lang.String executeHttpRequest(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest,android.os.Handler,android.os.Bundle) -> a
    void trackError(android.content.Context,java.lang.Exception,java.net.URI,pt.rocket.framework.ErrorCode,java.lang.String,boolean) -> a
    ch.boye.httpclientandroidlib.params.HttpParams getHttpParams(android.content.Context) -> c
    void setAuthentication(android.content.Context,ch.boye.httpclientandroidlib.impl.client.DefaultHttpClient) -> a
    ch.boye.httpclientandroidlib.client.CookieStore getCookieStore() -> a
    boolean checkConnection() -> c
    ch.boye.httpclientandroidlib.conn.routing.HttpRoute determineRoute(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.protocol.HttpContext) -> a
    android.os.Message buildResponseMessage(pt.rocket.framework.utils.EventType,int,pt.rocket.framework.ErrorCode,java.lang.String,java.lang.String,java.lang.Boolean,long[]) -> a
    int[] $SWITCH_TABLE$ch$boye$httpclientandroidlib$client$cache$CacheResponseStatus() -> b
pt.rocket.framework.rest.RestContract -> bsm:
    java.lang.String TAG -> i
    java.lang.Integer NO_CACHE -> a
    java.lang.String REST_BASE_PATH -> b
    java.lang.String REQUEST_HOST -> c
    java.lang.Boolean USE_ONLY_HTTPS -> d
    java.lang.Boolean USE_AUTHENTICATION -> e
    java.lang.String AUTHENTICATION_USER -> f
    java.lang.String AUTHENTICATION_PASS -> g
    boolean RUNNING_TESTS -> h
    android.content.Context context -> j
    void init(android.content.Context,int) -> a
pt.rocket.framework.service.IRemoteService -> bsn:
    void sendRequest(android.os.Bundle) -> a
    void registerCallback(pt.rocket.framework.service.IRemoteServiceCallback) -> a
    void unregisterCallback(pt.rocket.framework.service.IRemoteServiceCallback) -> b
pt.rocket.framework.service.IRemoteService$Stub -> bso:
    pt.rocket.framework.service.IRemoteService asInterface(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
pt.rocket.framework.service.IRemoteService$Stub$Proxy -> bsp:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void sendRequest(android.os.Bundle) -> a
    void registerCallback(pt.rocket.framework.service.IRemoteServiceCallback) -> a
    void unregisterCallback(pt.rocket.framework.service.IRemoteServiceCallback) -> b
pt.rocket.framework.service.IRemoteServiceCallback -> bsq:
    void getResponse(android.os.Bundle) -> a
    void getError(android.os.Bundle) -> b
pt.rocket.framework.service.IRemoteServiceCallback$Stub -> bsr:
    pt.rocket.framework.service.IRemoteServiceCallback asInterface(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
pt.rocket.framework.service.IRemoteServiceCallback$Stub$Proxy -> bss:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void getResponse(android.os.Bundle) -> a
    void getError(android.os.Bundle) -> b
pt.rocket.framework.service.RemoteService -> pt.rocket.framework.service.RemoteService:
    java.lang.String TAG -> b
    android.os.RemoteCallbackList mCallbacks -> a
    pt.rocket.framework.service.RemoteService$TestThreadPoolExecutor tpe -> c
    int INIT_NUMBER_OF_THREADS -> d
    int MAX_NUMBER_OF_THREADS -> e
    boolean bound -> f
    pt.rocket.framework.service.IRemoteService$Stub mBinder -> g
    android.os.Handler mHandler -> h
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onRebind(android.content.Intent) -> onRebind
    android.net.Uri completeUri(android.net.Uri) -> a
    android.os.Handler access$0() -> a
    pt.rocket.framework.service.RemoteService$TestThreadPoolExecutor access$1(pt.rocket.framework.service.RemoteService) -> a
    java.lang.String access$2() -> b
pt.rocket.framework.service.RemoteService$1 -> bst:
    pt.rocket.framework.service.RemoteService this$0 -> a
    void sendRequest(android.os.Bundle) -> a
    void registerCallback(pt.rocket.framework.service.IRemoteServiceCallback) -> a
    void unregisterCallback(pt.rocket.framework.service.IRemoteServiceCallback) -> b
pt.rocket.framework.service.RemoteService$2 -> bsu:
    void handleMessage(android.os.Message) -> handleMessage
pt.rocket.framework.service.RemoteService$TestThreadPoolExecutor -> bsv:
    java.util.Set executions -> a
    pt.rocket.framework.service.RemoteService this$0 -> b
    void execute(java.lang.Runnable) -> execute
    void afterExecute(java.lang.Runnable,java.lang.Throwable) -> afterExecute
pt.rocket.framework.utils.AdXTracker -> bsw:
    java.lang.String TAG -> a
    boolean isEnabled -> b
    boolean isStarted -> c
    void startup(android.content.Context) -> a
    void trackSale(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,java.lang.String,java.lang.String,boolean,java.lang.String,boolean) -> a
    void trackAddToCart(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void trackRemoveFromCart(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void trackCheckoutStep(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void trackSignUp(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void trackPaymentMethod(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void trackNativeCheckoutError(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    org.json.JSONObject generateJSONObject(java.util.LinkedHashMap) -> a
    void launch(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void login(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void logout(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    void facebookLogin(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> d
    void signup(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> e
    void trackCall(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> f
    void trackShare(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    void trackProductRate(android.content.Context,java.lang.String,pt.rocket.framework.objects.ProductReviewCommentCreated,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void preInstall(android.content.Context,java.lang.String) -> a
    void deepLinkLaunch(android.content.Context,java.lang.String) -> b
pt.rocket.framework.utils.AnalyticsGoogle -> bsx:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.AnalyticsGoogle sInstance -> b
    com.google.analytics.tracking.android.GoogleAnalytics mAnalytics -> c
    com.google.analytics.tracking.android.Tracker mTracker -> d
    android.content.Context mContext -> e
    java.lang.String mTestKey -> f
    java.lang.String mLiveKey -> g
    java.lang.String mCurrentKey -> h
    boolean isEnabled -> i
    int mShopId -> j
    boolean isCheckoutStarted -> k
    void startup(android.content.Context,int) -> a
    pt.rocket.framework.utils.AnalyticsGoogle get() -> a
    void loadKeys() -> c
    void updateTracker() -> d
    void trackPage(int) -> a
    void trackSearch(java.lang.String,long) -> a
    void trackProduct(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void trackAccount(int,java.lang.String) -> a
    void trackAddToCart(java.lang.String,java.lang.Long) -> a
    void trackLoadTiming(int,long) -> a
    void clearCheckoutStarted() -> b
    void trackCheckoutStep(java.lang.String,int) -> a
    void trackSignUp(java.lang.String) -> a
    void trackPaymentMethod(java.lang.String,java.lang.String) -> a
    void trackNativeCheckoutError(java.lang.String,java.lang.String) -> b
    void trackTiming(int,int,long,java.lang.String) -> a
    void trackSales(java.lang.String,java.lang.String,java.util.List) -> a
    void trackShare(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void trackCheckoutStart(android.content.Context,java.lang.String) -> a
    void trackCheckoutContinueShopping(android.content.Context,java.lang.String) -> b
    void trackRateProduct(android.content.Context,java.lang.String,java.lang.Long,java.lang.String) -> a
    void setCampaign(java.lang.String) -> b
pt.rocket.framework.utils.Constants -> bsy:
    java.lang.String BUNDLE_GENERAL_ASSERTION_KEY -> a
    java.lang.String MD5_PRODUCTS_TAG -> b
    java.lang.String PIN -> c
pt.rocket.framework.utils.CurrencyFormatter -> bsz:
    java.lang.String TAG -> a
    java.lang.String currencyCode -> b
    java.lang.String currencyUnitPattern -> c
    java.util.Currency currency -> d
    java.text.NumberFormat formatter -> e
    java.lang.Character currencyThousandsDelim -> f
    java.lang.Integer currencyFractionCount -> g
    java.lang.Character currencyFractionDelim -> h
    java.util.Locale apiLocale -> i
    boolean initialized -> j
    boolean isLocaleAvailable -> k
    void initialize(android.content.Context,java.lang.String) -> a
    void loadCurrencyInformation(android.content.Context,java.lang.String) -> b
    java.lang.String formatCurrency(double) -> a
    double getValueDouble(java.lang.String) -> a
    java.lang.String getCleanValue(java.lang.String) -> b
    java.lang.String formatCurrency(java.lang.String) -> c
    java.text.NumberFormat getNumberFormatter() -> b
    java.text.NumberFormat createNumberFormatter() -> c
    java.lang.String getCurrencyCode() -> a
    boolean isLocaleAvailable(java.util.Locale) -> a
pt.rocket.framework.utils.CustomerUtils -> bta:
    java.lang.String TAG -> a
    oak.ObscuredSharedPreferences obscuredPreferences -> b
    void storeLogin(android.content.ContentValues) -> a
    android.content.ContentValues getCredentials() -> a
    java.lang.String getEmail() -> b
    boolean hasCredentials() -> c
    void storeCredentials(android.content.ContentValues) -> b
    void clearCredentials() -> d
pt.rocket.framework.utils.CustomerUtils$MyObscuredPrefs -> btb:
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
    char[] getSpecialCode() -> a
pt.rocket.framework.utils.Direction -> btc:
    pt.rocket.framework.utils.Direction ASCENDENT -> a
    pt.rocket.framework.utils.Direction DESCENDENT -> b
    int id -> c
    pt.rocket.framework.utils.Direction[] ENUM$VALUES -> d
    pt.rocket.framework.utils.Direction[] values() -> values
    pt.rocket.framework.utils.Direction valueOf(java.lang.String) -> valueOf
pt.rocket.framework.utils.ErrorMonitoring -> btd:
    java.lang.String TAG -> a
    java.util.SortedMap map -> b
    int sVersionCode -> c
    void buildErrorMap(android.content.Context,java.lang.String,pt.rocket.framework.ErrorCode,java.lang.Exception,java.lang.String) -> a
    void sendException(android.content.Context,java.lang.Exception,java.lang.String,pt.rocket.framework.ErrorCode,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String getIPAddress(boolean) -> a
    int getVersionCode(android.content.Context) -> a
pt.rocket.framework.utils.EventType -> bte:
    pt.rocket.framework.utils.EventType INITIALIZE -> a
    pt.rocket.framework.utils.EventType INIT_SHOP -> b
    pt.rocket.framework.utils.EventType INIT_FORMS -> c
    pt.rocket.framework.utils.EventType GET_CATEGORIES_EVENT -> d
    pt.rocket.framework.utils.EventType GET_PRODUCTS_EVENT -> e
    pt.rocket.framework.utils.EventType LOGIN_EVENT -> f
    pt.rocket.framework.utils.EventType FACEBOOK_LOGIN_EVENT -> g
    pt.rocket.framework.utils.EventType GET_LOGIN_FORM_EVENT -> h
    pt.rocket.framework.utils.EventType GET_LOGIN_FORM_FALLBACK_EVENT -> i
    pt.rocket.framework.utils.EventType LOGOUT_EVENT -> j
    pt.rocket.framework.utils.EventType GET_WISHLIST_EVENT -> k
    pt.rocket.framework.utils.EventType ADD_ITEMS_TO_WISHLIST_EVENT -> l
    pt.rocket.framework.utils.EventType REMOVE_ITEM_FROM_WISHLIST_EVENT -> m
    pt.rocket.framework.utils.EventType GET_TEASERS_EVENT -> n
    pt.rocket.framework.utils.EventType GET_PRODUCT_EVENT -> o
    pt.rocket.framework.utils.EventType GET_SEARCH_SUGGESTIONS_EVENT -> p
    pt.rocket.framework.utils.EventType ADD_ITEM_TO_SHOPPING_CART_EVENT -> q
    pt.rocket.framework.utils.EventType REMOVE_ITEM_FROM_SHOPPING_CART_EVENT -> r
    pt.rocket.framework.utils.EventType GET_SHOPPING_CART_ITEMS_EVENT -> s
    pt.rocket.framework.utils.EventType GET_REGISTRATION_FORM_EVENT -> t
    pt.rocket.framework.utils.EventType GET_REGISTRATION_FORM_FALLBACK_EVENT -> u
    pt.rocket.framework.utils.EventType GET_REGISTRATION_EDIT_FORM_EVENT -> v
    pt.rocket.framework.utils.EventType CHANGE_PASSWORD_EVENT -> w
    pt.rocket.framework.utils.EventType GET_CHANGE_PASSWORD_FORM_EVENT -> x
    pt.rocket.framework.utils.EventType GET_FORGET_PASSWORD_FORM_EVENT -> y
    pt.rocket.framework.utils.EventType GET_FORGET_PASSWORD_FORM_FALLBACK_EVENT -> z
    pt.rocket.framework.utils.EventType FORGET_PASSWORD_EVENT -> A
    pt.rocket.framework.utils.EventType REGISTER_ACCOUNT_EVENT -> B
    pt.rocket.framework.utils.EventType EDIT_ACCOUNT_EVENT -> C
    pt.rocket.framework.utils.EventType GET_NAVIGATION_LIST_COMPONENTS_EVENT -> D
    pt.rocket.framework.utils.EventType GET_TERMS_EVENT -> E
    pt.rocket.framework.utils.EventType GET_RATING_OPTIONS_EVENT -> F
    pt.rocket.framework.utils.EventType GET_PRODUCT_REVIEWS_EVENT -> G
    pt.rocket.framework.utils.EventType REVIEW_PRODUCT_EVENT -> H
    pt.rocket.framework.utils.EventType CHANGE_ITEM_QUANTITY_IN_SHOPPING_CART_EVENT -> I
    pt.rocket.framework.utils.EventType GET_FORMS_DATASET_LIST_EVENT -> J
    pt.rocket.framework.utils.EventType GET_API_INFO -> K
    pt.rocket.framework.utils.EventType GET_CUSTOMER -> L
    pt.rocket.framework.utils.EventType STORE_LOGIN -> M
    pt.rocket.framework.utils.EventType GET_MIN_ORDER_AMOUNT -> N
    pt.rocket.framework.utils.EventType GET_RESOLUTIONS -> O
    pt.rocket.framework.utils.EventType GET_CALL_TO_ORDER_PHONE -> P
    pt.rocket.framework.utils.EventType GET_PROMOTIONS -> Q
    pt.rocket.framework.utils.EventType TRACK_ORDER_EVENT -> R
    pt.rocket.framework.utils.EventType GET_SIGNUP_FORM_EVENT -> S
    pt.rocket.framework.utils.EventType GET_SIGNUP_FORM_FALLBACK_EVENT -> T
    pt.rocket.framework.utils.EventType SET_SIGNUP_EVENT -> U
    pt.rocket.framework.utils.EventType GET_POLL_FORM_EVENT -> V
    pt.rocket.framework.utils.EventType GET_POLL_FORM_FALLBACK_EVENT -> W
    pt.rocket.framework.utils.EventType SET_POLL_ANSWER_EVENT -> X
    pt.rocket.framework.utils.EventType GET_CREATE_ADDRESS_FORM_EVENT -> Y
    pt.rocket.framework.utils.EventType GET_CREATE_ADDRESS_FORM_FALLBACK_EVENT -> Z
    pt.rocket.framework.utils.EventType GET_EDIT_ADDRESS_FORM_EVENT -> aa
    pt.rocket.framework.utils.EventType GET_EDIT_ADDRESS_FORM_FALLBACK_EVENT -> ab
    pt.rocket.framework.utils.EventType GET_CUSTOMER_ADDRESSES_EVENT -> ac
    pt.rocket.framework.utils.EventType GET_BILLING_FORM_EVENT -> ad
    pt.rocket.framework.utils.EventType GET_DEFAULT_BILLING_ADDRESS_EVENT -> ae
    pt.rocket.framework.utils.EventType GET_DEFAULT_SHIPPING_ADDRESS_EVENT -> af
    pt.rocket.framework.utils.EventType CREATE_ADDRESS_EVENT -> ag
    pt.rocket.framework.utils.EventType EDIT_ADDRESS_EVENT -> ah
    pt.rocket.framework.utils.EventType SET_BILLING_ADDRESS_EVENT -> ai
    pt.rocket.framework.utils.EventType SET_SHIPPING_ADDRESS_EVENT -> aj
    pt.rocket.framework.utils.EventType GET_REGIONS_EVENT -> ak
    pt.rocket.framework.utils.EventType GET_CITIES_EVENT -> al
    pt.rocket.framework.utils.EventType GET_SHIPPING_METHODS_EVENT -> am
    pt.rocket.framework.utils.EventType SET_SHIPPING_METHOD_EVENT -> an
    pt.rocket.framework.utils.EventType GET_PAYMENT_METHODS_EVENT -> ao
    pt.rocket.framework.utils.EventType SET_PAYMENT_METHOD_EVENT -> ap
    pt.rocket.framework.utils.EventType GET_MY_ORDER_EVENT -> aq
    pt.rocket.framework.utils.EventType CHECKOUT_FINISH_EVENT -> ar
    pt.rocket.framework.utils.EventType NATIVE_CHECKOUT_AVAILABLE -> as
    pt.rocket.framework.utils.EventType ADD_VOUCHER -> at
    pt.rocket.framework.utils.EventType REMOVE_VOUCHER -> au
    pt.rocket.framework.utils.EventType SEARCH_PRODUCT -> av
    pt.rocket.framework.utils.EventType GET_CAMPAIGN_EVENT -> aw
    java.lang.String action -> ax
    java.lang.Integer cacheTime -> ay
    pt.rocket.framework.utils.EventType[] ENUM$VALUES -> az
    pt.rocket.framework.utils.EventType[] values() -> values
    pt.rocket.framework.utils.EventType valueOf(java.lang.String) -> valueOf
pt.rocket.framework.utils.GifDecoder -> btf:
    java.io.InputStream in -> a
    int status -> b
    int width -> c
    int height -> d
    boolean gctFlag -> e
    int gctSize -> f
    int loopCount -> g
    int[] gct -> h
    int[] lct -> i
    int[] act -> j
    int bgIndex -> k
    int bgColor -> l
    int lastBgColor -> m
    int pixelAspect -> n
    boolean lctFlag -> o
    boolean interlace -> p
    int lctSize -> q
    int ix -> r
    int iy -> s
    int iw -> t
    int ih -> u
    int lrx -> v
    int lry -> w
    int lrw -> x
    int lrh -> y
    android.graphics.Bitmap image -> z
    android.graphics.Bitmap lastBitmap -> A
    byte[] block -> B
    int blockSize -> C
    int dispose -> D
    int lastDispose -> E
    boolean transparency -> F
    int delay -> G
    int transIndex -> H
    short[] prefix -> I
    byte[] suffix -> J
    byte[] pixelStack -> K
    byte[] pixels -> L
    java.util.Vector frames -> M
    int frameCount -> N
    int getDelay(int) -> a
    int getFrameCount() -> a
    int getLoopCount() -> b
    void setPixels() -> c
    android.graphics.Bitmap getFrame(int) -> b
    int read(java.io.InputStream) -> a
    void decodeBitmapData() -> d
    boolean err() -> e
    void init() -> f
    int read() -> g
    int readBlock() -> h
    int[] readColorTable(int) -> c
    void readContents() -> i
    void readGraphicControlExt() -> j
    void readHeader() -> k
    void readBitmap() -> l
    void readLSD() -> m
    void readNetscapeExt() -> n
    int readShort() -> o
    void resetFrame() -> p
    void skip() -> q
pt.rocket.framework.utils.GifDecoder$GifFrame -> btg:
    android.graphics.Bitmap image -> a
    int delay -> b
pt.rocket.framework.utils.ImageResolutionHelper -> bth:
    java.lang.String TAG -> b
    java.util.WeakHashMap resolutionMap -> c
    android.content.Context CONTEXT -> a
    int init(android.content.Context) -> a
    void enableHelper(android.content.Context) -> b
    void disableHelper(android.content.Context) -> c
    pt.rocket.framework.objects.ImageResolution getBestResolution(java.lang.String) -> c
    java.lang.String getResolutionIdentifier(java.lang.String) -> a
    java.lang.String replaceResolution(java.lang.String) -> b
    java.lang.String getCurrentResolution(java.lang.String) -> d
pt.rocket.framework.utils.LoadingBarView -> pt.rocket.framework.utils.LoadingBarView:
    java.lang.String TAG -> c
    pt.rocket.framework.utils.GifDecoder mGifDecoder -> d
    android.graphics.Bitmap mTmpBitmap -> e
    android.os.Handler mHandler -> a
    java.lang.Thread mThread -> f
    java.lang.Runnable mUpdateResults -> b
    void initialize(java.io.InputStream) -> a
    void startRendering() -> a
    void stopRendering() -> b
    android.graphics.Bitmap access$0(pt.rocket.framework.utils.LoadingBarView) -> a
    pt.rocket.framework.utils.GifDecoder access$1() -> c
    void access$2(pt.rocket.framework.utils.LoadingBarView,android.graphics.Bitmap) -> a
pt.rocket.framework.utils.LoadingBarView$1 -> bti:
    pt.rocket.framework.utils.LoadingBarView this$0 -> a
    void run() -> run
pt.rocket.framework.utils.LoadingBarView$2 -> btj:
    pt.rocket.framework.utils.LoadingBarView this$0 -> a
    void run() -> run
pt.rocket.framework.utils.LogTagHelper -> btk:
    java.lang.String create(java.lang.Class) -> a
pt.rocket.framework.utils.MixpanelTracker -> btl:
    java.lang.String TAG -> a
    com.mixpanel.android.mpmetrics.MixpanelAPI mixpanel -> b
    com.mixpanel.android.mpmetrics.MixpanelAPI$People people -> c
    java.lang.String MIXPANEL_TOKEN -> d
    android.content.pm.PackageInfo pInfo -> e
    boolean isEnabled -> f
    boolean isStarted -> g
    int mShopId -> h
    org.json.JSONObject props -> i
    void startup(android.content.Context,int) -> a
    void launch(android.content.Context) -> a
    void login(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void loginWithFacebook(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> b
    void logout(android.content.Context) -> b
    void signup(android.content.Context,pt.rocket.framework.objects.Customer,java.lang.String) -> a
    void search(android.content.Context,java.lang.String,long) -> a
    void searchViewSorted(android.content.Context,java.lang.String,long,java.lang.String) -> a
    void trackSale(android.content.Context,java.lang.String,java.util.List) -> a
    void changeShop(android.content.Context,int) -> b
    void setPushNotification(android.content.Context,boolean) -> a
    void product(android.content.Context,pt.rocket.framework.objects.CompleteProduct,java.lang.String) -> a
    void productAddedToCart(android.content.Context,pt.rocket.framework.objects.CompleteProduct,pt.rocket.framework.objects.ProductSimple,java.lang.Double,java.lang.String) -> a
    void checkout(android.content.Context,java.util.List) -> a
    void trackCheckoutStep(android.content.Context,java.lang.String,int) -> a
    void trackSignUp(android.content.Context,java.lang.String) -> a
    void trackPaymentMethod(android.content.Context,java.lang.String,java.lang.String) -> a
    void trackNativeCheckoutError(android.content.Context,java.lang.String,java.lang.String) -> b
    void share(android.content.Context,android.content.Intent) -> a
    void listCategory(android.content.Context,java.lang.String,int) -> b
    void viewCart(android.content.Context,int) -> c
    void rate(android.content.Context,pt.rocket.framework.objects.CompleteProduct,pt.rocket.framework.objects.ProductReviewCommentCreated,java.util.HashMap) -> a
    void viewRate(android.content.Context,pt.rocket.framework.objects.CompleteProduct,float) -> a
    void flush() -> a
    void setProperty(java.lang.String,java.lang.String) -> a
    java.lang.String getPriceRange(java.lang.Double) -> a
    java.lang.String getShareProviderName(android.content.Context,android.content.Intent) -> b
pt.rocket.framework.utils.NewLoadingBarView -> pt.rocket.framework.utils.NewLoadingBarView:
    android.graphics.Movie mMovie -> a
    long mMovieStart -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
pt.rocket.framework.utils.PreInstallController -> btm:
    java.lang.String TAG -> a
    boolean init(android.content.Context) -> a
pt.rocket.framework.utils.ProductSort -> btn:
    pt.rocket.framework.utils.ProductSort NONE -> a
    pt.rocket.framework.utils.ProductSort POPULARITY -> b
    pt.rocket.framework.utils.ProductSort NAME -> c
    pt.rocket.framework.utils.ProductSort PRICE -> d
    pt.rocket.framework.utils.ProductSort BRAND -> e
    pt.rocket.framework.utils.ProductSort NEWIN -> f
    pt.rocket.framework.utils.ProductSort BESTRATING -> g
    int id -> h
    pt.rocket.framework.utils.ProductSort[] ENUM$VALUES -> i
    pt.rocket.framework.utils.ProductSort[] values() -> values
    pt.rocket.framework.utils.ProductSort valueOf(java.lang.String) -> valueOf
pt.rocket.framework.utils.ShopSelector -> bto:
    java.lang.String TAG -> a
    java.util.Locale sLocale -> b
    int sShopId -> c
    java.lang.String sCountryName -> d
    java.lang.String sShopName -> e
    void init(android.content.Context,int,boolean) -> a
    void setLocale(android.content.Context,java.lang.String) -> a
    void resetConfiguration(android.content.Context) -> a
    int getShopId() -> a
    java.lang.String getShopName() -> b
    java.lang.String getCountryName() -> c
pt.rocket.framework.utils.SingletonMap -> btp:
    java.util.LinkedHashMap singletons -> a
    void add(java.lang.Object) -> a
    java.lang.Object get(java.lang.Class) -> a
    java.util.Collection values() -> a
pt.rocket.framework.utils.Utils -> btq:
    java.lang.String TAG -> d
    java.lang.String password -> a
    int iterationCount -> b
    int keyLength -> c
    java.lang.String uniqueMD5(java.lang.String) -> a
    java.lang.String cleanMD5(java.lang.String) -> b
pt.rocket.framework.utils.WindowHelper -> btr:
    java.lang.String TAG -> a
    int getWidth(android.content.Context) -> a
    android.os.Message getMeasures(android.content.Context) -> b
pt.rocket.framework.worker.RequestWorker -> bts:
    java.lang.String TAG -> a
    android.net.Uri uri -> b
    pt.rocket.framework.enums.RequestType type -> c
    android.content.ContentValues formData -> d
    android.os.Handler mHandler -> e
    android.os.Bundle mBundle -> f
    android.content.Context context -> g
    int[] $SWITCH_TABLE$pt$rocket$framework$enums$RequestType -> h
    void run() -> run
    int[] $SWITCH_TABLE$pt$rocket$framework$enums$RequestType() -> a
pt.rocket.helpers.BaseHelper -> btt:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle checkResponseForStatus(android.os.Bundle) -> b
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
pt.rocket.helpers.ClearShoppingCartHelper -> btu:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetApiInfoHelper -> btv:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    void clearOutDatedMainSections(java.util.List,pt.rocket.framework.utils.EventType) -> a
    java.util.ArrayList parseSections(org.json.JSONArray) -> a
    java.util.ArrayList checkSections(java.util.List,java.util.List) -> a
    pt.rocket.framework.objects.Section getSection(java.lang.String,java.util.List) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetCallToOrderHelper -> btw:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetCategoriesHelper -> btx:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetChangePasswordHelper -> bty:
    java.lang.String TAG -> a
    android.content.ContentValues savedValues -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetCustomerHelper -> btz:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetFormsDatasetListHelper -> bua:
    java.lang.String TAG -> a
    java.lang.String JSON_ID_TAG -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
pt.rocket.helpers.GetInitFormHelper -> bub:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetProductHelper -> buc:
    java.lang.String TAG -> b
    pt.rocket.framework.objects.ProductsPage mProductsPage -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetProductReviewsHelper -> bud:
    java.lang.String TAG -> b
    pt.rocket.framework.objects.ProductsPage mProductsPage -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetProductsHelper -> bue:
    java.lang.String TAG -> b
    pt.rocket.framework.objects.ProductsPage mProductsPage -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    java.lang.String getRequestURI(java.lang.String,java.lang.String,int,int,int,int,android.content.ContentValues) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetPromotionsHelper -> buf:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetRatingsHelper -> bug:
    java.lang.String TAG -> b
    pt.rocket.framework.objects.ProductsPage mProductsPage -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetSearchCategoryHelper -> buh:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetSearchProductHelper -> bui:
    java.lang.String TAG -> b
    pt.rocket.framework.utils.EventType type -> c
    pt.rocket.framework.objects.ProductsPage mProductsPage -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetSearchSuggestionHelper -> buj:
    java.lang.String TAG -> a
    java.lang.String mQuery -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    void saveSearchQuery(java.lang.String) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetSearchSuggestionHelper$1 -> buk:
    java.lang.String val$query -> a
    void run() -> run
pt.rocket.helpers.GetShoppingCartAddItemHelper -> bul:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetShoppingCartChangeItemQuantityHelper -> bum:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetShoppingCartItemsHelper -> bun:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetShoppingCartRemoveItemHelper -> buo:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetTeasersHelper -> bup:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetTermsConditionsHelper -> buq:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.GetTrackOrderHelper -> bur:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.NavigationListHelper -> bus:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.RemoveVoucherHelper -> but:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.ReviewProductHelper -> buu:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.SetVoucherHelper -> buv:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.address.GetCitiesHelper -> buw:
    java.lang.String TAG -> c
    java.lang.String REGION_ID_TAG -> a
    java.lang.String CUSTOM_TAG -> b
    pt.rocket.framework.utils.EventType type -> d
    java.lang.String customTag -> e
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.address.GetFormAddAddressHelper -> bux:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.address.GetFormEditAddressHelper -> buy:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.address.GetRegionsHelper -> buz:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.address.SetBillingAddressHelper -> bva:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.address.SetEditedAddressHelper -> bvb:
    java.lang.String TAG -> a
    android.os.Parcelable contentValues -> b
    pt.rocket.framework.utils.EventType type -> c
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.address.SetNewAddressHelper -> bvc:
    java.lang.String TAG -> a
    android.os.Parcelable contentValues -> b
    pt.rocket.framework.utils.EventType type -> c
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.campaign.GetCampaignHelper -> bvd:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.checkout.CheckoutFinishHelper -> bve:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.checkout.GetBillingFormHelper -> bvf:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.checkout.GetNativeCheckoutAvailableHelper -> bvg:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.checkout.GetPaymentMethodsHelper -> bvh:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.checkout.GetPollFormHelper -> bvi:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    pt.rocket.framework.utils.EventType fallback_type -> c
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.checkout.GetShippingMethodsHelper -> bvj:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.checkout.SetPaymentMethodHelper -> bvk:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.checkout.SetPollAnswerHelper -> bvl:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.checkout.SetShippingMethodHelper -> bvm:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.session.GetFacebookLoginHelper -> bvn:
    java.lang.String TAG -> c
    boolean saveCredentials -> a
    android.content.ContentValues contentValues -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.session.GetForgotPasswordFormHelper -> bvo:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.session.GetForgotPasswordHelper -> bvp:
    java.lang.String TAG -> a
    android.content.ContentValues savedValues -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.session.GetLoginFormHelper -> bvq:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.session.GetLoginHelper -> bvr:
    java.lang.String TAG -> c
    boolean saveCredentials -> a
    android.content.ContentValues contentValues -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.session.GetLogoutHelper -> bvs:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
pt.rocket.helpers.session.GetRegisterFormHelper -> bvt:
    java.lang.String TAG -> a
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.session.GetRegisterHelper -> bvu:
    java.lang.String TAG -> c
    boolean saveCredentials -> a
    android.content.ContentValues contentValues -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.session.GetSignupFormHelper -> bvv:
    java.lang.String TAG -> a
    pt.rocket.framework.utils.EventType type -> b
    pt.rocket.framework.utils.EventType fallback -> c
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.helpers.session.SetSignupHelper -> bvw:
    java.lang.String TAG -> c
    pt.rocket.framework.utils.EventType type -> d
    boolean saveCredentials -> a
    android.content.ContentValues contentValues -> b
    android.os.Bundle generateRequestBundle(android.os.Bundle) -> a
    android.os.Bundle parseResponseBundle(android.os.Bundle,org.json.JSONObject) -> a
    android.os.Bundle parseErrorBundle(android.os.Bundle) -> d
    android.os.Bundle parseResponseErrorBundle(android.os.Bundle) -> c
pt.rocket.interfaces.IResponseCallback -> bvx:
    void onRequestComplete(android.os.Bundle) -> b_
    void onRequestError(android.os.Bundle) -> a_
pt.rocket.pojo.DynamicForm -> bvy:
    java.lang.String TAG -> a
    android.view.ViewGroup base -> b
    java.util.List controls -> c
    int lastID -> d
    pt.rocket.forms.Form form -> e
    android.view.View$OnFocusChangeListener focus_listener -> f
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener itemSelected_listener -> g
    android.text.TextWatcher text_watcher -> h
    void addControl(pt.rocket.pojo.DynamicFormItem,android.view.ViewGroup$LayoutParams) -> a
    java.util.Iterator getIterator() -> a
    pt.rocket.pojo.DynamicFormItem getItem(int) -> a
    pt.rocket.pojo.DynamicFormItem getItemByKey(java.lang.String) -> a
    android.view.ViewGroup getContainer() -> b
    int getNextId() -> c
    pt.rocket.forms.Form getForm() -> d
    void setForm(pt.rocket.forms.Form) -> a
    boolean validate() -> e
    boolean checkRequired() -> f
    android.content.ContentValues save() -> g
    int getSelectedValueIndex() -> h
    int getControlsCount() -> i
    void setOnFocusChangeListener(android.view.View$OnFocusChangeListener) -> a
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> a
    void setTextWatcher(android.text.TextWatcher) -> a
    java.util.Iterator iterator() -> iterator
pt.rocket.pojo.DynamicFormItem -> bvz:
    java.lang.String TAG -> a
    android.content.Context context -> b
    pt.rocket.pojo.DynamicForm parent -> c
    float scale -> d
    pt.rocket.forms.IFormField entry -> e
    android.view.View errorControl -> f
    android.view.View dataControl -> g
    android.view.View control -> h
    org.holoeverywhere.widget.TextView errorTextControl -> i
    org.holoeverywhere.widget.TextView mandatoryControl -> j
    java.lang.String errorText -> k
    android.view.View$OnFocusChangeListener editFocusListener -> l
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener spinnerSelectedListener -> m
    android.text.TextWatcher textWatcher -> n
    pt.rocket.utils.dialogfragments.DialogDatePickerFragment dialogDate -> o
    int errorColor -> p
    float screenDensity -> q
    java.util.ArrayList childDynamicForm -> r
    int[] $SWITCH_TABLE$pt$rocket$utils$InputType -> s
    java.lang.String getName() -> a
    java.lang.String getKey() -> b
    java.lang.String getMessage() -> c
    android.view.View getControl() -> d
    android.view.View getEditControl() -> e
    android.view.View getMandatoryControl() -> f
    boolean getMandatory() -> g
    void setErrorText(java.lang.String) -> a
    pt.rocket.utils.InputType getType() -> h
    boolean isRadioGroupLayoutVertical() -> i
    android.content.ContentValues getSubFormsValues() -> j
    int getSubFormsSelectedIndex() -> k
    java.lang.String getRadioGroupLayoutVerticalSelectedFieldName() -> l
    void loadState(android.os.Bundle) -> a
    void setSelectedPaymentMethod(int) -> a
    void loadState(android.content.ContentValues) -> a
    java.lang.String getValue() -> m
    void saveState(android.os.Bundle) -> b
    boolean Validate() -> n
    boolean validateStringToPattern(java.lang.String) -> c
    void ShowError(java.lang.String) -> b
    boolean ValidateRequired() -> o
    void setOnFocusChangeListener(android.view.View$OnFocusChangeListener) -> a
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> a
    void setTextWatcher(android.text.TextWatcher) -> a
    void buildCheckBox(android.widget.RelativeLayout,android.widget.RelativeLayout$LayoutParams,int) -> a
    void buildCheckBoxForTerms(android.widget.RelativeLayout,android.widget.RelativeLayout$LayoutParams,int) -> b
    void buildRadioGroup(android.widget.RelativeLayout,android.widget.RelativeLayout$LayoutParams,int) -> c
    void buildList(android.widget.RelativeLayout,android.widget.RelativeLayout$LayoutParams,int) -> d
    void buildDate(android.widget.RelativeLayout,android.widget.RelativeLayout$LayoutParams,int) -> e
    void buildText(android.widget.RelativeLayout,android.widget.RelativeLayout$LayoutParams,int) -> f
    void buildHide(android.widget.RelativeLayout,android.widget.RelativeLayout$LayoutParams,int) -> g
    void buildControl() -> r
    void createSpinnerForRadioGroup(int,android.widget.RelativeLayout$LayoutParams,android.widget.RelativeLayout) -> a
    void createPollRadioGroup(int,android.widget.RelativeLayout$LayoutParams,android.widget.RelativeLayout) -> b
    void createRadioGroup(int,android.widget.RelativeLayout$LayoutParams,android.widget.RelativeLayout) -> c
    void createRadioGroupVertical(int,android.widget.RelativeLayout$LayoutParams,android.widget.RelativeLayout) -> d
    void addSubFormFieldValues(android.content.ContentValues) -> b
    android.view.View createErrorControl(int,int) -> a
    android.view.View createTextDataControl() -> s
    android.widget.RelativeLayout createTextDataContainer(int) -> b
    int[] $SWITCH_TABLE$pt$rocket$utils$InputType() -> p
    pt.rocket.forms.IFormField access$1(pt.rocket.pojo.DynamicFormItem) -> a
    org.holoeverywhere.widget.TextView access$2(pt.rocket.pojo.DynamicFormItem) -> b
    java.lang.String access$3() -> q
    android.view.View access$4(pt.rocket.pojo.DynamicFormItem) -> c
    pt.rocket.utils.dialogfragments.DialogDatePickerFragment access$5(pt.rocket.pojo.DynamicFormItem) -> d
    android.content.Context access$6(pt.rocket.pojo.DynamicFormItem) -> e
    android.view.View access$7(pt.rocket.pojo.DynamicFormItem) -> f
    android.view.View$OnFocusChangeListener access$8(pt.rocket.pojo.DynamicFormItem) -> g
    android.text.TextWatcher access$9(pt.rocket.pojo.DynamicFormItem) -> h
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener access$10(pt.rocket.pojo.DynamicFormItem) -> i
pt.rocket.pojo.DynamicFormItem$1 -> bwa:
    pt.rocket.pojo.DynamicFormItem this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.pojo.DynamicFormItem$10 -> bwb:
    pt.rocket.pojo.DynamicFormItem this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
pt.rocket.pojo.DynamicFormItem$2 -> bwc:
    pt.rocket.pojo.DynamicFormItem this$0 -> a
    void onDatePickerDialogSelect(java.lang.String,int,int,int) -> a
pt.rocket.pojo.DynamicFormItem$3 -> bwd:
    pt.rocket.pojo.DynamicFormItem this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.pojo.DynamicFormItem$4 -> bwe:
    pt.rocket.pojo.DynamicFormItem this$0 -> a
    java.lang.CharSequence val$editText -> b
    void onFocusChange(android.view.View,boolean) -> onFocusChange
pt.rocket.pojo.DynamicFormItem$5 -> bwf:
    pt.rocket.pojo.DynamicFormItem this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
pt.rocket.pojo.DynamicFormItem$6 -> bwg:
    pt.rocket.pojo.DynamicFormItem this$0 -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
pt.rocket.pojo.DynamicFormItem$7 -> bwh:
    pt.rocket.pojo.DynamicFormItem this$0 -> a
    void DataSetReceived(java.util.Map) -> a
pt.rocket.pojo.DynamicFormItem$8 -> bwi:
    pt.rocket.pojo.DynamicFormItem this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
pt.rocket.pojo.DynamicFormItem$9 -> bwj:
    pt.rocket.pojo.DynamicFormItem this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
pt.rocket.pojo.MetaFormExtractor -> bwk:
    java.lang.String TAG -> a
    java.util.HashMap metaFieldMapping -> b
    java.util.HashMap metaFieldInputType -> c
    java.util.ArrayList generateMetaFields(java.util.ArrayList) -> a
    java.util.ArrayList generateMetaField(java.util.ArrayList,java.lang.String) -> a
    java.util.ArrayList straightCopyFields(java.util.ArrayList) -> c
    void dumpIFormField(java.util.ArrayList) -> b
pt.rocket.preferences.ShopPreferences -> bwl:
    java.lang.String TAG -> a
    int getShopId(android.content.Context) -> a
pt.rocket.utils.BitmapLruCache -> bwm:
    int getDefaultLruCacheSize() -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> b
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    void putBitmap(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> b
pt.rocket.utils.CheckVersion -> bwn:
    java.lang.String TAG -> a
    long sLastUpdate -> b
    pt.rocket.utils.CheckVersion$UpdateStatus checkResult -> c
    android.content.Context sContext -> d
    int unwantedVersion -> e
    android.support.v4.app.DialogFragment sDialog -> f
    android.content.SharedPreferences sSharedPrefs -> g
    boolean sNeedsToShowDialog -> h
    android.support.v4.app.FragmentManager fm -> i
    void init(android.content.Context) -> a
    boolean run(android.content.Context) -> b
    boolean needsToShowDialog() -> a
    void showDialog(android.support.v4.app.FragmentActivity) -> a
    boolean runEvents(android.content.Context) -> c
    android.support.v4.app.DialogFragment createOptionalUpdateDialog(android.app.Activity) -> b
    android.support.v4.app.DialogFragment createForcedUpdateDialog(android.app.Activity) -> c
    boolean checkVersionInfo() -> f
    pt.rocket.framework.objects.Version getVersion(android.content.Context) -> e
    void updateUnwantedVersionFromPrefs() -> g
    void storeUpdateAsUnwanted() -> h
    boolean getRemindMeLater() -> i
    void storeRemindMeLater() -> j
    void clearDialogSeenInLaunch(android.content.Context) -> d
    java.lang.String createUpdateUrl() -> k
    void goShop(android.app.Activity) -> d
    android.support.v4.app.DialogFragment access$0() -> b
    void access$1() -> c
    void access$2() -> d
    void access$3(android.app.Activity) -> a
    android.support.v4.app.FragmentManager access$4() -> e
pt.rocket.utils.CheckVersion$1 -> bwo:
    void run() -> run
pt.rocket.utils.CheckVersion$ForceUpdateClickListener -> bwp:
    android.app.Activity mActivity -> a
    void onClick(android.view.View) -> onClick
pt.rocket.utils.CheckVersion$OptionalUpdateClickListener -> bwq:
    android.app.Activity mActivity -> a
    void onClick(android.view.View) -> onClick
pt.rocket.utils.CheckVersion$UpdateStatus -> bwr:
    pt.rocket.utils.CheckVersion$UpdateStatus NOT_AVAILBLE -> a
    pt.rocket.utils.CheckVersion$UpdateStatus FORCED_AVAILABLE -> b
    pt.rocket.utils.CheckVersion$UpdateStatus OPTIONAL_AVAILABLE -> c
    pt.rocket.utils.CheckVersion$UpdateStatus OPTIONAL_AVAILABLE_IGNORED -> d
    pt.rocket.utils.CheckVersion$UpdateStatus[] ENUM$VALUES -> e
    pt.rocket.utils.CheckVersion$UpdateStatus[] values() -> values
    pt.rocket.utils.CheckVersion$UpdateStatus valueOf(java.lang.String) -> valueOf
pt.rocket.utils.CheckableRelativeLayout -> pt.rocket.utils.CheckableRelativeLayout:
    java.lang.String TAG -> a
    boolean isChecked -> b
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
pt.rocket.utils.CheckoutStepManager -> bws:
    java.lang.String TAG -> a
    pt.rocket.controllers.fragments.FragmentType getNextCheckoutStep(org.json.JSONObject) -> a
    pt.rocket.controllers.fragments.FragmentType getNextFragment(java.lang.String) -> a
pt.rocket.utils.DeepLinkManager -> bwt:
    java.lang.String TAG -> a
    android.os.Bundle loadExternalDeepLink(android.content.Context,android.net.Uri) -> a
    java.util.List isValidLink(android.content.Context,java.lang.String,java.util.List) -> a
    android.os.Bundle loadDeepViewTag(android.content.Context,java.util.List,android.net.Uri) -> a
    android.os.Bundle processCategoryLink(java.lang.String) -> a
    android.os.Bundle processTrackOrderLink(java.lang.String) -> b
    android.os.Bundle processSearchTermLink(java.lang.String) -> c
    android.os.Bundle processCartLink(java.util.List) -> a
    android.os.Bundle processPdvLink(java.util.List,android.net.Uri) -> a
    android.os.Bundle processLoginLink() -> a
    android.os.Bundle processRegisterLink() -> b
    android.os.Bundle processHomeLink() -> c
    android.os.Bundle processCatalogLink(java.lang.String) -> d
    void getAdxValues(android.os.Bundle,android.net.Uri) -> a
    void loadCountryCode(android.content.Context,java.lang.String) -> a
    int loadSavedShopId(android.content.Context) -> a
    void locateCountryCode(android.content.Context,java.lang.String) -> b
    boolean isSupporedCountryCode(android.content.Context,java.lang.String) -> c
    void saveShopId(android.content.Context,int) -> a
pt.rocket.utils.FragmentCommunicator -> bwu:
    pt.rocket.utils.FragmentCommunicator mProductDetailsFragmentCommunicator -> b
    pt.rocket.view.fragments.BaseFragment$OnFragmentActivityInteraction mActivityCallback -> c
    java.util.ArrayList mFragmentsCallback -> d
    java.util.ArrayList mFragmentsCallbackNames -> e
    java.lang.String ACTION_IDENTIFIER -> a
    pt.rocket.framework.objects.CompleteProduct currentProduct -> f
    int currentImagePosition -> g
    pt.rocket.utils.FragmentCommunicator getInstance() -> a
    void destroyInstance() -> b
    void startFragmentsCallBacks(android.support.v4.app.Fragment[]) -> a
    void notifyTarget(android.support.v4.app.Fragment,android.os.Bundle,int) -> a
pt.rocket.utils.FragmentCommunicatorForProduct -> bwv:
    pt.rocket.utils.FragmentCommunicatorForProduct mProductDetailsFragmentCommunicator -> b
    pt.rocket.view.fragments.BaseFragment$OnFragmentActivityInteraction mActivityCallback -> c
    java.util.ArrayList mFragmentsCallback -> d
    java.util.ArrayList mFragmentsCallbackNames -> e
    java.lang.String ACTION_IDENTIFIER -> a
    pt.rocket.framework.objects.CompleteProduct currentProduct -> f
    int currentImagePosition -> g
    pt.rocket.utils.FragmentCommunicatorForProduct getInstance() -> a
    void destroyInstance() -> b
    void startFragmentsCallBacks(android.support.v4.app.Fragment[]) -> a
    void updateCurrentProduct(pt.rocket.framework.objects.CompleteProduct) -> a
    pt.rocket.framework.objects.CompleteProduct getCurrentProduct() -> c
    void notifyOthers(int,android.os.Bundle) -> a
    void notifyTarget(android.support.v4.app.Fragment,android.os.Bundle,int) -> a
pt.rocket.utils.GenericRadioGroup -> pt.rocket.utils.GenericRadioGroup:
    java.lang.String TAG -> a
    java.util.ArrayList mRadioButtons -> b
    int mCurrentCheckedButtonPos -> c
    android.widget.RadioGroup$OnCheckedChangeListener mOnCheckedChangeListener -> d
    pt.rocket.utils.GenericRadioGroup$CheckedStateTracker mRadioChildOnCheckedChangeListener -> e
    void init() -> d
    void addView(android.view.View,java.lang.String) -> a
    void addView(android.view.View) -> addView
    void clearCheckGroup() -> a
    void removeAllViews() -> removeAllViews
    android.view.View locateRadioButtons(android.view.ViewGroup,android.view.View) -> a
    android.widget.RadioButton stampRadioButton(android.widget.RadioButton) -> a
    void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener) -> setOnCheckedChangeListener
    java.lang.String generateViewTag() -> e
    int getRadioChildCount() -> getRadioChildCount
    int getCheckedPosition() -> getCheckedPosition
    java.lang.Object getCheckedTag() -> getCheckedTag
    void onClick(android.view.View) -> onClick
    void checkRadioWithTag(java.lang.String) -> a
    void setChecked(android.widget.RadioButton,boolean) -> a
    void notifyOnCheckedChangeListener() -> f
    void setCheckedItem(int) -> setCheckedItem
    boolean isValidateGroup() -> b
    java.lang.String access$0() -> c
    void access$1(pt.rocket.utils.GenericRadioGroup,java.lang.String) -> a
    void access$2(pt.rocket.utils.GenericRadioGroup) -> a
pt.rocket.utils.GenericRadioGroup$CheckedStateTracker -> bww:
    pt.rocket.utils.GenericRadioGroup this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
pt.rocket.utils.HockeyStartup -> bwx:
    java.lang.String TAG -> a
    int HOCKEY_APP_TOKEN_RES -> b
    javax.security.auth.x500.X500Principal KEY_PRINCIPAL_DEBUG -> c
    android.os.Handler sHandler -> d
    boolean sDialogWasStarted -> e
    java.lang.Runnable sStartRunnable -> f
    android.app.Activity sActivity -> g
    net.hockeyapp.android.UpdateManagerListener sUml -> h
    net.hockeyapp.android.CrashManagerListener sCml -> i
    android.view.Window$Callback sCallback -> j
    void register(android.app.Activity) -> a
    boolean isDevEnvironment(android.content.Context) -> a
    boolean isSplashRequired(android.content.Context) -> b
    int checkSignatureForUpdate(android.content.Context) -> c
    java.lang.String calcFingerPrint(java.security.cert.X509Certificate) -> a
    java.lang.String access$0() -> a
    android.os.Handler access$1() -> b
    java.lang.Runnable access$2() -> c
    void access$3(boolean) -> a
    android.app.Activity access$4() -> d
    boolean access$5() -> e
pt.rocket.utils.HockeyStartup$1 -> bwy:
    void onNoUpdateAvailable() -> c
    void onUpdateAvailable() -> d
pt.rocket.utils.HockeyStartup$2 -> bwz:
    java.lang.Boolean ignoreDefaultHandler() -> a
    java.lang.Boolean onCrashesFound() -> e
    void onCrashesSent() -> f
    void onCrashesNotSent() -> g
pt.rocket.utils.HockeyStartup$3 -> bxa:
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    boolean onSearchRequested() -> onSearchRequested
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    void onContentChanged() -> onContentChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
pt.rocket.utils.HorizontalListView -> pt.rocket.utils.HorizontalListView:
    java.lang.String TAG -> f
    boolean mAlwaysOverrideTouch -> a
    android.widget.ListAdapter mAdapter -> b
    int mLeftViewIndex -> g
    int mRightViewIndex -> h
    int mCurrentX -> c
    int mNextX -> d
    int mMaxX -> i
    int mDisplayOffset -> j
    android.widget.Scroller mScroller -> e
    android.view.GestureDetector mGesture -> k
    java.util.Queue mRemovedViewQueue -> l
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelected -> m
    android.widget.AdapterView$OnItemClickListener mOnItemClicked -> n
    android.widget.AdapterView$OnItemLongClickListener mOnItemLongClicked -> o
    boolean mDataChanged -> p
    int mChildWidth -> q
    int mChildHeight -> r
    int mSelected -> s
    int mOldSelected -> t
    boolean mLayoutBlocksChanges -> u
    int mContentWidth -> v
    java.lang.Runnable mRequestLayoutRunnable -> w
    android.database.DataSetObserver mDataObserver -> x
    android.view.GestureDetector$OnGestureListener mOnGesture -> y
    void initView() -> a
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    android.widget.ListAdapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void reset() -> b
    void clearSelection() -> c
    void setSelection(int) -> setSelection
    void addAndMeasureChild(android.view.View,int) -> a
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    void fillList(int) -> a
    void fillListRight(int,int) -> a
    void fillListLeft(int,int) -> b
    void removeNonVisibleItems(int) -> b
    void positionItems(int) -> c
    void scrollToInt(int) -> d
    void setPosition(int) -> setPosition
    void setPositionInt(int) -> setPositionInt
    int getPosition() -> getPosition
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    boolean onDown(android.view.MotionEvent) -> a
    boolean isChildFullyVisible(android.view.View) -> c
    int computeTargetPosition(int) -> e
    void setSelectedItem(int,int) -> setSelectedItem
    boolean setSelectItemInt(int) -> f
    void updateSelected() -> d
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(pt.rocket.utils.HorizontalListView,boolean) -> a
    void access$3(pt.rocket.utils.HorizontalListView) -> a
    void access$4(pt.rocket.utils.HorizontalListView) -> b
    android.widget.AdapterView$OnItemClickListener access$5(pt.rocket.utils.HorizontalListView) -> c
    int access$6(pt.rocket.utils.HorizontalListView) -> d
    android.widget.AdapterView$OnItemSelectedListener access$7(pt.rocket.utils.HorizontalListView) -> e
    android.widget.AdapterView$OnItemLongClickListener access$8(pt.rocket.utils.HorizontalListView) -> f
pt.rocket.utils.HorizontalListView$1 -> bxb:
    pt.rocket.utils.HorizontalListView this$0 -> a
    void run() -> run
pt.rocket.utils.HorizontalListView$2 -> bxc:
    pt.rocket.utils.HorizontalListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
pt.rocket.utils.HorizontalListView$3 -> bxd:
    pt.rocket.utils.HorizontalListView this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean isEventWithinView(android.view.MotionEvent,android.view.View) -> a
pt.rocket.utils.InputType -> bxe:
    pt.rocket.utils.InputType text -> a
    pt.rocket.utils.InputType number -> b
    pt.rocket.utils.InputType password -> c
    pt.rocket.utils.InputType radioGroup -> d
    pt.rocket.utils.InputType checkBox -> e
    pt.rocket.utils.InputType email -> f
    pt.rocket.utils.InputType date -> g
    pt.rocket.utils.InputType meta -> h
    pt.rocket.utils.InputType metadate -> i
    pt.rocket.utils.InputType semiRequired -> j
    pt.rocket.utils.InputType list -> k
    pt.rocket.utils.InputType hide -> l
    pt.rocket.utils.InputType checkBoxList -> m
    pt.rocket.utils.InputType[] ENUM$VALUES -> n
    pt.rocket.utils.InputType[] values() -> values
    pt.rocket.utils.InputType valueOf(java.lang.String) -> valueOf
pt.rocket.utils.JumiaCatalogViewPager -> pt.rocket.utils.JumiaCatalogViewPager:
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
pt.rocket.utils.JumiaViewPager -> pt.rocket.utils.JumiaViewPager:
    boolean isPagingEnabled -> a
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setPagingEnabled(boolean) -> setPagingEnabled
    void toggleJumiaScroller(boolean) -> a
    void setJumiaScroller(boolean) -> setJumiaScroller
pt.rocket.utils.JumiaViewPager$JumiaScroller -> bxf:
    pt.rocket.utils.JumiaViewPager this$0 -> a
    void startScroll(int,int,int,int,int) -> startScroll
pt.rocket.utils.JumiaViewPager$JumiaScrollerAnimated -> bxg:
    pt.rocket.utils.JumiaViewPager this$0 -> a
    void startScroll(int,int,int,int,int) -> startScroll
pt.rocket.utils.JumiaViewPagerWithZoom -> pt.rocket.utils.JumiaViewPagerWithZoom:
    boolean isPagingEnabled -> a
    java.lang.String TAG -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setPagingEnabled(boolean) -> setPagingEnabled
    void toggleJumiaScroller(boolean) -> a
    void setJumiaScroller(boolean) -> setJumiaScroller
pt.rocket.utils.JumiaViewPagerWithZoom$JumiaScroller -> bxh:
    pt.rocket.utils.JumiaViewPagerWithZoom this$0 -> a
    void startScroll(int,int,int,int,int) -> startScroll
pt.rocket.utils.JumiaViewPagerWithZoom$JumiaScrollerAnimated -> bxi:
    pt.rocket.utils.JumiaViewPagerWithZoom this$0 -> a
    void startScroll(int,int,int,int,int) -> startScroll
pt.rocket.utils.LocationHelper -> bxj:
    java.lang.String TAG -> b
    pt.rocket.utils.LocationHelper locationHelper -> c
    android.content.Context context -> d
    android.os.Handler callback -> e
    android.os.Handler timeoutHandle -> f
    boolean locationReceived -> g
    java.lang.Runnable timeoutRunnable -> a
    pt.rocket.utils.LocationHelper getInstance() -> a
    void autoCountrySelection(android.content.Context,android.os.Handler) -> a
    boolean getCountryFromNetwork(android.telephony.TelephonyManager) -> a
    boolean getCountryFromSim(android.telephony.TelephonyManager) -> b
    boolean getContryFromLastKnownLocation(android.location.LocationManager) -> a
    boolean getCountryFromCurrentLocation(android.location.LocationManager) -> b
    java.lang.String getBestLocationProvider(android.location.LocationManager) -> c
    boolean checkConnection() -> c
    boolean isCountryAvailable(java.lang.String) -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    java.lang.String getCountryCodeFomGeoCoder(double,double) -> a
    void sendUserInteractionMessage(pt.rocket.framework.utils.EventType,pt.rocket.framework.ErrorCode) -> a
    void sendInitializeMessage() -> d
    java.lang.String access$0() -> b
    boolean access$1(pt.rocket.utils.LocationHelper) -> a
    android.content.Context access$2(pt.rocket.utils.LocationHelper) -> b
    void access$3(pt.rocket.utils.LocationHelper,pt.rocket.framework.utils.EventType,pt.rocket.framework.ErrorCode) -> a
pt.rocket.utils.LocationHelper$1 -> bxk:
    pt.rocket.utils.LocationHelper this$0 -> a
    void run() -> run
pt.rocket.utils.MyHorizontalScrollView -> pt.rocket.utils.MyHorizontalScrollView:
    void init(android.content.Context) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
pt.rocket.utils.MyMenuItem -> bxl:
    pt.rocket.utils.MyMenuItem SHARE -> a
    pt.rocket.utils.MyMenuItem BUY_ALL -> b
    pt.rocket.utils.MyMenuItem SEARCH -> c
    pt.rocket.utils.MyMenuItem SEARCH_BAR -> d
    int resId -> e
    pt.rocket.utils.MyMenuItem[] ENUM$VALUES -> f
    pt.rocket.utils.MyMenuItem[] values() -> values
    pt.rocket.utils.MyMenuItem valueOf(java.lang.String) -> valueOf
pt.rocket.utils.NavigationAction -> bxm:
    pt.rocket.utils.NavigationAction LoginOut -> a
    pt.rocket.utils.NavigationAction Basket -> b
    pt.rocket.utils.NavigationAction Brands -> c
    pt.rocket.utils.NavigationAction Search -> d
    pt.rocket.utils.NavigationAction Categories -> e
    pt.rocket.utils.NavigationAction Home -> f
    pt.rocket.utils.NavigationAction MyAccount -> g
    pt.rocket.utils.NavigationAction Sales -> h
    pt.rocket.utils.NavigationAction Configurator -> i
    pt.rocket.utils.NavigationAction Products -> j
    pt.rocket.utils.NavigationAction Settings -> k
    pt.rocket.utils.NavigationAction Country -> l
    pt.rocket.utils.NavigationAction TrackOrder -> m
    pt.rocket.utils.NavigationAction Unknown -> n
    pt.rocket.utils.NavigationAction Checkout -> o
    java.lang.String action -> p
    pt.rocket.utils.NavigationAction[] ENUM$VALUES -> q
    pt.rocket.utils.NavigationAction byAction(java.lang.String) -> a
    pt.rocket.utils.NavigationAction[] values() -> values
    pt.rocket.utils.NavigationAction valueOf(java.lang.String) -> valueOf
pt.rocket.utils.OnActivityFragmentInteraction -> bxn:
    void notifyFragment(android.os.Bundle) -> c
pt.rocket.utils.PreferenceListFragment -> bxo:
    java.lang.String TAG -> i
    android.preference.PreferenceManager mPreferenceManager -> Y
    android.os.Handler mHandler -> Z
    android.widget.ListView lv -> aa
    int xmlId -> ab
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroyView() -> f
    void onCreate(android.os.Bundle) -> a
    void onStop() -> e
    void onDestroy() -> v
    void onSaveInstanceState(android.os.Bundle) -> e
    void onActivityResult(int,int,android.content.Intent) -> a
    void postBindPreferences() -> b
    void bindPreferences() -> H
    android.preference.PreferenceManager onCreatePreferenceManager() -> I
    void setPreferenceScreen(android.preference.PreferenceScreen) -> a
    android.preference.PreferenceScreen getPreferenceScreen() -> a
    void addPreferencesFromResource(int) -> b
    void access$0(pt.rocket.utils.PreferenceListFragment) -> a
pt.rocket.utils.PreferenceListFragment$1 -> bxp:
    pt.rocket.utils.PreferenceListFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
pt.rocket.utils.PreferenceListFragment$OnPreferenceAttachedListener -> bxq:
    void onPreferenceAttached(android.preference.PreferenceScreen,int) -> a
pt.rocket.utils.PushNotificationIntentReceiver -> pt.rocket.utils.PushNotificationIntentReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
pt.rocket.utils.RadioGroupLayout -> pt.rocket.utils.RadioGroupLayout:
    java.lang.String TAG -> a
    java.util.ArrayList mItems -> b
    int mDefaultSelected -> c
    android.widget.RadioGroup mGroup -> d
    android.view.LayoutInflater mInflater -> e
    void init() -> a
    void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener) -> setOnCheckedChangeListener
    void setItems(java.util.ArrayList,int) -> setItems
    void updateRadioGroup() -> b
    int getSelectedIndex() -> getSelectedIndex
    java.lang.String getItemByIndex(int) -> a
    void setSelection(int) -> setSelection
pt.rocket.utils.RadioGroupLayoutVertical -> pt.rocket.utils.RadioGroupLayoutVertical:
    java.lang.String TAG -> b
    java.util.ArrayList mItems -> c
    java.util.HashMap formsMap -> d
    java.util.HashMap generatedForms -> e
    int mDefaultSelected -> f
    android.widget.RadioGroup mGroup -> g
    android.view.LayoutInflater mInflater -> h
    android.content.Context mContext -> a
    void init() -> b
    void setItems(java.util.ArrayList,java.util.HashMap,int) -> setItems
    void updateRadioGroup() -> c
    int getSelectedIndex() -> getSelectedIndex
    java.lang.String getItemByIndex(int) -> a
    void setSelection(int) -> setSelection
    void setPaymentSelection(int) -> setPaymentSelection
    boolean validateSelected() -> a
    java.lang.String getErrorMessage() -> getErrorMessage
    android.content.ContentValues getSubFieldParameters() -> getSubFieldParameters
    java.lang.String getSelectedFieldName() -> getSelectedFieldName
    android.widget.RadioGroup access$0(pt.rocket.utils.RadioGroupLayoutVertical) -> a
pt.rocket.utils.RadioGroupLayoutVertical$1 -> bxr:
    pt.rocket.utils.RadioGroupLayoutVertical this$0 -> i
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.utils.RadioGroupLayoutVertical$2 -> bxs:
    pt.rocket.utils.RadioGroupLayoutVertical this$0 -> a
    android.widget.RadioButton val$button -> b
    android.widget.LinearLayout val$extras -> c
    android.widget.LinearLayout val$mLinearLayout -> d
    void onClick(android.view.View) -> onClick
pt.rocket.utils.RadioGroupLayoutVertical$3 -> bxt:
    pt.rocket.utils.RadioGroupLayoutVertical this$0 -> i
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.utils.RadioGroupLayoutVertical$4 -> bxu:
    pt.rocket.utils.RadioGroupLayoutVertical this$0 -> a
    android.widget.RadioButton val$button -> b
    android.widget.LinearLayout val$extras -> c
    android.widget.LinearLayout val$mLinearLayout -> d
    void onClick(android.view.View) -> onClick
pt.rocket.utils.RightDrawableOnTouchListener -> bxv:
    android.graphics.drawable.Drawable drawable -> a
    int fuzz -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onDrawableTouch(android.view.MotionEvent) -> a
pt.rocket.utils.RocketImageLoader -> bxw:
    pt.rocket.utils.RocketImageLoader instance -> a
    com.android.volley.toolbox.ImageLoader volleyImageLoader -> c
    int NO_VALUE_INTEGER -> b
    android.app.Application application -> d
    int FILE_DISC_CACHE_SIZE -> e
    com.android.volley.RequestQueue volleyRequestQueue -> f
    void init(android.app.Application) -> a
    void initLibrary(android.app.Application) -> b
    void loadImage(java.lang.String,android.widget.ImageView,android.view.View,int) -> a
    void loadImage(java.lang.String,android.widget.ImageView,android.view.View,int,int,boolean,pt.rocket.utils.RocketImageLoader$RocketImageLoaderListener) -> a
    void initVolley(android.app.Application) -> c
    com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.HttpStack) -> a
pt.rocket.utils.RocketImageLoader$1 -> bxx:
    pt.rocket.utils.RocketImageLoader this$0 -> a
    android.view.View val$progressView -> b
    pt.rocket.utils.RocketImageLoader$RocketImageLoaderListener val$listener -> c
    android.widget.ImageView val$imageView -> d
    void onErrorResponse(com.android.volley.VolleyError) -> a
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> a
pt.rocket.utils.RocketImageLoader$RocketImageLoaderListener -> bxy:
    void onLoadedSuccess(android.graphics.Bitmap) -> a
    void onLoadedError() -> a
    void onLoadedCancel(java.lang.String) -> a
pt.rocket.utils.ScrollViewWithHorizontal -> pt.rocket.utils.ScrollViewWithHorizontal:
    float xDistance -> a
    float yDistance -> b
    float lastX -> c
    float lastY -> d
    android.os.Handler mHandler -> e
    android.view.View view -> f
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void sendListenerAndView(android.os.Handler,android.view.View) -> a
pt.rocket.utils.SearchSuggestionImeBackListener -> bxz:
    void onImeBackPressed(android.view.View,java.lang.String) -> a
pt.rocket.utils.SearchSuggestionText -> pt.rocket.utils.SearchSuggestionText:
    java.lang.String TAG -> a
    pt.rocket.utils.SearchSuggestionImeBackListener mOnImeBack -> b
    java.util.ArrayList mWatcheListeners -> c
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    void setOnImeBackListener(pt.rocket.utils.SearchSuggestionImeBackListener) -> setOnImeBackListener
    void addTextChangedListener(android.text.TextWatcher) -> addTextChangedListener
    void removeTextChangedListener(android.text.TextWatcher) -> removeTextChangedListener
    void clearTextChangedListeners() -> j
pt.rocket.utils.ServiceSingleton -> bya:
    pt.rocket.utils.ServiceSingleton serviceSingleton -> a
    pt.rocket.framework.service.IRemoteService mService -> b
    pt.rocket.utils.ServiceSingleton getInstance() -> a
    void setService(pt.rocket.framework.service.IRemoteService) -> a
    pt.rocket.framework.service.IRemoteService getService() -> b
pt.rocket.utils.ShippingRadioGroupList -> pt.rocket.utils.ShippingRadioGroupList:
    java.lang.String TAG -> b
    java.util.ArrayList mItems -> c
    pt.rocket.forms.ShippingMethodForm mForm -> d
    java.util.HashMap subForms -> e
    java.lang.String mDefaultSelected -> f
    int mDefaultSelectedId -> g
    android.widget.RadioGroup mGroup -> h
    android.view.LayoutInflater mInflater -> i
    android.content.Context mContext -> a
    void init() -> a
    void setItems(pt.rocket.forms.ShippingMethodForm,java.lang.String) -> setItems
    void updateRadioGroup() -> b
    int getSelectedIndex() -> getSelectedIndex
    void setSelection(int) -> setSelection
    void setSubSelection(int,int) -> setSubSelection
    int getSubSelection(int) -> a
    void cleanOtherSelections(int) -> b
    java.lang.String getSelectedFieldName() -> getSelectedFieldName
    android.content.ContentValues getValues() -> getValues
    java.util.HashMap access$0(pt.rocket.utils.ShippingRadioGroupList) -> a
    java.util.ArrayList access$1(pt.rocket.utils.ShippingRadioGroupList) -> b
    pt.rocket.forms.ShippingMethodForm access$2(pt.rocket.utils.ShippingRadioGroupList) -> c
    android.widget.RadioGroup access$3(pt.rocket.utils.ShippingRadioGroupList) -> d
pt.rocket.utils.ShippingRadioGroupList$1 -> byb:
    pt.rocket.utils.ShippingRadioGroupList this$0 -> a
    android.widget.RadioButton val$button -> b
    android.widget.LinearLayout val$extras -> c
    android.widget.LinearLayout val$mLinearLayout -> d
    void onClick(android.view.View) -> onClick
pt.rocket.utils.TrackerDelegator -> byc:
    java.lang.String TAG -> a
    void trackLoginSuccessful(android.content.Context,pt.rocket.framework.objects.Customer,boolean,java.lang.String,boolean) -> a
    void trackLoginFailed(boolean) -> a
    void trackLogoutSuccessful(android.content.Context) -> a
    void trackSearchMade(android.content.Context,java.lang.String,long) -> a
    void trackSearchViewSortMade(android.content.Context,java.lang.String,long,java.lang.String) -> a
    void trackShopchanged(android.content.Context) -> b
    void trackPushNotificationsEnabled(android.content.Context,boolean) -> a
    void trackProduct(android.content.Context,pt.rocket.framework.objects.CompleteProduct,java.lang.String) -> a
    void trackProductAddedToCart(android.content.Context,pt.rocket.framework.objects.CompleteProduct,pt.rocket.framework.objects.ProductSimple,java.lang.Double,java.lang.String,java.lang.String) -> a
    void trackProductRemoveFromCart(android.content.Context,java.lang.String,java.lang.String) -> a
    void trackCheckout(android.content.Context,java.util.List) -> a
    void trackViewCart(android.content.Context,int) -> a
    void trackItemShared(android.content.Context,android.content.Intent) -> a
    void trackCategoryView(android.content.Context,java.lang.String,int) -> a
    void trackItemReview(android.content.Context,pt.rocket.framework.objects.CompleteProduct,pt.rocket.framework.objects.ProductReviewCommentCreated,java.util.HashMap) -> a
    void trackViewReview(android.content.Context,pt.rocket.framework.objects.CompleteProduct,float) -> a
    void trackSignupSuccessful(android.content.Context,pt.rocket.framework.objects.Customer,java.lang.String) -> a
    void trackSignupFailed() -> a
    void trackPurchase(android.content.Context,org.json.JSONObject,pt.rocket.framework.objects.Customer) -> a
    void trackCheckoutStep(android.content.Context,java.lang.String,int,int,int) -> a
    void trackSignUp(android.content.Context,java.lang.String) -> a
    void trackPaymentMethod(android.content.Context,java.lang.String,java.lang.String) -> b
    void trackNativeCheckoutError(android.content.Context,java.lang.String,java.lang.String) -> c
    void trackPurchaseNativeCheckout(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,pt.rocket.framework.objects.Customer) -> a
    void trackPurchaseInt(android.content.Context,org.json.JSONObject,pt.rocket.framework.objects.Customer) -> c
    void trackNativeCheckoutPurchase(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,pt.rocket.framework.objects.Customer) -> c
    void storeSignupProcess(android.content.Context,pt.rocket.framework.objects.Customer) -> a
    boolean checkLoginAfterSignup(android.content.Context,pt.rocket.framework.objects.Customer) -> b
    boolean checkCheckoutAfterSignup(android.content.Context,pt.rocket.framework.objects.Customer) -> c
    boolean checkKeyAfterSignup(android.content.Context,pt.rocket.framework.objects.Customer,java.lang.String) -> b
    void access$0(android.content.Context,org.json.JSONObject,pt.rocket.framework.objects.Customer) -> b
    void access$1(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,pt.rocket.framework.objects.Customer) -> b
pt.rocket.utils.TrackerDelegator$1 -> byd:
    android.content.Context val$context -> a
    org.json.JSONObject val$result -> b
    pt.rocket.framework.objects.Customer val$customer -> c
    void run() -> run
pt.rocket.utils.TrackerDelegator$2 -> bye:
    java.lang.String val$hashedemail -> a
    int val$gstep -> b
    android.content.Context val$context -> c
    int val$xstep -> d
    int val$mixstep -> e
    void run() -> run
pt.rocket.utils.TrackerDelegator$3 -> byf:
    java.lang.String val$hashedemail -> a
    android.content.Context val$context -> b
    void run() -> run
pt.rocket.utils.TrackerDelegator$4 -> byg:
    java.lang.String val$hashedemail -> a
    java.lang.String val$payment -> b
    android.content.Context val$context -> c
    void run() -> run
pt.rocket.utils.TrackerDelegator$5 -> byh:
    java.lang.String val$hashedemail -> a
    java.lang.String val$error -> b
    android.content.Context val$context -> c
    void run() -> run
pt.rocket.utils.TrackerDelegator$6 -> byi:
    android.content.Context val$context -> a
    java.lang.String val$order_nr -> b
    java.lang.String val$value -> c
    java.lang.String val$email -> d
    java.util.Map val$mItems -> e
    pt.rocket.framework.objects.Customer val$customer -> f
    void run() -> run
pt.rocket.utils.UIUtils -> byj:
    int dpToPx(int,float) -> a
pt.rocket.utils.VerticalListView -> pt.rocket.utils.VerticalListView:
    float xDistance -> a
    float yDistance -> b
    float lastX -> c
    float lastY -> d
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
pt.rocket.utils.dialogfragments.CustomToastView -> byk:
    org.holoeverywhere.widget.Toast makeText(pt.rocket.view.BaseActivity,java.lang.CharSequence,int) -> a
pt.rocket.utils.dialogfragments.DialogDatePickerFragment -> byl:
    java.lang.String TAG -> Y
    java.lang.String mTitle -> Z
    java.lang.String mId -> aa
    android.app.Activity mActivity -> ab
    pt.rocket.utils.dialogfragments.DialogDatePickerFragment$OnDatePickerDialogListener mListener -> ac
    org.holoeverywhere.widget.DatePicker mDatePicker -> ad
    int mDay -> ae
    int mMonth -> af
    int mYear -> ag
    java.lang.Boolean isSetOnce -> ah
    java.text.SimpleDateFormat sdf -> ai
    pt.rocket.utils.dialogfragments.DialogDatePickerFragment newInstance(android.app.Activity,pt.rocket.utils.dialogfragments.DialogDatePickerFragment$OnDatePickerDialogListener,java.lang.String,java.lang.String,int,int,int) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    boolean isSetOnce() -> H
    void onClick(android.view.View) -> onClick
    int getYear() -> I
    int getMonth() -> J
    int getDay() -> K
    void setDate(java.lang.String) -> a
    java.lang.String getDate() -> L
    void onPause() -> u
pt.rocket.utils.dialogfragments.DialogDatePickerFragment$OnDatePickerDialogListener -> bym:
    void onDatePickerDialogSelect(java.lang.String,int,int,int) -> a
pt.rocket.utils.dialogfragments.DialogFilterFragment -> byn:
    java.lang.String TAG -> Y
    java.util.ArrayList mFilters -> Z
    pt.rocket.view.fragments.Catalog mParentFrament -> aa
    pt.rocket.utils.dialogfragments.DialogFilterFragment newInstance(android.os.Bundle,pt.rocket.view.fragments.Catalog) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onSwitchChildFragment(int,android.os.Bundle) -> a
    void fragmentChildManagerTransition(int,android.support.v4.app.Fragment,boolean,boolean) -> a
    void allowBackPressed() -> H
    void onPause() -> u
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onSubmitFilterValues(android.content.ContentValues) -> a
    java.lang.String access$0() -> I
    java.util.ArrayList access$1() -> J
    void access$2(pt.rocket.utils.dialogfragments.DialogFilterFragment,int,android.os.Bundle) -> a
pt.rocket.utils.dialogfragments.DialogFilterFragment$FilterMainFragment -> byo:
    pt.rocket.utils.dialogfragments.DialogFilterFragment mParent -> a
    android.widget.ListView mFilterListView -> b
    android.content.ContentValues mContentValues -> c
    pt.rocket.utils.dialogfragments.DialogFilterFragment$FilterMainFragment newInstance(pt.rocket.utils.dialogfragments.DialogFilterFragment) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    void proccessOnClickDone() -> a
    android.content.ContentValues createContentValues() -> b
    void addCategoryFilter(pt.rocket.framework.objects.CatalogFilter,android.content.ContentValues) -> a
    void addBrandFilter(pt.rocket.framework.objects.CatalogFilter,android.content.ContentValues) -> b
    void addGenericFilter(pt.rocket.framework.objects.CatalogFilter,android.content.ContentValues) -> c
    void addPriceFilter(pt.rocket.framework.objects.CatalogFilter,android.content.ContentValues) -> d
    void processOnClickClean() -> H
pt.rocket.utils.dialogfragments.DialogFilterFragment$FiltersArrayAdapter -> byp:
    int layout -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String getOptionsToString(android.util.SparseArray) -> a
pt.rocket.utils.dialogfragments.DialogGenericFragment -> byq:
    java.lang.String TAG -> Y
    pt.rocket.utils.dialogfragments.DialogGenericFragment dialogGenericFragment -> Z
    java.lang.Boolean hasHeader -> aa
    java.lang.Boolean mainText -> ab
    java.lang.Boolean secondaryText -> ac
    java.lang.String title -> ad
    java.lang.String content -> ae
    java.lang.String buttonTitle1 -> af
    java.lang.String buttonTitle2 -> ag
    java.lang.String buttonTitle3 -> ah
    android.view.View$OnClickListener clickListener -> ai
    pt.rocket.utils.dialogfragments.DialogGenericFragment newInstance(java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.view.View$OnClickListener) -> a
    pt.rocket.utils.dialogfragments.DialogGenericFragment newInstance(java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.view.View$OnClickListener) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void dialogWith2Buttons(android.view.View) -> a
    void dialogWith3Buttons(android.view.View) -> b
    pt.rocket.utils.dialogfragments.DialogGenericFragment createNoNetworkDialog(android.app.Activity,android.view.View$OnClickListener,boolean) -> a
    pt.rocket.utils.dialogfragments.DialogGenericFragment createServerErrorDialog(android.app.Activity,android.view.View$OnClickListener,boolean) -> b
    pt.rocket.utils.dialogfragments.DialogGenericFragment createErrorDialog(java.lang.String,java.lang.String,android.app.Activity,android.view.View$OnClickListener,boolean) -> a
    void onPause() -> u
    pt.rocket.utils.dialogfragments.DialogGenericFragment access$0() -> H
pt.rocket.utils.dialogfragments.DialogGenericFragment$1 -> byr:
    boolean val$finishActivity -> a
    android.app.Activity val$activity -> b
    android.view.View$OnClickListener val$retryClickListener -> c
    void onClick(android.view.View) -> onClick
pt.rocket.utils.dialogfragments.DialogGenericFragment$2 -> bys:
    boolean val$finishActivity -> a
    android.app.Activity val$activity -> b
    android.view.View$OnClickListener val$retryClickListener -> c
    void onClick(android.view.View) -> onClick
pt.rocket.utils.dialogfragments.DialogListFragment -> byt:
    java.lang.String TAG -> Y
    java.lang.String mTitle -> Z
    java.util.ArrayList mItems -> aa
    java.util.ArrayList mItemsAvailable -> ab
    java.lang.String mId -> ac
    long mInitialPosition -> ad
    android.app.Activity mActivity -> ae
    pt.rocket.utils.dialogfragments.DialogListFragment$OnDialogListListener mListener -> af
    android.widget.ListView list -> ag
    pt.rocket.utils.dialogfragments.DialogListFragment$DialogListAdapter mAdapter -> ah
    pt.rocket.utils.dialogfragments.DialogListFragment newInstance(android.support.v4.app.Fragment,java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,int) -> a
    pt.rocket.utils.dialogfragments.DialogListFragment newInstance(android.app.Activity,pt.rocket.utils.dialogfragments.DialogListFragment$OnDialogListListener,java.lang.String,java.lang.String,java.util.ArrayList,long) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> t
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onPause() -> u
    android.app.Activity access$0(pt.rocket.utils.dialogfragments.DialogListFragment) -> a
    java.util.ArrayList access$1(pt.rocket.utils.dialogfragments.DialogListFragment) -> b
    java.util.ArrayList access$2(pt.rocket.utils.dialogfragments.DialogListFragment) -> c
    pt.rocket.utils.dialogfragments.DialogListFragment$OnDialogListListener access$3(pt.rocket.utils.dialogfragments.DialogListFragment) -> d
    java.lang.String access$4(pt.rocket.utils.dialogfragments.DialogListFragment) -> e
pt.rocket.utils.dialogfragments.DialogListFragment$1 -> byu:
    pt.rocket.utils.dialogfragments.DialogListFragment this$0 -> a
    int val$position -> b
    void run() -> run
pt.rocket.utils.dialogfragments.DialogListFragment$DialogListAdapter -> byv:
    int mCheckedPosition -> b
    android.view.LayoutInflater mInflater -> c
    pt.rocket.utils.dialogfragments.DialogListFragment this$0 -> a
    boolean hasStableIds() -> hasStableIds
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setCheckedPosition(int) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
pt.rocket.utils.dialogfragments.DialogListFragment$OnDialogListListener -> byw:
    void onDialogListItemSelect(java.lang.String,int,java.lang.String) -> a
pt.rocket.utils.dialogfragments.DialogProgressFragment -> byx:
    java.lang.String TAG -> Y
    pt.rocket.framework.utils.LoadingBarView loadingBarView -> Z
    pt.rocket.utils.dialogfragments.DialogProgressFragment newInstance() -> H
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void dismiss() -> a
    void onPause() -> u
pt.rocket.utils.dialogfragments.DialogPromotionFragment -> byy:
    java.lang.String TAG -> Y
    pt.rocket.framework.objects.Promotion mPromotion -> Z
    pt.rocket.utils.dialogfragments.DialogPromotionFragment newInstance(pt.rocket.framework.objects.Promotion) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void setLayout() -> H
    void dismiss() -> a
    void onPause() -> u
pt.rocket.utils.dialogfragments.DialogPromotionFragment$1 -> byz:
    pt.rocket.utils.dialogfragments.DialogPromotionFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.utils.dialogfragments.DialogPromotionFragment$2 -> bza:
    pt.rocket.utils.dialogfragments.DialogPromotionFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.utils.dialogfragments.FilterBrandFragment -> bzb:
    java.lang.String TAG -> a
    int mBackButtonId -> b
    int mClearButtonId -> c
    int mCancelButtonId -> d
    int mDoneButtonId -> e
    int mPinnedListId -> f
    pt.rocket.utils.dialogfragments.DialogFilterFragment mParent -> g
    pt.rocket.framework.objects.CatalogFilter mBrandFilter -> h
    pt.rocket.utils.dialogfragments.FilterBrandFragment$FilterOptionArrayAdapter mOptionArray -> i
    android.util.SparseArray mCurrentSelectedOptions -> Y
    boolean allowMultiselection -> Z
    pt.rocket.utils.dialogfragments.FilterBrandFragment newInstance(pt.rocket.utils.dialogfragments.DialogFilterFragment,android.os.Bundle) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void processMultiSelection(android.widget.AdapterView,int) -> a
    void processSingleSelection(android.widget.AdapterView,int) -> b
    void cleanSelectedItem(pt.rocket.framework.objects.CatalogFilterOption,int) -> a
    void cleanOldSelections() -> b
    void addSelectedItem(pt.rocket.framework.objects.CatalogFilterOption,int) -> b
    void loadSelectedItems() -> H
    java.lang.String access$0() -> a
pt.rocket.utils.dialogfragments.FilterBrandFragment$FilterOptionArrayAdapter -> bzc:
    int layout -> a
    int layoutHeader -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    boolean isItemViewTypePinned(int) -> a
pt.rocket.utils.dialogfragments.FilterCategoryFragment -> bzd:
    java.lang.String TAG -> a
    int mBackButtonId -> b
    int mClearButtonId -> c
    int mCancelButtonId -> d
    int mDoneButtonId -> e
    int mListId -> f
    pt.rocket.utils.dialogfragments.DialogFilterFragment mParent -> g
    pt.rocket.framework.objects.CatalogFilter mCategoryFilter -> h
    pt.rocket.controllers.FilterOptionArrayAdapter mOptionArray -> i
    android.util.SparseArray mCurrentSelectedOptions -> Y
    boolean allowMultiselection -> Z
    pt.rocket.utils.dialogfragments.FilterCategoryFragment newInstance(pt.rocket.utils.dialogfragments.DialogFilterFragment,android.os.Bundle) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void processMultiSelection(android.widget.AdapterView,int) -> a
    void processSingleSelection(android.widget.AdapterView,int) -> b
    void cleanSelectedItem(pt.rocket.framework.objects.CatalogFilterOption,int) -> a
    void cleanOldSelections() -> a
    void addSelectedItem(pt.rocket.framework.objects.CatalogFilterOption,int) -> b
    void loadSelectedItems() -> b
pt.rocket.utils.dialogfragments.FilterColorFragment -> bze:
    java.lang.String TAG -> a
    int mBackButtonId -> b
    int mClearButtonId -> c
    int mCancelButtonId -> d
    int mDoneButtonId -> e
    int mListId -> f
    pt.rocket.utils.dialogfragments.DialogFilterFragment mParent -> g
    pt.rocket.framework.objects.CatalogFilter mColorFilter -> h
    pt.rocket.utils.dialogfragments.FilterColorFragment$FilterColorOptionArrayAdapter mOptionArray -> i
    android.util.SparseArray mCurrentSelectedOptions -> Y
    boolean allowMultiselection -> Z
    pt.rocket.utils.dialogfragments.FilterColorFragment newInstance(pt.rocket.utils.dialogfragments.DialogFilterFragment,android.os.Bundle) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void processMultiSelection(android.widget.AdapterView,int) -> a
    void processSingleSelection(android.widget.AdapterView,int) -> b
    void cleanSelectedItem(pt.rocket.framework.objects.CatalogFilterOption,int) -> a
    void cleanOldSelections() -> a
    void addSelectedItem(pt.rocket.framework.objects.CatalogFilterOption,int) -> b
    void loadSelectedItems() -> b
pt.rocket.utils.dialogfragments.FilterColorFragment$FilterColorOptionArrayAdapter -> bzf:
    int layout -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
pt.rocket.utils.dialogfragments.FilterPriceFragment -> bzg:
    java.lang.String TAG -> a
    int mBackButtonId -> b
    int mClearButtonId -> c
    int mCancelButtonId -> d
    int mDoneButtonId -> e
    pt.rocket.utils.dialogfragments.DialogFilterFragment mParent -> f
    org.holoeverywhere.widget.TextView mRangeValues -> g
    org.holoeverywhere.widget.CheckBox mDiscountBox -> h
    pt.rocket.framework.objects.CatalogFilter mPriceFilter -> i
    int mMin -> Y
    int mMax -> Z
    int mCurrMinValue -> aa
    int mCurrMaxValue -> ab
    pt.rocket.framework.components.RangeSeekBar mRangeBar -> ac
    int mInterval -> ad
    pt.rocket.utils.dialogfragments.FilterPriceFragment newInstance(pt.rocket.utils.dialogfragments.DialogFilterFragment,android.os.Bundle) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onRangeSeekBarValuesChanged(pt.rocket.framework.components.RangeSeekBar,java.lang.Integer,java.lang.Integer) -> a
    void onClick(android.view.View) -> onClick
    void processOnClickClean() -> a
    void processOnClickDone() -> b
    int getMaxIntervalValue(int) -> b
    int getMinIntervalValue(int) -> c
    int getMinRealValue(int) -> d
    int getMaxRealValue(int) -> e
    void onRangeSeekBarValuesChanged(pt.rocket.framework.components.RangeSeekBar,java.lang.Object,java.lang.Object) -> a
pt.rocket.utils.dialogfragments.FilterSizeFragment -> bzh:
    java.lang.String TAG -> a
    int mBackButtonId -> b
    int mClearButtonId -> c
    int mCancelButtonId -> d
    int mDoneButtonId -> e
    int mListId -> f
    pt.rocket.utils.dialogfragments.DialogFilterFragment mParent -> g
    pt.rocket.framework.objects.CatalogFilter mSizeFilter -> h
    pt.rocket.controllers.FilterOptionArrayAdapter mOptionArray -> i
    android.util.SparseArray mCurrentSelectedOptions -> Y
    boolean allowMultiselection -> Z
    pt.rocket.utils.dialogfragments.FilterSizeFragment newInstance(pt.rocket.utils.dialogfragments.DialogFilterFragment,android.os.Bundle) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void processMultiSelection(android.widget.AdapterView,int) -> a
    void processSingleSelection(android.widget.AdapterView,int) -> b
    void cleanSelectedItem(pt.rocket.framework.objects.CatalogFilterOption,int) -> a
    void cleanOldSelections() -> a
    void addSelectedItem(pt.rocket.framework.objects.CatalogFilterOption,int) -> b
    void loadSelectedItems() -> b
pt.rocket.view.BaseActivity -> pt.rocket.view.BaseActivity:
    com.actionbarsherlock.widget.ShareActionProvider mShareActionProvider -> v
    pt.rocket.utils.NavigationAction action -> w
    android.view.View contentContainer -> n
    java.util.Set menuItems -> x
    int activityLayoutId -> y
    android.view.View loadingBarContainer -> z
    pt.rocket.framework.utils.LoadingBarView loadingBarView -> A
    android.support.v4.app.DialogFragment dialog -> o
    pt.rocket.utils.dialogfragments.DialogProgressFragment progressDialog -> B
    boolean backPressedOnce -> C
    android.view.View logoView -> D
    android.view.View mDrawerNavigation -> p
    android.content.Intent mOnActivityResultIntent -> E
    boolean processShow -> F
    android.support.v4.widget.DrawerLayout mDrawerLayout -> q
    android.support.v4.app.ActionBarDrawerToggle mDrawerToggle -> r
    int drawable_state -> G
    java.util.Set HANDLED_EVENTS -> H
    java.lang.String TAG -> I
    java.util.Set allHandledEvents -> J
    java.util.Set contentEvents -> K
    boolean isRegistered -> L
    android.view.View warningView -> M
    android.view.View warningVariationView -> N
    android.view.View errorView -> O
    int titleResId -> P
    int contentLayoutId -> Q
    org.holoeverywhere.widget.TextView tvActionCartCount -> R
    pt.rocket.utils.SearchSuggestionText searchComponent -> S
    android.view.View searchOverlay -> T
    pt.rocket.controllers.fragments.FragmentController fragmentController -> U
    boolean initialCountry -> V
    java.util.Set userEvents -> W
    com.actionbarsherlock.view.Menu currentMenu -> X
    long beginInMillis -> Y
    pt.rocket.interfaces.IResponseCallback mIResponseCallback -> s
    android.view.View$OnClickListener onActionBarClickListener -> t
    java.lang.Runnable run -> Z
    pt.rocket.framework.service.IRemoteServiceCallback mCallback -> aa
    int currentAdjustState -> u
    int[] $SWITCH_TABLE$pt$rocket$utils$MyMenuItem -> ab
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ac
    int[] $SWITCH_TABLE$pt$rocket$framework$ErrorCode -> ad
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void updateBaseComponents(java.util.Set,pt.rocket.utils.NavigationAction,int) -> a
    void updateActionForCountry(pt.rocket.utils.NavigationAction) -> a
    void setupActionBar() -> i
    void setupContentViews() -> O
    java.lang.String getTag() -> P
    void toggle() -> j
    void closeDrawerIfOpen() -> k
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onBackPressed() -> onBackPressed
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setupNavigationMenu(boolean) -> f
    void updateSlidingMenu() -> l
    void updateSlidingMenuCompletly() -> m
    void setOrientationForHandsetDevices() -> n
    boolean isTabletInLandscape(android.content.Context) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    void setSearchBar(com.actionbarsherlock.view.Menu) -> c
    void setSearchNormalBehavior() -> o
    void setSearchBehavior() -> p
    void executeSearchRequest(java.lang.String) -> b
    pt.rocket.utils.SearchSuggestionText getSearchComponent() -> q
    void cleanSearchConponent() -> r
    void hideSearchComponent() -> Q
    void hideActionBarItemsForChangeCountry(java.util.EnumSet) -> a
    void showSearchComponent() -> R
    void showOrHideSearchComponent() -> s
    void showKeyboard(android.view.View) -> a
    void showSearchNoMatch() -> S
    void hideSearchNoMatch() -> T
    void searchComponentDismissFocus() -> U
    void getSuggestions() -> V
    void processErrorSearchEvent(android.os.Bundle) -> c
    void processSuccessSearchEvent(android.os.Bundle) -> d
    void setShareIntent(android.content.Intent) -> a
    void updateCartInfo() -> t
    void updateCartInfoInActionBar() -> u
    void updateCartInfoInNavigation() -> W
    android.content.Intent createShareIntent() -> v
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitleAndSubTitle(java.lang.CharSequence,java.lang.CharSequence) -> a
    void hideTitle() -> w
    void setTitle(int) -> setTitle
    void triggerContentEventWithNoLoading(pt.rocket.helpers.BaseHelper,android.os.Bundle,pt.rocket.interfaces.IResponseCallback) -> a
    void triggerContentEvent(pt.rocket.helpers.BaseHelper,android.os.Bundle,pt.rocket.interfaces.IResponseCallback) -> b
    void showLoadingInfo() -> x
    void hideLoadingInfo() -> y
    void setVisibility(android.view.View,boolean) -> a
    void showLoading(boolean) -> b
    void showContentContainer() -> z
    void showWarning(boolean) -> c
    void showWarningVariation(boolean) -> d
    void setAppContentLayout() -> X
    void showProgress() -> A
    void dismissProgress() -> B
    void onOpened() -> C
    void onClosed() -> D
    void unbindDrawables(android.view.View) -> unbindDrawables
    void onLowMemory() -> onLowMemory
    void hideKeyboard() -> E
    void showKeyboard() -> F
    void setProcessShow(boolean) -> e
    void handleSuccessEvent(android.os.Bundle) -> a
    boolean handleErrorEvent(android.os.Bundle) -> b
    pt.rocket.utils.NavigationAction getAction() -> G
    void onSwitchFragment(pt.rocket.controllers.fragments.FragmentType,android.os.Bundle,java.lang.Boolean) -> a
    void fragmentManagerTransition(int,android.support.v4.app.Fragment,java.lang.String,java.lang.Boolean) -> a
    void fragmentManagerBackPressed() -> H
    void popBackStackUntilTag(java.lang.String) -> c
    void doubleBackPressToExit() -> I
    java.lang.String sendRequest(pt.rocket.helpers.BaseHelper,android.os.Bundle,pt.rocket.interfaces.IResponseCallback) -> c
    void handleResponse(android.os.Bundle) -> e
    void handleError(android.os.Bundle) -> f
    void setLayoutMaintenance(pt.rocket.framework.utils.EventType) -> a
    boolean setCheckoutHeader(int) -> a
    void hideOnlySteps() -> Y
    void updateBaseComponentsOutCheckout(int) -> b
    void updateBaseComponentsInCheckout(int) -> c
    void unSelectCheckoutStep(int) -> d
    void selectCheckoutStep(int) -> e
    void selectStep(int,int,int) -> a
    void unSelectStep(int,int,int) -> b
    void OnCheckoutHeaderClickListener(android.view.View) -> OnCheckoutHeaderClickListener
    void removeAllCheckoutEntries() -> Z
    java.util.Set getCurrentMenuOptions() -> J
    boolean access$0(pt.rocket.view.BaseActivity) -> a
    int access$1(pt.rocket.view.BaseActivity) -> b
    void access$2(pt.rocket.view.BaseActivity) -> c
    void access$3(pt.rocket.view.BaseActivity) -> d
    java.lang.String access$4() -> K
    void access$5(pt.rocket.view.BaseActivity,android.os.Bundle) -> a
    void access$6(pt.rocket.view.BaseActivity,android.os.Bundle) -> b
    void access$7(pt.rocket.view.BaseActivity,int) -> a
    int[] $SWITCH_TABLE$pt$rocket$utils$MyMenuItem() -> L
    pt.rocket.utils.SearchSuggestionText access$9(pt.rocket.view.BaseActivity) -> e
    java.lang.Runnable access$10(pt.rocket.view.BaseActivity) -> f
    void access$11(pt.rocket.view.BaseActivity,android.os.Bundle) -> c
    void access$12(pt.rocket.view.BaseActivity,android.os.Bundle) -> d
    org.holoeverywhere.widget.TextView access$13(pt.rocket.view.BaseActivity) -> g
    void access$14(pt.rocket.view.BaseActivity,pt.rocket.utils.dialogfragments.DialogProgressFragment) -> a
    pt.rocket.utils.dialogfragments.DialogProgressFragment access$15(pt.rocket.view.BaseActivity) -> h
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> M
    int[] $SWITCH_TABLE$pt$rocket$framework$ErrorCode() -> N
    void access$18(pt.rocket.view.BaseActivity,boolean) -> a
pt.rocket.view.BaseActivity$1 -> bzi:
    pt.rocket.view.BaseActivity this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.BaseActivity$11 -> bzj:
    pt.rocket.view.BaseActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
pt.rocket.view.BaseActivity$12 -> bzk:
    pt.rocket.view.BaseActivity this$0 -> b
    boolean onDrawableTouch(android.view.MotionEvent) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
pt.rocket.view.BaseActivity$13 -> bzl:
    android.os.Handler handle -> b
    pt.rocket.view.BaseActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
pt.rocket.view.BaseActivity$14 -> bzm:
    pt.rocket.view.BaseActivity this$0 -> a
    void onImeBackPressed(android.view.View,java.lang.String) -> a
pt.rocket.view.BaseActivity$15 -> bzn:
    pt.rocket.view.BaseActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
pt.rocket.view.BaseActivity$16 -> bzo:
    pt.rocket.view.BaseActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
pt.rocket.view.BaseActivity$17 -> bzp:
    pt.rocket.view.BaseActivity this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.BaseActivity$18 -> bzq:
    pt.rocket.view.BaseActivity this$0 -> a
    java.lang.String val$quantity -> b
    void run() -> run
pt.rocket.view.BaseActivity$2 -> bzr:
    pt.rocket.view.BaseActivity this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.BaseActivity$20 -> bzs:
    pt.rocket.view.BaseActivity this$0 -> a
    void run() -> run
pt.rocket.view.BaseActivity$21 -> bzt:
    pt.rocket.view.BaseActivity this$0 -> a
    pt.rocket.framework.utils.EventType val$eventType -> b
    void onClick(android.view.View) -> onClick
pt.rocket.view.BaseActivity$22 -> bzu:
    pt.rocket.view.BaseActivity this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.BaseActivity$23 -> bzv:
    pt.rocket.view.BaseActivity this$0 -> a
    pt.rocket.framework.utils.EventType val$eventType -> b
    void onClick(android.view.View) -> onClick
pt.rocket.view.BaseActivity$25 -> bzw:
    pt.rocket.view.BaseActivity this$0 -> a
    void run() -> run
pt.rocket.view.BaseActivity$26 -> bzx:
    pt.rocket.view.BaseActivity this$0 -> a
    pt.rocket.helpers.BaseHelper val$helper -> b
    pt.rocket.interfaces.IResponseCallback val$responseCallback -> c
    void onRequestComplete(android.os.Bundle) -> b_
    void onRequestError(android.os.Bundle) -> a_
pt.rocket.view.BaseActivity$27 -> bzy:
    pt.rocket.view.BaseActivity this$0 -> a
    pt.rocket.framework.utils.EventType val$eventType -> b
    void onClick(android.view.View) -> onClick
pt.rocket.view.BaseActivity$3 -> bzz:
    pt.rocket.view.BaseActivity this$0 -> a
    void run() -> run
pt.rocket.view.BaseActivity$4 -> caa:
    pt.rocket.view.BaseActivity this$0 -> a
    void getError(android.os.Bundle) -> b
    void getResponse(android.os.Bundle) -> a
pt.rocket.view.BaseActivity$5 -> cab:
    pt.rocket.view.BaseActivity this$0 -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerOpened(android.view.View) -> a
    void onDrawerStateChanged(int) -> a
pt.rocket.view.BaseActivity$6 -> cac:
    pt.rocket.view.BaseActivity this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.BaseActivity$7 -> cad:
    pt.rocket.view.BaseActivity this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.BaseActivity$8 -> cae:
    pt.rocket.view.BaseActivity this$0 -> a
    boolean onShareTargetSelected(com.actionbarsherlock.widget.ShareActionProvider,android.content.Intent) -> a
pt.rocket.view.BaseActivity$9 -> caf:
    pt.rocket.view.BaseActivity this$0 -> a
    com.actionbarsherlock.view.Menu val$menu -> b
    void onClick(android.view.View) -> onClick
pt.rocket.view.ChangeCountryFragmentActivity -> pt.rocket.view.ChangeCountryFragmentActivity:
    java.lang.String TAG -> x
    java.lang.String KEY_COUNTRY -> v
    java.lang.String KEY_COUNTRY_CHANGED -> w
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    android.view.LayoutInflater getOrigInflater() -> O
    void onBackPressed() -> onBackPressed
    void onSwitchFragment(pt.rocket.controllers.fragments.FragmentType,android.os.Bundle,java.lang.Boolean) -> a
pt.rocket.view.MainFragmentActivity -> pt.rocket.view.MainFragmentActivity:
    java.lang.String TAG -> v
    pt.rocket.view.fragments.BaseFragment fragment -> w
    pt.rocket.controllers.fragments.FragmentType currentFragmentType -> x
    boolean wasReceivedNotification -> y
    int[] $SWITCH_TABLE$pt$rocket$controllers$fragments$FragmentType -> z
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean isValidNotification(android.content.Intent) -> b
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onSwitchFragment(pt.rocket.controllers.fragments.FragmentType,android.os.Bundle,java.lang.Boolean) -> a
    void onBackPressed() -> onBackPressed
    pt.rocket.view.fragments.BaseFragment getActiveFragment() -> O
    void popBackStack(java.lang.String) -> d
    void onPreferenceAttached(android.preference.PreferenceScreen,int) -> a
    int[] $SWITCH_TABLE$pt$rocket$controllers$fragments$FragmentType() -> P
pt.rocket.view.ProductDetailsActivityFragment -> cag:
    java.lang.String TAG -> ae
    android.content.Context mContext -> af
    android.support.v4.app.DialogFragment mDialogAddedToCart -> ag
    pt.rocket.utils.dialogfragments.DialogListFragment dialogListFragment -> ah
    pt.rocket.framework.objects.CompleteProduct mCompleteProduct -> ai
    android.widget.Button mAddToCartButton -> aj
    android.view.ViewGroup mDetailsContainer -> ak
    android.view.ViewGroup mVarianceContainer -> al
    java.lang.String mCompleteProductUrl -> am
    java.lang.String SELECTED_SIMPLE_POSITION -> a
    java.lang.String LOAD_FROM_SCRATCH -> b
    int mSelectedSimple -> an
    android.view.ViewGroup mProductRatingContainer -> ao
    android.widget.RatingBar mProductRating -> ap
    org.holoeverywhere.widget.TextView mProductRatingCount -> aq
    android.widget.Button mCallToOrderButton -> ar
    android.widget.Button mVarianceButton -> as
    org.holoeverywhere.widget.TextView mVariantNormPrice -> at
    org.holoeverywhere.widget.TextView mVariantSpecPrice -> au
    boolean mHideVariationSelection -> av
    org.holoeverywhere.widget.TextView mVarianceText -> aw
    android.view.ViewGroup mProductBasicInfoContainer -> ax
    long mBeginRequestMillis -> ay
    java.util.ArrayList mSimpleVariants -> az
    java.util.ArrayList mSimpleVariantsAvailable -> aA
    org.holoeverywhere.widget.TextView mVariantChooseError -> aB
    android.view.View mVariantPriceContainer -> aC
    java.lang.String mNavigationPath -> aD
    int mNavigationSource -> aE
    android.widget.RelativeLayout loadingRating -> aF
    android.support.v4.app.Fragment productVariationsFragment -> aG
    android.support.v4.app.Fragment productImagesViewPagerFragment -> aH
    android.support.v4.app.Fragment productSpecificationFragment -> aI
    android.support.v4.app.Fragment productBasicInfoFragment -> aJ
    android.support.v4.app.Fragment relatedItemsFragment -> aK
    java.lang.String VARIATION_LIST_POSITION -> c
    int mVariationsListPosition -> aL
    java.lang.String mPhone2Call -> aM
    android.content.SharedPreferences sharedPreferences -> aN
    java.lang.String KEY_CALL_TO_ORDER -> d
    android.view.View mainView -> aO
    java.lang.String category -> aP
    pt.rocket.view.ProductDetailsActivityFragment mProductDetailsActivityFragment -> aQ
    boolean isAddingProductToCart -> e
    java.lang.String mLastSelectedVariance -> aR
    java.util.ArrayList variations -> aS
    java.lang.String mDeepLinkSimpleSize -> aT
    android.support.v4.view.ViewPager$OnPageChangeListener tipsPageChangeListener -> f
    pt.rocket.interfaces.IResponseCallback responseCallback -> g
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> aU
    pt.rocket.view.ProductDetailsActivityFragment getInstance(android.os.Bundle) -> l
    void onVariationElementSelected(int) -> b
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> N
    void onResume() -> t
    void onSaveInstanceState(android.os.Bundle) -> e
    void onPause() -> u
    void onDestroy() -> v
    boolean hasArgumentsFromDeepLink(android.os.Bundle) -> p
    void setAppContentLayout() -> O
    void startFragmentCallbacks() -> P
    void setContentInformation() -> Q
    void loadProduct() -> R
    void loadProductPartial() -> S
    void preselectASimpleItem() -> T
    java.util.Set scanSimpleAttributesForKnownVariants(java.util.ArrayList) -> b
    void scanSimpleForKnownVariants(pt.rocket.framework.objects.ProductSimple,java.util.Set) -> a
    java.util.ArrayList createSimpleVariants() -> U
    java.lang.String calcVariationStringForSimple(pt.rocket.framework.objects.ProductSimple,java.util.Set) -> b
    java.util.HashMap createVariantAttributesHashMap(pt.rocket.framework.objects.ProductSimple) -> a
    pt.rocket.framework.objects.ProductSimple getSelectedSimple() -> V
    void displayPriceInfoOverallOrForSimple() -> W
    long getPriceForTrackingAsLong(pt.rocket.framework.objects.ProductSimple) -> b
    void updateStockInfo() -> X
    void displayRatingInfo() -> Y
    void displayVariantsContainer() -> a
    void updateVariants() -> b
    java.lang.String currencyFormatHelper(java.lang.String) -> a
    void executeAddProductToCart() -> Z
    void triggerAddItemToCart(pt.rocket.framework.objects.ShoppingCartItem) -> a
    void showChooseReminder() -> aa
    void displayProduct(pt.rocket.framework.objects.CompleteProduct) -> a
    void locateSimplePosition(java.lang.String,pt.rocket.framework.objects.CompleteProduct) -> a
    void displayGallery(pt.rocket.framework.objects.CompleteProduct) -> b
    void executeAddToShoppingCartCompleted() -> ab
    void addToShoppingCartFailed() -> ac
    void onClick(android.view.View) -> onClick
    void makeCall() -> ad
    void showVariantsDialog() -> ae
    void onDialogListItemSelect(java.lang.String,int,java.lang.String) -> a
    void onSuccessEvent(android.os.Bundle) -> m
    boolean allowBackPressed() -> H
    void onErrorEvent(android.os.Bundle) -> n
    void notifyFragment(android.os.Bundle) -> c
    void fragmentManagerTransition(int,android.support.v4.app.Fragment,java.lang.Boolean,java.lang.Boolean) -> a
    android.support.v4.app.DialogFragment access$0(pt.rocket.view.ProductDetailsActivityFragment) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> I
    android.support.v4.app.DialogFragment access$2(pt.rocket.view.ProductDetailsActivityFragment) -> b
pt.rocket.view.ProductDetailsActivityFragment$1 -> cah:
    pt.rocket.view.ProductDetailsActivityFragment this$0 -> a
    void onPageSelected(int) -> c_
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
pt.rocket.view.ProductDetailsActivityFragment$2 -> cai:
    pt.rocket.view.ProductDetailsActivityFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.ProductDetailsActivityFragment$3 -> caj:
    pt.rocket.view.ProductDetailsActivityFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.ProductDetailsActivityFragment$4 -> cak:
    pt.rocket.view.ProductDetailsActivityFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.ProductDetailsActivityFragment$5 -> cal:
    pt.rocket.view.ProductDetailsActivityFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.ProductDetailsActivityFragment$TipsPagerAdapter -> cam:
    int[] tips_pages -> b
    android.view.LayoutInflater mLayoutInflater -> c
    pt.rocket.view.ProductDetailsActivityFragment this$0 -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
pt.rocket.view.PushPreferences -> pt.rocket.view.PushPreferences:
pt.rocket.view.R -> can:
pt.rocket.view.R$anim -> cao:
    int anim_remove_product_shopcart -> anim_remove_product_shopcart
    int anim_scale -> anim_scale
    int dialog_enter -> dialog_enter
    int dialog_exit -> dialog_exit
    int fade_in -> fade_in
    int fade_out -> fade_out
    int grow_fade_in -> grow_fade_in
    int grow_fade_in_from_bottom -> grow_fade_in_from_bottom
    int pop_in -> pop_in
    int pop_out -> pop_out
    int shrink_fade_out -> shrink_fade_out
    int shrink_fade_out_from_bottom -> shrink_fade_out_from_bottom
    int slide_in_left -> slide_in_left
    int slide_in_right -> slide_in_right
    int slide_out_left -> slide_out_left
    int slide_out_right -> slide_out_right
pt.rocket.view.R$animator -> cap:
    int activityfadein -> activityfadein
    int splashfadeout -> splashfadeout
pt.rocket.view.R$array -> caq:
    int catalog_new_item -> catalog_new_item
    int country_fallback_map -> country_fallback_map
    int country_icons -> country_icons
    int country_names -> country_names
    int country_protocol -> country_protocol
    int currency_codes -> currency_codes
    int feedback_ignored_packages -> feedback_ignored_packages
    int fkey_livekeys -> fkey_livekeys
    int fkey_testkeys -> fkey_testkeys
    int formatter_currency_codes -> formatter_currency_codes
    int formatter_currency_fraction_count -> formatter_currency_fraction_count
    int formatter_currency_fraction_delim -> formatter_currency_fraction_delim
    int formatter_currency_thousands_delim -> formatter_currency_thousands_delim
    int formatter_currency_unit_pattern -> formatter_currency_unit_pattern
    int ga_livekeys -> ga_livekeys
    int ga_testkeys -> ga_testkeys
    int icons -> icons
    int language_codes -> language_codes
    int myaccount_array -> myaccount_array
    int passwords -> passwords
    int products_picker -> products_picker
    int restbase_paths -> restbase_paths
    int servers -> servers
    int shop_names -> shop_names
    int users -> users
    int wifi_ap_security -> wifi_ap_security
    int wifi_eap_method -> wifi_eap_method
    int wifi_p2p_status -> wifi_p2p_status
    int wifi_p2p_wps_setup -> wifi_p2p_wps_setup
    int wifi_security -> wifi_security
    int wifi_security_no_eap -> wifi_security_no_eap
    int wifi_status -> wifi_status
    int wifi_status_with_ssid -> wifi_status_with_ssid
pt.rocket.view.R$bool -> car:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
    int adx_enable -> adx_enable
    int default_circle_indicator_centered -> default_circle_indicator_centered
    int default_circle_indicator_snap -> default_circle_indicator_snap
    int default_led -> default_led
    int default_line_indicator_centered -> default_line_indicator_centered
    int default_notification -> default_notification
    int default_sound -> default_sound
    int default_title_indicator_selected_bold -> default_title_indicator_selected_bold
    int default_underline_indicator_fades -> default_underline_indicator_fades
    int default_vibrate -> default_vibrate
    int f_testmode -> f_testmode
    int flurry_enable -> flurry_enable
    int ga_autoActivityTracking -> ga_autoActivityTracking
    int ga_enable -> ga_enable
    int ga_reportUncaughtExceptions -> ga_reportUncaughtExceptions
    int ga_testmode -> ga_testmode
    int isTablet -> isTablet
    int mixpanel_enable -> mixpanel_enable
    int rest_host_auth_use_it -> rest_host_auth_use_it
pt.rocket.view.R$color -> cas:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__bright_foreground_inverse_holo_dark -> abs__bright_foreground_inverse_holo_dark
    int abs__bright_foreground_inverse_holo_light -> abs__bright_foreground_inverse_holo_light
    int abs__holo_blue_light -> abs__holo_blue_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
    int actionbar_text_color -> actionbar_text_color
    int background_dark -> background_dark
    int background_holo_dark -> background_holo_dark
    int background_holo_light -> background_holo_light
    int background_light -> background_light
    int black_shadow -> black_shadow
    int blue_basic -> blue_basic
    int bright_foreground_dark -> bright_foreground_dark
    int bright_foreground_dark_disabled -> bright_foreground_dark_disabled
    int bright_foreground_dark_inverse -> bright_foreground_dark_inverse
    int bright_foreground_disabled_holo_dark -> bright_foreground_disabled_holo_dark
    int bright_foreground_disabled_holo_light -> bright_foreground_disabled_holo_light
    int bright_foreground_holo_dark -> bright_foreground_holo_dark
    int bright_foreground_holo_light -> bright_foreground_holo_light
    int bright_foreground_inverse_holo_dark -> bright_foreground_inverse_holo_dark
    int bright_foreground_inverse_holo_light -> bright_foreground_inverse_holo_light
    int bright_foreground_light -> bright_foreground_light
    int bright_foreground_light_disabled -> bright_foreground_light_disabled
    int bright_foreground_light_inverse -> bright_foreground_light_inverse
    int cab_text_color -> cab_text_color
    int campaign_info_background -> campaign_info_background
    int com_facebook_blue -> com_facebook_blue
    int com_facebook_loginview_text_color -> com_facebook_loginview_text_color
    int com_facebook_picker_search_bar_background -> com_facebook_picker_search_bar_background
    int com_facebook_picker_search_bar_text -> com_facebook_picker_search_bar_text
    int com_facebook_usersettingsfragment_connected_shadow_color -> com_facebook_usersettingsfragment_connected_shadow_color
    int com_facebook_usersettingsfragment_connected_text_color -> com_facebook_usersettingsfragment_connected_text_color
    int com_facebook_usersettingsfragment_not_connected_text_color -> com_facebook_usersettingsfragment_not_connected_text_color
    int default_circle_indicator_fill_color -> default_circle_indicator_fill_color
    int default_circle_indicator_page_color -> default_circle_indicator_page_color
    int default_circle_indicator_stroke_color -> default_circle_indicator_stroke_color
    int default_line_indicator_selected_color -> default_line_indicator_selected_color
    int default_line_indicator_unselected_color -> default_line_indicator_unselected_color
    int default_title_indicator_footer_color -> default_title_indicator_footer_color
    int default_title_indicator_selected_color -> default_title_indicator_selected_color
    int default_title_indicator_text_color -> default_title_indicator_text_color
    int default_underline_indicator_selected_color -> default_underline_indicator_selected_color
    int dialog_button_highlight -> dialog_button_highlight
    int dialog_title_background -> dialog_title_background
    int dim_foreground_dark -> dim_foreground_dark
    int dim_foreground_dark_inverse -> dim_foreground_dark_inverse
    int dim_foreground_disabled_holo_dark -> dim_foreground_disabled_holo_dark
    int dim_foreground_disabled_holo_light -> dim_foreground_disabled_holo_light
    int dim_foreground_holo_dark -> dim_foreground_holo_dark
    int dim_foreground_holo_light -> dim_foreground_holo_light
    int dim_foreground_inverse_disabled_holo_dark -> dim_foreground_inverse_disabled_holo_dark
    int dim_foreground_inverse_disabled_holo_light -> dim_foreground_inverse_disabled_holo_light
    int dim_foreground_inverse_holo_dark -> dim_foreground_inverse_holo_dark
    int dim_foreground_inverse_holo_light -> dim_foreground_inverse_holo_light
    int form_text -> form_text
    int form_text_hint -> form_text_hint
    int green_basic -> green_basic
    int green_campaign_bar -> green_campaign_bar
    int green_stock -> green_stock
    int grey_campaign_bar -> grey_campaign_bar
    int grey_dark -> grey_dark
    int grey_dark_line -> grey_dark_line
    int grey_divider_light_text -> grey_divider_light_text
    int grey_dividerlight -> grey_dividerlight
    int grey_highlight -> grey_highlight
    int grey_light -> grey_light
    int grey_middle -> grey_middle
    int grey_middlelight -> grey_middlelight
    int highlighted_text_holo_dark -> highlighted_text_holo_dark
    int highlighted_text_holo_light -> highlighted_text_holo_light
    int hint_foreground_holo_dark -> hint_foreground_holo_dark
    int hint_foreground_holo_light -> hint_foreground_holo_light
    int holo_blue_bright -> holo_blue_bright
    int holo_blue_dark -> holo_blue_dark
    int holo_blue_light -> holo_blue_light
    int holo_green_dark -> holo_green_dark
    int holo_green_light -> holo_green_light
    int holo_orange_dark -> holo_orange_dark
    int holo_orange_light -> holo_orange_light
    int holo_purple_dark -> holo_purple_dark
    int holo_purple_light -> holo_purple_light
    int holo_red_dark -> holo_red_dark
    int holo_red_light -> holo_red_light
    int item_highlight -> item_highlight
    int link_text_holo_dark -> link_text_holo_dark
    int link_text_holo_light -> link_text_holo_light
    int loadingbackground_dimmed -> loadingbackground_dimmed
    int orange_basic -> orange_basic
    int orange_campaign_bar -> orange_campaign_bar
    int primary_text_disable_only_holo_dark -> primary_text_disable_only_holo_dark
    int primary_text_disable_only_holo_light -> primary_text_disable_only_holo_light
    int primary_text_holo_dark -> primary_text_holo_dark
    int primary_text_holo_light -> primary_text_holo_light
    int primary_text_nodisable_holo_dark -> primary_text_nodisable_holo_dark
    int primary_text_nodisable_holo_light -> primary_text_nodisable_holo_light
    int promotion_dialog_bkg -> promotion_dialog_bkg
    int red_basic -> red_basic
    int red_middle -> red_middle
    int secondary_text_holo_dark -> secondary_text_holo_dark
    int secondary_text_holo_light -> secondary_text_holo_light
    int secondary_text_nodisable_holo_dark -> secondary_text_nodisable_holo_dark
    int secondary_text_nodisable_holo_light -> secondary_text_nodisable_holo_light
    int semi_transparent -> semi_transparent
    int sidemenu_background -> sidemenu_background
    int sidemenu_basket_background_highlight -> sidemenu_basket_background_highlight
    int sidemenu_basket_background_normal -> sidemenu_basket_background_normal
    int sidemenu_item_background_highlight -> sidemenu_item_background_highlight
    int sidemenu_item_background_normal -> sidemenu_item_background_normal
    int sidemenu_list_divider_highlight -> sidemenu_list_divider_highlight
    int sidemenu_list_divider_normal -> sidemenu_list_divider_normal
    int strip_title -> strip_title
    int strip_title_background -> strip_title_background
    int tertiary_text_holo_dark -> tertiary_text_holo_dark
    int tertiary_text_holo_light -> tertiary_text_holo_light
    int transparent -> transparent
    int vpi__background_holo_dark -> vpi__background_holo_dark
    int vpi__background_holo_light -> vpi__background_holo_light
    int vpi__bright_foreground_disabled_holo_dark -> vpi__bright_foreground_disabled_holo_dark
    int vpi__bright_foreground_disabled_holo_light -> vpi__bright_foreground_disabled_holo_light
    int vpi__bright_foreground_holo_dark -> vpi__bright_foreground_holo_dark
    int vpi__bright_foreground_holo_light -> vpi__bright_foreground_holo_light
    int vpi__bright_foreground_inverse_holo_dark -> vpi__bright_foreground_inverse_holo_dark
    int vpi__bright_foreground_inverse_holo_light -> vpi__bright_foreground_inverse_holo_light
    int vpi__dark_theme -> vpi__dark_theme
    int vpi__light_theme -> vpi__light_theme
    int yellow_campaign_bar -> yellow_campaign_bar
    int yellow_dark -> yellow_dark
pt.rocket.view.R$dimen -> cat:
    int about_you_toogle_height -> about_you_toogle_height
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__alert_dialog_title_height -> abs__alert_dialog_title_height
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int action_bar_search -> action_bar_search
    int action_bar_title_bar -> action_bar_title_bar
    int action_button_min_width -> action_button_min_width
    int alert_dialog_button_bar_height -> alert_dialog_button_bar_height
    int alert_dialog_title_height -> alert_dialog_title_height
    int button_sort_height -> button_sort_height
    int button_sort_height_sw320dp -> button_sort_height_sw320dp
    int button_sort_line_distance_horizontal -> button_sort_line_distance_horizontal
    int button_sort_line_distance_horizontal_sw320dp -> button_sort_line_distance_horizontal_sw320dp
    int button_xlarge -> button_xlarge
    int campaign_banner_height -> campaign_banner_height
    int campaign_image_height -> campaign_image_height
    int campaign_title_height -> campaign_title_height
    int campaign_title_margin_left -> campaign_title_margin_left
    int catalog_button_filter_width -> catalog_button_filter_width
    int checkout_header_divider_height -> checkout_header_divider_height
    int checkout_header_height -> checkout_header_height
    int checkout_header_margin -> checkout_header_margin
    int checkout_header_step_icon -> checkout_header_step_icon
    int checkout_header_step_s_icon -> checkout_header_step_s_icon
    int checkout_header_step_selected_width -> checkout_header_step_selected_width
    int checkout_header_step_width -> checkout_header_step_width
    int checkout_main_container -> checkout_main_container
    int checkout_order_inner_margin_left -> checkout_order_inner_margin_left
    int checkout_order_inner_margin_right -> checkout_order_inner_margin_right
    int checkout_order_summary -> checkout_order_summary
    int com_facebook_loginview_compound_drawable_padding -> com_facebook_loginview_compound_drawable_padding
    int com_facebook_loginview_padding_bottom -> com_facebook_loginview_padding_bottom
    int com_facebook_loginview_padding_left -> com_facebook_loginview_padding_left
    int com_facebook_loginview_padding_right -> com_facebook_loginview_padding_right
    int com_facebook_loginview_padding_top -> com_facebook_loginview_padding_top
    int com_facebook_loginview_text_size -> com_facebook_loginview_text_size
    int com_facebook_picker_divider_width -> com_facebook_picker_divider_width
    int com_facebook_picker_place_image_size -> com_facebook_picker_place_image_size
    int com_facebook_profilepictureview_preset_size_large -> com_facebook_profilepictureview_preset_size_large
    int com_facebook_profilepictureview_preset_size_normal -> com_facebook_profilepictureview_preset_size_normal
    int com_facebook_profilepictureview_preset_size_small -> com_facebook_profilepictureview_preset_size_small
    int com_facebook_usersettingsfragment_profile_picture_height -> com_facebook_usersettingsfragment_profile_picture_height
    int com_facebook_usersettingsfragment_profile_picture_width -> com_facebook_usersettingsfragment_profile_picture_width
    int config_prefDialogWidth -> config_prefDialogWidth
    int default_circle_indicator_radius -> default_circle_indicator_radius
    int default_circle_indicator_stroke_width -> default_circle_indicator_stroke_width
    int default_line_indicator_gap_width -> default_line_indicator_gap_width
    int default_line_indicator_line_width -> default_line_indicator_line_width
    int default_line_indicator_stroke_width -> default_line_indicator_stroke_width
    int default_title_indicator_clip_padding -> default_title_indicator_clip_padding
    int default_title_indicator_footer_indicator_height -> default_title_indicator_footer_indicator_height
    int default_title_indicator_footer_indicator_underline_padding -> default_title_indicator_footer_indicator_underline_padding
    int default_title_indicator_footer_line_height -> default_title_indicator_footer_line_height
    int default_title_indicator_footer_padding -> default_title_indicator_footer_padding
    int default_title_indicator_text_size -> default_title_indicator_text_size
    int default_title_indicator_title_padding -> default_title_indicator_title_padding
    int default_title_indicator_top_padding -> default_title_indicator_top_padding
    int dialog_catalog_filter_height -> dialog_catalog_filter_height
    int dialog_catalog_filter_width -> dialog_catalog_filter_width
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int dialog_list_margin_horizontal -> dialog_list_margin_horizontal
    int dialog_min_width_major -> dialog_min_width_major
    int dialog_min_width_minor -> dialog_min_width_minor
    int distance_item_mid -> distance_item_mid
    int distance_item_small -> distance_item_small
    int divider_height -> divider_height
    int divider_width -> divider_width
    int fastscroll_overlay_size -> fastscroll_overlay_size
    int fastscroll_thumb_height -> fastscroll_thumb_height
    int fastscroll_thumb_width -> fastscroll_thumb_width
    int form_errormessage_margin -> form_errormessage_margin
    int inner_container_width -> inner_container_width
    int item_height_normal -> item_height_normal
    int main_layout_width -> main_layout_width
    int margin_buttons -> margin_buttons
    int margin_huge -> margin_huge
    int margin_large -> margin_large
    int margin_mid -> margin_mid
    int margin_midhuge -> margin_midhuge
    int margin_small -> margin_small
    int margin_veryhuge -> margin_veryhuge
    int margin_x_small -> margin_x_small
    int match_parent -> match_parent
    int navigation_cart_vertical_distance -> navigation_cart_vertical_distance
    int navigation_item_divider_height -> navigation_item_divider_height
    int navigation_menu_offset -> navigation_menu_offset
    int navigation_menu_width -> navigation_menu_width
    int navigation_shadow_width -> navigation_shadow_width
    int navigation_title_height -> navigation_title_height
    int product_detail_item_discount_image_height -> product_detail_item_discount_image_height
    int product_detail_item_discount_image_margin -> product_detail_item_discount_image_margin
    int product_detail_item_discount_image_width -> product_detail_item_discount_image_width
    int product_detail_item_discount_text_margin -> product_detail_item_discount_text_margin
    int product_detail_item_image_height -> product_detail_item_image_height
    int product_detail_item_image_width -> product_detail_item_image_width
    int product_detail_item_variation_image_height -> product_detail_item_variation_image_height
    int product_detail_item_variation_image_width -> product_detail_item_variation_image_width
    int product_detail_item_variation_list_height -> product_detail_item_variation_list_height
    int product_gallery_item_image_list_height -> product_gallery_item_image_list_height
    int product_gallery_item_variation_list_height -> product_gallery_item_variation_list_height
    int product_item_height -> product_item_height
    int product_item_vertical_divider_height -> product_item_vertical_divider_height
    int product_list_item_discount_percentage_image_height -> product_list_item_discount_percentage_image_height
    int product_list_item_discount_percentage_image_width -> product_list_item_discount_percentage_image_width
    int product_list_item_discount_percentage_text_margin -> product_list_item_discount_percentage_text_margin
    int product_list_item_discount_percentage_text_width -> product_list_item_discount_percentage_text_width
    int product_list_item_image_height -> product_list_item_image_height
    int product_list_item_image_width -> product_list_item_image_width
    int product_list_item_star_rating_bar_max_height -> product_list_item_star_rating_bar_max_height
    int product_list_item_star_rating_bar_min_height -> product_list_item_star_rating_bar_min_height
    int shopping_cart_item_image_height -> shopping_cart_item_image_height
    int shopping_cart_item_image_width -> shopping_cart_item_image_width
    int teaser_banners_brands_list_height -> teaser_banners_brands_list_height
    int teaser_banners_group_height -> teaser_banners_group_height
    int teaser_banners_group_height_sw320dp -> teaser_banners_group_height_sw320dp
    int teaser_product_item_height -> teaser_product_item_height
    int teaser_product_item_image_height -> teaser_product_item_image_height
    int teaser_product_item_image_margin -> teaser_product_item_image_margin
    int teaser_product_item_image_width -> teaser_product_item_image_width
    int teaser_product_item_width -> teaser_product_item_width
    int teaser_product_item_width_sw320dp -> teaser_product_item_width_sw320dp
    int teaser_recently_viewed_height -> teaser_recently_viewed_height
    int teaser_swipe_banner_height -> teaser_swipe_banner_height
    int teaser_swipe_banner_height_sw320dp -> teaser_swipe_banner_height_sw320dp
    int text_l -> text_l
    int text_large -> text_large
    int text_m -> text_m
    int text_mid -> text_mid
    int text_s -> text_s
    int text_small -> text_small
    int text_smid -> text_smid
    int text_stars_max_width -> text_stars_max_width
    int text_xl -> text_xl
    int text_xs -> text_xs
    int text_xxl -> text_xxl
    int text_xxxl -> text_xxxl
    int wrap_content -> wrap_content
pt.rocket.view.R$drawable -> cau:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
    int actionbar_drawable -> actionbar_drawable
    int actionbar_logo -> actionbar_logo
    int actionoverflow -> actionoverflow
    int actionoverflow_selected -> actionoverflow_selected
    int activated_background_holo -> activated_background_holo
    int activity_picker_bg -> activity_picker_bg
    int activity_picker_bg_activated -> activity_picker_bg_activated
    int activity_picker_bg_focused -> activity_picker_bg_focused
    int arrow_back -> arrow_back
    int arrow_down -> arrow_down
    int arrow_recently_viewed_left -> arrow_recently_viewed_left
    int arrow_recently_viewed_right -> arrow_recently_viewed_right
    int arrow_right -> arrow_right
    int arrow_side -> arrow_side
    int back_arrow_category -> back_arrow_category
    int background_cache_hint_selector_holo_dark -> background_cache_hint_selector_holo_dark
    int background_cache_hint_selector_holo_light -> background_cache_hint_selector_holo_light
    int background_holo_dark -> background_holo_dark
    int background_holo_light -> background_holo_light
    int bckgrndfallback -> bckgrndfallback
    int bg_actionbar_buttom -> bg_actionbar_buttom
    int bg_searchfield -> bg_searchfield
    int bg_sidemenue_header -> bg_sidemenue_header
    int bottom_border -> bottom_border
    int btn_addaddress_orange -> btn_addaddress_orange
    int btn_check_holo_light -> btn_check_holo_light
    int btn_check_label_background -> btn_check_label_background
    int btn_check_off_disabled_focused_holo_dark -> btn_check_off_disabled_focused_holo_dark
    int btn_check_off_disabled_focused_holo_light -> btn_check_off_disabled_focused_holo_light
    int btn_check_off_disabled_holo_dark -> btn_check_off_disabled_holo_dark
    int btn_check_off_disabled_holo_light -> btn_check_off_disabled_holo_light
    int btn_check_off_focused_holo_dark -> btn_check_off_focused_holo_dark
    int btn_check_off_focused_holo_light -> btn_check_off_focused_holo_light
    int btn_check_off_holo_dark -> btn_check_off_holo_dark
    int btn_check_off_holo_light -> btn_check_off_holo_light
    int btn_check_off_pressed_holo_dark -> btn_check_off_pressed_holo_dark
    int btn_check_off_pressed_holo_light -> btn_check_off_pressed_holo_light
    int btn_check_on_disabled_focused_holo_dark -> btn_check_on_disabled_focused_holo_dark
    int btn_check_on_disabled_focused_holo_light -> btn_check_on_disabled_focused_holo_light
    int btn_check_on_disabled_holo_dark -> btn_check_on_disabled_holo_dark
    int btn_check_on_disabled_holo_light -> btn_check_on_disabled_holo_light
    int btn_check_on_focused_holo_dark -> btn_check_on_focused_holo_dark
    int btn_check_on_focused_holo_light -> btn_check_on_focused_holo_light
    int btn_check_on_holo_dark -> btn_check_on_holo_dark
    int btn_check_on_holo_light -> btn_check_on_holo_light
    int btn_check_on_pressed_holo_dark -> btn_check_on_pressed_holo_dark
    int btn_check_on_pressed_holo_light -> btn_check_on_pressed_holo_light
    int btn_check_orange -> btn_check_orange
    int btn_checkbox_holo_dark -> btn_checkbox_holo_dark
    int btn_checkbox_holo_light -> btn_checkbox_holo_light
    int btn_cupon_normal -> btn_cupon_normal
    int btn_cupon_pressed -> btn_cupon_pressed
    int btn_default_disabled_focused_holo_dark -> btn_default_disabled_focused_holo_dark
    int btn_default_disabled_focused_holo_light -> btn_default_disabled_focused_holo_light
    int btn_default_disabled_holo_dark -> btn_default_disabled_holo_dark
    int btn_default_disabled_holo_light -> btn_default_disabled_holo_light
    int btn_default_focused_holo_dark -> btn_default_focused_holo_dark
    int btn_default_focused_holo_light -> btn_default_focused_holo_light
    int btn_default_holo_dark -> btn_default_holo_dark
    int btn_default_holo_light -> btn_default_holo_light
    int btn_default_normal_holo_dark -> btn_default_normal_holo_dark
    int btn_default_normal_holo_light -> btn_default_normal_holo_light
    int btn_default_pressed_holo_dark -> btn_default_pressed_holo_dark
    int btn_default_pressed_holo_light -> btn_default_pressed_holo_light
    int btn_edit -> btn_edit
    int btn_facebook -> btn_facebook
    int btn_facebook_pressed -> btn_facebook_pressed
    int btn_grey -> btn_grey
    int btn_grey_highlight -> btn_grey_highlight
    int btn_grey_normal -> btn_grey_normal
    int btn_group_disabled_holo_dark -> btn_group_disabled_holo_dark
    int btn_group_disabled_holo_light -> btn_group_disabled_holo_light
    int btn_group_holo_dark -> btn_group_holo_dark
    int btn_group_holo_light -> btn_group_holo_light
    int btn_group_normal_holo_dark -> btn_group_normal_holo_dark
    int btn_group_normal_holo_light -> btn_group_normal_holo_light
    int btn_orange -> btn_orange
    int btn_orange_highlight -> btn_orange_highlight
    int btn_orange_normal -> btn_orange_normal
    int btn_radio_holo_dark -> btn_radio_holo_dark
    int btn_radio_holo_light -> btn_radio_holo_light
    int btn_radio_label_background -> btn_radio_label_background
    int btn_radio_off_disabled_focused_holo_dark -> btn_radio_off_disabled_focused_holo_dark
    int btn_radio_off_disabled_focused_holo_light -> btn_radio_off_disabled_focused_holo_light
    int btn_radio_off_disabled_holo_dark -> btn_radio_off_disabled_holo_dark
    int btn_radio_off_disabled_holo_light -> btn_radio_off_disabled_holo_light
    int btn_radio_off_focused_holo_dark -> btn_radio_off_focused_holo_dark
    int btn_radio_off_focused_holo_light -> btn_radio_off_focused_holo_light
    int btn_radio_off_holo_dark -> btn_radio_off_holo_dark
    int btn_radio_off_holo_light -> btn_radio_off_holo_light
    int btn_radio_off_pressed_holo_dark -> btn_radio_off_pressed_holo_dark
    int btn_radio_off_pressed_holo_light -> btn_radio_off_pressed_holo_light
    int btn_radio_on_disabled_focused_holo_dark -> btn_radio_on_disabled_focused_holo_dark
    int btn_radio_on_disabled_focused_holo_light -> btn_radio_on_disabled_focused_holo_light
    int btn_radio_on_disabled_holo_dark -> btn_radio_on_disabled_holo_dark
    int btn_radio_on_disabled_holo_light -> btn_radio_on_disabled_holo_light
    int btn_radio_on_focused_holo_dark -> btn_radio_on_focused_holo_dark
    int btn_radio_on_focused_holo_light -> btn_radio_on_focused_holo_light
    int btn_radio_on_holo_dark -> btn_radio_on_holo_dark
    int btn_radio_on_holo_light -> btn_radio_on_holo_light
    int btn_radio_on_pressed_holo_dark -> btn_radio_on_pressed_holo_dark
    int btn_radio_on_pressed_holo_light -> btn_radio_on_pressed_holo_light
    int btn_rating_star_off_focused_holo_dark -> btn_rating_star_off_focused_holo_dark
    int btn_rating_star_off_focused_holo_light -> btn_rating_star_off_focused_holo_light
    int btn_rating_star_off_normal_holo_dark -> btn_rating_star_off_normal_holo_dark
    int btn_rating_star_off_normal_holo_light -> btn_rating_star_off_normal_holo_light
    int btn_rating_star_off_pressed_holo_dark -> btn_rating_star_off_pressed_holo_dark
    int btn_rating_star_off_pressed_holo_light -> btn_rating_star_off_pressed_holo_light
    int btn_rating_star_on_focused_holo_dark -> btn_rating_star_on_focused_holo_dark
    int btn_rating_star_on_focused_holo_light -> btn_rating_star_on_focused_holo_light
    int btn_rating_star_on_normal_holo_dark -> btn_rating_star_on_normal_holo_dark
    int btn_rating_star_on_normal_holo_light -> btn_rating_star_on_normal_holo_light
    int btn_rating_star_on_pressed_holo_dark -> btn_rating_star_on_pressed_holo_dark
    int btn_rating_star_on_pressed_holo_light -> btn_rating_star_on_pressed_holo_light
    int btn_remove -> btn_remove
    int btn_sort_shadow -> btn_sort_shadow
    int btn_toggle_holo_dark -> btn_toggle_holo_dark
    int btn_toggle_holo_light -> btn_toggle_holo_light
    int btn_toggle_off_disabled_focused_holo_dark -> btn_toggle_off_disabled_focused_holo_dark
    int btn_toggle_off_disabled_focused_holo_light -> btn_toggle_off_disabled_focused_holo_light
    int btn_toggle_off_disabled_holo_dark -> btn_toggle_off_disabled_holo_dark
    int btn_toggle_off_disabled_holo_light -> btn_toggle_off_disabled_holo_light
    int btn_toggle_off_focused_holo_dark -> btn_toggle_off_focused_holo_dark
    int btn_toggle_off_focused_holo_light -> btn_toggle_off_focused_holo_light
    int btn_toggle_off_normal_holo_dark -> btn_toggle_off_normal_holo_dark
    int btn_toggle_off_normal_holo_light -> btn_toggle_off_normal_holo_light
    int btn_toggle_off_pressed_holo_dark -> btn_toggle_off_pressed_holo_dark
    int btn_toggle_off_pressed_holo_light -> btn_toggle_off_pressed_holo_light
    int btn_toggle_on_disabled_focused_holo_dark -> btn_toggle_on_disabled_focused_holo_dark
    int btn_toggle_on_disabled_focused_holo_light -> btn_toggle_on_disabled_focused_holo_light
    int btn_toggle_on_disabled_holo_dark -> btn_toggle_on_disabled_holo_dark
    int btn_toggle_on_disabled_holo_light -> btn_toggle_on_disabled_holo_light
    int btn_toggle_on_focused_holo_dark -> btn_toggle_on_focused_holo_dark
    int btn_toggle_on_focused_holo_light -> btn_toggle_on_focused_holo_light
    int btn_toggle_on_normal_holo_dark -> btn_toggle_on_normal_holo_dark
    int btn_toggle_on_normal_holo_light -> btn_toggle_on_normal_holo_light
    int btn_toggle_on_pressed_holo_dark -> btn_toggle_on_pressed_holo_dark
    int btn_toggle_on_pressed_holo_light -> btn_toggle_on_pressed_holo_light
    int bullit -> bullit
    int bullit_showing -> bullit_showing
    int button_dialog_background_selector -> button_dialog_background_selector
    int campaign_green_bar -> campaign_green_bar
    int campaign_orange_bar -> campaign_orange_bar
    int campaign_promobadge -> campaign_promobadge
    int campaign_yellow_bar -> campaign_yellow_bar
    int checkbox -> checkbox
    int checkbox_checked -> checkbox_checked
    int checkbox_off -> checkbox_off
    int checkbox_on -> checkbox_on
    int checkout_state04 -> checkout_state04
    int com_facebook_button_blue -> com_facebook_button_blue
    int com_facebook_button_blue_focused -> com_facebook_button_blue_focused
    int com_facebook_button_blue_normal -> com_facebook_button_blue_normal
    int com_facebook_button_blue_pressed -> com_facebook_button_blue_pressed
    int com_facebook_button_check -> com_facebook_button_check
    int com_facebook_button_check_off -> com_facebook_button_check_off
    int com_facebook_button_check_on -> com_facebook_button_check_on
    int com_facebook_button_grey_focused -> com_facebook_button_grey_focused
    int com_facebook_button_grey_normal -> com_facebook_button_grey_normal
    int com_facebook_button_grey_pressed -> com_facebook_button_grey_pressed
    int com_facebook_close -> com_facebook_close
    int com_facebook_inverse_icon -> com_facebook_inverse_icon
    int com_facebook_list_divider -> com_facebook_list_divider
    int com_facebook_list_section_header_background -> com_facebook_list_section_header_background
    int com_facebook_loginbutton_silver -> com_facebook_loginbutton_silver
    int com_facebook_logo -> com_facebook_logo
    int com_facebook_picker_default_separator_color -> com_facebook_picker_default_separator_color
    int com_facebook_picker_item_background -> com_facebook_picker_item_background
    int com_facebook_picker_list_focused -> com_facebook_picker_list_focused
    int com_facebook_picker_list_longpressed -> com_facebook_picker_list_longpressed
    int com_facebook_picker_list_pressed -> com_facebook_picker_list_pressed
    int com_facebook_picker_list_selector -> com_facebook_picker_list_selector
    int com_facebook_picker_list_selector_background_transition -> com_facebook_picker_list_selector_background_transition
    int com_facebook_picker_list_selector_disabled -> com_facebook_picker_list_selector_disabled
    int com_facebook_picker_magnifier -> com_facebook_picker_magnifier
    int com_facebook_picker_top_button -> com_facebook_picker_top_button
    int com_facebook_place_default_icon -> com_facebook_place_default_icon
    int com_facebook_profile_default_icon -> com_facebook_profile_default_icon
    int com_facebook_profile_picture_blank_portrait -> com_facebook_profile_picture_blank_portrait
    int com_facebook_profile_picture_blank_square -> com_facebook_profile_picture_blank_square
    int com_facebook_top_background -> com_facebook_top_background
    int com_facebook_top_button -> com_facebook_top_button
    int com_facebook_usersettingsfragment_background_gradient -> com_facebook_usersettingsfragment_background_gradient
    int day_picker_week_view_dayline_holo -> day_picker_week_view_dayline_holo
    int dialog_bottom_holo_dark -> dialog_bottom_holo_dark
    int dialog_bottom_holo_light -> dialog_bottom_holo_light
    int dialog_full_holo_dark -> dialog_full_holo_dark
    int dialog_full_holo_light -> dialog_full_holo_light
    int dialog_middle_holo_dark -> dialog_middle_holo_dark
    int dialog_middle_holo_light -> dialog_middle_holo_light
    int dialog_shadow -> dialog_shadow
    int dialog_top_holo_dark -> dialog_top_holo_dark
    int dialog_top_holo_light -> dialog_top_holo_light
    int discount_badge -> discount_badge
    int edit_text_holo_dark -> edit_text_holo_dark
    int edit_text_holo_light -> edit_text_holo_light
    int empty_shoppingcart -> empty_shoppingcart
    int expander_close_holo_dark -> expander_close_holo_dark
    int expander_close_holo_light -> expander_close_holo_light
    int expander_group_holo_dark -> expander_group_holo_dark
    int expander_group_holo_light -> expander_group_holo_light
    int expander_open_holo_dark -> expander_open_holo_dark
    int expander_open_holo_light -> expander_open_holo_light
    int fastscroll_label_left_holo_dark -> fastscroll_label_left_holo_dark
    int fastscroll_label_left_holo_light -> fastscroll_label_left_holo_light
    int fastscroll_label_right_holo_dark -> fastscroll_label_right_holo_dark
    int fastscroll_label_right_holo_light -> fastscroll_label_right_holo_light
    int fastscroll_thumb_default_holo -> fastscroll_thumb_default_holo
    int fastscroll_thumb_holo -> fastscroll_thumb_holo
    int fastscroll_thumb_pressed_holo -> fastscroll_thumb_pressed_holo
    int fastscroll_track_default_holo_dark -> fastscroll_track_default_holo_dark
    int fastscroll_track_default_holo_light -> fastscroll_track_default_holo_light
    int fastscroll_track_holo_dark -> fastscroll_track_holo_dark
    int fastscroll_track_holo_light -> fastscroll_track_holo_light
    int fastscroll_track_pressed_holo_dark -> fastscroll_track_pressed_holo_dark
    int fastscroll_track_pressed_holo_light -> fastscroll_track_pressed_holo_light
    int field_coupon -> field_coupon
    int filter_header -> filter_header
    int gradient_sidemenu -> gradient_sidemenu
    int gradient_splash -> gradient_splash
    int header_wishlist_blue -> header_wishlist_blue
    int header_wishlist_orange -> header_wishlist_orange
    int ic_account -> ic_account
    int ic_account_highlight -> ic_account_highlight
    int ic_cart -> ic_cart
    int ic_cart_highlight -> ic_cart_highlight
    int ic_categories -> ic_categories
    int ic_categories_highlight -> ic_categories_highlight
    int ic_check -> ic_check
    int ic_check_unchecked -> ic_check_unchecked
    int ic_countrychange -> ic_countrychange
    int ic_countrychange_highlight -> ic_countrychange_highlight
    int ic_drawer -> ic_drawer
    int ic_home -> ic_home
    int ic_home_highlight -> ic_home_highlight
    int ic_launcher -> ic_launcher
    int ic_next -> ic_next
    int ic_next_highlight -> ic_next_highlight
    int ic_orderstatuts -> ic_orderstatuts
    int ic_orderstatuts_highlighted -> ic_orderstatuts_highlighted
    int ic_push_status_bar -> ic_push_status_bar
    int ic_reduced -> ic_reduced
    int ic_search -> ic_search
    int ic_search_actionbar -> ic_search_actionbar
    int ic_search_actionbar_highnlight -> ic_search_actionbar_highnlight
    int ic_search_bar_highlight -> ic_search_bar_highlight
    int ic_search_bar_normal -> ic_search_bar_normal
    int ic_search_highlight -> ic_search_highlight
    int ic_share_highlight -> ic_share_highlight
    int ic_share_normal -> ic_share_normal
    int ic_sidemenu -> ic_sidemenu
    int ic_signin -> ic_signin
    int ic_signin_highlight -> ic_signin_highlight
    int ic_star_empty_big -> ic_star_empty_big
    int ic_star_empty_big_01 -> ic_star_empty_big_01
    int ic_star_empty_small -> ic_star_empty_small
    int ic_star_formular -> ic_star_formular
    int ic_star_full_big -> ic_star_full_big
    int ic_star_full_big_01 -> ic_star_full_big_01
    int ic_star_full_small -> ic_star_full_small
    int ic_star_half_big -> ic_star_half_big
    int ic_star_half_big_01 -> ic_star_half_big_01
    int ic_star_half_small -> ic_star_half_small
    int ico_aboutyou -> ico_aboutyou
    int ico_aboutyou_selfstep -> ico_aboutyou_selfstep
    int ico_addaddress_grey -> ico_addaddress_grey
    int ico_address -> ico_address
    int ico_address_selfstep -> ico_address_selfstep
    int ico_check -> ico_check
    int ico_delivery -> ico_delivery
    int ico_delivery_selfstep -> ico_delivery_selfstep
    int ico_facebook -> ico_facebook
    int ico_filter -> ico_filter
    int ico_filter_applied -> ico_filter_applied
    int ico_payment -> ico_payment
    int ico_payment_selfstep -> ico_payment_selfstep
    int ico_recent -> ico_recent
    int img_arrowfallback -> img_arrowfallback
    int img_instructions_pinch -> img_instructions_pinch
    int img_instructions_swipe -> img_instructions_swipe
    int img_instructions_tap -> img_instructions_tap
    int img_newarrival_en -> img_newarrival_en
    int img_newarrival_fr -> img_newarrival_fr
    int img_stepactive -> img_stepactive
    int img_stepinactive -> img_stepinactive
    int img_success -> img_success
    int img_tickfallback -> img_tickfallback
    int indicator_input_error -> indicator_input_error
    int item_background_holo_dark -> item_background_holo_dark
    int item_background_holo_light -> item_background_holo_light
    int jumia_ci_icon -> jumia_ci_icon
    int jumia_eg_icon -> jumia_eg_icon
    int jumia_ke_icon -> jumia_ke_icon
    int jumia_ma_icon -> jumia_ma_icon
    int jumia_ng_icon -> jumia_ng_icon
    int jumia_selector_header_search -> jumia_selector_header_search
    int jumia_ug_icon -> jumia_ug_icon
    int list_activated_holo -> list_activated_holo
    int list_divider_holo_dark -> list_divider_holo_dark
    int list_divider_holo_light -> list_divider_holo_light
    int list_focused_holo -> list_focused_holo
    int list_longpressed_holo -> list_longpressed_holo
    int list_pressed_holo_dark -> list_pressed_holo_dark
    int list_pressed_holo_light -> list_pressed_holo_light
    int list_section_divider_holo_dark -> list_section_divider_holo_dark
    int list_section_divider_holo_light -> list_section_divider_holo_light
    int list_selector_background_transition_holo_dark -> list_selector_background_transition_holo_dark
    int list_selector_background_transition_holo_light -> list_selector_background_transition_holo_light
    int list_selector_disabled_holo_dark -> list_selector_disabled_holo_dark
    int list_selector_disabled_holo_light -> list_selector_disabled_holo_light
    int list_selector_holo_dark -> list_selector_holo_dark
    int list_selector_holo_light -> list_selector_holo_light
    int loading_bar_big -> loading_bar_big
    int logo_ic -> logo_ic
    int logo_ic_icon -> logo_ic_icon
    int logo_ic_sidemenu -> logo_ic_sidemenu
    int logo_ic_sidemenu_highlight -> logo_ic_sidemenu_highlight
    int logo_ic_text -> logo_ic_text
    int logo_jumiafallback -> logo_jumiafallback
    int logo_splash -> logo_splash
    int magnlens -> magnlens
    int map_ci -> map_ci
    int map_eg -> map_eg
    int map_ke -> map_ke
    int map_ma -> map_ma
    int map_ng -> map_ng
    int map_ug -> map_ug
    int menu_background_fill_parent_width_holo_dark -> menu_background_fill_parent_width_holo_dark
    int menu_background_fill_parent_width_holo_light -> menu_background_fill_parent_width_holo_light
    int menu_dropdown_panel_holo_dark -> menu_dropdown_panel_holo_dark
    int menu_dropdown_panel_holo_light -> menu_dropdown_panel_holo_light
    int menu_hardkey_panel_holo_dark -> menu_hardkey_panel_holo_dark
    int menu_hardkey_panel_holo_light -> menu_hardkey_panel_holo_light
    int modal_dialog_header -> modal_dialog_header
    int no_image_large -> no_image_large
    int no_image_small -> no_image_small
    int no_items_icon_2 -> no_items_icon_2
    int numberpicker_selection_divider -> numberpicker_selection_divider
    int old_switch_thumb_activated_holo_dark -> old_switch_thumb_activated_holo_dark
    int old_switch_thumb_activated_holo_light -> old_switch_thumb_activated_holo_light
    int old_switch_thumb_disabled_holo_dark -> old_switch_thumb_disabled_holo_dark
    int old_switch_thumb_disabled_holo_light -> old_switch_thumb_disabled_holo_light
    int old_switch_thumb_holo_dark -> old_switch_thumb_holo_dark
    int old_switch_thumb_holo_light -> old_switch_thumb_holo_light
    int old_switch_thumb_pressed_holo_dark -> old_switch_thumb_pressed_holo_dark
    int old_switch_thumb_pressed_holo_light -> old_switch_thumb_pressed_holo_light
    int panel_bg_holo_dark -> panel_bg_holo_dark
    int panel_bg_holo_light -> panel_bg_holo_light
    int product_list_item_star_rating_bar_drawable -> product_list_item_star_rating_bar_drawable
    int progress_bg_holo_dark -> progress_bg_holo_dark
    int progress_bg_holo_light -> progress_bg_holo_light
    int progress_horizontal_holo_dark -> progress_horizontal_holo_dark
    int progress_horizontal_holo_light -> progress_horizontal_holo_light
    int progress_indeterminate_horizontal_holo -> progress_indeterminate_horizontal_holo
    int progress_large_holo -> progress_large_holo
    int progress_medium_holo -> progress_medium_holo
    int progress_primary_holo_dark -> progress_primary_holo_dark
    int progress_primary_holo_light -> progress_primary_holo_light
    int progress_secondary_holo_dark -> progress_secondary_holo_dark
    int progress_secondary_holo_light -> progress_secondary_holo_light
    int progress_small_holo -> progress_small_holo
    int progressbar_indeterminate_holo1 -> progressbar_indeterminate_holo1
    int progressbar_indeterminate_holo2 -> progressbar_indeterminate_holo2
    int progressbar_indeterminate_holo3 -> progressbar_indeterminate_holo3
    int progressbar_indeterminate_holo4 -> progressbar_indeterminate_holo4
    int progressbar_indeterminate_holo5 -> progressbar_indeterminate_holo5
    int progressbar_indeterminate_holo6 -> progressbar_indeterminate_holo6
    int progressbar_indeterminate_holo7 -> progressbar_indeterminate_holo7
    int progressbar_indeterminate_holo8 -> progressbar_indeterminate_holo8
    int radiobutton -> radiobutton
    int radiobutton_selected -> radiobutton_selected
    int rate_star_big_half_holo_dark -> rate_star_big_half_holo_dark
    int rate_star_big_half_holo_light -> rate_star_big_half_holo_light
    int rate_star_big_off_holo_dark -> rate_star_big_off_holo_dark
    int rate_star_big_off_holo_light -> rate_star_big_off_holo_light
    int rate_star_big_on_holo_dark -> rate_star_big_on_holo_dark
    int rate_star_big_on_holo_light -> rate_star_big_on_holo_light
    int rate_star_small_half_holo_dark -> rate_star_small_half_holo_dark
    int rate_star_small_half_holo_light -> rate_star_small_half_holo_light
    int rate_star_small_off_holo_dark -> rate_star_small_off_holo_dark
    int rate_star_small_off_holo_light -> rate_star_small_off_holo_light
    int rate_star_small_on_holo_dark -> rate_star_small_on_holo_dark
    int rate_star_small_on_holo_light -> rate_star_small_on_holo_light
    int ratingbar_full_empty_holo_dark -> ratingbar_full_empty_holo_dark
    int ratingbar_full_empty_holo_light -> ratingbar_full_empty_holo_light
    int ratingbar_full_filled_holo_dark -> ratingbar_full_filled_holo_dark
    int ratingbar_full_filled_holo_light -> ratingbar_full_filled_holo_light
    int ratingbar_full_holo_dark -> ratingbar_full_holo_dark
    int ratingbar_full_holo_light -> ratingbar_full_holo_light
    int ratingbar_holo_dark -> ratingbar_holo_dark
    int ratingbar_holo_light -> ratingbar_holo_light
    int ratingbar_small_holo_dark -> ratingbar_small_holo_dark
    int ratingbar_small_holo_light -> ratingbar_small_holo_light
    int rounded_bkg -> rounded_bkg
    int scrollbar_handle_holo_dark -> scrollbar_handle_holo_dark
    int scrollbar_handle_holo_light -> scrollbar_handle_holo_light
    int scrubber_control_disabled_holo -> scrubber_control_disabled_holo
    int scrubber_control_focused_holo -> scrubber_control_focused_holo
    int scrubber_control_normal_holo -> scrubber_control_normal_holo
    int scrubber_control_pressed_holo -> scrubber_control_pressed_holo
    int scrubber_control_selector_holo -> scrubber_control_selector_holo
    int scrubber_primary_holo -> scrubber_primary_holo
    int scrubber_progress_horizontal_holo_dark -> scrubber_progress_horizontal_holo_dark
    int scrubber_progress_horizontal_holo_light -> scrubber_progress_horizontal_holo_light
    int scrubber_secondary_holo -> scrubber_secondary_holo
    int scrubber_track_holo_dark -> scrubber_track_holo_dark
    int scrubber_track_holo_light -> scrubber_track_holo_light
    int searchfield -> searchfield
    int seek_thumb_normal -> seek_thumb_normal
    int seek_thumb_pressed -> seek_thumb_pressed
    int selector_address_radio -> selector_address_radio
    int selector_catalog_filter -> selector_catalog_filter
    int selector_checkbox -> selector_checkbox
    int selector_checkbox_orange -> selector_checkbox_orange
    int selector_checkout_step_1_icon -> selector_checkout_step_1_icon
    int selector_checkout_step_2_icon -> selector_checkout_step_2_icon
    int selector_checkout_step_3_icon -> selector_checkout_step_3_icon
    int selector_checkout_step_4_icon -> selector_checkout_step_4_icon
    int selector_checkout_step_back -> selector_checkout_step_back
    int selector_clickableitem_highlight -> selector_clickableitem_highlight
    int selector_dropdown_indicator -> selector_dropdown_indicator
    int selector_edittext_bottomline -> selector_edittext_bottomline
    int selector_header_wishlist -> selector_header_wishlist
    int selector_listitem_highlight -> selector_listitem_highlight
    int selector_navigation_account -> selector_navigation_account
    int selector_navigation_basket_background -> selector_navigation_basket_background
    int selector_navigation_categories -> selector_navigation_categories
    int selector_navigation_countrychange -> selector_navigation_countrychange
    int selector_navigation_divider -> selector_navigation_divider
    int selector_navigation_generic_component -> selector_navigation_generic_component
    int selector_navigation_home -> selector_navigation_home
    int selector_navigation_loginout -> selector_navigation_loginout
    int selector_navigation_search -> selector_navigation_search
    int selector_navigation_trackorder -> selector_navigation_trackorder
    int selector_next -> selector_next
    int selector_productdetails_item_underline -> selector_productdetails_item_underline
    int selector_search_edit_icon -> selector_search_edit_icon
    int selector_share -> selector_share
    int selector_shop -> selector_shop
    int shape_border_flag -> shape_border_flag
    int shape_itemhighlight -> shape_itemhighlight
    int shape_pageindicator -> shape_pageindicator
    int spinner -> spinner
    int spinner_16_inner_holo -> spinner_16_inner_holo
    int spinner_16_outer_holo -> spinner_16_outer_holo
    int spinner_20_inner_holo -> spinner_20_inner_holo
    int spinner_48_inner_holo -> spinner_48_inner_holo
    int spinner_48_outer_holo -> spinner_48_outer_holo
    int spinner_76_inner_holo -> spinner_76_inner_holo
    int spinner_76_outer_holo -> spinner_76_outer_holo
    int spinner_background_holo_dark -> spinner_background_holo_dark
    int spinner_background_holo_light -> spinner_background_holo_light
    int spinner_default_holo_dark -> spinner_default_holo_dark
    int spinner_default_holo_light -> spinner_default_holo_light
    int spinner_disabled_holo_dark -> spinner_disabled_holo_dark
    int spinner_disabled_holo_light -> spinner_disabled_holo_light
    int spinner_focused_holo_dark -> spinner_focused_holo_dark
    int spinner_focused_holo_light -> spinner_focused_holo_light
    int spinner_pressed_holo_dark -> spinner_pressed_holo_dark
    int spinner_pressed_holo_light -> spinner_pressed_holo_light
    int spinner_wrongfield -> spinner_wrongfield
    int spinnerbutton_background_holo_light -> spinnerbutton_background_holo_light
    int spinnerbutton_normal_holo_light -> spinnerbutton_normal_holo_light
    int spinnerbutton_pressed_holo_light -> spinnerbutton_pressed_holo_light
    int star_ratingbar_big -> star_ratingbar_big
    int star_ratingbar_big_empty -> star_ratingbar_big_empty
    int star_ratingbar_big_filled -> star_ratingbar_big_filled
    int star_ratingbar_big_half -> star_ratingbar_big_half
    int star_ratingbar_small -> star_ratingbar_small
    int star_ratingbar_small_empty -> star_ratingbar_small_empty
    int star_ratingbar_small_filled -> star_ratingbar_small_filled
    int star_ratingbar_small_half -> star_ratingbar_small_half
    int star_ratingbar_verybig -> star_ratingbar_verybig
    int star_ratingbar_verybig_empty -> star_ratingbar_verybig_empty
    int star_ratingbar_verybig_filled -> star_ratingbar_verybig_filled
    int star_ratingbar_verybig_half -> star_ratingbar_verybig_half
    int suggestionlayer -> suggestionlayer
    int switch_bg_focused_holo_dark -> switch_bg_focused_holo_dark
    int switch_bg_focused_holo_light -> switch_bg_focused_holo_light
    int switch_bg_holo_dark -> switch_bg_holo_dark
    int switch_bg_holo_light -> switch_bg_holo_light
    int switch_inner_holo_dark -> switch_inner_holo_dark
    int switch_inner_holo_light -> switch_inner_holo_light
    int switch_old_inner_holo_dark -> switch_old_inner_holo_dark
    int switch_old_inner_holo_light -> switch_old_inner_holo_light
    int switch_thumb_activated_holo_dark -> switch_thumb_activated_holo_dark
    int switch_thumb_activated_holo_light -> switch_thumb_activated_holo_light
    int switch_thumb_disabled_holo_dark -> switch_thumb_disabled_holo_dark
    int switch_thumb_disabled_holo_light -> switch_thumb_disabled_holo_light
    int switch_thumb_holo_dark -> switch_thumb_holo_dark
    int switch_thumb_holo_light -> switch_thumb_holo_light
    int switch_thumb_pressed_holo_dark -> switch_thumb_pressed_holo_dark
    int switch_thumb_pressed_holo_light -> switch_thumb_pressed_holo_light
    int switch_track_holo_dark -> switch_track_holo_dark
    int switch_track_holo_light -> switch_track_holo_light
    int textfield_activated_holo_dark -> textfield_activated_holo_dark
    int textfield_activated_holo_light -> textfield_activated_holo_light
    int textfield_default_holo_dark -> textfield_default_holo_dark
    int textfield_default_holo_light -> textfield_default_holo_light
    int textfield_disabled_focused_holo_dark -> textfield_disabled_focused_holo_dark
    int textfield_disabled_focused_holo_light -> textfield_disabled_focused_holo_light
    int textfield_disabled_holo_dark -> textfield_disabled_holo_dark
    int textfield_disabled_holo_light -> textfield_disabled_holo_light
    int textfield_focused_holo_light -> textfield_focused_holo_light
    int textfield_normal -> textfield_normal
    int textfield_wrongfield -> textfield_wrongfield
    int titlebar -> titlebar
    int titlebar_noaccess -> titlebar_noaccess
    int toast -> toast
    int toast_frame -> toast_frame
    int transparent -> transparent
    int vpi__tab_indicator -> vpi__tab_indicator
    int vpi__tab_selected_focused_holo -> vpi__tab_selected_focused_holo
    int vpi__tab_selected_holo -> vpi__tab_selected_holo
    int vpi__tab_selected_pressed_holo -> vpi__tab_selected_pressed_holo
    int vpi__tab_unselected_focused_holo -> vpi__tab_unselected_focused_holo
    int vpi__tab_unselected_holo -> vpi__tab_unselected_holo
    int vpi__tab_unselected_pressed_holo -> vpi__tab_unselected_pressed_holo
pt.rocket.view.R$id -> cav:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__titleDivider -> abs__titleDivider
    int abs__up -> abs__up
    int alertTitle -> alertTitle
    int alert_text -> alert_text
    int alert_view -> alert_view
    int amPm -> amPm
    int appearence_rating -> appearence_rating
    int appearence_title_option -> appearence_title_option
    int arrow -> arrow
    int arrow_right -> arrow_right
    int articles_count -> articles_count
    int atThumb -> atThumb
    int authButton -> authButton
    int back_level_button -> back_level_button
    int banner_view -> banner_view
    int billing_label -> billing_label
    int bottom -> bottom
    int bottom_line -> bottom_line
    int brands_list_frame -> brands_list_frame
    int btn_checkout_continue -> btn_checkout_continue
    int btn_track_order -> btn_track_order
    int button1 -> button1
    int button2 -> button2
    int button3 -> button3
    int buttonPanel -> buttonPanel
    int buttonPanelTopDivivder -> buttonPanelTopDivivder
    int button_always -> button_always
    int button_bar -> button_bar
    int button_cancel -> button_cancel
    int button_container -> button_container
    int button_once -> button_once
    int button_save -> button_save
    int buy_now -> buy_now
    int calendar_view -> calendar_view
    int call_to_order -> call_to_order
    int campaign_banner -> campaign_banner
    int campaign_grid -> campaign_grid
    int campaign_item_button_buy -> campaign_item_button_buy
    int campaign_item_discount -> campaign_item_discount
    int campaign_item_name -> campaign_item_name
    int campaign_item_price -> campaign_item_price
    int campaign_item_save_label -> campaign_item_save_label
    int campaign_item_save_value -> campaign_item_save_value
    int campaign_item_size_container -> campaign_item_size_container
    int campaign_item_size_divider -> campaign_item_size_divider
    int campaign_item_size_label -> campaign_item_size_label
    int campaign_item_size_spinner -> campaign_item_size_spinner
    int campaign_item_stock_bar -> campaign_item_stock_bar
    int campaign_item_stock_label -> campaign_item_stock_label
    int campaign_item_stock_off -> campaign_item_stock_off
    int campaign_item_stock_value -> campaign_item_stock_value
    int campaign_pager -> campaign_pager
    int campaign_pager_tab -> campaign_pager_tab
    int cart_count -> cart_count
    int cart_count_layout -> cart_count_layout
    int categories_child_fragments_container -> categories_child_fragments_container
    int categories_fragments_container -> categories_fragments_container
    int categories_fragments_main -> categories_fragments_main
    int categories_grid -> categories_grid
    int categories_layout -> categories_layout
    int category_logo_right -> category_logo_right
    int category_name -> category_name
    int center -> center
    int center_horizontal -> center_horizontal
    int center_vertical -> center_vertical
    int change_country_list -> change_country_list
    int change_country_row_container -> change_country_row_container
    int changequantity_button -> changequantity_button
    int checkbox -> checkbox
    int checkout_about_you_scroll -> checkout_about_you_scroll
    int checkout_address_billing_checkbox -> checkout_address_billing_checkbox
    int checkout_address_button_container -> checkout_address_button_container
    int checkout_address_button_enter -> checkout_address_button_enter
    int checkout_address_form_billing_container -> checkout_address_form_billing_container
    int checkout_address_form_include_billing -> checkout_address_form_include_billing
    int checkout_address_form_include_shipping -> checkout_address_form_include_shipping
    int checkout_address_form_shipping_container -> checkout_address_form_shipping_container
    int checkout_address_form_shipping_main -> checkout_address_form_shipping_main
    int checkout_address_form_shipping_title -> checkout_address_form_shipping_title
    int checkout_address_item_btn_container -> checkout_address_item_btn_container
    int checkout_address_item_btn_delete -> checkout_address_item_btn_delete
    int checkout_address_item_btn_edit -> checkout_address_item_btn_edit
    int checkout_address_item_btn_radio -> checkout_address_item_btn_radio
    int checkout_address_item_name -> checkout_address_item_name
    int checkout_address_item_phone -> checkout_address_item_phone
    int checkout_address_item_postcode -> checkout_address_item_postcode
    int checkout_address_item_region -> checkout_address_item_region
    int checkout_address_item_street -> checkout_address_item_street
    int checkout_address_master -> checkout_address_master
    int checkout_address_required_text -> checkout_address_required_text
    int checkout_addresses_button_enter -> checkout_addresses_button_enter
    int checkout_addresses_default_button_add -> checkout_addresses_default_button_add
    int checkout_addresses_default_button_container -> checkout_addresses_default_button_container
    int checkout_addresses_default_container -> checkout_addresses_default_container
    int checkout_addresses_default_title -> checkout_addresses_default_title
    int checkout_addresses_one_scroll -> checkout_addresses_one_scroll
    int checkout_addresses_other_button_add -> checkout_addresses_other_button_add
    int checkout_addresses_other_container -> checkout_addresses_other_container
    int checkout_addresses_other_title -> checkout_addresses_other_title
    int checkout_button -> checkout_button
    int checkout_edit_address_required_text -> checkout_edit_address_required_text
    int checkout_edit_button_cancel -> checkout_edit_button_cancel
    int checkout_edit_button_enter -> checkout_edit_button_enter
    int checkout_edit_form_container -> checkout_edit_form_container
    int checkout_header -> checkout_header
    int checkout_header_main_step -> checkout_header_main_step
    int checkout_header_step_1 -> checkout_header_step_1
    int checkout_header_step_1_icon -> checkout_header_step_1_icon
    int checkout_header_step_1_text -> checkout_header_step_1_text
    int checkout_header_step_2 -> checkout_header_step_2
    int checkout_header_step_2_icon -> checkout_header_step_2_icon
    int checkout_header_step_2_text -> checkout_header_step_2_text
    int checkout_header_step_3 -> checkout_header_step_3
    int checkout_header_step_3_icon -> checkout_header_step_3_icon
    int checkout_header_step_3_text -> checkout_header_step_3_text
    int checkout_header_step_4 -> checkout_header_step_4
    int checkout_header_step_4_icon -> checkout_header_step_4_icon
    int checkout_header_step_4_text -> checkout_header_step_4_text
    int checkout_login_form_button_enter -> checkout_login_form_button_enter
    int checkout_login_form_button_facebook -> checkout_login_form_button_facebook
    int checkout_login_form_button_password -> checkout_login_form_button_password
    int checkout_login_form_container -> checkout_login_form_container
    int checkout_login_form_main -> checkout_login_form_main
    int checkout_login_main -> checkout_login_main
    int checkout_login_toogle -> checkout_login_toogle
    int checkout_my_order_billing_address_btn_edit -> checkout_my_order_billing_address_btn_edit
    int checkout_my_order_billing_address_is_same -> checkout_my_order_billing_address_is_same
    int checkout_my_order_billing_address_list -> checkout_my_order_billing_address_list
    int checkout_my_order_button_enter -> checkout_my_order_button_enter
    int checkout_my_order_buttons -> checkout_my_order_buttons
    int checkout_my_order_extra_costs -> checkout_my_order_extra_costs
    int checkout_my_order_include_billing_address -> checkout_my_order_include_billing_address
    int checkout_my_order_include_cart -> checkout_my_order_include_cart
    int checkout_my_order_include_payment_options -> checkout_my_order_include_payment_options
    int checkout_my_order_include_shipping_address -> checkout_my_order_include_shipping_address
    int checkout_my_order_include_shipping_method -> checkout_my_order_include_shipping_method
    int checkout_my_order_include_subtotal -> checkout_my_order_include_subtotal
    int checkout_my_order_payment_coupon -> checkout_my_order_payment_coupon
    int checkout_my_order_payment_extra -> checkout_my_order_payment_extra
    int checkout_my_order_payment_name -> checkout_my_order_payment_name
    int checkout_my_order_payment_options_btn_edit -> checkout_my_order_payment_options_btn_edit
    int checkout_my_order_products_extracosts_container -> checkout_my_order_products_extracosts_container
    int checkout_my_order_products_list -> checkout_my_order_products_list
    int checkout_my_order_products_shippingfee_container -> checkout_my_order_products_shippingfee_container
    int checkout_my_order_products_text_n_items -> checkout_my_order_products_text_n_items
    int checkout_my_order_products_text_shippingfee -> checkout_my_order_products_text_shippingfee
    int checkout_my_order_products_text_total -> checkout_my_order_products_text_total
    int checkout_my_order_products_text_total_items -> checkout_my_order_products_text_total_items
    int checkout_my_order_products_text_vat_value -> checkout_my_order_products_text_vat_value
    int checkout_my_order_products_text_voucher -> checkout_my_order_products_text_voucher
    int checkout_my_order_products_total_container -> checkout_my_order_products_total_container
    int checkout_my_order_products_total_items_container -> checkout_my_order_products_total_items_container
    int checkout_my_order_products_voucher_container -> checkout_my_order_products_voucher_container
    int checkout_my_order_shipping_address_btn_edit -> checkout_my_order_shipping_address_btn_edit
    int checkout_my_order_shipping_address_list -> checkout_my_order_shipping_address_list
    int checkout_my_order_shipping_method_btn_edit -> checkout_my_order_shipping_method_btn_edit
    int checkout_my_order_shipping_method_name -> checkout_my_order_shipping_method_name
    int checkout_payment_button_enter -> checkout_payment_button_enter
    int checkout_payment_methods_container -> checkout_payment_methods_container
    int checkout_poll_button_enter -> checkout_poll_button_enter
    int checkout_poll_form_container -> checkout_poll_form_container
    int checkout_shipping_button_enter -> checkout_shipping_button_enter
    int checkout_shipping_methods_container -> checkout_shipping_methods_container
    int checkout_signup_form_button_enter -> checkout_signup_form_button_enter
    int checkout_signup_form_button_facebook -> checkout_signup_form_button_facebook
    int checkout_signup_form_container -> checkout_signup_form_container
    int checkout_signup_form_main -> checkout_signup_form_main
    int checkout_signup_main -> checkout_signup_main
    int checkout_signup_toogle -> checkout_signup_toogle
    int checkout_summary_extra_costs -> checkout_summary_extra_costs
    int checkout_summary_extra_costs_container -> checkout_summary_extra_costs_container
    int checkout_summary_extra_costs_value -> checkout_summary_extra_costs_value
    int checkout_summary_include_no_items -> checkout_summary_include_no_items
    int checkout_summary_include_products -> checkout_summary_include_products
    int checkout_summary_include_shipping_address -> checkout_summary_include_shipping_address
    int checkout_summary_include_shipping_method -> checkout_summary_include_shipping_method
    int checkout_summary_include_total -> checkout_summary_include_total
    int checkout_summary_products_btn_edit -> checkout_summary_products_btn_edit
    int checkout_summary_products_list -> checkout_summary_products_list
    int checkout_summary_products_shippingfee_container -> checkout_summary_products_shippingfee_container
    int checkout_summary_products_subtotal_container -> checkout_summary_products_subtotal_container
    int checkout_summary_products_text_shippingfee -> checkout_summary_products_text_shippingfee
    int checkout_summary_products_text_subtotal -> checkout_summary_products_text_subtotal
    int checkout_summary_products_text_vat_value -> checkout_summary_products_text_vat_value
    int checkout_summary_products_text_voucher -> checkout_summary_products_text_voucher
    int checkout_summary_products_vat_container -> checkout_summary_products_vat_container
    int checkout_summary_products_voucher_container -> checkout_summary_products_voucher_container
    int checkout_summary_shipping_address_btn_edit -> checkout_summary_shipping_address_btn_edit
    int checkout_summary_shipping_address_list -> checkout_summary_shipping_address_list
    int checkout_summary_shipping_method_btn_edit -> checkout_summary_shipping_method_btn_edit
    int checkout_summary_shipping_method_text -> checkout_summary_shipping_method_text
    int checkout_summary_total_container -> checkout_summary_total_container
    int checkout_summary_total_text -> checkout_summary_total_text
    int clientEmail -> clientEmail
    int clientFirstName -> clientFirstName
    int clientLastName -> clientLastName
    int clip -> clip
    int clip_horizontal -> clip_horizontal
    int clip_vertical -> clip_vertical
    int com_facebook_login_activity_progress_bar -> com_facebook_login_activity_progress_bar
    int com_facebook_picker_activity_circle -> com_facebook_picker_activity_circle
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int com_facebook_picker_checkbox_stub -> com_facebook_picker_checkbox_stub
    int com_facebook_picker_divider -> com_facebook_picker_divider
    int com_facebook_picker_done_button -> com_facebook_picker_done_button
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_list_view -> com_facebook_picker_list_view
    int com_facebook_picker_profile_pic_stub -> com_facebook_picker_profile_pic_stub
    int com_facebook_picker_row_activity_circle -> com_facebook_picker_row_activity_circle
    int com_facebook_picker_search_text -> com_facebook_picker_search_text
    int com_facebook_picker_title -> com_facebook_picker_title
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_picker_top_bar -> com_facebook_picker_top_bar
    int com_facebook_search_bar_view -> com_facebook_search_bar_view
    int com_facebook_usersettingsfragment_login_button -> com_facebook_usersettingsfragment_login_button
    int com_facebook_usersettingsfragment_logo_image -> com_facebook_usersettingsfragment_logo_image
    int com_facebook_usersettingsfragment_profile_name -> com_facebook_usersettingsfragment_profile_name
    int component_text -> component_text
    int container -> container
    int contentPanel -> contentPanel
    int content_container -> content_container
    int content_frame -> content_frame
    int contextual_loading -> contextual_loading
    int continue_shopping_button -> continue_shopping_button
    int country_name -> country_name
    int custom -> custom
    int customPanel -> customPanel
    int dark -> dark
    int datePicker -> datePicker
    int date_review -> date_review
    int day -> day
    int day_names -> day_names
    int decrement -> decrement
    int delete_button -> delete_button
    int details_container -> details_container
    int dev_text -> dev_text
    int dialog -> dialog
    int dialog_filter_button_cancel -> dialog_filter_button_cancel
    int dialog_filter_button_done -> dialog_filter_button_done
    int dialog_filter_buttons_container -> dialog_filter_buttons_container
    int dialog_filter_check_discount -> dialog_filter_check_discount
    int dialog_filter_container -> dialog_filter_container
    int dialog_filter_header_clear -> dialog_filter_header_clear
    int dialog_filter_header_container -> dialog_filter_header_container
    int dialog_filter_header_title -> dialog_filter_header_title
    int dialog_filter_list -> dialog_filter_list
    int dialog_filter_one -> dialog_filter_one
    int dialog_filter_pinnedlist -> dialog_filter_pinnedlist
    int dialog_filter_range_bar -> dialog_filter_range_bar
    int dialog_filter_range_text -> dialog_filter_range_text
    int dialog_item_checkbox -> dialog_item_checkbox
    int dialog_item_color_box -> dialog_item_color_box
    int dialog_item_subtitle -> dialog_item_subtitle
    int dialog_item_title -> dialog_item_title
    int dialog_list_section -> dialog_list_section
    int dialog_text -> dialog_text
    int dialog_title -> dialog_title
    int disableHome -> disableHome
    int discount_percentage -> discount_percentage
    int divider -> divider
    int dividerLeft -> dividerLeft
    int dividerRight -> dividerRight
    int divider_horizontal_container -> divider_horizontal_container
    int drawer_layout -> drawer_layout
    int dropdown -> dropdown
    int dummy_search_layout -> dummy_search_layout
    int edit -> edit
    int edit_query -> edit_query
    int element_1 -> element_1
    int element_2 -> element_2
    int element_3 -> element_3
    int element_4 -> element_4
    int element_5 -> element_5
    int empty -> empty
    int end -> end
    int error_trakcing_order -> error_trakcing_order
    int expanded_menu -> expanded_menu
    int extra_costs_container -> extra_costs_container
    int extra_costs_value -> extra_costs_value
    int extras -> extras
    int fallback_best -> fallback_best
    int fallback_bottom_text -> fallback_bottom_text
    int fallback_bottom_text2 -> fallback_bottom_text2
    int fallback_choice -> fallback_choice
    int fallback_choice_container -> fallback_choice_container
    int fallback_content -> fallback_content
    int fallback_country -> fallback_country
    int fallback_country_bottom -> fallback_country_bottom
    int fallback_country_bottom_text -> fallback_country_bottom_text
    int fallback_country_bottom_text2 -> fallback_country_bottom_text2
    int fallback_country_double -> fallback_country_double
    int fallback_country_map -> fallback_country_map
    int fallback_country_top -> fallback_country_top
    int fallback_coutry_container -> fallback_coutry_container
    int fallback_doorstep -> fallback_doorstep
    int fallback_options_bottom -> fallback_options_bottom
    int fallback_options_bottom_container -> fallback_options_bottom_container
    int fallback_options_container -> fallback_options_container
    int fallback_retry -> fallback_retry
    int fallback_title -> fallback_title
    int fallback_title_container -> fallback_title_container
    int fill -> fill
    int fill_horizontal -> fill_horizontal
    int fill_vertical -> fill_vertical
    int flag -> flag
    int floating -> floating
    int fontLoaderFont -> fontLoaderFont
    int fontLoaderFontFamily -> fontLoaderFontFamily
    int fontLoaderFontStyle -> fontLoaderFontStyle
    int forgotpass_introtext -> forgotpass_introtext
    int forgotpass_introtext_subtext -> forgotpass_introtext_subtext
    int forgottenPasswordContainer -> forgottenPasswordContainer
    int form_container -> form_container
    int fragment_change_country -> fragment_change_country
    int fragment_content -> fragment_content
    int fragment_slide_menu -> fragment_slide_menu
    int fragment_writereview -> fragment_writereview
    int fullscreen -> fullscreen
    int general_container -> general_container
    int grey_line -> grey_line
    int grey_line_vertical -> grey_line_vertical
    int grey_line_vertical2 -> grey_line_vertical2
    int group -> group
    int header_title -> header_title
    int homeAsUp -> homeAsUp
    int home_fallback_content -> home_fallback_content
    int home_fallback_country_map -> home_fallback_country_map
    int home_tip -> home_tip
    int home_tip_img -> home_tip_img
    int home_tip_text -> home_tip_text
    int home_titles -> home_titles
    int home_view_pager_content -> home_view_pager_content
    int home_viewpager -> home_viewpager
    int hour -> hour
    int ic_logo -> ic_logo
    int icon -> icon
    int image -> image
    int image_container -> image_container
    int image_gallery_container -> image_gallery_container
    int image_is_new -> image_is_new
    int image_loadable -> image_loadable
    int image_loading_progress -> image_loading_progress
    int image_view -> image_view
    int images_list -> images_list
    int imgView -> imgView
    int img_1 -> img_1
    int img_2 -> img_2
    int img_3 -> img_3
    int img_4 -> img_4
    int img_5 -> img_5
    int img_back_level -> img_back_level
    int increment -> increment
    int indicator -> indicator
    int indicator1 -> indicator1
    int indicator2 -> indicator2
    int internalEmpty -> internalEmpty
    int invalid -> invalid
    int item_brand -> item_brand
    int item_discount -> item_discount
    int item_id -> item_id
    int item_img -> item_img
    int item_name -> item_name
    int item_price -> item_price
    int item_promotion -> item_promotion
    int item_rating -> item_rating
    int item_regprice -> item_regprice
    int item_reviews -> item_reviews
    int item_text -> item_text
    int item_text_n_items -> item_text_n_items
    int item_text_suggestion -> item_text_suggestion
    int item_text_unavailable -> item_text_unavailable
    int item_title -> item_title
    int items_count -> items_count
    int label_container -> label_container
    int large -> large
    int last_viewed_viewpager -> last_viewed_viewpager
    int left -> left
    int leftSpacer -> leftSpacer
    int light -> light
    int line_left -> line_left
    int line_right -> line_right
    int linear_reviews -> linear_reviews
    int list -> list
    int listContainer -> listContainer
    int listMode -> listMode
    int loading_bar -> loading_bar
    int loading_bar_simple -> loading_bar_simple
    int loading_bar_text -> loading_bar_text
    int loading_bar_view -> loading_bar_view
    int loading_gallery -> loading_gallery
    int loading_progress -> loading_progress
    int loading_rating -> loading_rating
    int loading_related -> loading_related
    int loading_slide_menu_container -> loading_slide_menu_container
    int loading_specifications -> loading_specifications
    int loading_status -> loading_status
    int loading_view_pager -> loading_view_pager
    int loadmore -> loadmore
    int loginText -> loginText
    int loginout_view -> loginout_view
    int main_basket_container -> main_basket_container
    int main_fallback_best -> main_fallback_best
    int main_fallback_choice -> main_fallback_choice
    int main_fallback_choice_container -> main_fallback_choice_container
    int main_fallback_content -> main_fallback_content
    int main_fallback_country -> main_fallback_country
    int main_fallback_country_bottom -> main_fallback_country_bottom
    int main_fallback_country_bottom_text -> main_fallback_country_bottom_text
    int main_fallback_country_bottom_text2 -> main_fallback_country_bottom_text2
    int main_fallback_country_container -> main_fallback_country_container
    int main_fallback_country_double -> main_fallback_country_double
    int main_fallback_country_map -> main_fallback_country_map
    int main_fallback_country_top -> main_fallback_country_top
    int main_fallback_doorstep -> main_fallback_doorstep
    int main_fallback_options_bottom -> main_fallback_options_bottom
    int main_fallback_options_bottom_container -> main_fallback_options_bottom_container
    int main_fallback_options_container -> main_fallback_options_container
    int main_fallback_retry -> main_fallback_retry
    int main_fallback_title -> main_fallback_title
    int main_fallback_title_container -> main_fallback_title_container
    int main_fragment_container -> main_fragment_container
    int main_layout -> main_layout
    int main_one_frame -> main_one_frame
    int margin -> margin
    int marker -> marker
    int menu_basket -> menu_basket
    int menu_buyall -> menu_buyall
    int menu_layout -> menu_layout
    int menu_search -> menu_search
    int menu_search_view -> menu_search_view
    int menu_share -> menu_share
    int menu_wishlist -> menu_wishlist
    int message -> message
    int middleLoginContainer -> middleLoginContainer
    int middle_home_layout -> middle_home_layout
    int middle_login_button_signin -> middle_login_button_signin
    int middle_login_link_fgtpassword -> middle_login_link_fgtpassword
    int middle_login_link_register -> middle_login_link_register
    int middle_login_text -> middle_login_text
    int middle_myaccount_list -> middle_myaccount_list
    int middle_productslist_list -> middle_productslist_list
    int minute -> minute
    int mixed -> mixed
    int month -> month
    int month_name -> month_name
    int myDataContainer -> myDataContainer
    int my_order_item_name -> my_order_item_name
    int my_order_item_price -> my_order_item_price
    int my_order_item_quantity -> my_order_item_quantity
    int my_order_item_variation -> my_order_item_variation
    int name_1 -> name_1
    int name_2 -> name_2
    int name_3 -> name_3
    int name_4 -> name_4
    int name_5 -> name_5
    int name_box -> name_box
    int name_title_container -> name_title_container
    int name_wrapper -> name_wrapper
    int nav_action -> nav_action
    int nav_basket -> nav_basket
    int nav_basket_elements -> nav_basket_elements
    int nav_basket_empty -> nav_basket_empty
    int nav_basket_title -> nav_basket_title
    int nav_basket_vat -> nav_basket_vat
    int nav_cart_count -> nav_cart_count
    int no_items_container -> no_items_container
    int none -> none
    int normal -> normal
    int numberpicker_input -> numberpicker_input
    int option_info -> option_info
    int option_name -> option_name
    int options_container -> options_container
    int orLoginContainer -> orLoginContainer
    int order_creation_date_container -> order_creation_date_container
    int order_creation_date_text -> order_creation_date_text
    int order_creation_date_title -> order_creation_date_title
    int order_item_name -> order_item_name
    int order_item_quantity -> order_item_quantity
    int order_last_update -> order_last_update
    int order_nr_edittext -> order_nr_edittext
    int order_number_id -> order_number_id
    int order_payment_method_container -> order_payment_method_container
    int order_payment_method_text -> order_payment_method_text
    int order_payment_method_title -> order_payment_method_title
    int order_products_title -> order_products_title
    int order_status_container -> order_status_container
    int order_status_text -> order_status_text
    int order_status_title -> order_status_title
    int order_status_title_container -> order_status_title_container
    int order_summary_container -> order_summary_container
    int order_summary_item_btn_remove -> order_summary_item_btn_remove
    int order_summary_item_name -> order_summary_item_name
    int order_summary_item_quantity -> order_summary_item_quantity
    int order_summary_item_variation -> order_summary_item_variation
    int parentPanel -> parentPanel
    int passwordContainer -> passwordContainer
    int passwordEditContainer -> passwordEditContainer
    int passwordErrorHint -> passwordErrorHint
    int password_title_container -> password_title_container
    int payment_img -> payment_img
    int payment_text -> payment_text
    int picker_subtitle -> picker_subtitle
    int pickers -> pickers
    int pop_arrows_container -> pop_arrows_container
    int posted_by -> posted_by
    int preference -> preference
    int price_1 -> price_1
    int price_2 -> price_2
    int price_3 -> price_3
    int price_4 -> price_4
    int price_5 -> price_5
    int price_container -> price_container
    int price_normal_p -> price_normal_p
    int price_rating -> price_rating
    int price_title_option -> price_title_option
    int price_total -> price_total
    int price_unreduced -> price_unreduced
    int price_w_discount_p -> price_w_discount_p
    int product_basicinfo_container -> product_basicinfo_container
    int product_basicinfo_frame -> product_basicinfo_frame
    int product_basicinfo_next -> product_basicinfo_next
    int product_description_text -> product_description_text
    int product_description_title -> product_description_title
    int product_details_container -> product_details_container
    int product_details_description_container -> product_details_description_container
    int product_details_text -> product_details_text
    int product_details_title -> product_details_title
    int product_discount_container -> product_discount_container
    int product_discount_percentage -> product_discount_percentage
    int product_features_container -> product_features_container
    int product_features_text -> product_features_text
    int product_features_title -> product_features_title
    int product_image -> product_image
    int product_image_container -> product_image_container
    int product_info -> product_info
    int product_info_name_p -> product_info_name_p
    int product_name -> product_name
    int product_price_normal -> product_price_normal
    int product_price_result -> product_price_result
    int product_rating -> product_rating
    int product_rating_container -> product_rating_container
    int product_rating_count -> product_rating_count
    int product_related_container -> product_related_container
    int product_showoff_container -> product_showoff_container
    int product_showoff_fragment -> product_showoff_fragment
    int product_showoff_viewpager_fragment -> product_showoff_viewpager_fragment
    int product_sku_text -> product_sku_text
    int product_spec_next -> product_spec_next
    int product_specifications_container -> product_specifications_container
    int product_specifications_frame -> product_specifications_frame
    int product_specifications_text -> product_specifications_text
    int product_specifications_title -> product_specifications_title
    int product_variant_button -> product_variant_button
    int product_variant_choose -> product_variant_choose
    int product_variant_choose_error -> product_variant_choose_error
    int product_variant_container -> product_variant_container
    int product_variant_normprice -> product_variant_normprice
    int product_variant_price_container -> product_variant_price_container
    int product_variant_specprice -> product_variant_specprice
    int product_variant_text -> product_variant_text
    int product_variantion_container -> product_variantion_container
    int products_content -> products_content
    int products_items_container -> products_items_container
    int products_list_filter_button -> products_list_filter_button
    int products_list_frame -> products_list_frame
    int products_list_titles -> products_list_titles
    int products_tip -> products_tip
    int products_tip_img -> products_tip_img
    int products_tip_text -> products_tip_text
    int progress -> progress
    int progressBar2 -> progressBar2
    int progressContainer -> progressContainer
    int progress_number -> progress_number
    int progress_percent -> progress_percent
    int promotion_container -> promotion_container
    int promotion_content -> promotion_content
    int promotion_coupon_code -> promotion_coupon_code
    int promotion_description -> promotion_description
    int promotion_go_shop -> promotion_go_shop
    int promotion_terms -> promotion_terms
    int promotion_tip_tap -> promotion_tip_tap
    int promotion_title -> promotion_title
    int quality_rating -> quality_rating
    int quality_title_option -> quality_title_option
    int radio -> radio
    int radio_container -> radio_container
    int rating -> rating
    int rating_stripe -> rating_stripe
    int ratingbar_container -> ratingbar_container
    int ratings_container -> ratings_container
    int recently -> recently
    int register_button_submit -> register_button_submit
    int register_required_text -> register_required_text
    int registerform_container -> registerform_container
    int related -> related
    int request_login -> request_login
    int request_register -> request_register
    int resolver_grid -> resolver_grid
    int retry_alert_view_button -> retry_alert_view_button
    int retypeNewPassword -> retypeNewPassword
    int review_box -> review_box
    int review_comment -> review_comment
    int review_date -> review_date
    int review_rating -> review_rating
    int review_title -> review_title
    int review_username -> review_username
    int reviews -> reviews
    int reviews_scroller -> reviews_scroller
    int right -> right
    int rightSpacer -> rightSpacer
    int rocket_app_checkoutweb -> rocket_app_checkoutweb
    int rocket_app_content -> rocket_app_content
    int rocket_app_forgotpass -> rocket_app_forgotpass
    int rocket_app_header_search_bar -> rocket_app_header_search_bar
    int rocket_app_login -> rocket_app_login
    int rocket_app_register -> rocket_app_register
    int root_subcategories -> root_subcategories
    int scrollView -> scrollView
    int scrollview -> scrollview
    int scrollview_right -> scrollview_right
    int search_component -> search_component
    int search_header -> search_header
    int search_no_match_view -> search_no_match_view
    int search_overlay -> search_overlay
    int search_products_not_found -> search_products_not_found
    int search_suggestions_list_container -> search_suggestions_list_container
    int search_suggestions_list_content -> search_suggestions_list_content
    int searchsuggestions_empty -> searchsuggestions_empty
    int searchsuggestions_empty_image -> searchsuggestions_empty_image
    int searchsuggestions_notfound -> searchsuggestions_notfound
    int secondaryProgress -> secondaryProgress
    int sectionheader_container -> sectionheader_container
    int select_dialog_listview -> select_dialog_listview
    int selected_view -> selected_view
    int send_review -> send_review
    int shipping_container -> shipping_container
    int shipping_value -> shipping_value
    int shop -> shop
    int shop_buttons -> shop_buttons
    int shop_container -> shop_container
    int shop_separator -> shop_separator
    int shopping_basket_product_element_container -> shopping_basket_product_element_container
    int shopping_cart_container -> shopping_cart_container
    int shopping_main_container -> shopping_main_container
    int shoppingcart_list -> shoppingcart_list
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int slide_menu_container -> slide_menu_container
    int slide_menu_scrollable_container -> slide_menu_scrollable_container
    int slide_menu_static_container -> slide_menu_static_container
    int slidingmenumain -> slidingmenumain
    int small -> small
    int sorter_button -> sorter_button
    int sorter_container -> sorter_container
    int start -> start
    int static_teaser_frame -> static_teaser_frame
    int stub_app_content -> stub_app_content
    int sub_categories_grid -> sub_categories_grid
    int submitContainer -> submitContainer
    int submit_button -> submit_button
    int tabMode -> tabMode
    int tabSwipePager -> tabSwipePager
    int target_title -> target_title
    int target_type -> target_type
    int target_url -> target_url
    int teaser_group_container -> teaser_group_container
    int teaser_group_title -> teaser_group_title
    int terms_text -> terms_text
    int text -> text
    int textView1 -> textView1
    int text_container -> text_container
    int text_loadmore -> text_loadmore
    int text_voucher -> text_voucher
    int textreview -> textreview
    int timePicker -> timePicker
    int tip_tap -> tip_tap
    int tip_tap_img -> tip_tap_img
    int tip_tap_text -> tip_tap_text
    int tips_got_it -> tips_got_it
    int tips_got_it_img -> tips_got_it_img
    int tips_got_it_text -> tips_got_it_text
    int title -> title
    int titleDivider -> titleDivider
    int titleDividerTop -> titleDividerTop
    int title_box -> title_box
    int title_container -> title_container
    int title_review -> title_review
    int title_status_container -> title_status_container
    int title_status_text -> title_status_text
    int title_template -> title_template
    int title_text -> title_text
    int toast_exit_layout_root -> toast_exit_layout_root
    int toast_exit_message -> toast_exit_message
    int top -> top
    int topPanel -> topPanel
    int top_container -> top_container
    int top_line -> top_line
    int top_review_line -> top_review_line
    int totalProducts -> totalProducts
    int total_container -> total_container
    int total_value -> total_value
    int triangle -> triangle
    int typeNewPassword -> typeNewPassword
    int typeface -> typeface
    int underline -> underline
    int useLogo -> useLogo
    int user_review -> user_review
    int variances_container -> variances_container
    int variations_container -> variations_container
    int variations_list -> variations_list
    int vat_container -> vat_container
    int vat_value -> vat_value
    int view_pager_element_frame -> view_pager_element_frame
    int view_pager_element_scrollview -> view_pager_element_scrollview
    int viewpager -> viewpager
    int viewpager_products_list -> viewpager_products_list
    int viewpager_tips -> viewpager_tips
    int viewpager_tips_btn_indicator -> viewpager_tips_btn_indicator
    int voucher_btn -> voucher_btn
    int voucher_container -> voucher_container
    int voucher_divider -> voucher_divider
    int voucher_error_message -> voucher_error_message
    int voucher_info_container -> voucher_info_container
    int voucher_name -> voucher_name
    int warning -> warning
    int warning_container -> warning_container
    int warning_text -> warning_text
    int warning_variations -> warning_variations
    int webview -> webview
    int wrap_content -> wrap_content
    int write_btn -> write_btn
    int year -> year
pt.rocket.view.R$layout -> caw:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__dialog_title_holo -> abs__dialog_title_holo
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int action_bar_logo_layout -> action_bar_logo_layout
    int action_bar_search_component -> action_bar_search_component
    int action_bar_search_component_tablet -> action_bar_search_component_tablet
    int alert_dialog_holo -> alert_dialog_holo
    int alert_dialog_progress_holo -> alert_dialog_progress_holo
    int alert_view -> alert_view
    int brand_item_small -> brand_item_small
    int brands_list_frame -> brands_list_frame
    int btn_sort_colorflexible -> btn_sort_colorflexible
    int calendar_view -> calendar_view
    int campaign_fragment_banner -> campaign_fragment_banner
    int campaign_fragment_list_item -> campaign_fragment_list_item
    int campaign_fragment_list_item_info -> campaign_fragment_list_item_info
    int campaign_fragment_list_item_middle -> campaign_fragment_list_item_middle
    int campaign_fragment_list_item_title -> campaign_fragment_list_item_title
    int campaign_fragment_main -> campaign_fragment_main
    int campaign_fragment_pager_item -> campaign_fragment_pager_item
    int catalog_image_item -> catalog_image_item
    int categories -> categories
    int categories_fragments -> categories_fragments
    int categories_inner_container -> categories_inner_container
    int category -> category
    int category_inner_childcat -> category_inner_childcat
    int category_inner_currentcat -> category_inner_currentcat
    int change_country -> change_country
    int change_country_fragments -> change_country_fragments
    int change_country_row -> change_country_row
    int checkout_about_you -> checkout_about_you
    int checkout_about_you_login -> checkout_about_you_login
    int checkout_about_you_signup -> checkout_about_you_signup
    int checkout_address_item -> checkout_address_item
    int checkout_create_address_billing -> checkout_create_address_billing
    int checkout_create_address_main -> checkout_create_address_main
    int checkout_create_address_shipping -> checkout_create_address_shipping
    int checkout_edit_address_form -> checkout_edit_address_form
    int checkout_edit_address_main -> checkout_edit_address_main
    int checkout_header -> checkout_header
    int checkout_my_addresses -> checkout_my_addresses
    int checkout_my_addresses_bottom -> checkout_my_addresses_bottom
    int checkout_my_addresses_top -> checkout_my_addresses_top
    int checkout_my_order_billing_address -> checkout_my_order_billing_address
    int checkout_my_order_main -> checkout_my_order_main
    int checkout_my_order_payment_options -> checkout_my_order_payment_options
    int checkout_my_order_product_item -> checkout_my_order_product_item
    int checkout_my_order_products -> checkout_my_order_products
    int checkout_my_order_shipping_address -> checkout_my_order_shipping_address
    int checkout_my_order_shipping_method -> checkout_my_order_shipping_method
    int checkout_my_order_subtotal -> checkout_my_order_subtotal
    int checkout_payment_methods -> checkout_payment_methods
    int checkout_poll_question -> checkout_poll_question
    int checkout_shipping_methods -> checkout_shipping_methods
    int checkout_summary_list_item -> checkout_summary_list_item
    int checkout_summary_main -> checkout_summary_main
    int checkout_summary_no_items -> checkout_summary_no_items
    int checkout_summary_products -> checkout_summary_products
    int checkout_summary_shipping_address -> checkout_summary_shipping_address
    int checkout_summary_shipping_method -> checkout_summary_shipping_method
    int checkout_summary_total -> checkout_summary_total
    int checkout_thanks -> checkout_thanks
    int checkoutweb -> checkoutweb
    int com_facebook_friendpickerfragment -> com_facebook_friendpickerfragment
    int com_facebook_login_activity_layout -> com_facebook_login_activity_layout
    int com_facebook_picker_activity_circle_row -> com_facebook_picker_activity_circle_row
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_picker_list_row -> com_facebook_picker_list_row
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_search_box -> com_facebook_picker_search_box
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_placepickerfragment -> com_facebook_placepickerfragment
    int com_facebook_placepickerfragment_list_row -> com_facebook_placepickerfragment_list_row
    int com_facebook_search_bar_layout -> com_facebook_search_bar_layout
    int com_facebook_usersettingsfragment -> com_facebook_usersettingsfragment
    int date_picker_dialog -> date_picker_dialog
    int date_picker_holo -> date_picker_holo
    int dialog_datepicker_content -> dialog_datepicker_content
    int dialog_filter_bottom_buttons -> dialog_filter_bottom_buttons
    int dialog_filter_fragment_brand -> dialog_filter_fragment_brand
    int dialog_filter_fragment_category -> dialog_filter_fragment_category
    int dialog_filter_fragment_color -> dialog_filter_fragment_color
    int dialog_filter_fragment_main -> dialog_filter_fragment_main
    int dialog_filter_fragment_price -> dialog_filter_fragment_price
    int dialog_filter_fragment_size -> dialog_filter_fragment_size
    int dialog_filter_main -> dialog_filter_main
    int dialog_generic -> dialog_generic
    int dialog_generic_3buttons -> dialog_generic_3buttons
    int dialog_list_content -> dialog_list_content
    int dialog_list_header_item -> dialog_list_header_item
    int dialog_list_item -> dialog_list_item
    int dialog_list_sub_item_1 -> dialog_list_sub_item_1
    int dialog_list_sub_item_2 -> dialog_list_sub_item_2
    int dialog_progress -> dialog_progress
    int element_last_viewed -> element_last_viewed
    int element_last_viewed_container -> element_last_viewed_container
    int element_related_items -> element_related_items
    int expandable_list_content -> expandable_list_content
    int expanded_menu_layout -> expanded_menu_layout
    int forgtopassword -> forgtopassword
    int form_button -> form_button
    int form_edittext -> form_edittext
    int form_icsspinner -> form_icsspinner
    int form_radiobutton -> form_radiobutton
    int form_radiobutton_with_extra -> form_radiobutton_with_extra
    int form_radiogroup -> form_radiogroup
    int form_radiogroup_vertical -> form_radiogroup_vertical
    int form_radiolayout -> form_radiolayout
    int form_radiolistlayout -> form_radiolistlayout
    int form_spinner_dropdown_item -> form_spinner_dropdown_item
    int form_spinner_item -> form_spinner_item
    int fragment_collection_object -> fragment_collection_object
    int full_screen_gallery -> full_screen_gallery
    int generic_frame -> generic_frame
    int grid_content -> grid_content
    int header_title -> header_title
    int image_loadable -> image_loadable
    int label_rating_component -> label_rating_component
    int list_content -> list_content
    int list_menu_item_checkbox -> list_menu_item_checkbox
    int list_menu_item_icon -> list_menu_item_icon
    int list_menu_item_layout -> list_menu_item_layout
    int list_menu_item_radio -> list_menu_item_radio
    int loading_bar -> loading_bar
    int loading_bar_simple -> loading_bar_simple
    int loading_more -> loading_more
    int login -> login
    int main -> main
    int main_one_fragment_frame -> main_one_fragment_frame
    int menu_basket_button -> menu_basket_button
    int my_account_list_item -> my_account_list_item
    int my_account_user_data_fragment -> my_account_user_data_fragment
    int myaccount_fragment -> myaccount_fragment
    int navigation_basket_component -> navigation_basket_component
    int navigation_container -> navigation_container
    int navigation_container_fragments -> navigation_container_fragments
    int navigation_generic_component -> navigation_generic_component
    int navigation_header_component -> navigation_header_component
    int navigation_scrollable_container -> navigation_scrollable_container
    int navigation_static_container -> navigation_static_container
    int no_payment_layout -> no_payment_layout
    int number_picker_with_selector_wheel -> number_picker_with_selector_wheel
    int popularity -> popularity
    int popularityreview -> popularityreview
    int popup_menu_item_layout -> popup_menu_item_layout
    int preference_list_content -> preference_list_content
    int preference_list_item -> preference_list_item
    int product_details_description_frame -> product_details_description_frame
    int product_item -> product_item
    int product_item_small -> product_item_small
    int product_list_frame -> product_list_frame
    int product_showoff_container_frame -> product_showoff_container_frame
    int product_showoff_viewpager_frame -> product_showoff_viewpager_frame
    int productdetails_basic_info_fragment -> productdetails_basic_info_fragment
    int productdetails_images_item -> productdetails_images_item
    int productdetails_specification_fragment -> productdetails_specification_fragment
    int productdetailsnew -> productdetailsnew
    int productdetailsnew_fragments -> productdetailsnew_fragments
    int products -> products
    int products_frame -> products_frame
    int progress_dialog_holo -> progress_dialog_holo
    int promotion_layout -> promotion_layout
    int rating_bar_component -> rating_bar_component
    int register -> register
    int related_items_view -> related_items_view
    int resolve_list_item -> resolve_list_item
    int resolver_grid -> resolver_grid
    int reviews -> reviews
    int search -> search
    int search_no_match_container -> search_no_match_container
    int search_suggestion_list_item -> search_suggestion_list_item
    int search_suggestions -> search_suggestions
    int select_dialog_holo -> select_dialog_holo
    int select_dialog_item_holo -> select_dialog_item_holo
    int select_dialog_multichoice_holo -> select_dialog_multichoice_holo
    int select_dialog_singlechoice_holo -> select_dialog_singlechoice_holo
    int shopping_basket -> shopping_basket
    int shopping_basket_header_element -> shopping_basket_header_element
    int shopping_basket_product_element -> shopping_basket_product_element
    int shopping_basket_product_element_container -> shopping_basket_product_element_container
    int shopping_basket_subtotal_element -> shopping_basket_subtotal_element
    int shopping_basket_variance_text -> shopping_basket_variance_text
    int simple_dropdown_hint -> simple_dropdown_hint
    int simple_dropdown_item_1line -> simple_dropdown_item_1line
    int simple_spinner_dropdown_item -> simple_spinner_dropdown_item
    int simple_spinner_item -> simple_spinner_item
    int slidingmenumain -> slidingmenumain
    int splash_screen -> splash_screen
    int static_teaser_frame -> static_teaser_frame
    int tab_swipe -> tab_swipe
    int teaser_banners_group -> teaser_banners_group
    int teaser_big_banner -> teaser_big_banner
    int teaser_brands_group -> teaser_brands_group
    int teaser_categories_group -> teaser_categories_group
    int teaser_last_viewed -> teaser_last_viewed
    int teaser_products_group -> teaser_products_group
    int teaser_swipe_banners_group -> teaser_swipe_banners_group
    int teaser_top_brands_group -> teaser_top_brands_group
    int teasers_fragments_viewpager -> teasers_fragments_viewpager
    int teasers_main_fragment -> teasers_main_fragment
    int terms_conditions_fragment -> terms_conditions_fragment
    int time_picker_dialog -> time_picker_dialog
    int time_picker_holo -> time_picker_holo
    int tip_swipe_layout -> tip_swipe_layout
    int tip_tap_layout -> tip_tap_layout
    int toast_exit -> toast_exit
    int track_order_fragment -> track_order_fragment
    int track_order_item -> track_order_item
    int variations_fragment -> variations_fragment
    int vertical_divider -> vertical_divider
    int voucher_insert_layout -> voucher_insert_layout
    int warning -> warning
    int warning_variations -> warning_variations
    int writereview -> writereview
pt.rocket.view.R$menu -> cax:
    int main_menu -> main_menu
pt.rocket.view.R$plurals -> cay:
    int shoppingcart_text_article -> shoppingcart_text_article
pt.rocket.view.R$string -> caz:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_dialog_title_default -> abs__activity_chooser_view_dialog_title_default
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__share_action_provider_share_with -> abs__share_action_provider_share_with
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
    int account_name -> account_name
    int account_title -> account_title
    int action_label_add_address -> action_label_add_address
    int action_label_basket -> action_label_basket
    int action_label_buyall -> action_label_buyall
    int action_label_configurator -> action_label_configurator
    int action_label_logout -> action_label_logout
    int action_label_mypayments -> action_label_mypayments
    int action_label_search -> action_label_search
    int action_label_search_hint -> action_label_search_hint
    int action_label_share -> action_label_share
    int action_label_terms -> action_label_terms
    int action_label_wishlist -> action_label_wishlist
    int activity_resolver_use_always -> activity_resolver_use_always
    int activity_resolver_use_once -> activity_resolver_use_once
    int add_address -> add_address
    int add_to_shopping_cart -> add_to_shopping_cart
    int added_to_shop_cart_dialog_text -> added_to_shop_cart_dialog_text
    int all_label -> all_label
    int app_id -> app_id
    int app_name -> app_name
    int back_level -> back_level
    int billing_add_label -> billing_add_label
    int billing_billing_label -> billing_billing_label
    int billing_choose_address -> billing_choose_address
    int billing_def_shipping_label -> billing_def_shipping_label
    int billing_others_label -> billing_others_label
    int billing_same_label -> billing_same_label
    int billing_shipping_label -> billing_shipping_label
    int brands -> brands
    int bugsense_apikey -> bugsense_apikey
    int business_days -> business_days
    int buy_now -> buy_now
    int call_to_order -> call_to_order
    int call_to_order_number -> call_to_order_number
    int cancel_label -> cancel_label
    int candidates_style -> candidates_style
    int capital_off -> capital_off
    int capital_on -> capital_on
    int categories -> categories
    int categories_name -> categories_name
    int categories_name_all -> categories_name_all
    int categories_title -> categories_title
    int categories_toplevel_title -> categories_toplevel_title
    int category_label -> category_label
    int checkout_button_text -> checkout_button_text
    int checkout_continue -> checkout_continue
    int checkout_continue_button_description -> checkout_continue_button_description
    int checkout_header_step_1 -> checkout_header_step_1
    int checkout_header_step_2 -> checkout_header_step_2
    int checkout_header_step_3 -> checkout_header_step_3
    int checkout_header_step_4 -> checkout_header_step_4
    int chooseActivity -> chooseActivity
    int clear_all_uppercase_label -> clear_all_uppercase_label
    int clear_uppercase_label -> clear_uppercase_label
    int client_error_title -> client_error_title
    int close_app -> close_app
    int com_facebook_choose_friends -> com_facebook_choose_friends
    int com_facebook_dialogloginactivity_ok_button -> com_facebook_dialogloginactivity_ok_button
    int com_facebook_internet_permission_error_message -> com_facebook_internet_permission_error_message
    int com_facebook_internet_permission_error_title -> com_facebook_internet_permission_error_title
    int com_facebook_loading -> com_facebook_loading
    int com_facebook_loginview_cancel_action -> com_facebook_loginview_cancel_action
    int com_facebook_loginview_log_in_button -> com_facebook_loginview_log_in_button
    int com_facebook_loginview_log_out_action -> com_facebook_loginview_log_out_action
    int com_facebook_loginview_log_out_button -> com_facebook_loginview_log_out_button
    int com_facebook_loginview_logged_in_as -> com_facebook_loginview_logged_in_as
    int com_facebook_loginview_logged_in_using_facebook -> com_facebook_loginview_logged_in_using_facebook
    int com_facebook_logo_content_description -> com_facebook_logo_content_description
    int com_facebook_nearby -> com_facebook_nearby
    int com_facebook_picker_done_button_text -> com_facebook_picker_done_button_text
    int com_facebook_placepicker_subtitle_catetory_only_format -> com_facebook_placepicker_subtitle_catetory_only_format
    int com_facebook_placepicker_subtitle_format -> com_facebook_placepicker_subtitle_format
    int com_facebook_placepicker_subtitle_were_here_only_format -> com_facebook_placepicker_subtitle_were_here_only_format
    int com_facebook_requesterror_password_changed -> com_facebook_requesterror_password_changed
    int com_facebook_requesterror_permissions -> com_facebook_requesterror_permissions
    int com_facebook_requesterror_reconnect -> com_facebook_requesterror_reconnect
    int com_facebook_requesterror_relogin -> com_facebook_requesterror_relogin
    int com_facebook_requesterror_web_login -> com_facebook_requesterror_web_login
    int com_facebook_usersettingsfragment_log_in_button -> com_facebook_usersettingsfragment_log_in_button
    int com_facebook_usersettingsfragment_logged_in -> com_facebook_usersettingsfragment_logged_in
    int com_facebook_usersettingsfragment_not_logged_in -> com_facebook_usersettingsfragment_not_logged_in
    int comment -> comment
    int confirm_order_loosing_order -> confirm_order_loosing_order
    int confirm_order_loosing_order_title -> confirm_order_loosing_order_title
    int connecting -> connecting
    int contact_personal -> contact_personal
    int continue_label -> continue_label
    int continue_shopping -> continue_shopping
    int copied_to_clipboard -> copied_to_clipboard
    int country_name_egypt -> country_name_egypt
    int country_name_ivorycoast -> country_name_ivorycoast
    int country_name_kenya -> country_name_kenya
    int country_name_morocco -> country_name_morocco
    int country_name_nigera -> country_name_nigera
    int country_name_uganda -> country_name_uganda
    int create_addresses_success -> create_addresses_success
    int creation_date -> creation_date
    int currency_code_egp -> currency_code_egp
    int currency_code_ksh -> currency_code_ksh
    int currency_code_mad -> currency_code_mad
    int currency_code_ngn -> currency_code_ngn
    int currency_code_ugx -> currency_code_ugx
    int currency_code_xof -> currency_code_xof
    int currency_fraction_count_cfa -> currency_fraction_count_cfa
    int currency_fraction_count_egp -> currency_fraction_count_egp
    int currency_fraction_count_ksh -> currency_fraction_count_ksh
    int currency_fraction_count_mad -> currency_fraction_count_mad
    int currency_fraction_count_ngn -> currency_fraction_count_ngn
    int currency_fraction_count_ugx -> currency_fraction_count_ugx
    int currency_fraction_delim_cfa -> currency_fraction_delim_cfa
    int currency_fraction_delim_egp -> currency_fraction_delim_egp
    int currency_fraction_delim_ksh -> currency_fraction_delim_ksh
    int currency_fraction_delim_mad -> currency_fraction_delim_mad
    int currency_fraction_delim_ngn -> currency_fraction_delim_ngn
    int currency_fraction_delim_ugx -> currency_fraction_delim_ugx
    int currency_thousands_delim_cfa -> currency_thousands_delim_cfa
    int currency_thousands_delim_egp -> currency_thousands_delim_egp
    int currency_thousands_delim_ksh -> currency_thousands_delim_ksh
    int currency_thousands_delim_mad -> currency_thousands_delim_mad
    int currency_thousands_delim_ngn -> currency_thousands_delim_ngn
    int currency_thousands_delim_ugx -> currency_thousands_delim_ugx
    int currency_unit_pattern_cfa -> currency_unit_pattern_cfa
    int currency_unit_pattern_egp -> currency_unit_pattern_egp
    int currency_unit_pattern_idr -> currency_unit_pattern_idr
    int currency_unit_pattern_ksh -> currency_unit_pattern_ksh
    int currency_unit_pattern_mad -> currency_unit_pattern_mad
    int currency_unit_pattern_ngn -> currency_unit_pattern_ngn
    int currency_unit_pattern_thb -> currency_unit_pattern_thb
    int currency_unit_pattern_ugx -> currency_unit_pattern_ugx
    int date_picker_decrement_day_button -> date_picker_decrement_day_button
    int date_picker_decrement_month_button -> date_picker_decrement_month_button
    int date_picker_decrement_year_button -> date_picker_decrement_year_button
    int date_picker_dialog_title -> date_picker_dialog_title
    int date_picker_increment_day_button -> date_picker_increment_day_button
    int date_picker_increment_month_button -> date_picker_increment_month_button
    int date_picker_increment_year_button -> date_picker_increment_year_button
    int date_time_done -> date_time_done
    int date_time_set -> date_time_set
    int default_quantity_label -> default_quantity_label
    int delivery_time -> delivery_time
    int dialog_to_reviews -> dialog_to_reviews
    int done_label -> done_label
    int dynamic_errortext -> dynamic_errortext
    int edit_address -> edit_address
    int edit_address_success -> edit_address_success
    int email -> email
    int enable_multi_selection -> enable_multi_selection
    int error_add_to_cart_failed -> error_add_to_cart_failed
    int error_add_to_shopping_cart -> error_add_to_shopping_cart
    int error_add_to_shopping_cart_quantity -> error_add_to_shopping_cart_quantity
    int error_forgotpassword_text -> error_forgotpassword_text
    int error_forgotpassword_title -> error_forgotpassword_title
    int error_ismandatory -> error_ismandatory
    int error_login_check_text -> error_login_check_text
    int error_login_title -> error_login_title
    int error_no_connection -> error_no_connection
    int error_please_try_again -> error_please_try_again
    int error_register_alreadyexists -> error_register_alreadyexists
    int error_register_title -> error_register_title
    int error_signup_title -> error_signup_title
    int error_tracking_order_text -> error_tracking_order_text
    int exit_press_back_again -> exit_press_back_again
    int extra_costs -> extra_costs
    int extra_costs_label -> extra_costs_label
    int facebook_login_button_text -> facebook_login_button_text
    int facebook_signup_button_text -> facebook_signup_button_text
    int fallback_audio -> fallback_audio
    int fallback_best -> fallback_best
    int fallback_books -> fallback_books
    int fallback_bottom_text -> fallback_bottom_text
    int fallback_bottom_text2 -> fallback_bottom_text2
    int fallback_choice -> fallback_choice
    int fallback_doorstep -> fallback_doorstep
    int fallback_fashion -> fallback_fashion
    int fallback_health -> fallback_health
    int fallback_home_office -> fallback_home_office
    int fallback_maintenance -> fallback_maintenance
    int fallback_maintenance_text -> fallback_maintenance_text
    int fallback_maintenance_text_bottom -> fallback_maintenance_text_bottom
    int fallback_mobile -> fallback_mobile
    int fallback_welcome -> fallback_welcome
    int fcurrency -> fcurrency
    int fcustomerid -> fcustomerid
    int fgt_pass -> fgt_pass
    int filter_label -> filter_label
    int forderid -> forderid
    int forgotpass_header -> forgotpass_header
    int forgotpass_title -> forgotpass_title
    int forgotten_password -> forgotten_password
    int forgotten_password_examplemail -> forgotten_password_examplemail
    int forgotten_password_resulttitle -> forgotten_password_resulttitle
    int forgotten_password_sub_text -> forgotten_password_sub_text
    int forgotten_password_successtext -> forgotten_password_successtext
    int form_passwordsnomatch -> form_passwordsnomatch
    int form_texttolong -> form_texttolong
    int form_texttoshort -> form_texttoshort
    int fpurchase -> fpurchase
    int free_label -> free_label
    int fsignin -> fsignin
    int fsigninauto -> fsigninauto
    int fsigninjust -> fsigninjust
    int fsignup -> fsignup
    int fuserid -> fuserid
    int fvalue -> fvalue
    int gNativeCheckout -> gNativeCheckout
    int gNativeCheckoutError -> gNativeCheckoutError
    int gPaymentMethod -> gPaymentMethod
    int gSignUp -> gSignUp
    int ga_trackingId -> ga_trackingId
    int gaccount -> gaccount
    int gaddtocart -> gaddtocart
    int gaid_ci_live -> gaid_ci_live
    int gaid_ci_test -> gaid_ci_test
    int gaid_eg_live -> gaid_eg_live
    int gaid_eg_test -> gaid_eg_test
    int gaid_ke_live -> gaid_ke_live
    int gaid_ke_test -> gaid_ke_test
    int gaid_ma_live -> gaid_ma_live
    int gaid_ma_test -> gaid_ma_test
    int gaid_ng_live -> gaid_ng_live
    int gaid_ng_test -> gaid_ng_test
    int gaid_ug_live -> gaid_ug_live
    int gaid_ug_test -> gaid_ug_test
    int gautologinfailed -> gautologinfailed
    int gautologinsuccess -> gautologinsuccess
    int gbrand_prefix -> gbrand_prefix
    int gbrands -> gbrands
    int gcart_prefix -> gcart_prefix
    int gcartempty -> gcartempty
    int gcartwithitems -> gcartwithitems
    int gcatalog -> gcatalog
    int gcategories -> gcategories
    int gcategory_prefix -> gcategory_prefix
    int gcheckout -> gcheckout
    int gcheckoutAboutYou -> gcheckoutAboutYou
    int gcheckoutCreateAddress -> gcheckoutCreateAddress
    int gcheckoutEditAddress -> gcheckoutEditAddress
    int gcheckoutExternalPayment -> gcheckoutExternalPayment
    int gcheckoutMyAddresses -> gcheckoutMyAddresses
    int gcheckoutMyOrder -> gcheckoutMyOrder
    int gcheckoutPaymentMethods -> gcheckoutPaymentMethods
    int gcheckoutPollQuestion -> gcheckoutPollQuestion
    int gcheckoutShippingMethods -> gcheckoutShippingMethods
    int gcheckoutbegin -> gcheckoutbegin
    int gcheckoutcontinueshopping -> gcheckoutcontinueshopping
    int gcheckoutfinal -> gcheckoutfinal
    int gcheckoutstart -> gcheckoutstart
    int gcontinueshopping -> gcontinueshopping
    int gcreatefailed -> gcreatefailed
    int gcreatesuccess -> gcreatesuccess
    int gcustomeraccount -> gcustomeraccount
    int gcustomerid -> gcustomerid
    int gfacebookloginsuccess -> gfacebookloginsuccess
    int gfacebooksignupsuccess -> gfacebooksignupsuccess
    int gfinished -> gfinished
    int ghomepage -> ghomepage
    int gload -> gload
    int glogin -> glogin
    int gloginfailed -> gloginfailed
    int gloginsuccess -> gloginsuccess
    int glogout -> glogout
    int glogoutfailed -> glogoutfailed
    int glogoutsuccess -> glogoutsuccess
    int gnavigation -> gnavigation
    int go_shop_text -> go_shop_text
    int go_to_cart -> go_to_cart
    int gorderid -> gorderid
    int got_it -> got_it
    int gpdv -> gpdv
    int gproductdetail -> gproductdetail
    int gproductlist -> gproductlist
    int gproductreviews -> gproductreviews
    int gproductreviewscreate -> gproductreviewscreate
    int gpush_prefix -> gpush_prefix
    int grateproduct -> grateproduct
    int gregister -> gregister
    int gsearch -> gsearch
    int gsearch_prefix -> gsearch_prefix
    int gsearchsuggestions -> gsearchsuggestions
    int gshoppingcart -> gshoppingcart
    int gsignupsuccess -> gsignupsuccess
    int gsimplesku -> gsimplesku
    int gsocialshare -> gsocialshare
    int gstarted -> gstarted
    int gteaser_prefix -> gteaser_prefix
    int gteaserprod_prefix -> gteaserprod_prefix
    int gteaserrecentlyviewed_prefix -> gteaserrecentlyviewed_prefix
    int hockeyapp_token -> hockeyapp_token
    int home -> home
    int home_tip_text -> home_tip_text
    int in_stock -> in_stock
    int incomplete_alert -> incomplete_alert
    int jumia_ci_country_name -> jumia_ci_country_name
    int jumia_ci_country_name_dev -> jumia_ci_country_name_dev
    int jumia_ci_country_name_dev_live -> jumia_ci_country_name_dev_live
    int jumia_ci_country_name_dev_staging -> jumia_ci_country_name_dev_staging
    int jumia_ci_password -> jumia_ci_password
    int jumia_ci_password_dev -> jumia_ci_password_dev
    int jumia_ci_password_dev_live -> jumia_ci_password_dev_live
    int jumia_ci_password_dev_staging -> jumia_ci_password_dev_staging
    int jumia_ci_restbase_path -> jumia_ci_restbase_path
    int jumia_ci_restbase_path_dev -> jumia_ci_restbase_path_dev
    int jumia_ci_restbase_path_dev_live -> jumia_ci_restbase_path_dev_live
    int jumia_ci_restbase_path_dev_staging -> jumia_ci_restbase_path_dev_staging
    int jumia_ci_server -> jumia_ci_server
    int jumia_ci_server_dev -> jumia_ci_server_dev
    int jumia_ci_server_dev_live -> jumia_ci_server_dev_live
    int jumia_ci_server_dev_staging -> jumia_ci_server_dev_staging
    int jumia_ci_shopname -> jumia_ci_shopname
    int jumia_ci_shopname_dev -> jumia_ci_shopname_dev
    int jumia_ci_shopname_dev_live -> jumia_ci_shopname_dev_live
    int jumia_ci_shopname_dev_staging -> jumia_ci_shopname_dev_staging
    int jumia_ci_user -> jumia_ci_user
    int jumia_ci_user_dev -> jumia_ci_user_dev
    int jumia_ci_user_dev_live -> jumia_ci_user_dev_live
    int jumia_ci_user_dev_staging -> jumia_ci_user_dev_staging
    int jumia_eg_country_name -> jumia_eg_country_name
    int jumia_eg_country_name_dev -> jumia_eg_country_name_dev
    int jumia_eg_country_name_dev_live -> jumia_eg_country_name_dev_live
    int jumia_eg_country_name_dev_staging -> jumia_eg_country_name_dev_staging
    int jumia_eg_password -> jumia_eg_password
    int jumia_eg_password_dev -> jumia_eg_password_dev
    int jumia_eg_password_dev_live -> jumia_eg_password_dev_live
    int jumia_eg_password_dev_staging -> jumia_eg_password_dev_staging
    int jumia_eg_restbase_path -> jumia_eg_restbase_path
    int jumia_eg_restbase_path_dev -> jumia_eg_restbase_path_dev
    int jumia_eg_restbase_path_dev_live -> jumia_eg_restbase_path_dev_live
    int jumia_eg_restbase_path_dev_staging -> jumia_eg_restbase_path_dev_staging
    int jumia_eg_server -> jumia_eg_server
    int jumia_eg_server_dev -> jumia_eg_server_dev
    int jumia_eg_server_dev_live -> jumia_eg_server_dev_live
    int jumia_eg_server_dev_staging -> jumia_eg_server_dev_staging
    int jumia_eg_shopname -> jumia_eg_shopname
    int jumia_eg_shopname_dev -> jumia_eg_shopname_dev
    int jumia_eg_shopname_dev_live -> jumia_eg_shopname_dev_live
    int jumia_eg_shopname_dev_staging -> jumia_eg_shopname_dev_staging
    int jumia_eg_user -> jumia_eg_user
    int jumia_eg_user_dev -> jumia_eg_user_dev
    int jumia_eg_user_dev_live -> jumia_eg_user_dev_live
    int jumia_eg_user_dev_staging -> jumia_eg_user_dev_staging
    int jumia_international_title -> jumia_international_title
    int jumia_ke_country_name -> jumia_ke_country_name
    int jumia_ke_country_name_dev -> jumia_ke_country_name_dev
    int jumia_ke_country_name_dev_live -> jumia_ke_country_name_dev_live
    int jumia_ke_country_name_dev_staging -> jumia_ke_country_name_dev_staging
    int jumia_ke_password -> jumia_ke_password
    int jumia_ke_password_dev -> jumia_ke_password_dev
    int jumia_ke_password_dev_live -> jumia_ke_password_dev_live
    int jumia_ke_password_dev_staging -> jumia_ke_password_dev_staging
    int jumia_ke_restbase_path -> jumia_ke_restbase_path
    int jumia_ke_restbase_path_dev -> jumia_ke_restbase_path_dev
    int jumia_ke_restbase_path_dev_live -> jumia_ke_restbase_path_dev_live
    int jumia_ke_restbase_path_dev_staging -> jumia_ke_restbase_path_dev_staging
    int jumia_ke_server -> jumia_ke_server
    int jumia_ke_server_dev -> jumia_ke_server_dev
    int jumia_ke_server_dev_live -> jumia_ke_server_dev_live
    int jumia_ke_server_dev_staging -> jumia_ke_server_dev_staging
    int jumia_ke_shopname -> jumia_ke_shopname
    int jumia_ke_shopname_dev -> jumia_ke_shopname_dev
    int jumia_ke_shopname_dev_live -> jumia_ke_shopname_dev_live
    int jumia_ke_shopname_dev_staging -> jumia_ke_shopname_dev_staging
    int jumia_ke_user -> jumia_ke_user
    int jumia_ke_user_dev -> jumia_ke_user_dev
    int jumia_ke_user_dev_live -> jumia_ke_user_dev_live
    int jumia_ke_user_dev_staging -> jumia_ke_user_dev_staging
    int jumia_ma_country_name -> jumia_ma_country_name
    int jumia_ma_country_name_dev -> jumia_ma_country_name_dev
    int jumia_ma_country_name_dev_live -> jumia_ma_country_name_dev_live
    int jumia_ma_country_name_dev_staging -> jumia_ma_country_name_dev_staging
    int jumia_ma_password -> jumia_ma_password
    int jumia_ma_password_dev -> jumia_ma_password_dev
    int jumia_ma_password_dev_live -> jumia_ma_password_dev_live
    int jumia_ma_password_dev_staging -> jumia_ma_password_dev_staging
    int jumia_ma_restbase_path -> jumia_ma_restbase_path
    int jumia_ma_restbase_path_dev -> jumia_ma_restbase_path_dev
    int jumia_ma_restbase_path_dev_live -> jumia_ma_restbase_path_dev_live
    int jumia_ma_restbase_path_dev_staging -> jumia_ma_restbase_path_dev_staging
    int jumia_ma_server -> jumia_ma_server
    int jumia_ma_server_dev -> jumia_ma_server_dev
    int jumia_ma_server_dev_live -> jumia_ma_server_dev_live
    int jumia_ma_server_dev_staging -> jumia_ma_server_dev_staging
    int jumia_ma_shopname -> jumia_ma_shopname
    int jumia_ma_shopname_dev -> jumia_ma_shopname_dev
    int jumia_ma_shopname_dev_live -> jumia_ma_shopname_dev_live
    int jumia_ma_shopname_dev_staging -> jumia_ma_shopname_dev_staging
    int jumia_ma_user -> jumia_ma_user
    int jumia_ma_user_dev -> jumia_ma_user_dev
    int jumia_ma_user_dev_live -> jumia_ma_user_dev_live
    int jumia_ma_user_dev_staging -> jumia_ma_user_dev_staging
    int jumia_ng_country_name -> jumia_ng_country_name
    int jumia_ng_country_name_dev -> jumia_ng_country_name_dev
    int jumia_ng_country_name_dev_live -> jumia_ng_country_name_dev_live
    int jumia_ng_country_name_dev_staging -> jumia_ng_country_name_dev_staging
    int jumia_ng_password -> jumia_ng_password
    int jumia_ng_password_dev -> jumia_ng_password_dev
    int jumia_ng_password_dev_live -> jumia_ng_password_dev_live
    int jumia_ng_password_dev_staging -> jumia_ng_password_dev_staging
    int jumia_ng_restbase_path -> jumia_ng_restbase_path
    int jumia_ng_restbase_path_dev -> jumia_ng_restbase_path_dev
    int jumia_ng_restbase_path_dev_live -> jumia_ng_restbase_path_dev_live
    int jumia_ng_restbase_path_dev_staging -> jumia_ng_restbase_path_dev_staging
    int jumia_ng_server -> jumia_ng_server
    int jumia_ng_server_dev -> jumia_ng_server_dev
    int jumia_ng_server_dev_live -> jumia_ng_server_dev_live
    int jumia_ng_server_dev_staging -> jumia_ng_server_dev_staging
    int jumia_ng_shopname -> jumia_ng_shopname
    int jumia_ng_shopname_dev -> jumia_ng_shopname_dev
    int jumia_ng_shopname_dev_live -> jumia_ng_shopname_dev_live
    int jumia_ng_shopname_dev_staging -> jumia_ng_shopname_dev_staging
    int jumia_ng_user -> jumia_ng_user
    int jumia_ng_user_dev -> jumia_ng_user_dev
    int jumia_ng_user_dev_live -> jumia_ng_user_dev_live
    int jumia_ng_user_dev_staging -> jumia_ng_user_dev_staging
    int jumia_ug_country_name -> jumia_ug_country_name
    int jumia_ug_country_name_dev -> jumia_ug_country_name_dev
    int jumia_ug_country_name_dev_live -> jumia_ug_country_name_dev_live
    int jumia_ug_country_name_dev_staging -> jumia_ug_country_name_dev_staging
    int jumia_ug_password -> jumia_ug_password
    int jumia_ug_password_dev -> jumia_ug_password_dev
    int jumia_ug_password_dev_live -> jumia_ug_password_dev_live
    int jumia_ug_password_dev_staging -> jumia_ug_password_dev_staging
    int jumia_ug_restbase_path -> jumia_ug_restbase_path
    int jumia_ug_restbase_path_dev -> jumia_ug_restbase_path_dev
    int jumia_ug_restbase_path_dev_live -> jumia_ug_restbase_path_dev_live
    int jumia_ug_restbase_path_dev_staging -> jumia_ug_restbase_path_dev_staging
    int jumia_ug_server -> jumia_ug_server
    int jumia_ug_server_dev -> jumia_ug_server_dev
    int jumia_ug_server_dev_live -> jumia_ug_server_dev_live
    int jumia_ug_server_dev_staging -> jumia_ug_server_dev_staging
    int jumia_ug_shopname -> jumia_ug_shopname
    int jumia_ug_shopname_dev -> jumia_ug_shopname_dev
    int jumia_ug_shopname_dev_live -> jumia_ug_shopname_dev_live
    int jumia_ug_shopname_dev_staging -> jumia_ug_shopname_dev_staging
    int jumia_ug_user -> jumia_ug_user
    int jumia_ug_user_dev -> jumia_ug_user_dev
    int jumia_ug_user_dev_live -> jumia_ug_user_dev_live
    int jumia_ug_user_dev_staging -> jumia_ug_user_dev_staging
    int loading -> loading
    int loading_message -> loading_message
    int loading_more -> loading_more
    int log_val -> log_val
    int login_button_description -> login_button_description
    int login_label -> login_label
    int login_sectiontitle -> login_sectiontitle
    int login_text -> login_text
    int login_title -> login_title
    int login_to_proceed -> login_to_proceed
    int login_useraccount -> login_useraccount
    int logout_text_question -> logout_text_question
    int logout_title -> logout_title
    int mixcart -> mixcart
    int mixcheckout -> mixcheckout
    int mixcustomer -> mixcustomer
    int mixlaunch -> mixlaunch
    int mixlogin -> mixlogin
    int mixloginWithFB -> mixloginWithFB
    int mixlogout -> mixlogout
    int mixnativecheckout -> mixnativecheckout
    int mixnativecheckouterror -> mixnativecheckouterror
    int mixpanel_token -> mixpanel_token
    int mixproduct -> mixproduct
    int mixprop_age -> mixprop_age
    int mixprop_appverion -> mixprop_appverion
    int mixprop_cartcategories -> mixprop_cartcategories
    int mixprop_cartitems -> mixprop_cartitems
    int mixprop_cartnumber -> mixprop_cartnumber
    int mixprop_carttotal -> mixprop_carttotal
    int mixprop_category -> mixprop_category
    int mixprop_checkout_about_you -> mixprop_checkout_about_you
    int mixprop_checkout_create_address -> mixprop_checkout_create_address
    int mixprop_checkout_edit_address -> mixprop_checkout_edit_address
    int mixprop_checkout_external_payment -> mixprop_checkout_external_payment
    int mixprop_checkout_my_addresses -> mixprop_checkout_my_addresses
    int mixprop_checkout_my_order -> mixprop_checkout_my_order
    int mixprop_checkout_payment_method -> mixprop_checkout_payment_method
    int mixprop_checkout_payment_methods -> mixprop_checkout_payment_methods
    int mixprop_checkout_poll_question -> mixprop_checkout_poll_question
    int mixprop_checkout_shipping_methods -> mixprop_checkout_shipping_methods
    int mixprop_country -> mixprop_country
    int mixprop_createdate -> mixprop_createdate
    int mixprop_email -> mixprop_email
    int mixprop_gender -> mixprop_gender
    int mixprop_itembrand -> mixprop_itembrand
    int mixprop_itemcategory -> mixprop_itemcategory
    int mixprop_itemid -> mixprop_itemid
    int mixprop_itemlocation -> mixprop_itemlocation
    int mixprop_itemlocationdetails -> mixprop_itemlocationdetails
    int mixprop_itemlocationwishlist -> mixprop_itemlocationwishlist
    int mixprop_itemname -> mixprop_itemname
    int mixprop_itemprice -> mixprop_itemprice
    int mixprop_itemquantity -> mixprop_itemquantity
    int mixprop_itemsubcategory -> mixprop_itemsubcategory
    int mixprop_loginlocation -> mixprop_loginlocation
    int mixprop_loginlocationautologin -> mixprop_loginlocationautologin
    int mixprop_loginlocationcart -> mixprop_loginlocationcart
    int mixprop_loginlocationcheckout -> mixprop_loginlocationcheckout
    int mixprop_loginlocationmyaccount -> mixprop_loginlocationmyaccount
    int mixprop_loginlocationreview -> mixprop_loginlocationreview
    int mixprop_loginlocationsidemenu -> mixprop_loginlocationsidemenu
    int mixprop_loginlocationwishlist -> mixprop_loginlocationwishlist
    int mixprop_loginmethod -> mixprop_loginmethod
    int mixprop_loginmethodemail -> mixprop_loginmethodemail
    int mixprop_loginmethodfacebook -> mixprop_loginmethodfacebook
    int mixprop_logoutlocation -> mixprop_logoutlocation
    int mixprop_native_checkout -> mixprop_native_checkout
    int mixprop_numberresults -> mixprop_numberresults
    int mixprop_page -> mixprop_page
    int mixprop_paymentmethod -> mixprop_paymentmethod
    int mixprop_platform -> mixprop_platform
    int mixprop_platformmobile -> mixprop_platformmobile
    int mixprop_preinstall -> mixprop_preinstall
    int mixprop_purchacecount -> mixprop_purchacecount
    int mixprop_pushnotifications -> mixprop_pushnotifications
    int mixprop_ratebrand -> mixprop_ratebrand
    int mixprop_ratecategory -> mixprop_ratecategory
    int mixprop_rateid -> mixprop_rateid
    int mixprop_ratename -> mixprop_ratename
    int mixprop_rateprice -> mixprop_rateprice
    int mixprop_ratesubcategory -> mixprop_ratesubcategory
    int mixprop_ratingappearance -> mixprop_ratingappearance
    int mixprop_ratingaverage -> mixprop_ratingaverage
    int mixprop_ratingprice -> mixprop_ratingprice
    int mixprop_ratingquality -> mixprop_ratingquality
    int mixprop_registrationlocation -> mixprop_registrationlocation
    int mixprop_registrationmethod -> mixprop_registrationmethod
    int mixprop_searchsort -> mixprop_searchsort
    int mixprop_searchtearm -> mixprop_searchtearm
    int mixprop_sharebrand -> mixprop_sharebrand
    int mixprop_sharecategory -> mixprop_sharecategory
    int mixprop_sharelocation -> mixprop_sharelocation
    int mixprop_sharelocationproduct -> mixprop_sharelocationproduct
    int mixprop_sharename -> mixprop_sharename
    int mixprop_sharenetwork -> mixprop_sharenetwork
    int mixprop_shareprice -> mixprop_shareprice
    int mixprop_shopcountry -> mixprop_shopcountry
    int mixprop_signup -> mixprop_signup
    int mixprop_signupplatform -> mixprop_signupplatform
    int mixprop_totalcart -> mixprop_totalcart
    int mixprop_totalitems -> mixprop_totalitems
    int mixprop_usevoucher -> mixprop_usevoucher
    int mixprop_voucheramout -> mixprop_voucheramout
    int mixproppeople_age -> mixproppeople_age
    int mixproppeople_country -> mixproppeople_country
    int mixproppeople_created -> mixproppeople_created
    int mixproppeople_email -> mixproppeople_email
    int mixproppeople_firstname -> mixproppeople_firstname
    int mixproppeople_gender -> mixproppeople_gender
    int mixproppeople_itemscategory -> mixproppeople_itemscategory
    int mixproppeople_lastname -> mixproppeople_lastname
    int mixproppeople_loginsused -> mixproppeople_loginsused
    int mixproppeople_numberitems -> mixproppeople_numberitems
    int mixproppeople_numberlogins -> mixproppeople_numberlogins
    int mixproppeople_numberlogouts -> mixproppeople_numberlogouts
    int mixproppeople_numbersearches -> mixproppeople_numbersearches
    int mixproppeople_numbershares -> mixproppeople_numbershares
    int mixproppeople_postalcode -> mixproppeople_postalcode
    int mixproppeople_preinstall -> mixproppeople_preinstall
    int mixproppeople_rateitemnumber -> mixproppeople_rateitemnumber
    int mixproppeople_sharenetwork -> mixproppeople_sharenetwork
    int mixproppeople_shopcountry -> mixproppeople_shopcountry
    int mixproppeople_signupplatform -> mixproppeople_signupplatform
    int mixproppeople_source -> mixproppeople_source
    int mixproppeople_totalnumpurchaces -> mixproppeople_totalnumpurchaces
    int mixproppeople_transations -> mixproppeople_transations
    int mixpushnotification -> mixpushnotification
    int mixrate -> mixrate
    int mixsale -> mixsale
    int mixsearch -> mixsearch
    int mixsearchviewsorted -> mixsearchviewsorted
    int mixshare -> mixshare
    int mixshop -> mixshop
    int mixsignup -> mixsignup
    int mixviewcart -> mixviewcart
    int mixviewcategory -> mixviewcategory
    int mixviewrate -> mixviewrate
    int my_account -> my_account
    int my_addresses -> my_addresses
    int my_order_confirm_button -> my_order_confirm_button
    int my_order_coupon_label -> my_order_coupon_label
    int my_order_is_same -> my_order_is_same
    int my_order_item_label -> my_order_item_label
    int my_order_items_label -> my_order_items_label
    int my_order_label -> my_order_label
    int my_order_payment -> my_order_payment
    int my_order_qty -> my_order_qty
    int my_order_ship_fee_label -> my_order_ship_fee_label
    int my_order_total_label -> my_order_total_label
    int my_order_voucher_label -> my_order_voucher_label
    int myaccount_newpass_description -> myaccount_newpass_description
    int myaccount_repeatpass_description -> myaccount_repeatpass_description
    int myaccount_save_description -> myaccount_save_description
    int myaccount_userdata -> myaccount_userdata
    int name -> name
    int nav_country -> nav_country
    int nav_country_warning -> nav_country_warning
    int nav_products -> nav_products
    int nav_track_order -> nav_track_order
    int navigation_cart_empty -> navigation_cart_empty
    int new_password_hint -> new_password_hint
    int new_password_label -> new_password_label
    int next_button -> next_button
    int noApplications -> noApplications
    int no_conn -> no_conn
    int no_connect_dialog_content -> no_connect_dialog_content
    int no_connect_warning_title -> no_connect_warning_title
    int no_internet_access_warning_title -> no_internet_access_warning_title
    int no_label -> no_label
    int no_payment -> no_payment
    int no_service -> no_service
    int notifications -> notifications
    int notifications_summary -> notifications_summary
    int number_picker_decrement_button -> number_picker_decrement_button
    int number_picker_increment_button -> number_picker_increment_button
    int number_picker_increment_scroll_action -> number_picker_increment_scroll_action
    int number_picker_increment_scroll_mode -> number_picker_increment_scroll_mode
    int ok_label -> ok_label
    int option2_description -> option2_description
    int option3_description -> option3_description
    int or_text -> or_text
    int order_sent_soon -> order_sent_soon
    int order_status -> order_status
    int order_success -> order_success
    int order_summary_label -> order_summary_label
    int order_summary_shipping_fee_label -> order_summary_shipping_fee_label
    int order_summary_shipping_method -> order_summary_shipping_method
    int order_summary_subtotal_label -> order_summary_subtotal_label
    int order_summary_total_label -> order_summary_total_label
    int order_track_link -> order_track_link
    int order_track_products -> order_track_products
    int order_track_success -> order_track_success
    int orientation -> orientation
    int out_of_stock -> out_of_stock
    int password_changed -> password_changed
    int password_new_mincharacters -> password_new_mincharacters
    int payment -> payment
    int payment_method -> payment_method
    int payment_methods -> payment_methods
    int pd_qtd -> pd_qtd
    int personal_data_label -> personal_data_label
    int personal_data_title -> personal_data_title
    int please_fill_all_data -> please_fill_all_data
    int poll_question_label -> poll_question_label
    int posted_by -> posted_by
    int pref_led -> pref_led
    int pref_notification -> pref_notification
    int pref_sound -> pref_sound
    int pref_vibrate -> pref_vibrate
    int product_could_not_retrieved -> product_could_not_retrieved
    int product_description_title -> product_description_title
    int product_details_title -> product_details_title
    int product_features_title -> product_features_title
    int product_outof_stock -> product_outof_stock
    int product_review -> product_review
    int product_sort -> product_sort
    int product_sort_button -> product_sort_button
    int product_specifications -> product_specifications
    int product_variance_choose -> product_variance_choose
    int product_variance_choose_error -> product_variance_choose_error
    int product_variant_placeholder -> product_variant_placeholder
    int productdetail_addcart_description -> productdetail_addcart_description
    int productdetail_gotocart_description -> productdetail_gotocart_description
    int productdetail_order_button_description -> productdetail_order_button_description
    int products -> products
    int products_could_notloaded -> products_could_notloaded
    int products_sort_bestrated -> products_sort_bestrated
    int products_sort_brand -> products_sort_brand
    int products_sort_name -> products_sort_name
    int products_sort_newin -> products_sort_newin
    int products_sort_popularity -> products_sort_popularity
    int products_sort_pricedown -> products_sort_pricedown
    int products_sort_priceup -> products_sort_priceup
    int products_tip_text -> products_tip_text
    int promotion_tip_tap_text -> promotion_tip_tap_text
    int rating_quality -> rating_quality
    int rating_question -> rating_question
    int recently_viewed -> recently_viewed
    int register_birthday -> register_birthday
    int register_birthday_description -> register_birthday_description
    int register_button -> register_button
    int register_button_description -> register_button_description
    int register_dialog_birthday -> register_dialog_birthday
    int register_required_text -> register_required_text
    int register_sectiontitle -> register_sectiontitle
    int register_submit_description -> register_submit_description
    int register_terms_required -> register_terms_required
    int register_text_terms_a -> register_text_terms_a
    int register_text_terms_b -> register_text_terms_b
    int register_title -> register_title
    int registration_text -> registration_text
    int related_items -> related_items
    int retype_new_password_hint -> retype_new_password_hint
    int review -> review
    int reviews -> reviews
    int ringtone_default -> ringtone_default
    int ringtone_picker_title -> ringtone_picker_title
    int ringtone_silent -> ringtone_silent
    int sales -> sales
    int save_changes_label -> save_changes_label
    int save_label -> save_label
    int search_field_description -> search_field_description
    int search_input_description -> search_input_description
    int search_label -> search_label
    int search_no_items -> search_no_items
    int searchsuggestions_empty -> searchsuggestions_empty
    int searchsuggestions_pleaseenter -> searchsuggestions_pleaseenter
    int section_title_account -> section_title_account
    int section_title_notification -> section_title_notification
    int server_error -> server_error
    int server_error_title -> server_error_title
    int session_expired_text -> session_expired_text
    int session_label -> session_label
    int share_checkout_this_product -> share_checkout_this_product
    int share_subject -> share_subject
    int shipping -> shipping
    int shipping_methods -> shipping_methods
    int shopping_cart -> shopping_cart
    int shopping_cart_button_description -> shopping_cart_button_description
    int shoppingcart_alert_header -> shoppingcart_alert_header
    int shoppingcart_alert_message_no_items -> shoppingcart_alert_message_no_items
    int shoppingcart_article -> shoppingcart_article
    int shoppingcart_articles -> shoppingcart_articles
    int shoppingcart_choose_quantity -> shoppingcart_choose_quantity
    int shoppingcart_dialog_title -> shoppingcart_dialog_title
    int shoppingcart_header_description -> shoppingcart_header_description
    int shoppingcart_instock -> shoppingcart_instock
    int shoppingcart_item_btn_delete -> shoppingcart_item_btn_delete
    int shoppingcart_items -> shoppingcart_items
    int shoppingcart_minamount -> shoppingcart_minamount
    int shoppingcart_minamount_waiting -> shoppingcart_minamount_waiting
    int shoppingcart_notinstock -> shoppingcart_notinstock
    int shoppingcart_quantity -> shoppingcart_quantity
    int shoppingcart_title -> shoppingcart_title
    int sign_in -> sign_in
    int sign_out -> sign_out
    int signup_label -> signup_label
    int some_products_not_added -> some_products_not_added
    int sound -> sound
    int sound_summary -> sound_summary
    int stale_warning -> stale_warning
    int sub_total_title -> sub_total_title
    int submit_label -> submit_label
    int submit_text -> submit_text
    int submit_title -> submit_title
    int terms_and_conditions -> terms_and_conditions
    int terms_and_conditions_description -> terms_and_conditions_description
    int thank_you_order_title -> thank_you_order_title
    int thank_you_title -> thank_you_title
    int time_picker_decrement_hour_button -> time_picker_decrement_hour_button
    int time_picker_decrement_minute_button -> time_picker_decrement_minute_button
    int time_picker_decrement_set_am_button -> time_picker_decrement_set_am_button
    int time_picker_dialog_title -> time_picker_dialog_title
    int time_picker_increment_hour_button -> time_picker_increment_hour_button
    int time_picker_increment_minute_button -> time_picker_increment_minute_button
    int time_picker_increment_set_pm_button -> time_picker_increment_set_pm_button
    int time_picker_separator -> time_picker_separator
    int tip_pinch_text -> tip_pinch_text
    int tip_swipe_text -> tip_swipe_text
    int tip_tap_text -> tip_tap_text
    int top_brands_toplevel_title -> top_brands_toplevel_title
    int track_order -> track_order
    int track_order_hint -> track_order_hint
    int track_order_status -> track_order_status
    int track_other_order -> track_other_order
    int track_your_order -> track_your_order
    int try_again -> try_again
    int ua_preisntall -> ua_preisntall
    int ua_store -> ua_store
    int upgrade_forced_text -> upgrade_forced_text
    int upgrade_forced_title -> upgrade_forced_title
    int upgrade_optional_text -> upgrade_optional_text
    int upgrade_optional_title -> upgrade_optional_title
    int upgrade_proceed -> upgrade_proceed
    int upgrade_remindmelater -> upgrade_remindmelater
    int validation_errortext -> validation_errortext
    int validation_title -> validation_title
    int vat_string -> vat_string
    int vibrate -> vibrate
    int vibrate_summary -> vibrate_summary
    int voucher_error_message -> voucher_error_message
    int voucher_message_hint -> voucher_message_hint
    int voucher_remove -> voucher_remove
    int voucher_use -> voucher_use
    int whichApplication -> whichApplication
    int wifi_security_eap -> wifi_security_eap
    int wifi_security_none -> wifi_security_none
    int wifi_security_psk_generic -> wifi_security_psk_generic
    int wifi_security_short_eap -> wifi_security_short_eap
    int wifi_security_short_psk_generic -> wifi_security_short_psk_generic
    int wifi_security_short_wep -> wifi_security_short_wep
    int wifi_security_short_wpa -> wifi_security_short_wpa
    int wifi_security_short_wpa2 -> wifi_security_short_wpa2
    int wifi_security_short_wpa_wpa2 -> wifi_security_short_wpa_wpa2
    int wifi_security_wep -> wifi_security_wep
    int wifi_security_wpa -> wifi_security_wpa
    int wifi_security_wpa2 -> wifi_security_wpa2
    int wifi_security_wpa_wpa2 -> wifi_security_wpa_wpa2
    int wishlist_addalltocart -> wishlist_addalltocart
    int wishlist_addcart -> wishlist_addcart
    int wishlist_btn_addcart -> wishlist_btn_addcart
    int wishlist_header -> wishlist_header
    int wishlist_login_text -> wishlist_login_text
    int wishlist_login_title -> wishlist_login_title
    int wishlist_notiems -> wishlist_notiems
    int wishlist_remove_message -> wishlist_remove_message
    int wishlist_remove_title -> wishlist_remove_title
    int write_comment -> write_comment
    int writereview_page_title -> writereview_page_title
    int writereview_review_hint -> writereview_review_hint
    int writereview_send -> writereview_send
    int writereview_title_hint -> writereview_title_hint
    int writereview_your_rating -> writereview_your_rating
    int xFBlogin -> xFBlogin
    int xaddtocart -> xaddtocart
    int xcall -> xcall
    int xcheckoutaboutyou -> xcheckoutaboutyou
    int xcheckoutcreateaddress -> xcheckoutcreateaddress
    int xcheckouteditaddress -> xcheckouteditaddress
    int xcheckoutexternalpayment -> xcheckoutexternalpayment
    int xcheckoutmyaddresses -> xcheckoutmyaddresses
    int xcheckoutmyorder -> xcheckoutmyorder
    int xcheckoutpaymentmethods -> xcheckoutpaymentmethods
    int xcheckoutpollquestion -> xcheckoutpollquestion
    int xcheckoutshippingmethods -> xcheckoutshippingmethods
    int xcustomer -> xcustomer
    int xcustomersignup -> xcustomersignup
    int xdeeplinklaunch -> xdeeplinklaunch
    int xguestsale -> xguestsale
    int xid -> xid
    int xlaunch -> xlaunch
    int xlogin -> xlogin
    int xlogout -> xlogout
    int xnativecheckout -> xnativecheckout
    int xnativecheckouterror -> xnativecheckouterror
    int xnetwork -> xnetwork
    int xpaymentmethod -> xpaymentmethod
    int xpreferences -> xpreferences
    int xpreinstall -> xpreinstall
    int xproductrate -> xproductrate
    int xreceiver -> xreceiver
    int xreference -> xreference
    int xreferral -> xreferral
    int xremovefromcart -> xremovefromcart
    int xsale -> xsale
    int xsaledata -> xsaledata
    int xsignup -> xsignup
    int xsocialshare -> xsocialshare
    int yes_label -> yes_label
    int your_cart -> your_cart
pt.rocket.view.R$style -> cba:
    int Holo -> Holo
    int Holo_AlertDialog -> Holo_AlertDialog
    int Holo_AlertDialog_Light -> Holo_AlertDialog_Light
    int Holo_Animation -> Holo_Animation
    int Holo_Animation_Dialog -> Holo_Animation_Dialog
    int Holo_Animation_DropDownDown -> Holo_Animation_DropDownDown
    int Holo_Animation_DropDownUp -> Holo_Animation_DropDownUp
    int Holo_Animation_PopupWindow -> Holo_Animation_PopupWindow
    int Holo_AutoCompleteTextView -> Holo_AutoCompleteTextView
    int Holo_AutoCompleteTextView_Light -> Holo_AutoCompleteTextView_Light
    int Holo_Base_Theme -> Holo_Base_Theme
    int Holo_Base_Theme_Light -> Holo_Base_Theme_Light
    int Holo_Base_Theme_Light_DarkActionBar -> Holo_Base_Theme_Light_DarkActionBar
    int Holo_Button -> Holo_Button
    int Holo_ButtonBar -> Holo_ButtonBar
    int Holo_ButtonBar_AlertDialog -> Holo_ButtonBar_AlertDialog
    int Holo_Button_Borderless -> Holo_Button_Borderless
    int Holo_Button_Borderless_Light -> Holo_Button_Borderless_Light
    int Holo_Button_Borderless_Small -> Holo_Button_Borderless_Small
    int Holo_Button_Borderless_Small_Light -> Holo_Button_Borderless_Small_Light
    int Holo_Button_Light -> Holo_Button_Light
    int Holo_Button_Small -> Holo_Button_Small
    int Holo_Button_Small_Light -> Holo_Button_Small_Light
    int Holo_Button_Toggle -> Holo_Button_Toggle
    int Holo_Button_Toggle_Light -> Holo_Button_Toggle_Light
    int Holo_CalendarView -> Holo_CalendarView
    int Holo_CalendarView_Light -> Holo_CalendarView_Light
    int Holo_CompoundButton -> Holo_CompoundButton
    int Holo_CompoundButton_CheckBox -> Holo_CompoundButton_CheckBox
    int Holo_CompoundButton_CheckBox_Light -> Holo_CompoundButton_CheckBox_Light
    int Holo_CompoundButton_RadioButton -> Holo_CompoundButton_RadioButton
    int Holo_CompoundButton_RadioButton_Light -> Holo_CompoundButton_RadioButton_Light
    int Holo_DatePicker -> Holo_DatePicker
    int Holo_DialogWindowTitle -> Holo_DialogWindowTitle
    int Holo_DialogWindowTitle_Light -> Holo_DialogWindowTitle_Light
    int Holo_DropDownItem -> Holo_DropDownItem
    int Holo_EditText -> Holo_EditText
    int Holo_EditText_Light -> Holo_EditText_Light
    int Holo_EditText_NumberPickerInputText -> Holo_EditText_NumberPickerInputText
    int Holo_ExpandableListView -> Holo_ExpandableListView
    int Holo_ExpandableListView_Light -> Holo_ExpandableListView_Light
    int Holo_GridView -> Holo_GridView
    int Holo_ImageButton -> Holo_ImageButton
    int Holo_ImageButton_Light -> Holo_ImageButton_Light
    int Holo_ListPopupWindow -> Holo_ListPopupWindow
    int Holo_ListPopupWindow_Light -> Holo_ListPopupWindow_Light
    int Holo_ListView -> Holo_ListView
    int Holo_ListView_DropDown -> Holo_ListView_DropDown
    int Holo_ListView_DropDown_Light -> Holo_ListView_DropDown_Light
    int Holo_ListView_Light -> Holo_ListView_Light
    int Holo_NumberPicker -> Holo_NumberPicker
    int Holo_PopupWindow -> Holo_PopupWindow
    int Holo_PopupWindow_Light -> Holo_PopupWindow_Light
    int Holo_ProgressBar -> Holo_ProgressBar
    int Holo_ProgressBar_Horizontal -> Holo_ProgressBar_Horizontal
    int Holo_ProgressBar_Horizontal_Light -> Holo_ProgressBar_Horizontal_Light
    int Holo_ProgressBar_Large -> Holo_ProgressBar_Large
    int Holo_ProgressBar_Small -> Holo_ProgressBar_Small
    int Holo_RatingBar -> Holo_RatingBar
    int Holo_RatingBar_Indicator -> Holo_RatingBar_Indicator
    int Holo_RatingBar_Indicator_Light -> Holo_RatingBar_Indicator_Light
    int Holo_RatingBar_Light -> Holo_RatingBar_Light
    int Holo_RatingBar_Small -> Holo_RatingBar_Small
    int Holo_RatingBar_Small_Light -> Holo_RatingBar_Small_Light
    int Holo_SeekBar -> Holo_SeekBar
    int Holo_SeekBar_Light -> Holo_SeekBar_Light
    int Holo_SegmentedButton -> Holo_SegmentedButton
    int Holo_SegmentedButton_Light -> Holo_SegmentedButton_Light
    int Holo_Spinner -> Holo_Spinner
    int Holo_Spinner_Light -> Holo_Spinner_Light
    int Holo_Switch -> Holo_Switch
    int Holo_Switch_Light -> Holo_Switch_Light
    int Holo_Switch_Light_Old -> Holo_Switch_Light_Old
    int Holo_Switch_Old -> Holo_Switch_Old
    int Holo_Switch_TextAppearance -> Holo_Switch_TextAppearance
    int Holo_Switch_TextAppearance_Light -> Holo_Switch_TextAppearance_Light
    int Holo_TextAppearance -> Holo_TextAppearance
    int Holo_TextAppearance_CalendarView_WeekDayView -> Holo_TextAppearance_CalendarView_WeekDayView
    int Holo_TextAppearance_DialogWindowTitle -> Holo_TextAppearance_DialogWindowTitle
    int Holo_TextAppearance_DialogWindowTitle_Light -> Holo_TextAppearance_DialogWindowTitle_Light
    int Holo_TextAppearance_DropDownItem -> Holo_TextAppearance_DropDownItem
    int Holo_TextAppearance_Inverse -> Holo_TextAppearance_Inverse
    int Holo_TextAppearance_Inverse_Light -> Holo_TextAppearance_Inverse_Light
    int Holo_TextAppearance_Large -> Holo_TextAppearance_Large
    int Holo_TextAppearance_Large_Inverse -> Holo_TextAppearance_Large_Inverse
    int Holo_TextAppearance_Large_Inverse_Light -> Holo_TextAppearance_Large_Inverse_Light
    int Holo_TextAppearance_Large_Light -> Holo_TextAppearance_Large_Light
    int Holo_TextAppearance_Light -> Holo_TextAppearance_Light
    int Holo_TextAppearance_Medium -> Holo_TextAppearance_Medium
    int Holo_TextAppearance_Medium_Inverse -> Holo_TextAppearance_Medium_Inverse
    int Holo_TextAppearance_Medium_Inverse_Light -> Holo_TextAppearance_Medium_Inverse_Light
    int Holo_TextAppearance_Medium_Light -> Holo_TextAppearance_Medium_Light
    int Holo_TextAppearance_PopupMenu -> Holo_TextAppearance_PopupMenu
    int Holo_TextAppearance_PopupMenu_Large -> Holo_TextAppearance_PopupMenu_Large
    int Holo_TextAppearance_PopupMenu_Light -> Holo_TextAppearance_PopupMenu_Light
    int Holo_TextAppearance_PopupMenu_Light_Large -> Holo_TextAppearance_PopupMenu_Light_Large
    int Holo_TextAppearance_PopupMenu_Light_Small -> Holo_TextAppearance_PopupMenu_Light_Small
    int Holo_TextAppearance_PopupMenu_Small -> Holo_TextAppearance_PopupMenu_Small
    int Holo_TextAppearance_Small -> Holo_TextAppearance_Small
    int Holo_TextAppearance_Small_Inverse -> Holo_TextAppearance_Small_Inverse
    int Holo_TextAppearance_Small_Inverse_Light -> Holo_TextAppearance_Small_Inverse_Light
    int Holo_TextAppearance_Small_Light -> Holo_TextAppearance_Small_Light
    int Holo_TextAppearance_TextView -> Holo_TextAppearance_TextView
    int Holo_TextAppearance_TextView_SpinnerItem -> Holo_TextAppearance_TextView_SpinnerItem
    int Holo_TextAppearance_TextView_SpinnerItem_Light -> Holo_TextAppearance_TextView_SpinnerItem_Light
    int Holo_TextAppearance_Widget_IconMenu_Item -> Holo_TextAppearance_Widget_IconMenu_Item
    int Holo_TextView -> Holo_TextView
    int Holo_TextView_ListSeparator -> Holo_TextView_ListSeparator
    int Holo_TextView_ListSeparator_Light -> Holo_TextView_ListSeparator_Light
    int Holo_TextView_SpinnerItem -> Holo_TextView_SpinnerItem
    int Holo_TextView_SpinnerItem_DropDown -> Holo_TextView_SpinnerItem_DropDown
    int Holo_TextView_SpinnerItem_DropDown_Light -> Holo_TextView_SpinnerItem_DropDown_Light
    int Holo_TextView_SpinnerItem_Light -> Holo_TextView_SpinnerItem_Light
    int Holo_Theme -> Holo_Theme
    int Holo_Theme_Dialog -> Holo_Theme_Dialog
    int Holo_Theme_DialogWhenLarge -> Holo_Theme_DialogWhenLarge
    int Holo_Theme_DialogWhenLarge_Light -> Holo_Theme_DialogWhenLarge_Light
    int Holo_Theme_DialogWhenLarge_Light_DarkActionBar -> Holo_Theme_DialogWhenLarge_Light_DarkActionBar
    int Holo_Theme_DialogWhenLarge_Light_DarkActionBar_NoActionBar -> Holo_Theme_DialogWhenLarge_Light_DarkActionBar_NoActionBar
    int Holo_Theme_DialogWhenLarge_Light_NoActionBar -> Holo_Theme_DialogWhenLarge_Light_NoActionBar
    int Holo_Theme_DialogWhenLarge_NoActionBar -> Holo_Theme_DialogWhenLarge_NoActionBar
    int Holo_Theme_Dialog_Alert -> Holo_Theme_Dialog_Alert
    int Holo_Theme_Dialog_Alert_Light -> Holo_Theme_Dialog_Alert_Light
    int Holo_Theme_Dialog_FixedSize -> Holo_Theme_Dialog_FixedSize
    int Holo_Theme_Dialog_Light -> Holo_Theme_Dialog_Light
    int Holo_Theme_Dialog_Light_FixedSize -> Holo_Theme_Dialog_Light_FixedSize
    int Holo_Theme_Dialog_Light_NoFrame -> Holo_Theme_Dialog_Light_NoFrame
    int Holo_Theme_Dialog_NoFrame -> Holo_Theme_Dialog_NoFrame
    int Holo_Theme_Fullscreen -> Holo_Theme_Fullscreen
    int Holo_Theme_Fullscreen_Wallpaper -> Holo_Theme_Fullscreen_Wallpaper
    int Holo_Theme_Light -> Holo_Theme_Light
    int Holo_Theme_Light_DarkActionBar -> Holo_Theme_Light_DarkActionBar
    int Holo_Theme_Light_DarkActionBar_Fullscreen -> Holo_Theme_Light_DarkActionBar_Fullscreen
    int Holo_Theme_Light_DarkActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_DarkActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_DarkActionBar_NoActionBar -> Holo_Theme_Light_DarkActionBar_NoActionBar
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen -> Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Wallpaper -> Holo_Theme_Light_DarkActionBar_NoActionBar_Wallpaper
    int Holo_Theme_Light_DarkActionBar_Wallpaper -> Holo_Theme_Light_DarkActionBar_Wallpaper
    int Holo_Theme_Light_Fullscreen -> Holo_Theme_Light_Fullscreen
    int Holo_Theme_Light_Fullscreen_Wallpaper -> Holo_Theme_Light_Fullscreen_Wallpaper
    int Holo_Theme_Light_NoActionBar -> Holo_Theme_Light_NoActionBar
    int Holo_Theme_Light_NoActionBar_Fullscreen -> Holo_Theme_Light_NoActionBar_Fullscreen
    int Holo_Theme_Light_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_NoActionBar_Wallpaper -> Holo_Theme_Light_NoActionBar_Wallpaper
    int Holo_Theme_Light_Wallpaper -> Holo_Theme_Light_Wallpaper
    int Holo_Theme_NoActionBar -> Holo_Theme_NoActionBar
    int Holo_Theme_NoActionBar_Fullscreen -> Holo_Theme_NoActionBar_Fullscreen
    int Holo_Theme_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_NoActionBar_Wallpaper -> Holo_Theme_NoActionBar_Wallpaper
    int Holo_Theme_Wallpaper -> Holo_Theme_Wallpaper
    int Holo_TimePicker -> Holo_TimePicker
    int PromotionDialog -> PromotionDialog
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int ShoppingCartCount -> ShoppingCartCount
    int TextAppearance_Sherlock -> TextAppearance_Sherlock
    int TextAppearance_Sherlock_Light_SearchResult -> TextAppearance_Sherlock_Light_SearchResult
    int TextAppearance_Sherlock_Light_SearchResult_Subtitle -> TextAppearance_Sherlock_Light_SearchResult_Subtitle
    int TextAppearance_Sherlock_Light_SearchResult_Title -> TextAppearance_Sherlock_Light_SearchResult_Title
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_SearchResult -> TextAppearance_Sherlock_SearchResult
    int TextAppearance_Sherlock_SearchResult_Subtitle -> TextAppearance_Sherlock_SearchResult_Subtitle
    int TextAppearance_Sherlock_SearchResult_Title -> TextAppearance_Sherlock_SearchResult_Title
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int TextAppearance_TabPageIndicator -> TextAppearance_TabPageIndicator
    int Theme_Jumia -> Theme_Jumia
    int Theme_Jumia_Dialog -> Theme_Jumia_Dialog
    int Theme_Jumia_Dialog_Blue_NoTitle -> Theme_Jumia_Dialog_Blue_NoTitle
    int Theme_Jumia_Dialog_Blue_NoTitle_DatePicker -> Theme_Jumia_Dialog_Blue_NoTitle_DatePicker
    int Theme_Jumia_Dialog_Progress -> Theme_Jumia_Dialog_Progress
    int Theme_PageIndicatorDefaults -> Theme_PageIndicatorDefaults
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_IconPageIndicator -> Widget_IconPageIndicator
    int Widget_Jumia_ActionBar -> Widget_Jumia_ActionBar
    int Widget_Jumia_CheckBox -> Widget_Jumia_CheckBox
    int Widget_Jumia_ListView -> Widget_Jumia_ListView
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
    int Widget_TabPageIndicator -> Widget_TabPageIndicator
    int Widget_TeaserIconPageIndicator -> Widget_TeaserIconPageIndicator
    int activity_sectionheader_container -> activity_sectionheader_container
    int activity_sectionheader_divider -> activity_sectionheader_divider
    int activity_sectionheader_text -> activity_sectionheader_text
    int activity_subtitle_small -> activity_subtitle_small
    int body_text_feature_add -> body_text_feature_add
    int brand_list_text -> brand_list_text
    int button -> button
    int button_grey_style -> button_grey_style
    int button_orange_style -> button_orange_style
    int category_inner_child_text -> category_inner_child_text
    int category_inner_current_text -> category_inner_current_text
    int com_facebook_loginview_default_style -> com_facebook_loginview_default_style
    int com_facebook_loginview_silver_style -> com_facebook_loginview_silver_style
    int dialog_button_style -> dialog_button_style
    int dialog_container_content -> dialog_container_content
    int dialog_list_itemtext -> dialog_list_itemtext
    int dialog_text -> dialog_text
    int dialog_title -> dialog_title
    int divider_horizontal -> divider_horizontal
    int divider_horizontal_campaign -> divider_horizontal_campaign
    int divider_vertical -> divider_vertical
    int divider_vertical_grid -> divider_vertical_grid
    int forgot_password_introtext -> forgot_password_introtext
    int forgot_password_introtext_bold -> forgot_password_introtext_bold
    int form_edittext_style -> form_edittext_style
    int headline -> headline
    int headline_title -> headline_title
    int headline_totalItems -> headline_totalItems
    int line_dialog -> line_dialog
    int line_dialog_vertical -> line_dialog_vertical
    int line_grey_style -> line_grey_style
    int list_row_style -> list_row_style
    int lists_sel_arrow -> lists_sel_arrow
    int lists_sel_text -> lists_sel_text
    int navigation_cart_emptytext -> navigation_cart_emptytext
    int navigation_cart_price -> navigation_cart_price
    int navigation_cart_titletext -> navigation_cart_titletext
    int navigation_cart_vattext -> navigation_cart_vattext
    int navigation_cartnum_text -> navigation_cartnum_text
    int navigation_generic_component_text -> navigation_generic_component_text
    int product_description_text -> product_description_text
    int product_name_list_text -> product_name_list_text
    int product_price_current_list_text -> product_price_current_list_text
    int product_price_current_single_item -> product_price_current_single_item
    int product_price_old_single_item -> product_price_old_single_item
    int product_sort_button -> product_sort_button
    int product_sort_button_text -> product_sort_button_text
    int product_sort_divider -> product_sort_divider
    int product_sort_line -> product_sort_line
    int product_sort_shadow -> product_sort_shadow
    int search_suggestion_list_itemtext -> search_suggestion_list_itemtext
    int starRatingBarBig -> starRatingBarBig
    int starRatingBarSmall -> starRatingBarSmall
    int starRatingBarVeryBig -> starRatingBarVeryBig
    int text_bold -> text_bold
    int text_normal -> text_normal
    int white_text_12sp_normal -> white_text_12sp_normal
    int white_text_16sp_normal -> white_text_16sp_normal
pt.rocket.view.R$xml -> cbb:
    int preferences_push -> preferences_push
pt.rocket.view.SplashScreenActivity -> pt.rocket.view.SplashScreenActivity:
    java.lang.String TAG -> q
    pt.rocket.utils.dialogfragments.DialogGenericFragment dialog -> r
    boolean shouldHandleEvent -> s
    java.lang.String productUrl -> t
    java.lang.String utm -> u
    boolean sendAdxLaunchEvent -> v
    long launchTime -> w
    android.os.Bundle mDeepLinkBundle -> x
    boolean isDeepLinkLaunch -> y
    android.os.Handler initializationHandler -> n
    pt.rocket.interfaces.IResponseCallback responseCallback -> o
    pt.rocket.framework.service.IRemoteServiceCallback mCallback -> p
    int[] $SWITCH_TABLE$pt$rocket$framework$ErrorCode -> z
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void cleanIntent(android.content.Intent) -> a
    void getPushNotifications() -> i
    void selectActivity() -> f
    void startActivityWithDeepLink(java.lang.String,java.lang.String,pt.rocket.controllers.fragments.FragmentType) -> a
    void startDeepView(android.os.Bundle) -> a
    void showDevInfo() -> j
    void initBugSense() -> k
    void onUserLeaveHint() -> onUserLeaveHint
    void handleSuccessResponse(android.os.Bundle) -> b
    void setLayoutMaintenance(pt.rocket.framework.utils.EventType) -> a
    void handleErrorResponse(android.os.Bundle) -> c
    void handleError(android.os.Bundle) -> d
    void handleResponse(android.os.Bundle) -> e
    void launchEvent() -> l
    void generateAndPerformAdxTrack() -> m
    java.lang.String access$0() -> g
    void access$1(pt.rocket.view.SplashScreenActivity) -> a
    void access$2(pt.rocket.view.SplashScreenActivity) -> b
    void access$3(pt.rocket.view.SplashScreenActivity,android.os.Bundle) -> a
    void access$4(pt.rocket.view.SplashScreenActivity,android.os.Bundle) -> b
    void access$5(pt.rocket.view.SplashScreenActivity,android.os.Bundle) -> c
    void access$6(pt.rocket.view.SplashScreenActivity,android.os.Bundle) -> d
    pt.rocket.utils.dialogfragments.DialogGenericFragment access$7(pt.rocket.view.SplashScreenActivity) -> c
    int[] $SWITCH_TABLE$pt$rocket$framework$ErrorCode() -> h
pt.rocket.view.SplashScreenActivity$1 -> cbc:
    pt.rocket.view.SplashScreenActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
pt.rocket.view.SplashScreenActivity$2 -> cbd:
    pt.rocket.view.SplashScreenActivity this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.SplashScreenActivity$3 -> cbe:
    pt.rocket.view.SplashScreenActivity this$0 -> a
    void getError(android.os.Bundle) -> b
    void getResponse(android.os.Bundle) -> a
pt.rocket.view.SplashScreenActivity$4 -> cbf:
    pt.rocket.view.SplashScreenActivity this$0 -> a
    pt.rocket.framework.utils.EventType val$eventType -> b
    void onClick(android.view.View) -> onClick
pt.rocket.view.SplashScreenActivity$5 -> cbg:
    pt.rocket.view.SplashScreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.SplashScreenActivity$6 -> cbh:
    pt.rocket.view.SplashScreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.BaseFragment -> cbi:
    java.util.Set HANDLED_EVENTS -> a
    java.lang.String TAG -> h
    java.lang.reflect.Field sChildFragmentManagerField -> b
    java.lang.Boolean IS_NESTED_FRAGMENT -> i
    java.lang.Boolean ISNT_NESTED_FRAGMENT -> Y
    java.lang.String md5Hash -> Z
    pt.rocket.utils.NavigationAction action -> c
    java.util.Set contentEvents -> d
    android.support.v4.app.DialogFragment dialog -> aa
    java.util.Set allHandledEvents -> e
    java.util.Set userEvents -> f
    java.util.Set enabledMenuItems -> ab
    int titleResId -> g
    java.lang.Boolean isNestedFragment -> ae
    boolean isVisible -> af
    boolean isOrderSummaryPresent -> ag
    int ORDER_SUMMARY_CONTAINER -> ah
    boolean isOnStoppingProcess -> ac
    int adjustState -> ai
    pt.rocket.view.BaseActivity mainActivity -> ad
    pt.rocket.framework.service.IRemoteServiceCallback mCallback -> aj
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void showOrderSummaryIfPresent(int,pt.rocket.framework.objects.OrderSummary) -> a
    void onStart() -> c_
    java.util.Set getCheckoutMenuItem() -> a
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void restartAllFragments() -> J
    void onLowMemory() -> onLowMemory
    void unbindDrawables(android.view.View) -> a
    boolean allowBackPressed() -> H
    void triggerContentEventWithNoLoading(pt.rocket.helpers.BaseHelper,android.os.Bundle,pt.rocket.interfaces.IResponseCallback) -> a
    void triggerContentEvent(pt.rocket.helpers.BaseHelper,android.os.Bundle,pt.rocket.interfaces.IResponseCallback) -> b
    void triggerContentEventProgress(pt.rocket.helpers.BaseHelper,android.os.Bundle,pt.rocket.interfaces.IResponseCallback) -> c
    java.lang.String sendRequest(pt.rocket.helpers.BaseHelper,android.os.Bundle,pt.rocket.interfaces.IResponseCallback) -> d
    void handleErrorEvent(android.os.Bundle) -> o
    void notifyFragment(android.os.Bundle) -> c
    void hideKeyboard() -> K
    void setVisiblility(boolean) -> a
    void setActivity(pt.rocket.view.BaseActivity) -> a
    pt.rocket.view.BaseActivity getBaseActivity() -> L
    void onDetach() -> c
    void handleResponse(android.os.Bundle) -> l
    void handleError(android.os.Bundle) -> m
    void gotoOldCheckoutMethod(pt.rocket.view.BaseActivity,java.lang.String,java.lang.String) -> a
    void removeNativeCheckoutFromBackStack() -> M
    boolean hasContent(java.util.ArrayList) -> a
    void updateAdjustState(int) -> b
    void access$0(pt.rocket.view.fragments.BaseFragment,android.os.Bundle) -> a
    void access$1(pt.rocket.view.fragments.BaseFragment,android.os.Bundle) -> b
pt.rocket.view.fragments.BaseFragment$1 -> cbj:
    pt.rocket.view.fragments.BaseFragment this$0 -> a
    void getError(android.os.Bundle) -> b
    void getResponse(android.os.Bundle) -> a
pt.rocket.view.fragments.BaseFragment$2 -> cbk:
    pt.rocket.view.fragments.BaseFragment this$0 -> a
    pt.rocket.helpers.BaseHelper val$helper -> b
    pt.rocket.interfaces.IResponseCallback val$responseCallback -> c
    void onRequestComplete(android.os.Bundle) -> b_
    void onRequestError(android.os.Bundle) -> a_
pt.rocket.view.fragments.BaseFragment$OnFragmentActivityInteraction -> cbl:
    void onFragmentSelected(pt.rocket.controllers.fragments.FragmentType) -> a
pt.rocket.view.fragments.CampaignFragment -> cbm:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.CampaignFragment sCampaignFragment -> b
    pt.rocket.framework.objects.TeaserCampaign mTeaserCampaign -> c
    pt.rocket.framework.objects.Campaign mCampaign -> d
    pt.rocket.framework.components.HeaderGridView mGridView -> e
    pt.rocket.view.fragments.CampaignFragment$CampaignAdapter mArrayAdapter -> f
    android.view.View mBannerView -> g
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ae
    pt.rocket.view.fragments.CampaignFragment getInstance(pt.rocket.framework.objects.TeaserCampaign) -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void loadCampaign() -> I
    void onClick(android.view.View) -> onClick
    void onClickPollAnswerButton() -> N
    void triggerGetCampaign(java.lang.String) -> a
    boolean onSuccessEvent(android.os.Bundle) -> l
    boolean onErrorEvent(android.os.Bundle) -> m
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
    java.lang.String access$0() -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> b
pt.rocket.view.fragments.CampaignFragment$CampaignAdapter -> cbn:
    android.view.LayoutInflater mInflater -> b
    pt.rocket.view.fragments.CampaignFragment this$0 -> a
    pt.rocket.framework.objects.CampaignItem getItem(int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setData(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,pt.rocket.framework.objects.CampaignItem) -> a
    void setStockBar(android.widget.ProgressBar,int) -> a
    pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item getItem(android.view.View) -> a
    java.lang.Object getItem(int) -> getItem
pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item -> cbo:
    org.holoeverywhere.widget.TextView mStockOff -> b
    org.holoeverywhere.widget.TextView mName -> c
    android.widget.ImageView mImage -> d
    android.view.View mSizeContainer -> e
    com.actionbarsherlock.internal.widget.IcsSpinner mSizeSpinner -> f
    org.holoeverywhere.widget.TextView mPrice -> g
    org.holoeverywhere.widget.TextView mDiscount -> h
    org.holoeverywhere.widget.TextView mSave -> i
    android.widget.ProgressBar mStockBar -> j
    org.holoeverywhere.widget.TextView mStockPercentage -> k
    android.view.View mButtonBuy -> l
    pt.rocket.view.fragments.CampaignFragment$CampaignAdapter this$1 -> a
    org.holoeverywhere.widget.TextView access$0(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item) -> a
    org.holoeverywhere.widget.TextView access$1(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item) -> b
    android.widget.ImageView access$2(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item) -> c
    org.holoeverywhere.widget.TextView access$3(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item) -> d
    org.holoeverywhere.widget.TextView access$4(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item) -> e
    org.holoeverywhere.widget.TextView access$5(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item) -> f
    android.widget.ProgressBar access$6(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item) -> g
    org.holoeverywhere.widget.TextView access$7(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item) -> h
    void access$9(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,org.holoeverywhere.widget.TextView) -> a
    void access$10(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,org.holoeverywhere.widget.TextView) -> b
    void access$11(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,android.widget.ImageView) -> a
    void access$12(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,android.view.View) -> a
    void access$13(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,com.actionbarsherlock.internal.widget.IcsSpinner) -> a
    void access$14(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,org.holoeverywhere.widget.TextView) -> c
    void access$15(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,org.holoeverywhere.widget.TextView) -> d
    void access$16(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,org.holoeverywhere.widget.TextView) -> e
    void access$17(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,android.widget.ProgressBar) -> a
    void access$18(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,org.holoeverywhere.widget.TextView) -> f
    void access$19(pt.rocket.view.fragments.CampaignFragment$CampaignAdapter$Item,android.view.View) -> b
pt.rocket.view.fragments.CampaignsFragment -> cbp:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.CampaignsFragment sCampaignFragment -> b
    android.support.v4.view.ViewPager mCampaignPager -> c
    pt.rocket.view.fragments.CampaignsFragment$CampaignPagerAdapter mCampaignPagerAdapter -> d
    java.util.ArrayList mCampaigns -> e
    android.support.v4.view.PagerTabStrip mCampaignPagerTabStrip -> f
    int TAB_PREV_ID -> g
    int TAB_CURR_ID -> ae
    int TAB_NEXT_ID -> af
    int TAB_INDICATOR_HEIGHT -> ag
    int TAB_UNDERLINE_HEIGHT -> ah
    int TAB_STRIP_COLOR -> ai
    pt.rocket.view.fragments.CampaignsFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> c_
    void setTabStripLayoutSpec() -> b
    java.lang.String access$0() -> a
pt.rocket.view.fragments.CampaignsFragment$CampaignPagerAdapter -> cbq:
    java.util.ArrayList mCampaigns -> b
    pt.rocket.view.fragments.CampaignsFragment this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> getCount
    java.lang.CharSequence getPageTitle(int) -> c
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
pt.rocket.view.fragments.Catalog -> cbr:
    java.lang.String TAG -> g
    pt.rocket.view.fragments.Catalog mCatalogFragment -> ae
    pt.rocket.view.fragments.Catalog$CatalogPagerAdaper mCatalogPagerAdapter -> af
    pt.rocket.utils.JumiaCatalogViewPager mViewPager -> ag
    android.support.v4.view.PagerTabStrip pagerTabStrip -> ah
    int TAB_PREV_ID -> ai
    int TAB_CURR_ID -> aj
    int TAB_NEXT_ID -> ak
    int TAB_INDICATOR_HEIGHT -> al
    int TAB_UNDERLINE_HEIGHT -> am
    int TAB_STRIP_COLOR -> an
    android.view.LayoutInflater mInflater -> ao
    int mSelectedPageIndex -> ap
    int mLastSelectedPageIndex -> aq
    java.util.ArrayList mSortOptions -> ar
    pt.rocket.controllers.CatalogPageModel[] mCatalogPageModel -> as
    java.lang.String productsURL -> a
    java.lang.String searchQuery -> b
    java.lang.String navigationPath -> c
    java.lang.String title -> d
    int navigationSource -> e
    int currentPosition -> at
    android.view.View mFilterButton -> au
    java.util.ArrayList mCatalogFilter -> av
    java.util.ArrayList mOldCatalogFilterState -> aw
    android.content.ContentValues mCatalogFilterValues -> ax
    boolean wasReceivedErrorEvent -> ay
    java.lang.String[] mSavedOldCatalogData -> az
    android.content.ContentValues mOldCatalogFilterValues -> aA
    boolean isNotShowing -> f
    pt.rocket.view.fragments.Catalog getInstance() -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> t
    void onPause() -> u
    void onDestroy() -> v
    void onSuccesLoadingFilteredCatalog(java.util.ArrayList) -> b
    void onErrorLoadingFilteredCatalog() -> b
    void onSubmitFilterValues(android.content.ContentValues) -> a
    void saveCurrentCatalogDataForFilters() -> N
    void matchFilterStateWithOldState() -> O
    android.util.SparseArray locateOption(java.util.ArrayList,android.util.SparseArray) -> a
    pt.rocket.framework.objects.CatalogFilter locateFilter(java.util.ArrayList,java.lang.String) -> a
    void setFilterAction() -> P
    void setFilterButtonState() -> Q
    void onClick(android.view.View) -> onClick
    void setLayoutSpec() -> R
    void initPageModel() -> S
    pt.rocket.controllers.CatalogPageModel getCurrentCatalogPageModel(int) -> b
    void updateCatalogPageModelIdexes(int) -> c
    pt.rocket.controllers.CatalogPageModel[] access$0(pt.rocket.view.fragments.Catalog) -> a
    java.lang.String access$1() -> I
    android.view.LayoutInflater access$2(pt.rocket.view.fragments.Catalog) -> b
    android.content.ContentValues access$3(pt.rocket.view.fragments.Catalog) -> c
    void access$4(pt.rocket.view.fragments.Catalog,int) -> a
    int access$5(pt.rocket.view.fragments.Catalog) -> d
    int access$6(pt.rocket.view.fragments.Catalog) -> e
    void access$7(pt.rocket.view.fragments.Catalog,int) -> b
pt.rocket.view.fragments.Catalog$1 -> cbs:
    pt.rocket.view.fragments.Catalog this$0 -> a
    void onPageSelected(int) -> c_
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
pt.rocket.view.fragments.Catalog$CatalogPagerAdaper -> cbt:
    pt.rocket.view.fragments.Catalog this$0 -> a
    int getItemPosition(java.lang.Object) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    int getCount() -> getCount
    java.lang.CharSequence getPageTitle(int) -> c
    pt.rocket.controllers.CatalogPageModel getCurrentCatalogPageModel(int) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    pt.rocket.view.fragments.Catalog access$1(pt.rocket.view.fragments.Catalog$CatalogPagerAdaper) -> a
pt.rocket.view.fragments.Catalog$CatalogPagerAdaper$1 -> cbu:
    pt.rocket.view.fragments.Catalog$CatalogPagerAdaper this$1 -> a
    pt.rocket.controllers.CatalogPageModel val$currentPage -> b
    void run() -> run
pt.rocket.view.fragments.CategoriesContainerFragment -> cbv:
    java.lang.String TAG -> ak
    long mBeginRequestMillis -> al
    java.lang.String categoryUrl -> am
    int categoryIndex -> an
    int subCategoryIndex -> ao
    pt.rocket.controllers.fragments.FragmentType currentFragment -> ap
    pt.rocket.controllers.fragments.FragmentType childCurrentFragment -> aq
    java.lang.String CATEGORY_PARENT -> a
    java.lang.String UPDATE_CHILD -> b
    java.lang.String UPDATE_BOTH -> c
    java.lang.String CHILD_LEVEL -> d
    java.lang.String PARENT_LEVEL -> e
    java.lang.String GET_CATEGORIES -> f
    java.lang.String PORTRAIT_MODE -> g
    java.lang.String REMOVE_FRAGMENTS -> ae
    android.support.v4.app.Fragment mCategoriesFragment -> ar
    android.support.v4.app.Fragment mChildCategoriesFragment -> as
    android.widget.RelativeLayout backLevelButton -> af
    pt.rocket.view.fragments.CategoriesContainerFragment categoriesFragment -> at
    android.content.SharedPreferences sharedPrefs -> ag
    int selectedCategory -> ah
    int selectedSubCategory -> ai
    java.lang.String mDeepLinkCategoryId -> au
    pt.rocket.interfaces.IResponseCallback mCallBack -> aj
    pt.rocket.view.fragments.CategoriesContainerFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    pt.rocket.controllers.fragments.FragmentType getFragmentType(java.lang.String) -> a
    boolean allowBackPressed() -> H
    boolean onSuccessEvent(android.os.Bundle) -> m
    void createFragment() -> b
    void createFragmentsForLandscape() -> I
    void startButtonListener() -> N
    void updateBackLevelButtonVisibility(boolean) -> b
    void removeOldFragments() -> O
    void removeFragmentsAndOpenProducts(android.os.Bundle) -> n
    void updateFragment(android.os.Bundle) -> p
    void updateChild(android.os.Bundle) -> q
    void updateBoth(android.os.Bundle) -> r
    void saveState() -> a
    void clean() -> P
    void notifyFragment(android.os.Bundle) -> c
    void trigger(java.lang.String) -> b
    void triggerSearchCategory(java.lang.String) -> c
    void access$0(pt.rocket.view.fragments.CategoriesContainerFragment,boolean) -> a
pt.rocket.view.fragments.CategoriesContainerFragment$1 -> cbw:
    pt.rocket.view.fragments.CategoriesContainerFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.CategoriesContainerFragment$2 -> cbx:
    pt.rocket.view.fragments.CategoriesContainerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CategoriesFragment -> cby:
    java.lang.String TAG -> b
    java.util.List categories -> c
    pt.rocket.controllers.CategoriesAdapter mainCatAdapter -> d
    android.widget.ListView categoriesList -> e
    int categoryIndex -> f
    int subCategoryIndex -> g
    java.util.List parent -> ae
    java.util.ArrayList child -> af
    pt.rocket.framework.objects.Category currentCategory -> ag
    pt.rocket.controllers.SubCategoriesAdapter subCatAdapter -> ah
    pt.rocket.controllers.fragments.FragmentType currentFragment -> ai
    boolean isParent -> aj
    android.content.SharedPreferences sharedPrefs -> a
    int[] $SWITCH_TABLE$pt$rocket$controllers$fragments$FragmentType -> ak
    pt.rocket.view.fragments.CategoriesFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void createList() -> b
    void categoryLevel1() -> I
    void categoryLevel2() -> N
    void categoryLevel3() -> O
    void requestSubcategory(int) -> b
    void showProducts(pt.rocket.framework.objects.Category) -> a
    void notifyFragment(android.os.Bundle) -> c
    int[] $SWITCH_TABLE$pt$rocket$controllers$fragments$FragmentType() -> a
pt.rocket.view.fragments.ChangeCountryFragment -> pt.rocket.view.fragments.ChangeCountryFragment:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.ChangeCountryFragment changeCountryFragment -> b
    android.content.Context context -> c
    pt.rocket.utils.dialogfragments.DialogGenericFragment dialog -> d
    int selected -> e
    pt.rocket.controllers.CountryAdapter countryAdapter -> f
    boolean isChangeCountry -> g
    pt.rocket.view.fragments.ChangeCountryFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    boolean allowBackPressed() -> H
    void setList() -> b
    void showWarningDialog(int) -> c
    void setCountry(int) -> b
    int access$0(pt.rocket.view.fragments.ChangeCountryFragment) -> a
    void access$1(pt.rocket.view.fragments.ChangeCountryFragment,int) -> a
    pt.rocket.utils.dialogfragments.DialogGenericFragment access$2(pt.rocket.view.fragments.ChangeCountryFragment) -> b
pt.rocket.view.fragments.ChangeCountryFragment$1 -> cbz:
    pt.rocket.view.fragments.ChangeCountryFragment this$0 -> a
    android.widget.ListView val$countryList -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
pt.rocket.view.fragments.ChangeCountryFragment$2 -> cca:
    pt.rocket.view.fragments.ChangeCountryFragment this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutAboutYouFragment -> ccb:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.CheckoutAboutYouFragment aboutYouFragment -> b
    pt.rocket.forms.Form formResponse -> c
    pt.rocket.pojo.DynamicForm loginForm -> d
    android.os.Bundle savedInstanceState -> e
    com.facebook.UiLifecycleHelper uiHelper -> f
    java.lang.String loginOrigin -> g
    android.view.View loginMainContainer -> ae
    android.view.ViewGroup loginFormContainer -> af
    android.view.View signupMainContainer -> ag
    boolean onAutoLogin -> ah
    android.view.ViewGroup signupFormContainer -> ai
    pt.rocket.pojo.DynamicForm signupForm -> aj
    pt.rocket.forms.Form signupFormResponse -> ak
    boolean temp -> al
    android.view.View loginToogle -> am
    android.view.View signupToogle -> an
    pt.rocket.framework.objects.OrderSummary mOrderSummary -> ao
    pt.rocket.controllers.fragments.FragmentType mNextFragment -> ap
    boolean cameFromSignUp -> aq
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ar
    pt.rocket.view.fragments.CheckoutAboutYouFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void onActivityResult(int,int,android.content.Intent) -> a
    void onSaveInstanceState(android.os.Bundle) -> e
    void onClick(android.view.View) -> onClick
    void onClickLoginToogle(android.view.View) -> b
    void onClickSignupToogle(android.view.View) -> c
    void onClickLoginButton() -> b
    void onClickSignupButton() -> I
    void onClickForgotPassword() -> N
    void setFacebookButton(com.facebook.widget.LoginButton) -> a
    void cleanFacebookSession() -> O
    void onCompleted(com.facebook.model.GraphUser,com.facebook.Response) -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
    void setFormClickDetails(pt.rocket.pojo.DynamicForm) -> a
    boolean loadForm(pt.rocket.forms.Form) -> a
    boolean loadSignupForm(pt.rocket.forms.Form) -> b
    void requestLogin() -> P
    void requestSignup() -> Q
    void requestFacebookLogin(com.facebook.model.GraphUser) -> a
    void triggerAutoLogin() -> R
    void triggerLogin(android.content.ContentValues,boolean) -> a
    void triggerSignup(android.content.ContentValues,boolean) -> b
    void triggerFacebookLogin(android.content.ContentValues,boolean) -> c
    boolean triggerLoginForm() -> S
    boolean triggerSignupForm() -> T
    void triggerGetCustomer() -> U
    void triggerInitForm() -> V
    void triggerGetShoppingCart() -> W
    void gotoNextStep() -> X
    void goToNextStepAfterSignUp() -> Y
    boolean onSuccessEvent(android.os.Bundle) -> m
    boolean onErrorEvent(android.os.Bundle) -> n
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
    void showErrorDialog(java.util.HashMap,int) -> a
    void showLoginFormErrorDialog() -> Z
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> a
    boolean access$1(pt.rocket.view.fragments.CheckoutAboutYouFragment) -> a
pt.rocket.view.fragments.CheckoutAboutYouFragment$1 -> ccc:
    pt.rocket.view.fragments.CheckoutAboutYouFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutAboutYouFragment$2 -> ccd:
    pt.rocket.view.fragments.CheckoutAboutYouFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutCreateAddressFragment -> cce:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.CheckoutCreateAddressFragment createAddressFragment -> b
    android.view.ViewGroup mShippingFormContainer -> c
    pt.rocket.pojo.DynamicForm shippingFormGenerator -> d
    pt.rocket.forms.Form mFormResponse -> e
    android.view.ViewGroup mBillingIncludeContainer -> f
    android.view.ViewGroup mBillingFormContainer -> g
    pt.rocket.pojo.DynamicForm billingFormGenerator -> ae
    java.util.ArrayList regions -> af
    java.lang.String selectedRegionOnShipping -> ag
    java.lang.String selectedRegionOnBilling -> ah
    org.holoeverywhere.widget.CheckBox mIsSameCheckBox -> ai
    org.holoeverywhere.widget.TextView mShippingTitle -> aj
    android.view.View mShippingFormMain -> ak
    pt.rocket.framework.objects.OrderSummary orderSummary -> al
    android.view.View mMsgRequired -> am
    java.lang.Boolean oneAddressCreated -> an
    android.content.ContentValues mShippingSavedValues -> ao
    android.content.ContentValues mBillingSavedValues -> ap
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> aq
    pt.rocket.view.fragments.CheckoutCreateAddressFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onSaveInstanceState(android.os.Bundle) -> e
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void loadCreateAddressForm(pt.rocket.forms.Form) -> a
    void loadSavedValues(android.content.ContentValues,pt.rocket.pojo.DynamicForm) -> a
    void hideSomeFields(pt.rocket.pojo.DynamicForm) -> a
    void setRegions(pt.rocket.pojo.DynamicForm,java.util.ArrayList,java.lang.String) -> a
    void setSavedSelectedRegionPos(com.actionbarsherlock.internal.widget.IcsSpinner,java.lang.String) -> a
    void setCitiesOnSelectedRegion(java.lang.String,java.util.ArrayList) -> a
    void setCities(pt.rocket.pojo.DynamicForm,java.util.ArrayList,java.lang.String) -> b
    void setSavedSelectedCityPos(com.actionbarsherlock.internal.widget.IcsSpinner,java.util.ArrayList,java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void onClickCreateAddressButton() -> b
    android.content.ContentValues createContentValues(pt.rocket.pojo.DynamicForm,int,int) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void updateContainers(java.lang.Boolean) -> a
    void triggerCreateAddress(android.content.ContentValues) -> a
    void triggerCreateAddressForm() -> I
    void triggerInitForm() -> N
    void triggerGetRegions(java.lang.String) -> a
    void triggerGetCities(java.lang.String,int,java.lang.String) -> a
    boolean onSuccessEvent(android.os.Bundle) -> m
    boolean onErrorEvent(android.os.Bundle) -> n
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
    void showErrorDialog(java.util.HashMap) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> a
pt.rocket.view.fragments.CheckoutCreateAddressFragment$1 -> ccf:
    pt.rocket.view.fragments.CheckoutCreateAddressFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutEditAddressFragment -> ccg:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.CheckoutEditAddressFragment mEditAddressFragment -> b
    android.view.ViewGroup mEditFormContainer -> c
    pt.rocket.pojo.DynamicForm mEditFormGenerator -> d
    pt.rocket.forms.Form mFormResponse -> e
    java.util.ArrayList mRegions -> f
    pt.rocket.framework.objects.Address mCurrentAddress -> g
    pt.rocket.framework.objects.OrderSummary orderSummary -> ae
    android.view.View mMsgRequired -> af
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ag
    pt.rocket.view.fragments.CheckoutEditAddressFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onSaveInstanceState(android.os.Bundle) -> e
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void loadEditAddressForm(pt.rocket.forms.Form) -> a
    void showSelectedAddress(pt.rocket.pojo.DynamicForm,pt.rocket.framework.objects.Address) -> a
    void hideSomeFields(pt.rocket.pojo.DynamicForm) -> a
    void setRegions(pt.rocket.pojo.DynamicForm,java.util.ArrayList,pt.rocket.framework.objects.Address) -> a
    int getRegionPosition(java.util.ArrayList,pt.rocket.framework.objects.Address) -> a
    void setCitiesOnSelectedRegion(java.util.ArrayList,pt.rocket.framework.objects.Address) -> b
    void setCities(pt.rocket.pojo.DynamicForm,java.util.ArrayList,pt.rocket.framework.objects.Address) -> b
    int getCityPosition(java.util.ArrayList,pt.rocket.framework.objects.Address) -> c
    void onClick(android.view.View) -> onClick
    void onClickEditAddressButton() -> b
    void onClickCancelAddressButton() -> I
    android.content.ContentValues createContentValues(pt.rocket.pojo.DynamicForm) -> b
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void triggerEditAddress(android.content.ContentValues) -> a
    void triggerEditAddressForm() -> N
    void triggerInitForm() -> O
    void triggerGetRegions(java.lang.String) -> a
    void triggerGetCities(java.lang.String,int) -> a
    boolean onSuccessEvent(android.os.Bundle) -> m
    boolean onErrorEvent(android.os.Bundle) -> n
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
    void showErrorDialog(java.util.HashMap) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> a
pt.rocket.view.fragments.CheckoutEditAddressFragment$1 -> cch:
    pt.rocket.view.fragments.CheckoutEditAddressFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutExternalPaymentFragment -> cci:
    java.lang.String TAG -> b
    android.webkit.WebView webview -> c
    java.lang.String paymentUrl -> d
    java.lang.String failedPageRequest -> e
    boolean isRequestedPage -> f
    android.os.Handler handler -> g
    pt.rocket.view.fragments.CheckoutExternalPaymentFragment checkoutWebFragment -> ae
    pt.rocket.framework.objects.Customer customer -> af
    pt.rocket.interfaces.IResponseCallback mCallback -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ag
    pt.rocket.view.fragments.CheckoutExternalPaymentFragment getInstance() -> a
    boolean allowBackPressed() -> H
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    void triggerGetCustomer() -> N
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void onLowMemory() -> onLowMemory
    void setupWebView() -> O
    void startCheckout() -> P
    void setProxy(java.lang.String) -> a
    void prepareCookieStore() -> Q
    java.lang.String prepareCookie(ch.boye.httpclientandroidlib.cookie.Cookie) -> a
    void trackPurchase(org.json.JSONObject) -> a
    boolean onSuccessEvent(android.os.Bundle) -> l
    java.lang.String access$0() -> b
    void access$1(pt.rocket.view.fragments.CheckoutExternalPaymentFragment,java.lang.String) -> a
    android.webkit.WebView access$2(pt.rocket.view.fragments.CheckoutExternalPaymentFragment) -> a
    java.lang.String access$3(pt.rocket.view.fragments.CheckoutExternalPaymentFragment) -> b
    boolean access$4(pt.rocket.view.fragments.CheckoutExternalPaymentFragment) -> c
    void access$5(pt.rocket.view.fragments.CheckoutExternalPaymentFragment,boolean) -> a
    android.os.Handler access$6(pt.rocket.view.fragments.CheckoutExternalPaymentFragment) -> d
    void access$7(pt.rocket.view.fragments.CheckoutExternalPaymentFragment,org.json.JSONObject) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> I
pt.rocket.view.fragments.CheckoutExternalPaymentFragment$1 -> ccj:
    pt.rocket.view.fragments.CheckoutExternalPaymentFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.CheckoutExternalPaymentFragment$CustomWebViewClient -> cck:
    boolean wasLoadingErrorPage -> b
    pt.rocket.view.fragments.CheckoutExternalPaymentFragment this$0 -> a
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
pt.rocket.view.fragments.CheckoutExternalPaymentFragment$JavaScriptInterface -> ccl:
    pt.rocket.view.fragments.CheckoutExternalPaymentFragment this$0 -> a
    void processContent(java.lang.String) -> processContent
    pt.rocket.view.fragments.CheckoutExternalPaymentFragment access$1(pt.rocket.view.fragments.CheckoutExternalPaymentFragment$JavaScriptInterface) -> a
pt.rocket.view.fragments.CheckoutExternalPaymentFragment$JavaScriptInterface$1 -> ccm:
    pt.rocket.view.fragments.CheckoutExternalPaymentFragment$JavaScriptInterface this$1 -> a
    org.json.JSONObject val$result -> b
    void run() -> run
pt.rocket.view.fragments.CheckoutMyAddressesFragment -> ccn:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.CheckoutMyAddressesFragment customerAddressesFragment -> b
    pt.rocket.utils.GenericRadioGroup mTopRadioGroup -> c
    pt.rocket.utils.GenericRadioGroup mBottomRadioGroup -> d
    pt.rocket.framework.objects.Addresses addresses -> e
    org.holoeverywhere.widget.CheckBox mIsSameCheckBox -> f
    android.widget.TextView mTopTitle -> g
    android.widget.TextView mBottomTitle -> ae
    android.view.View mTopAddContainer -> af
    android.widget.ScrollView mMainScrollView -> ag
    pt.rocket.forms.Form hiddenForm -> ah
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ai
    pt.rocket.view.fragments.CheckoutMyAddressesFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void onClick(android.view.View) -> onClick
    void onClickCreateAddressButton() -> b
    void onClickCheckBox(org.holoeverywhere.widget.CheckBox) -> a
    void validateCurrentShippingSelection() -> I
    void onClickDeleteAddressButton(android.view.View) -> b
    void onClickEditAddressButton(android.view.View) -> c
    void onClickSubmitAddressesButton() -> N
    void submitSameAddresses() -> O
    void submitDifferentAddresses() -> P
    void submitForm(java.lang.String,java.lang.String,java.lang.String) -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void switchBetweenRadioGroups(pt.rocket.utils.GenericRadioGroup) -> a
    void showAddresses(boolean) -> b
    void cleanContainers() -> Q
    void addAddresses(pt.rocket.utils.GenericRadioGroup,java.util.HashMap) -> a
    void addAddress(pt.rocket.utils.GenericRadioGroup,pt.rocket.framework.objects.Address) -> a
    void setAddressView(android.view.View,pt.rocket.framework.objects.Address,java.lang.String) -> a
    void triggetSetBilling(android.content.ContentValues) -> a
    void triggerGetBillingForm() -> R
    boolean onSuccessEvent(android.os.Bundle) -> m
    boolean onErrorEvent(android.os.Bundle) -> n
    boolean isValidateResponse() -> S
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
    void showErrorDialog(java.util.HashMap,int) -> a
    void access$0(pt.rocket.view.fragments.CheckoutMyAddressesFragment,boolean) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> a
pt.rocket.view.fragments.CheckoutMyAddressesFragment$1 -> cco:
    pt.rocket.view.fragments.CheckoutMyAddressesFragment this$0 -> a
    org.holoeverywhere.widget.CheckBox val$view -> b
    void run() -> run
pt.rocket.view.fragments.CheckoutMyAddressesFragment$2 -> ccp:
    pt.rocket.view.fragments.CheckoutMyAddressesFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutMyOrderFragment -> ccq:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.CheckoutMyOrderFragment mMyOrderFragment -> b
    android.view.ViewGroup mProductsContainer -> c
    org.holoeverywhere.widget.TextView mTotalValue -> d
    pt.rocket.framework.objects.ShoppingCart cart -> e
    org.holoeverywhere.widget.TextView mShipFeeValue -> f
    android.view.ViewGroup mShippingAddressContainer -> g
    org.holoeverywhere.widget.TextView mShippingMethodName -> ae
    android.view.ViewGroup mVoucherView -> af
    org.holoeverywhere.widget.TextView mVoucherValue -> ag
    android.view.ViewGroup mBillingAddressContainer -> ah
    android.view.View mBillingAddressIsSame -> ai
    org.holoeverywhere.widget.TextView mPaymentName -> aj
    pt.rocket.framework.objects.Address shippingAddress -> ak
    pt.rocket.framework.objects.Address billingAddress -> al
    org.holoeverywhere.widget.TextView mProductsNum -> am
    org.holoeverywhere.widget.TextView mSubTotal -> an
    org.holoeverywhere.widget.TextView mExtraCosts -> ao
    android.widget.LinearLayout mExtraCostsContainer -> ap
    pt.rocket.framework.objects.OrderSummary mOrderFinish -> aq
    java.lang.String shipMethod -> ar
    java.lang.String payMethod -> as
    org.holoeverywhere.widget.TextView mCoupon -> at
    org.holoeverywhere.widget.TextView mVatValue -> au
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> av
    pt.rocket.view.fragments.CheckoutMyOrderFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void showMyOrder() -> b
    void showProducts() -> I
    void showSubTotal() -> N
    void showShippingAddress() -> O
    void showBillingAddress() -> P
    void showShippingMethod() -> Q
    void showPaymentOptions() -> R
    void onClick(android.view.View) -> onClick
    void onClickNextStepButton() -> S
    void onClickEditAddressesButton() -> T
    void onClickEditShippingMethodButton() -> U
    void onClickEditPaymentOptionsButton() -> V
    void triggerCheckoutFinish() -> W
    void triggerClearCart() -> X
    boolean onSuccessEvent(android.os.Bundle) -> m
    boolean onErrorEvent(android.os.Bundle) -> n
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
    void showErrorDialog(java.util.HashMap) -> a
    void gotoWebCheckout(java.lang.String) -> a
    boolean allowBackPressed() -> H
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> a
    void access$1(pt.rocket.view.fragments.CheckoutMyOrderFragment,java.lang.String) -> a
    void access$2(pt.rocket.view.fragments.CheckoutMyOrderFragment) -> a
pt.rocket.view.fragments.CheckoutMyOrderFragment$1 -> ccr:
    pt.rocket.view.fragments.CheckoutMyOrderFragment this$0 -> a
    java.util.List val$errorMessages -> b
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutMyOrderFragment$2 -> ccs:
    pt.rocket.view.fragments.CheckoutMyOrderFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutPaymentMethodsFragment -> cct:
    java.lang.String TAG -> b
    pt.rocket.view.fragments.CheckoutPaymentMethodsFragment paymentMethodsFragment -> c
    android.view.ViewGroup paymentMethodsContainer -> d
    pt.rocket.pojo.DynamicForm formGenerator -> e
    org.holoeverywhere.widget.Button couponButton -> f
    android.view.View voucherDivider -> g
    org.holoeverywhere.widget.TextView voucherError -> ae
    org.holoeverywhere.widget.EditText voucherValue -> a
    java.lang.String mVoucher -> af
    boolean noPaymentNeeded -> ag
    boolean removeVoucher -> ah
    pt.rocket.framework.objects.OrderSummary orderSummary -> ai
    android.content.ContentValues mSavedState -> aj
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ak
    pt.rocket.view.fragments.CheckoutPaymentMethodsFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onSaveInstanceState(android.os.Bundle) -> e
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void onActivityResult(int,int,android.content.Intent) -> a
    void loadForm(pt.rocket.forms.Form) -> a
    void loadSavedValues(android.content.ContentValues,java.util.Iterator) -> a
    void generateNoPayment() -> I
    void prepareCouponView() -> N
    void onClick(android.view.View) -> onClick
    void onClickSubmitPaymentButton() -> O
    boolean onSuccessEvent(android.os.Bundle) -> m
    boolean onErrorEvent(android.os.Bundle) -> n
    void triggerSubmitPaymentMethod(android.content.ContentValues) -> a
    void triggerSubmitVoucher(android.content.ContentValues) -> b
    void triggerRemoveVoucher(android.content.ContentValues) -> c
    void triggerGetPaymentMethods() -> P
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
    void access$0(pt.rocket.view.fragments.CheckoutPaymentMethodsFragment,java.lang.String) -> a
    java.lang.String access$1(pt.rocket.view.fragments.CheckoutPaymentMethodsFragment) -> a
    java.lang.String access$2() -> a
    org.holoeverywhere.widget.Button access$3(pt.rocket.view.fragments.CheckoutPaymentMethodsFragment) -> b
    void access$4(pt.rocket.view.fragments.CheckoutPaymentMethodsFragment,android.content.ContentValues) -> a
    void access$5(pt.rocket.view.fragments.CheckoutPaymentMethodsFragment,android.content.ContentValues) -> b
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> b
pt.rocket.view.fragments.CheckoutPaymentMethodsFragment$1 -> ccu:
    pt.rocket.view.fragments.CheckoutPaymentMethodsFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutPollAnswerFragment -> ccv:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.CheckoutPollAnswerFragment pollFragment -> b
    android.view.ViewGroup pollFormContainer -> c
    pt.rocket.pojo.DynamicForm pollFormGenerator -> d
    pt.rocket.forms.Form formResponse -> e
    pt.rocket.framework.objects.OrderSummary orderSummary -> f
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> g
    pt.rocket.view.fragments.CheckoutPollAnswerFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void loadPollForm(pt.rocket.forms.Form) -> a
    void onClick(android.view.View) -> onClick
    void onClickPollAnswerButton() -> b
    android.content.ContentValues createContentValues(pt.rocket.pojo.DynamicForm) -> a
    void triggerPollAnswer(android.content.ContentValues) -> a
    void triggerPollForm() -> I
    void triggerInitForm() -> N
    boolean onSuccessEvent(android.os.Bundle) -> m
    boolean onErrorEvent(android.os.Bundle) -> n
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> a
pt.rocket.view.fragments.CheckoutShippingMethodsFragment -> ccw:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.CheckoutShippingMethodsFragment shippingMethodsFragment -> b
    android.view.ViewGroup mShippingMethodsContainer -> c
    pt.rocket.forms.ShippingMethodFormBuilder mFormResponse -> d
    android.view.View nFormContainer -> e
    int mSelectionSaved -> f
    int mSubSelectionSaved -> g
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ae
    pt.rocket.view.fragments.CheckoutShippingMethodsFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onSaveInstanceState(android.os.Bundle) -> e
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void onActivityResult(int,int,android.content.Intent) -> a
    void loadForm(pt.rocket.forms.ShippingMethodFormBuilder) -> a
    void onClick(android.view.View) -> onClick
    void onClickSubmitShippingMethod() -> b
    boolean onSuccessEvent(android.os.Bundle) -> m
    boolean onErrorEvent(android.os.Bundle) -> n
    void triggerSubmitShippingMethod(android.content.ContentValues) -> a
    void triggerGetShippingMethods() -> I
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> a
pt.rocket.view.fragments.CheckoutSummaryFragment -> ccx:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.CheckoutSummaryFragment mOrderSummaryFragment -> b
    android.view.ViewGroup mProductList -> c
    org.holoeverywhere.widget.TextView mSubTotal -> d
    org.holoeverywhere.widget.TextView mExtraCosts -> e
    android.widget.LinearLayout mExtraCostsContainer -> f
    pt.rocket.framework.objects.ShoppingCart mCart -> g
    org.holoeverywhere.widget.TextView mShippingFeeValue -> ae
    android.view.ViewGroup mShippingFeeView -> af
    android.view.ViewGroup mShippingAddressView -> ag
    android.view.ViewGroup mShippingMethodView -> ah
    android.view.ViewGroup mTotalView -> ai
    pt.rocket.framework.objects.OrderSummary mOrderSummary -> aj
    android.view.ViewGroup mShippingAddressList -> ak
    org.holoeverywhere.widget.TextView mShippingMethodText -> al
    org.holoeverywhere.widget.TextView mTotal -> am
    int mCheckoutStep -> an
    android.view.View mNoItemsView -> ao
    android.view.ViewGroup mProductListView -> ap
    android.view.ViewGroup mVoucherView -> aq
    org.holoeverywhere.widget.TextView mVoucherValue -> ar
    org.holoeverywhere.widget.TextView mVatValue -> as
    android.view.View mVatView -> at
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> au
    pt.rocket.view.fragments.CheckoutSummaryFragment getInstance(int,pt.rocket.framework.objects.OrderSummary) -> b
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void showOrderSummary() -> I
    void showCart() -> N
    void showShippingAddress(pt.rocket.framework.objects.Address) -> a
    void showShippingMethod(java.lang.String) -> a
    void showShippingFees() -> O
    void showVoucher() -> P
    void showVat() -> Q
    void showTotal(java.lang.String) -> b
    void showNoItems() -> a
    void onClick(android.view.View) -> onClick
    void onClickEditProdButton() -> R
    void onClickEditAddessButton() -> S
    void onClickEditMethodButton() -> T
    void onClickRemoveItemButton(android.view.View) -> b
    void triggerGetShoppingCart() -> U
    void triggerRemoveItem(java.lang.String) -> c
    boolean onSuccessEvent(android.os.Bundle) -> l
    boolean onErrorEvent(android.os.Bundle) -> m
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> b
pt.rocket.view.fragments.CheckoutSummaryFragment$1 -> ccy:
    pt.rocket.view.fragments.CheckoutSummaryFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutThanksFragment -> ccz:
    java.lang.String TAG -> b
    pt.rocket.view.fragments.CheckoutThanksFragment checkoutStep5Fragment -> c
    java.lang.String order_number -> d
    android.text.style.ClickableSpan clickableSpan -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> e
    pt.rocket.view.fragments.CheckoutThanksFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void prepareLayout() -> N
    void setOrderStatusLink(java.lang.String) -> a
    void triggerClearCart() -> O
    void trackPurchase() -> P
    void onClickSpannableString(android.view.View) -> b
    void onClick(android.view.View) -> onClick
    boolean allowBackPressed() -> H
    void onRequestComplete(android.os.Bundle) -> b_
    void onRequestError(android.os.Bundle) -> a_
    boolean onSuccessEvent(android.os.Bundle) -> l
    boolean onErrorEvent(android.os.Bundle) -> m
    java.lang.String access$0() -> b
    void access$1(pt.rocket.view.fragments.CheckoutThanksFragment,android.view.View) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> I
pt.rocket.view.fragments.CheckoutThanksFragment$1 -> cda:
    pt.rocket.view.fragments.CheckoutThanksFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutThanksFragment$2 -> cdb:
    pt.rocket.view.fragments.CheckoutThanksFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.CheckoutWebFragment -> cdc:
    java.lang.String TAG -> b
    android.webkit.WebView webview -> c
    java.lang.String checkoutUrl -> d
    java.lang.String failedPageRequest -> e
    boolean isRequestedPage -> f
    pt.rocket.framework.objects.Customer customer -> g
    android.os.Handler handler -> ae
    pt.rocket.view.fragments.CheckoutWebFragment checkoutWebFragment -> af
    pt.rocket.interfaces.IResponseCallback mCallback -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ag
    pt.rocket.view.fragments.CheckoutWebFragment getInstance() -> a
    boolean allowBackPressed() -> H
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    void triggerGetCustomer() -> N
    void triggerGetShoppingCartItems() -> O
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void onLowMemory() -> onLowMemory
    void setupWebView() -> P
    void startCheckout() -> Q
    void setProxy(java.lang.String) -> a
    void prepareCookieStore() -> R
    java.lang.String prepareCookie(ch.boye.httpclientandroidlib.cookie.Cookie) -> a
    void trackPurchase(org.json.JSONObject) -> a
    boolean onSuccessEvent(android.os.Bundle) -> l
    java.lang.String access$0() -> b
    void access$1(pt.rocket.view.fragments.CheckoutWebFragment,java.lang.String) -> a
    android.webkit.WebView access$2(pt.rocket.view.fragments.CheckoutWebFragment) -> a
    java.lang.String access$3(pt.rocket.view.fragments.CheckoutWebFragment) -> b
    boolean access$4(pt.rocket.view.fragments.CheckoutWebFragment) -> c
    void access$5(pt.rocket.view.fragments.CheckoutWebFragment,boolean) -> a
    android.os.Handler access$6(pt.rocket.view.fragments.CheckoutWebFragment) -> d
    void access$7(pt.rocket.view.fragments.CheckoutWebFragment,org.json.JSONObject) -> a
    pt.rocket.framework.objects.Customer access$8(pt.rocket.view.fragments.CheckoutWebFragment) -> e
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> I
pt.rocket.view.fragments.CheckoutWebFragment$1 -> cdd:
    pt.rocket.view.fragments.CheckoutWebFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.CheckoutWebFragment$CustomWebViewClient -> cde:
    boolean wasLoadingErrorPage -> b
    pt.rocket.view.fragments.CheckoutWebFragment this$0 -> a
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
pt.rocket.view.fragments.CheckoutWebFragment$JavaScriptInterface -> cdf:
    pt.rocket.view.fragments.CheckoutWebFragment this$0 -> a
    void processContent(java.lang.String) -> processContent
    pt.rocket.view.fragments.CheckoutWebFragment access$1(pt.rocket.view.fragments.CheckoutWebFragment$JavaScriptInterface) -> a
pt.rocket.view.fragments.CheckoutWebFragment$JavaScriptInterface$1 -> cdg:
    pt.rocket.view.fragments.CheckoutWebFragment$JavaScriptInterface this$1 -> a
    org.json.JSONObject val$result -> b
    void run() -> run
pt.rocket.view.fragments.HeadlessAddToCartFragment -> cdh:
    java.lang.String TAG -> c
    java.lang.String[] mItemsToCart -> d
    java.lang.Thread mAddToCartThread -> e
    android.os.Handler mTimer -> f
    int mAddedItemsCounter -> g
    boolean hasErrorInAdd -> ae
    boolean isFinishing -> af
    java.lang.Runnable mTimerRunnable -> a
    java.lang.Runnable mAddToCartRunnable -> b
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ag
    pt.rocket.view.fragments.HeadlessAddToCartFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    boolean allowBackPressed() -> H
    void getItemsToCart() -> N
    void validateSession() -> O
    void updateCounter() -> P
    void gotoCartFragment() -> Q
    void cleanTimer() -> R
    void startAddToCartThread() -> S
    void cleanAddToCartThread() -> T
    void triggerAddItemToCart(android.content.ContentValues) -> a
    void triggerAutoLogin() -> U
    boolean onSuccessEvent(android.os.Bundle) -> l
    boolean onErrorEvent(android.os.Bundle) -> m
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
    java.lang.String access$0() -> b
    void access$1(pt.rocket.view.fragments.HeadlessAddToCartFragment) -> a
    java.lang.String[] access$2(pt.rocket.view.fragments.HeadlessAddToCartFragment) -> b
    void access$3(pt.rocket.view.fragments.HeadlessAddToCartFragment,android.content.ContentValues) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> I
pt.rocket.view.fragments.HeadlessAddToCartFragment$1 -> cdi:
    pt.rocket.view.fragments.HeadlessAddToCartFragment this$0 -> a
    void run() -> run
pt.rocket.view.fragments.HeadlessAddToCartFragment$2 -> cdj:
    pt.rocket.view.fragments.HeadlessAddToCartFragment this$0 -> a
    void run() -> run
pt.rocket.view.fragments.HomeFragment -> cdk:
    java.lang.String TAG -> g
    pt.rocket.utils.JumiaViewPager mPager -> ae
    android.support.v4.view.PagerTabStrip pagerTabStrip -> af
    int TAB_PREV_ID -> ag
    int TAB_CURR_ID -> ah
    int TAB_NEXT_ID -> ai
    int TAB_INDICATOR_HEIGHT -> aj
    int TAB_UNDERLINE_HEIGHT -> ak
    int TAB_STRIP_COLOR -> al
    java.lang.String KEY_CALL_TO_ORDER -> a
    pt.rocket.view.fragments.HomeFragment$HomeCollectionPagerAdapter mPagerAdapter -> am
    java.util.ArrayList pagesTitles -> an
    java.util.ArrayList requestResponse -> b
    int currentPosition -> ao
    int initialPosition -> c
    pt.rocket.view.fragments.HomeFragment mHomeFragment -> ap
    java.util.ArrayList lastViewed -> d
    android.os.Handler serviceConnectedHandler -> e
    pt.rocket.interfaces.IResponseCallback responseCallback -> f
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> aq
    pt.rocket.view.fragments.HomeFragment newInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> t
    void onCreateExecution() -> O
    void onResumeExecution() -> P
    void onStart() -> c_
    void onPause() -> u
    void onStop() -> e
    void onDestroy() -> v
    void setLayout(int) -> b
    void restoreLayout() -> Q
    void setLayoutSpec() -> R
    void setLayoutFallback() -> S
    void proccessResult(java.util.Collection) -> a
    void configureLayout() -> T
    boolean onSuccessEvent(android.os.Bundle) -> l
    void onErrorEvent(android.os.Bundle) -> m
    void triggerPromotions() -> U
    void triggerTeasers() -> V
    void triggerCallToOrder() -> W
    void triggerAutoLogin() -> X
    void access$0(pt.rocket.view.fragments.HomeFragment) -> a
    void access$1(pt.rocket.view.fragments.HomeFragment) -> b
    pt.rocket.utils.JumiaViewPager access$2(pt.rocket.view.fragments.HomeFragment) -> c
    java.util.ArrayList access$3() -> b
    java.lang.String access$4() -> I
    void access$5(pt.rocket.view.fragments.HomeFragment,int) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> N
pt.rocket.view.fragments.HomeFragment$1 -> cdl:
    pt.rocket.view.fragments.HomeFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
pt.rocket.view.fragments.HomeFragment$2 -> cdm:
    pt.rocket.view.fragments.HomeFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.HomeFragment$3 -> cdn:
    pt.rocket.view.fragments.HomeFragment this$0 -> a
    void onPageSelected(int) -> c_
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
pt.rocket.view.fragments.HomeFragment$ChangePageTask -> cdo:
    pt.rocket.view.fragments.HomeFragment this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    pt.rocket.view.fragments.HomeFragment access$3(pt.rocket.view.fragments.HomeFragment$ChangePageTask) -> a
pt.rocket.view.fragments.HomeFragment$ChangePageTask$1 -> cdp:
    pt.rocket.view.fragments.HomeFragment$ChangePageTask this$1 -> a
    void run() -> run
pt.rocket.view.fragments.HomeFragment$HomeCollectionPagerAdapter -> cdq:
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> getCount
    java.lang.CharSequence getPageTitle(int) -> c
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
pt.rocket.view.fragments.HomeFragment$HomeObjectFragment -> cdr:
    android.view.LayoutInflater mInflater -> a
    pt.rocket.utils.ScrollViewWithHorizontal mScrollViewWithHorizontal -> b
    android.widget.RelativeLayout mPopArrows -> c
    android.view.View$OnClickListener teaserClickListener -> d
    android.content.SharedPreferences sharedPrefs -> e
    android.os.Handler receiveIsVisible -> f
    android.os.Handler hideArrows -> g
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onLowMemory() -> onLowMemory
    void onPause() -> u
    void onDestroy() -> v
    void showTips() -> a
    void processTeasersResult(java.util.Collection,android.widget.LinearLayout) -> a
    android.view.View generateLastViewedLayout(android.view.ViewGroup) -> a
    android.widget.RelativeLayout access$0(pt.rocket.view.fragments.HomeFragment$HomeObjectFragment) -> a
    android.os.Handler access$1(pt.rocket.view.fragments.HomeFragment$HomeObjectFragment) -> b
    android.content.SharedPreferences access$2(pt.rocket.view.fragments.HomeFragment$HomeObjectFragment) -> c
pt.rocket.view.fragments.HomeFragment$HomeObjectFragment$1 -> cds:
    pt.rocket.view.fragments.HomeFragment$HomeObjectFragment this$1 -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$objects$ITargeting$TargetType -> b
    void onClick(android.view.View) -> onClick
    int[] $SWITCH_TABLE$pt$rocket$framework$objects$ITargeting$TargetType() -> a
pt.rocket.view.fragments.HomeFragment$HomeObjectFragment$2 -> cdt:
    pt.rocket.view.fragments.HomeFragment$HomeObjectFragment this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
pt.rocket.view.fragments.HomeFragment$HomeObjectFragment$3 -> cdu:
    pt.rocket.view.fragments.HomeFragment$HomeObjectFragment this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
pt.rocket.view.fragments.HomeFragment$HomeObjectFragment$4 -> cdv:
    pt.rocket.view.fragments.HomeFragment$HomeObjectFragment this$1 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
pt.rocket.view.fragments.MyAccountFragment -> cdw:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.MyAccountFragment myAccountFragment -> b
    java.lang.String[] myAccountOptions -> c
    pt.rocket.view.fragments.MyAccountFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void showMyAccount(android.view.View) -> b
pt.rocket.view.fragments.MyAccountFragment$1 -> cdx:
    pt.rocket.view.fragments.MyAccountFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
pt.rocket.view.fragments.MyAccountUserDataFragment -> cdy:
    java.lang.String TAG -> b
    android.view.View mainView -> c
    org.holoeverywhere.widget.EditText firstNameText -> d
    org.holoeverywhere.widget.EditText lastNameText -> e
    org.holoeverywhere.widget.EditText emailText -> f
    org.holoeverywhere.widget.EditText newPasswordText -> g
    org.holoeverywhere.widget.EditText newPassword2Text -> ae
    org.holoeverywhere.widget.TextView passwordErrorHint -> af
    pt.rocket.view.fragments.MyAccountUserDataFragment myAccountFragment -> ag
    pt.rocket.interfaces.IResponseCallback mCallBack -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ah
    pt.rocket.view.fragments.MyAccountUserDataFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> O
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void setAppContentLayout() -> b
    void changePassword() -> I
    void displayErrorHint(java.lang.String) -> a
    boolean onSuccessEvent(android.os.Bundle) -> l
    boolean onErrorEvent(android.os.Bundle) -> m
    void onClick(android.view.View) -> onClick
    void finish() -> P
    void triggerCustomer() -> Q
    void triggerChangePass(android.content.ContentValues) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> N
pt.rocket.view.fragments.MyAccountUserDataFragment$1 -> cdz:
    pt.rocket.view.fragments.MyAccountUserDataFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.PopularityFragment -> cea:
    java.lang.String TAG -> b
    pt.rocket.view.fragments.PopularityFragment popularityFragment -> c
    android.content.Context context -> d
    pt.rocket.framework.objects.CompleteProduct selectedProduct -> e
    android.view.LayoutInflater inflater -> f
    int pageNumber -> g
    java.lang.Boolean isLoadingMore -> ae
    pt.rocket.framework.objects.ProductRatingPage mProductRatingPage -> af
    android.support.v4.app.Fragment mWriteReviewFragment -> ag
    pt.rocket.framework.utils.LoadingBarView contextualLoadingBarView -> ah
    android.widget.LinearLayout contextualLoadingBar -> ai
    android.widget.RelativeLayout popularityContainer -> aj
    pt.rocket.interfaces.IResponseCallback mCallBack -> a
    pt.rocket.view.fragments.PopularityFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void setContextualLoading() -> I
    void showContextualLoading() -> N
    void hideContextualLoading() -> O
    void setAppContentLayout() -> P
    void startWriteReviewFragment() -> Q
    void removeWriteReviewFragment() -> R
    void setViewContent() -> S
    void setPopularity() -> T
    void getMoreReviews() -> U
    void setCommentListener() -> V
    void writeReview() -> W
    boolean onSuccessEvent(android.os.Bundle) -> l
    void onErrorEvent(android.os.Bundle) -> m
    void displayReviews() -> X
    void triggerReviews(java.lang.String,int) -> a
    java.lang.String access$0() -> b
    java.lang.Boolean access$1(pt.rocket.view.fragments.PopularityFragment) -> a
    void access$2(pt.rocket.view.fragments.PopularityFragment,java.lang.Boolean) -> a
    void access$3(pt.rocket.view.fragments.PopularityFragment) -> b
    void access$4(pt.rocket.view.fragments.PopularityFragment) -> c
pt.rocket.view.fragments.PopularityFragment$1 -> ceb:
    pt.rocket.view.fragments.PopularityFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.PopularityFragment$2 -> cec:
    android.view.View mLoadingLayout -> b
    pt.rocket.view.fragments.PopularityFragment this$0 -> a
    void OnScrollBottomReached() -> a
pt.rocket.view.fragments.PopularityFragment$3 -> ced:
    pt.rocket.view.fragments.PopularityFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.PopularityFragment$4 -> cee:
    pt.rocket.view.fragments.PopularityFragment this$0 -> a
    org.holoeverywhere.widget.TextView val$userName -> b
    pt.rocket.framework.objects.ProductReviewComment val$review -> c
    java.lang.String[] val$stringCor -> d
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.ProductBasicInfoFragment -> cef:
    java.lang.String TAG -> a
    org.holoeverywhere.widget.TextView mProductName -> b
    org.holoeverywhere.widget.TextView mProductResultPrice -> c
    org.holoeverywhere.widget.TextView mProductNormalPrice -> d
    android.widget.RelativeLayout mLoading -> e
    pt.rocket.framework.objects.CompleteProduct mCompleteProduct -> f
    int CURRENT_IMAGE_INDEX -> g
    android.view.View mainView -> ae
    pt.rocket.view.fragments.BaseFragment$OnFragmentActivityInteraction mCallback -> af
    java.lang.String unitPrice -> ag
    java.lang.String specialPrice -> ah
    int discountPercentage -> ai
    long stockQuantity -> aj
    pt.rocket.view.fragments.ProductBasicInfoFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onClick(android.view.View) -> onClick
    void showContentLoading() -> b
    void hideContentLoading() -> I
    void setBasicInfo() -> N
    void displayPriceInfo() -> O
    void notifyFragment(android.os.Bundle) -> c
pt.rocket.view.fragments.ProductDetailsDescriptionFragment -> ceg:
    java.lang.String TAG -> a
    org.holoeverywhere.widget.TextView mProductName -> b
    org.holoeverywhere.widget.TextView mProductResultPrice -> c
    org.holoeverywhere.widget.TextView mProductNormalPrice -> d
    org.holoeverywhere.widget.TextView mProductFeaturesText -> e
    org.holoeverywhere.widget.TextView mProductDescriptionText -> f
    org.holoeverywhere.widget.TextView mProductDetailsText -> g
    android.widget.RelativeLayout mLoading -> ae
    android.widget.LinearLayout mProductFeaturesContainer -> af
    pt.rocket.framework.objects.CompleteProduct mCompleteProduct -> ag
    android.view.View mainView -> ah
    pt.rocket.view.fragments.ProductDetailsDescriptionFragment productDetailsDescriptionFragment -> ai
    pt.rocket.view.fragments.ProductDetailsDescriptionFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void showContentLoading() -> b
    void hideContentLoading() -> I
    void getViews() -> N
    void displayProductInformation(android.view.View) -> b
    void displayPriceInformation() -> O
    void displayPriceInfo(java.lang.String,java.lang.String) -> a
    void displaySpecification() -> P
    void displayDescription() -> Q
    void displayDetails(android.view.View) -> c
    void notifyFragment(android.os.Bundle) -> c
pt.rocket.view.fragments.ProductDetailsFragment -> ceh:
    java.lang.String TAG -> c
    pt.rocket.view.fragments.ProductDetailsFragment productDetailsFragment -> d
    android.content.Context mContext -> e
    android.support.v4.app.DialogFragment mDialogAddedToCart -> f
    pt.rocket.framework.objects.CompleteProduct mCompleteProduct -> g
    android.view.ViewGroup mProductDiscountContainer -> ae
    android.widget.Button mAddToCartButton -> af
    org.holoeverywhere.widget.TextView mProductDiscountPercentage -> ag
    org.holoeverywhere.widget.TextView mProductName -> ah
    org.holoeverywhere.widget.TextView mProductResultPrice -> ai
    org.holoeverywhere.widget.TextView mProductNormalPrice -> aj
    android.view.ViewGroup mDetailsContainer -> a
    android.view.ViewGroup mVarianceContainer -> ak
    java.lang.String mCompleteProductUrl -> al
    android.view.ViewGroup mProductImageShowOffContainer -> am
    android.widget.ImageView mProductImage -> an
    android.widget.ProgressBar mProductImageLoading -> ao
    android.view.View mVariationsContainer -> ap
    int mSelectedSimple -> aq
    android.view.ViewGroup mProductRatingContainer -> ar
    android.widget.RatingBar mProductRating -> as
    org.holoeverywhere.widget.TextView mProductRatingCount -> at
    android.widget.Button mCallToOrderButton -> au
    org.holoeverywhere.widget.TextView mProductSpecText -> av
    android.view.View mProductSpecContainer -> aw
    org.holoeverywhere.widget.TextView mProductSpecSku -> ax
    android.widget.Button mVarianceButton -> ay
    org.holoeverywhere.widget.TextView mVariantNormPrice -> az
    org.holoeverywhere.widget.TextView mVariantSpecPrice -> aA
    boolean mHideVariationSelection -> aB
    org.holoeverywhere.widget.TextView mVarianceText -> aC
    android.view.ViewGroup mProductBasicInfoContainer -> aD
    long mBeginRequestMillis -> aE
    java.util.ArrayList mSimpleVariants -> aF
    org.holoeverywhere.widget.TextView mVariantChooseError -> aG
    pt.rocket.utils.HorizontalListView mList -> aH
    int mVariationsListPosition -> aI
    android.view.View mVariantPriceContainer -> aJ
    java.lang.String mNavigationPath -> aK
    int mNavigationSource -> aL
    pt.rocket.controllers.ProductImagesAdapter mAdapter -> aM
    pt.rocket.interfaces.IResponseCallback mCallBack -> b
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> aN
    void reset() -> N
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void init() -> O
    void setAppContentLayout() -> P
    void setContentInformation() -> Q
    void loadProduct() -> R
    void preselectASimpleItem() -> S
    java.util.Set scanSimpleAttributesForKnownVariants(java.util.ArrayList) -> b
    void scanSimpleForKnownVariants(pt.rocket.framework.objects.ProductSimple,java.util.Set) -> a
    java.util.ArrayList createSimpleVariants() -> T
    java.lang.String calcVariationStringForSimple(pt.rocket.framework.objects.ProductSimple,java.util.Set) -> b
    java.util.HashMap createVariantAttributesHashMap(pt.rocket.framework.objects.ProductSimple) -> a
    pt.rocket.framework.objects.ProductSimple getSelectedSimple() -> U
    void displayVariations() -> V
    boolean isNotValidVariation(java.util.ArrayList) -> c
    int findIndexOfSelectedVariation() -> W
    void loadProductImage(int) -> b
    void displayPriceInfoOverallOrForSimple() -> X
    long getPriceForTrackingAsLong(pt.rocket.framework.objects.ProductSimple) -> b
    void displayPriceInfo(java.lang.String,java.lang.String,int) -> a
    void updateStockInfo() -> Y
    void displayRatingInfo() -> Z
    void displaySpecification() -> aa
    void displayVariantsContainer() -> a
    void updateVariants() -> b
    java.lang.String currencyFormatHelper(java.lang.String) -> a
    void executeAddProductToCart() -> ab
    void showChooseReminder() -> ac
    void displayProduct(pt.rocket.framework.objects.CompleteProduct) -> a
    void executeAddToShoppingCartCompleted() -> ad
    void onClick(android.view.View) -> onClick
    void showGallery() -> ae
    void showVariantsDialog() -> af
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onDialogListItemSelect(java.lang.String,int,java.lang.String) -> a
    void updateVariantionListPosition(java.lang.String,int) -> a
    boolean onSuccessEvent(android.os.Bundle) -> l
    void triggerProduct(java.lang.String) -> b
    void triggerAddItemToCart(pt.rocket.framework.objects.ShoppingCartItem) -> a
    android.support.v4.app.DialogFragment access$0(pt.rocket.view.fragments.ProductDetailsFragment) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> I
pt.rocket.view.fragments.ProductDetailsFragment$1 -> cei:
    pt.rocket.view.fragments.ProductDetailsFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.ProductDetailsFragment$2 -> cej:
    pt.rocket.view.fragments.ProductDetailsFragment this$0 -> i
    android.widget.ImageView val$image -> j
    android.widget.ProgressBar val$loadingImage -> k
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.view.fragments.ProductDetailsFragment$3 -> cek:
    pt.rocket.view.fragments.ProductDetailsFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.ProductImageGalleryFragment -> cel:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.ProductImageGalleryFragment productImageGalleryFragment -> b
    pt.rocket.utils.JumiaViewPagerWithZoom mViewPager -> c
    pt.rocket.controllers.GalleryPagerAdapter galleryAdapter -> d
    android.widget.RelativeLayout mProductImageLoading -> e
    pt.rocket.framework.objects.CompleteProduct mCompleteProduct -> f
    java.lang.String mCompleteProductUrl -> g
    android.view.View mainView -> ae
    boolean showHorizontalListView -> af
    boolean isZoomAvailable -> ag
    int mVariationsListPosition -> ah
    pt.rocket.utils.HorizontalListView mImagesList -> ai
    int currentPosition -> aj
    java.util.ArrayList imagesList -> ak
    pt.rocket.view.fragments.ProductImageGalleryFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void createViewPager() -> a
    void showImageLoading() -> b
    void hideImageLoading() -> I
    void updateImage(int) -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean allowBackPressed() -> H
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> c_
    void notifyFragment(android.os.Bundle) -> c
    pt.rocket.controllers.GalleryPagerAdapter access$0(pt.rocket.view.fragments.ProductImageGalleryFragment) -> a
    pt.rocket.utils.JumiaViewPagerWithZoom access$1(pt.rocket.view.fragments.ProductImageGalleryFragment) -> b
    int access$2(pt.rocket.view.fragments.ProductImageGalleryFragment) -> c
    boolean access$3(pt.rocket.view.fragments.ProductImageGalleryFragment) -> d
    pt.rocket.framework.objects.CompleteProduct access$4(pt.rocket.view.fragments.ProductImageGalleryFragment) -> e
    int access$5(pt.rocket.view.fragments.ProductImageGalleryFragment) -> f
    void access$6(pt.rocket.view.fragments.ProductImageGalleryFragment,int) -> a
pt.rocket.view.fragments.ProductImageGalleryFragment$1 -> cem:
    pt.rocket.view.fragments.ProductImageGalleryFragment this$0 -> a
    void onPageSelected(int) -> c_
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
pt.rocket.view.fragments.ProductImageGalleryFragment$2 -> cen:
    pt.rocket.view.fragments.ProductImageGalleryFragment this$0 -> a
    android.view.GestureDetector val$tapGestureDetector -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
pt.rocket.view.fragments.ProductImageGalleryFragment$ChangePageTask -> ceo:
    pt.rocket.view.fragments.ProductImageGalleryFragment this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    pt.rocket.view.fragments.ProductImageGalleryFragment access$3(pt.rocket.view.fragments.ProductImageGalleryFragment$ChangePageTask) -> a
pt.rocket.view.fragments.ProductImageGalleryFragment$ChangePageTask$1 -> cep:
    pt.rocket.view.fragments.ProductImageGalleryFragment$ChangePageTask this$1 -> a
    void run() -> run
pt.rocket.view.fragments.ProductImageGalleryFragment$TapGestureListener -> ceq:
    pt.rocket.view.fragments.ProductImageGalleryFragment this$0 -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
pt.rocket.view.fragments.ProductRelatedItemsFragment -> cer:
    java.lang.String TAG -> a
    int PAGE_NUMBER -> b
    int MAX_PAGE_ITEMS -> c
    java.util.ArrayList relatedItemsList -> d
    android.support.v4.view.ViewPager mViewPager -> e
    pt.rocket.view.fragments.ProductRelatedItemsFragment getInstance() -> a
    void onCreate(android.os.Bundle) -> a
    void onResume() -> t
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onPause() -> u
    void getRelatedItems() -> b
    void generateLastViewedLayout() -> I
pt.rocket.view.fragments.ProductSpecificationsFragment -> ces:
    java.lang.String TAG -> a
    org.holoeverywhere.widget.TextView mProductSpecText -> b
    android.view.View mProductSpecContainer -> c
    org.holoeverywhere.widget.TextView mProductSpecSku -> d
    android.widget.RelativeLayout mLoading -> e
    pt.rocket.framework.objects.CompleteProduct mCompleteProduct -> f
    int CURRENT_IMAGE_INDEX -> g
    android.view.View mainView -> ae
    pt.rocket.view.fragments.ProductSpecificationsFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onClick(android.view.View) -> onClick
    void showContentLoading() -> b
    void hideContentLoading() -> I
    void displaySpecification() -> N
    void notifyFragment(android.os.Bundle) -> c
pt.rocket.view.fragments.ProductVariationsFragment -> cet:
    java.lang.String TAG -> a
    android.view.View mVariationsContainer -> b
    pt.rocket.framework.objects.CompleteProduct mCompleteProduct -> c
    pt.rocket.utils.HorizontalListView mList -> d
    pt.rocket.controllers.ProductImagesAdapter mAdapter -> e
    int mVariationsListPosition -> f
    android.view.View mainView -> g
    android.content.SharedPreferences sharedPreferences -> ae
    pt.rocket.view.fragments.ProductVariationsFragment getInstance() -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void displayVariations() -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean isNotValidVariation(java.util.ArrayList) -> b
    int findIndexOfSelectedVariation() -> I
    void notifyFragment(android.os.Bundle) -> c
pt.rocket.view.fragments.ReviewFragment -> ceu:
    java.lang.String TAG -> a
    pt.rocket.view.fragments.ReviewFragment reviewFragment -> b
    pt.rocket.view.fragments.ReviewFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void setAppContentLayout() -> b
pt.rocket.view.fragments.SearchFragment -> cev:
    java.lang.String TAG -> c
    pt.rocket.view.fragments.SearchFragment searchFragment -> d
    pt.rocket.controllers.SearchSuggestionsAdapter searchSuggestionsAdapter -> e
    android.os.Bundle savedState -> f
    android.widget.EditText searchTermView -> g
    android.widget.ListView listView -> ae
    android.widget.TextView suggestionsEmptyText -> af
    android.view.View suggestionsLayout -> ag
    java.lang.String searchSuggestionText -> ah
    long mBeginRequestMillis -> ai
    java.util.List searchSuggestions -> aj
    android.text.TextWatcher searchInputWatcher -> ak
    java.lang.Runnable getSuggestionsRunnable -> al
    android.view.View$OnKeyListener searchKeyListener -> a
    pt.rocket.interfaces.IResponseCallback mCallBack -> b
    pt.rocket.view.fragments.SearchFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void setAppContentLayout() -> R
    void initSearchView() -> b
    void restoreSearchView() -> I
    void setSearchBar() -> N
    void executeSearch(java.lang.String) -> a
    void requestSuggestions() -> S
    void setEmptySuggestions(int) -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void showKeyboardAndFocus() -> O
    void hideKeyboardAndFocus() -> P
    void setSearchSuggestions(java.util.List) -> a
    void onErrorEvent(android.os.Bundle) -> l
    void onSuccessEvent(android.os.Bundle) -> m
    void access$0(pt.rocket.view.fragments.SearchFragment,java.lang.String) -> a
    android.widget.EditText access$1(pt.rocket.view.fragments.SearchFragment) -> a
    java.lang.Runnable access$2(pt.rocket.view.fragments.SearchFragment) -> b
    java.lang.String access$3(pt.rocket.view.fragments.SearchFragment) -> c
    void access$4(pt.rocket.view.fragments.SearchFragment,int) -> a
    void access$5(pt.rocket.view.fragments.SearchFragment) -> d
    void access$6(pt.rocket.view.fragments.SearchFragment,android.os.Bundle) -> a
    void access$7(pt.rocket.view.fragments.SearchFragment,android.os.Bundle) -> b
    java.lang.String access$8() -> Q
pt.rocket.view.fragments.SearchFragment$1 -> cew:
    pt.rocket.view.fragments.SearchFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
pt.rocket.view.fragments.SearchFragment$2 -> cex:
    pt.rocket.view.fragments.SearchFragment this$0 -> a
    void run() -> run
pt.rocket.view.fragments.SearchFragment$3 -> cey:
    pt.rocket.view.fragments.SearchFragment this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
pt.rocket.view.fragments.SearchFragment$4 -> cez:
    pt.rocket.view.fragments.SearchFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.SearchFragment$5 -> cfa:
    pt.rocket.view.fragments.SearchFragment this$0 -> b
    boolean onDrawableTouch(android.view.MotionEvent) -> a
pt.rocket.view.fragments.SearchFragment$6 -> cfb:
    pt.rocket.view.fragments.SearchFragment this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
pt.rocket.view.fragments.SearchFragment$7 -> cfc:
    pt.rocket.view.fragments.SearchFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionForgotPasswordFragment -> cfd:
    java.lang.String TAG -> c
    pt.rocket.view.fragments.SessionForgotPasswordFragment forgotPasswordFragment -> d
    pt.rocket.pojo.DynamicForm dynamicForm -> a
    android.widget.LinearLayout container -> e
    pt.rocket.forms.Form formResponse -> f
    android.os.Bundle savedInstanceState -> g
    pt.rocket.interfaces.IResponseCallback mCallBack -> b
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ae
    pt.rocket.view.fragments.SessionForgotPasswordFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onSaveInstanceState(android.os.Bundle) -> e
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void setAppContentLayout() -> I
    void requestPassword() -> N
    void displayForm(pt.rocket.forms.Form) -> a
    boolean onSuccessEvent(android.os.Bundle) -> l
    boolean onErrorEvent(android.os.Bundle) -> m
    void triggerForgotForm() -> O
    void triggerForgot(android.content.ContentValues) -> a
    void access$0(pt.rocket.view.fragments.SessionForgotPasswordFragment) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> b
pt.rocket.view.fragments.SessionForgotPasswordFragment$1 -> cfe:
    pt.rocket.view.fragments.SessionForgotPasswordFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.SessionForgotPasswordFragment$2 -> cff:
    pt.rocket.view.fragments.SessionForgotPasswordFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionForgotPasswordFragment$3 -> cfg:
    pt.rocket.view.fragments.SessionForgotPasswordFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionForgotPasswordFragment$4 -> cfh:
    pt.rocket.view.fragments.SessionForgotPasswordFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionLoginFragment -> cfi:
    java.lang.String TAG -> c
    android.view.View signinButton -> d
    android.view.ViewGroup container -> e
    android.widget.EditText pass_p -> f
    android.widget.EditText user -> g
    android.view.View forgetPass -> ae
    android.view.View register -> af
    pt.rocket.forms.Form formResponse -> ag
    boolean wasAutologin -> ah
    boolean autoLogin -> ai
    pt.rocket.pojo.DynamicForm dynamicForm -> aj
    android.os.Bundle savedInstanceState -> ak
    pt.rocket.view.fragments.SessionLoginFragment loginFragment -> al
    pt.rocket.controllers.fragments.FragmentType nextFragmentType -> am
    com.facebook.UiLifecycleHelper uiHelper -> an
    java.lang.String loginOrigin -> ao
    boolean cameFromRegister -> ap
    java.util.Locale mLocale -> aq
    com.facebook.Session$StatusCallback callback -> ar
    android.view.View$OnClickListener onCommonClickListener -> a
    pt.rocket.interfaces.IResponseCallback mCallBack -> b
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> as
    pt.rocket.view.fragments.SessionLoginFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onActivityResult(int,int,android.content.Intent) -> a
    void onSaveInstanceState(android.os.Bundle) -> e
    void onSessionStateChange(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    void setLoginBottomLayout() -> I
    void requestLogin() -> N
    void requestFacebookLogin(com.facebook.model.GraphUser) -> a
    void setFormClickDetails() -> a
    boolean onSuccessEvent(android.os.Bundle) -> m
    void loadForm(pt.rocket.forms.Form) -> a
    boolean onErrorEvent(android.os.Bundle) -> n
    void triggerAutoLogin() -> O
    void triggerLogin(android.content.ContentValues,boolean) -> a
    void triggerFacebookLogin(android.content.ContentValues,boolean) -> b
    void triggerLoginForm() -> P
    void triggerInitForm() -> Q
    void access$0(pt.rocket.view.fragments.SessionLoginFragment,com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
    pt.rocket.pojo.DynamicForm access$1(pt.rocket.view.fragments.SessionLoginFragment) -> a
    void access$2(pt.rocket.view.fragments.SessionLoginFragment) -> b
    void access$3(pt.rocket.view.fragments.SessionLoginFragment) -> c
    void access$4(pt.rocket.view.fragments.SessionLoginFragment,boolean) -> a
    void access$5(pt.rocket.view.fragments.SessionLoginFragment,com.facebook.model.GraphUser) -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> b
pt.rocket.view.fragments.SessionLoginFragment$1 -> cfj:
    pt.rocket.view.fragments.SessionLoginFragment this$0 -> a
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> a
pt.rocket.view.fragments.SessionLoginFragment$2 -> cfk:
    pt.rocket.view.fragments.SessionLoginFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionLoginFragment$3 -> cfl:
    pt.rocket.view.fragments.SessionLoginFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.SessionLoginFragment$4 -> cfm:
    pt.rocket.view.fragments.SessionLoginFragment this$0 -> a
    void onCompleted(com.facebook.model.GraphUser,com.facebook.Response) -> a
pt.rocket.view.fragments.SessionLoginFragment$5 -> cfn:
    pt.rocket.view.fragments.SessionLoginFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionLoginFragment$6 -> cfo:
    pt.rocket.view.fragments.SessionLoginFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionRegisterFragment -> cfp:
    java.lang.String TAG -> e
    pt.rocket.view.fragments.SessionRegisterFragment registerFragment -> f
    boolean termsAreRequired -> g
    android.widget.Button registerButton -> ae
    android.view.View loginRedirect -> af
    android.widget.CheckBox checkTerms -> ag
    org.holoeverywhere.widget.TextView linkText -> ah
    org.holoeverywhere.widget.TextView mandatory -> ai
    org.holoeverywhere.widget.TextView registerRequiredText -> aj
    pt.rocket.pojo.DynamicForm serverForm -> ak
    pt.rocket.pojo.DynamicFormItem termsLink -> al
    java.lang.String terms -> am
    android.widget.LinearLayout container -> an
    java.lang.String registerLocation -> ao
    java.util.Locale mLocale -> ap
    android.view.View$OnFocusChangeListener focus_listener -> a
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener selected_listener -> b
    android.text.TextWatcher text_watcher -> c
    pt.rocket.interfaces.IResponseCallback mCallBack -> d
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> aq
    pt.rocket.view.fragments.SessionRegisterFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onSaveInstanceState(android.os.Bundle) -> e
    void saveFormState() -> a
    void setAppContentLayout() -> b
    void getFormComponents() -> Q
    void setFormComponents() -> R
    void setSubmitButton() -> S
    void setLoginListener() -> T
    boolean checkTermsIfRequired() -> U
    boolean checkPasswords() -> V
    void checkInputFields() -> W
    void requestRegister() -> I
    android.os.Bundle saveFormToBundle() -> X
    boolean onSuccessEvent(android.os.Bundle) -> m
    void requestStore(android.os.Bundle) -> p
    void loadForm(pt.rocket.forms.Form) -> a
    void setTermsListener() -> Y
    boolean onErrorEvent(android.os.Bundle) -> n
    void triggerRegister(android.content.ContentValues) -> a
    void triggerRegisterForm() -> Z
    void triggerTerms() -> aa
    void triggerStoreLogin(android.content.ContentValues) -> b
    void access$0(pt.rocket.view.fragments.SessionRegisterFragment) -> a
    java.lang.String access$1() -> N
    pt.rocket.pojo.DynamicForm access$2() -> O
    org.holoeverywhere.widget.TextView access$3(pt.rocket.view.fragments.SessionRegisterFragment) -> b
    boolean access$4(pt.rocket.view.fragments.SessionRegisterFragment) -> c
    boolean access$5(pt.rocket.view.fragments.SessionRegisterFragment) -> d
    org.holoeverywhere.widget.TextView access$6(pt.rocket.view.fragments.SessionRegisterFragment) -> e
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> P
    java.lang.String access$8(pt.rocket.view.fragments.SessionRegisterFragment) -> f
    android.widget.Button access$9(pt.rocket.view.fragments.SessionRegisterFragment) -> g
pt.rocket.view.fragments.SessionRegisterFragment$1 -> cfq:
    pt.rocket.view.fragments.SessionRegisterFragment this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
pt.rocket.view.fragments.SessionRegisterFragment$10 -> cfr:
    pt.rocket.view.fragments.SessionRegisterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionRegisterFragment$2 -> cfs:
    pt.rocket.view.fragments.SessionRegisterFragment this$0 -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
pt.rocket.view.fragments.SessionRegisterFragment$3 -> cft:
    pt.rocket.view.fragments.SessionRegisterFragment this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
pt.rocket.view.fragments.SessionRegisterFragment$4 -> cfu:
    pt.rocket.view.fragments.SessionRegisterFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.SessionRegisterFragment$5 -> cfv:
    pt.rocket.view.fragments.SessionRegisterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionRegisterFragment$6 -> cfw:
    pt.rocket.view.fragments.SessionRegisterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionRegisterFragment$7 -> cfx:
    pt.rocket.view.fragments.SessionRegisterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionRegisterFragment$8 -> cfy:
    pt.rocket.view.fragments.SessionRegisterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionRegisterFragment$9 -> cfz:
    pt.rocket.view.fragments.SessionRegisterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.SessionTermsFragment -> cga:
    java.lang.String TAG -> a
    org.holoeverywhere.widget.TextView textView -> b
    pt.rocket.view.fragments.SessionTermsFragment termsFragment -> c
    java.lang.String termsText -> d
    pt.rocket.view.fragments.SessionTermsFragment getInstance(android.os.Bundle) -> l
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void setupView() -> a
pt.rocket.view.fragments.ShoppingCartFragment -> cgb:
    java.lang.String TAG -> d
    pt.rocket.view.fragments.ShoppingCartFragment reviewFragment -> e
    long mBeginRequestMillis -> f
    android.widget.LinearLayout noItems -> g
    android.view.View container -> ae
    pt.rocket.framework.objects.MinOrderAmount minAmount -> af
    java.util.List items -> ag
    java.util.ArrayList itemsValues -> ah
    double unreduced_cart_price -> ai
    double reduced_cart_price -> aj
    boolean isShoppingBasket -> a
    android.widget.LinearLayout lView -> ak
    android.widget.Button checkoutButton -> al
    pt.rocket.utils.dialogfragments.DialogListFragment dialogList -> am
    android.widget.Button couponButton -> an
    android.view.View voucherDivider -> ao
    org.holoeverywhere.widget.TextView voucherError -> ap
    org.holoeverywhere.widget.EditText voucherValue -> b
    java.lang.String mVoucher -> aq
    boolean noPaymentNeeded -> ar
    boolean removeVoucher -> as
    java.lang.String itemRemoved_sku -> at
    java.lang.String itemRemoved_price -> au
    pt.rocket.interfaces.IResponseCallback responseCallback -> c
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> av
    pt.rocket.view.fragments.ShoppingCartFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void triggerGetShoppingCart() -> S
    void triggerRemoveItem(pt.rocket.framework.objects.ShoppingCartItem) -> a
    void triggerIsNativeCheckoutAvailable() -> T
    void triggerSubmitVoucher(android.content.ContentValues) -> a
    void triggerRemoveVoucher(android.content.ContentValues) -> b
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void releaseVars() -> U
    void setAppContentLayout() -> b
    void setListeners() -> I
    boolean onSuccessEvent(android.os.Bundle) -> l
    boolean onErrorEvent(android.os.Bundle) -> m
    void displayShoppingCart(pt.rocket.framework.objects.ShoppingCart) -> a
    void setTotal(pt.rocket.framework.objects.ShoppingCart) -> b
    android.view.View getView(int,android.view.ViewGroup,android.view.LayoutInflater,pt.rocket.view.fragments.ShoppingCartFragment$CartItemValues) -> a
    void showNoItems() -> N
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void goToProducDetails(int) -> c
    void goToWebCheckout() -> V
    void checkMinOrderAmount() -> W
    void deleteSelectedElements() -> O
    void hideNoItems() -> P
    void changeQuantityOfItem(int) -> b
    void changeQuantityOfItem(int,int) -> a
    void changeItemQuantityInShoppingCart(java.util.List) -> a
    void prepareCouponView() -> X
    java.util.List access$0(pt.rocket.view.fragments.ShoppingCartFragment) -> a
    void access$1(pt.rocket.view.fragments.ShoppingCartFragment) -> b
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> Q
    void access$3(pt.rocket.view.fragments.ShoppingCartFragment,int) -> a
    void access$4(pt.rocket.view.fragments.ShoppingCartFragment,java.lang.String) -> a
    java.lang.String access$5(pt.rocket.view.fragments.ShoppingCartFragment) -> c
    java.lang.String access$6() -> R
    android.widget.Button access$7(pt.rocket.view.fragments.ShoppingCartFragment) -> d
    void access$8(pt.rocket.view.fragments.ShoppingCartFragment,android.content.ContentValues) -> a
    void access$9(pt.rocket.view.fragments.ShoppingCartFragment,android.content.ContentValues) -> b
pt.rocket.view.fragments.ShoppingCartFragment$1 -> cgc:
    pt.rocket.view.fragments.ShoppingCartFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.ShoppingCartFragment$2 -> cgd:
    pt.rocket.utils.dialogfragments.DialogGenericFragment messageDialog -> b
    pt.rocket.view.fragments.ShoppingCartFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
pt.rocket.view.fragments.ShoppingCartFragment$3 -> cge:
    pt.rocket.view.fragments.ShoppingCartFragment this$0 -> i
    pt.rocket.view.fragments.ShoppingCartFragment$Item val$prodItem -> j
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
pt.rocket.view.fragments.ShoppingCartFragment$4 -> cgf:
    pt.rocket.view.fragments.ShoppingCartFragment this$0 -> a
    pt.rocket.view.fragments.ShoppingCartFragment$Item val$prodItem -> b
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.ShoppingCartFragment$5 -> cgg:
    pt.rocket.view.fragments.ShoppingCartFragment this$0 -> a
    pt.rocket.view.fragments.ShoppingCartFragment$Item val$prodItem -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.ShoppingCartFragment$6 -> cgh:
    pt.rocket.view.fragments.ShoppingCartFragment this$0 -> a
    pt.rocket.view.fragments.ShoppingCartFragment$Item val$prodItem -> b
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.ShoppingCartFragment$7 -> cgi:
    pt.rocket.view.fragments.ShoppingCartFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.ShoppingCartFragment$8 -> cgj:
    pt.rocket.view.fragments.ShoppingCartFragment this$0 -> a
    int val$position -> b
    void onDialogListItemSelect(java.lang.String,int,java.lang.String) -> a
pt.rocket.view.fragments.ShoppingCartFragment$9 -> cgk:
    pt.rocket.view.fragments.ShoppingCartFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.ShoppingCartFragment$CartItemValues -> cgl:
    java.lang.Boolean is_in_wishlist -> a
    java.lang.Boolean is_checked -> b
    java.lang.String product_name -> c
    java.lang.String price -> d
    java.lang.String price_disc -> e
    java.lang.Integer product_id -> f
    long quantity -> g
    java.lang.String image -> h
    java.lang.Double discount_value -> i
    long stock -> j
    java.lang.Integer min_delivery_time -> k
    java.lang.Integer max_delivery_time -> l
    java.util.Map simpleData -> m
    java.lang.String variation -> n
pt.rocket.view.fragments.ShoppingCartFragment$Item -> cgm:
    org.holoeverywhere.widget.TextView itemName -> a
    org.holoeverywhere.widget.TextView priceView -> b
    android.widget.Button quantityBtn -> c
    android.widget.ImageView productView -> d
    android.view.View pBar -> e
    org.holoeverywhere.widget.TextView discountPercentage -> f
    org.holoeverywhere.widget.TextView priceDisc -> g
    android.widget.ImageView promoImg -> h
    org.holoeverywhere.widget.TextView variancesContainer -> i
    android.widget.Button deleteBtn -> j
    pt.rocket.view.fragments.ShoppingCartFragment$CartItemValues itemValues -> k
    int position -> l
    void finalize() -> finalize
pt.rocket.view.fragments.SlideMenuFragment -> pt.rocket.view.fragments.SlideMenuFragment:
    java.lang.String TAG -> c
    android.view.ViewGroup navigationContainer -> d
    android.view.LayoutInflater inflater -> e
    pt.rocket.framework.utils.LoadingBarView loadingBarView -> f
    android.view.View loadingBarContainer -> g
    int recoveryCount -> ae
    pt.rocket.utils.dialogfragments.DialogGenericFragment dialogLogout -> af
    android.os.Handler serviceConnectedHandler -> ag
    android.os.Handler recoveryHandler -> a
    pt.rocket.interfaces.IResponseCallback mCallBack -> b
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ah
    int[] $SWITCH_TABLE$pt$rocket$utils$NavigationAction -> ai
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onResumeExecution() -> Q
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void onDestroy() -> v
    boolean onSuccessEvent(android.os.Bundle) -> l
    void onUpdate() -> a
    void setLogInOutText(android.view.View) -> b
    void updateNavigationItems() -> R
    void updateItem(android.view.View) -> c
    void fillNavigationContainer(java.util.ArrayList) -> b
    android.view.View getActionElementLayout(pt.rocket.framework.components.NavigationListComponent,android.view.ViewGroup) -> a
    void setActionSelected(android.view.View) -> d
    void setSearchItem(android.view.View) -> e
    void disableSearchItem(android.view.View) -> f
    void enableSearchItem(android.view.View) -> g
    android.view.View createBasket(android.view.ViewGroup,pt.rocket.framework.components.NavigationListComponent,android.view.View$OnClickListener) -> a
    android.view.View createGenericComponent(android.view.ViewGroup,pt.rocket.framework.components.NavigationListComponent,int,int,android.view.View$OnClickListener) -> a
    android.view.View createGenericComponent(android.view.ViewGroup,pt.rocket.framework.components.NavigationListComponent,int,java.lang.String,android.view.View$OnClickListener) -> a
    void onClick(android.view.View) -> onClick
    void updateCartInfo() -> b
    void updateCart() -> S
    void loginOut(pt.rocket.view.BaseActivity) -> b
    void trigger() -> T
    void access$0(pt.rocket.view.fragments.SlideMenuFragment) -> a
    void access$1(pt.rocket.view.fragments.SlideMenuFragment) -> b
    java.lang.String access$2() -> I
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> N
    int[] $SWITCH_TABLE$pt$rocket$utils$NavigationAction() -> O
    pt.rocket.utils.dialogfragments.DialogGenericFragment access$5() -> P
pt.rocket.view.fragments.SlideMenuFragment$1 -> cgn:
    pt.rocket.view.fragments.SlideMenuFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
pt.rocket.view.fragments.SlideMenuFragment$2 -> cgo:
    pt.rocket.view.fragments.SlideMenuFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
pt.rocket.view.fragments.SlideMenuFragment$3 -> cgp:
    pt.rocket.view.fragments.SlideMenuFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.SlideMenuFragment$4 -> cgq:
    pt.rocket.view.fragments.SlideMenuFragment this$0 -> a
    java.lang.String val$quantity -> b
    org.holoeverywhere.widget.TextView val$vCartCount -> c
    java.lang.String val$value -> d
    org.holoeverywhere.widget.TextView val$navIm -> e
    org.holoeverywhere.widget.TextView val$navVat -> f
    android.view.View val$navCartEmptyText -> g
    void run() -> run
pt.rocket.view.fragments.SlideMenuFragment$5 -> cgr:
    pt.rocket.view.BaseActivity val$activity -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.TrackOrderFragment -> cgs:
    java.lang.String TAG -> b
    pt.rocket.view.fragments.TrackOrderFragment mTrackOrderFragment -> c
    pt.rocket.framework.utils.LoadingBarView loadingTrackBarView -> d
    org.holoeverywhere.widget.EditText mEditText -> e
    pt.rocket.framework.objects.OrderTracker mOrderTracker -> f
    boolean mOrderTrackerError -> g
    android.view.View$OnClickListener trackOrderClickListener -> a
    pt.rocket.view.fragments.TrackOrderFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void setupView() -> b
    void showLoading() -> I
    void inflateItemsList(java.util.ArrayList) -> b
    void proccessSuccess() -> N
    void proccessError() -> O
    boolean onSuccessEvent(android.os.Bundle) -> l
    boolean onErrorEvent(android.os.Bundle) -> m
    void notifyFragment(android.os.Bundle) -> c
    org.holoeverywhere.widget.EditText access$0(pt.rocket.view.fragments.TrackOrderFragment) -> a
    void access$1(pt.rocket.view.fragments.TrackOrderFragment) -> b
pt.rocket.view.fragments.TrackOrderFragment$1 -> cgt:
    pt.rocket.view.fragments.TrackOrderFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    pt.rocket.view.fragments.TrackOrderFragment access$0(pt.rocket.view.fragments.TrackOrderFragment$1) -> a
pt.rocket.view.fragments.TrackOrderFragment$1$1 -> cgu:
    pt.rocket.view.fragments.TrackOrderFragment$1 this$1 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.WriteReviewFragment -> cgv:
    java.lang.String TAG -> b
    pt.rocket.view.fragments.WriteReviewFragment writeReviewFragment -> c
    pt.rocket.framework.objects.CompleteProduct completeProduct -> d
    org.holoeverywhere.widget.TextView productName -> e
    org.holoeverywhere.widget.TextView productResultPrice -> f
    org.holoeverywhere.widget.TextView productNormalPrice -> g
    android.widget.LinearLayout labelsContainer -> ae
    android.widget.LinearLayout ratingBarContainer -> af
    org.holoeverywhere.widget.EditText titleText -> ag
    org.holoeverywhere.widget.EditText nameText -> ah
    java.util.HashMap ratings -> ai
    org.holoeverywhere.widget.EditText reviewText -> aj
    pt.rocket.framework.objects.ProductReviewCommentCreated productReviewCreated -> ak
    pt.rocket.utils.dialogfragments.DialogGenericFragment dialog_review_submitted -> al
    pt.rocket.framework.objects.Customer customerCred -> am
    boolean isExecutingSendReview -> an
    java.util.HashMap ratingOptions -> ao
    java.lang.String lastProductSku -> ap
    android.os.Bundle mSavedState -> aq
    pt.rocket.interfaces.IResponseCallback mCallBack -> a
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType -> ar
    pt.rocket.view.fragments.WriteReviewFragment getInstance() -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onStart() -> c_
    void onResume() -> t
    void onSaveInstanceState(android.os.Bundle) -> e
    void onPause() -> u
    void onStop() -> e
    void onDestroyView() -> f
    void setLayout() -> I
    void loadSavedState() -> N
    void displayPriceInformation() -> O
    void displayPriceInfo(java.lang.String,java.lang.String) -> a
    boolean checkReview() -> P
    boolean checkEmpty(int,org.holoeverywhere.widget.EditText[]) -> a
    void executeSendReview() -> Q
    boolean onSuccessEvent(android.os.Bundle) -> l
    boolean onErrorEvent(android.os.Bundle) -> m
    void notifyFragment(android.os.Bundle) -> c
    void triggerAutoLogin() -> R
    void triggerCustomer() -> S
    void triggerRatingOptions() -> T
    void triggerWriteReview(java.lang.String,int,pt.rocket.framework.objects.ProductReviewCommentCreated) -> a
    void triggerWriteReview(java.lang.String,pt.rocket.framework.objects.ProductReviewCommentCreated) -> a
    boolean access$0(pt.rocket.view.fragments.WriteReviewFragment) -> a
    boolean access$1(pt.rocket.view.fragments.WriteReviewFragment) -> b
    void access$2(pt.rocket.view.fragments.WriteReviewFragment,boolean) -> a
    void access$3(pt.rocket.view.fragments.WriteReviewFragment) -> c
    pt.rocket.utils.dialogfragments.DialogGenericFragment access$4(pt.rocket.view.fragments.WriteReviewFragment) -> d
    int[] $SWITCH_TABLE$pt$rocket$framework$utils$EventType() -> b
pt.rocket.view.fragments.WriteReviewFragment$1 -> cgw:
    pt.rocket.view.fragments.WriteReviewFragment this$0 -> a
    void onRequestError(android.os.Bundle) -> a_
    void onRequestComplete(android.os.Bundle) -> b_
pt.rocket.view.fragments.WriteReviewFragment$2 -> cgx:
    pt.rocket.view.fragments.WriteReviewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
pt.rocket.view.fragments.WriteReviewFragment$3 -> cgy:
    pt.rocket.view.fragments.WriteReviewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
uk.co.senab.photoview.Compat -> cgz:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationJellyBean(android.view.View,java.lang.Runnable) -> b
    int getPointerIndex(int) -> a
    int getPointerIndexEclair(int) -> b
    int getPointerIndexHoneyComb(int) -> c
uk.co.senab.photoview.PhotoView -> uk.co.senab.photoview.PhotoView:
    uk.co.senab.photoview.PhotoViewAttacher mAttacher -> a
    android.widget.ImageView$ScaleType mPendingScaleType -> b
    void setPhotoViewRotation(float) -> setPhotoViewRotation
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    float getMinScale() -> getMinScale
    float getMinimumScale() -> getMinimumScale
    float getMidScale() -> getMidScale
    float getMediumScale() -> getMediumScale
    float getMaxScale() -> getMaxScale
    float getMaximumScale() -> getMaximumScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMinimumScale(float) -> setMinimumScale
    void setMidScale(float) -> setMidScale
    void setMediumScale(float) -> setMediumScale
    void setMaxScale(float) -> setMaxScale
    void setMaximumScale(float) -> setMaximumScale
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScale(float) -> setScale
    void setScale(float,boolean) -> setScale
    void setScale(float,float,float,boolean) -> setScale
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void onDetachedFromWindow() -> onDetachedFromWindow
uk.co.senab.photoview.PhotoViewAttacher -> cha:
    boolean DEBUG -> b
    android.view.animation.Interpolator sInterpolator -> a
    float mMinScale -> c
    float mMidScale -> d
    float mMaxScale -> e
    boolean mAllowParentInterceptOnEdge -> f
    java.lang.ref.WeakReference mImageView -> g
    android.view.GestureDetector mGestureDetector -> h
    uk.co.senab.photoview.gestures.GestureDetector mScaleDragDetector -> i
    android.graphics.Matrix mBaseMatrix -> j
    android.graphics.Matrix mDrawMatrix -> k
    android.graphics.Matrix mSuppMatrix -> l
    android.graphics.RectF mDisplayRect -> m
    float[] mMatrixValues -> n
    uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener mMatrixChangeListener -> o
    uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener mPhotoTapListener -> p
    uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener mViewTapListener -> q
    android.view.View$OnLongClickListener mLongClickListener -> r
    int mIvTop -> s
    int mIvRight -> t
    int mIvBottom -> u
    int mIvLeft -> v
    uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable mCurrentFlingRunnable -> w
    int mScrollEdge -> x
    boolean mZoomEnabled -> y
    android.widget.ImageView$ScaleType mScaleType -> z
    float mLastRotation -> A
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> B
    void checkZoomLevels(float,float,float) -> b
    boolean hasDrawable(android.widget.ImageView) -> a
    boolean isSupportedScaleType(android.widget.ImageView$ScaleType) -> b
    void setImageViewScaleTypeMatrix(android.widget.ImageView) -> b
    void cleanup() -> a
    android.graphics.RectF getDisplayRect() -> b
    void setPhotoViewRotation(float) -> a
    android.widget.ImageView getImageView() -> c
    float getMinimumScale() -> d
    float getMediumScale() -> e
    float getMaximumScale() -> f
    float getScale() -> g
    android.widget.ImageView$ScaleType getScaleType() -> h
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    void onDrag(float,float) -> a
    void onFling(float,float,float,float) -> a
    void onGlobalLayout() -> onGlobalLayout
    void onScale(float,float,float) -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setAllowParentInterceptOnEdge(boolean) -> a
    void setMinimumScale(float) -> b
    void setMediumScale(float) -> c
    void setMaximumScale(float) -> d
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> a
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> a
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> a
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> a
    void setScale(float) -> e
    void setScale(float,boolean) -> a
    void setScale(float,float,float,boolean) -> a
    void setScaleType(android.widget.ImageView$ScaleType) -> a
    void setZoomable(boolean) -> b
    void update() -> i
    android.graphics.Matrix getDrawMatrix() -> j
    void cancelFling() -> m
    void checkAndDisplayMatrix() -> n
    void checkImageViewScaleType() -> o
    boolean checkMatrixBounds() -> p
    android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> a
    float getValue(android.graphics.Matrix,int) -> a
    void resetMatrix() -> q
    void setImageViewMatrix(android.graphics.Matrix) -> b
    void updateBaseMatrix(android.graphics.drawable.Drawable) -> a
    int getImageViewWidth(android.widget.ImageView) -> c
    int getImageViewHeight(android.widget.ImageView) -> d
    android.graphics.Matrix access$0(uk.co.senab.photoview.PhotoViewAttacher) -> a
    void access$1(uk.co.senab.photoview.PhotoViewAttacher) -> b
    boolean access$2() -> k
    void access$3(uk.co.senab.photoview.PhotoViewAttacher,android.graphics.Matrix) -> a
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> l
    android.view.View$OnLongClickListener access$5(uk.co.senab.photoview.PhotoViewAttacher) -> c
uk.co.senab.photoview.PhotoViewAttacher$1 -> chb:
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void onLongPress(android.view.MotionEvent) -> onLongPress
uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> chc:
    float mFocalX -> b
    float mFocalY -> c
    long mStartTime -> d
    float mZoomStart -> e
    float mZoomEnd -> f
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void run() -> run
    float interpolate() -> a
uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable -> chd:
    uk.co.senab.photoview.scrollerproxy.ScrollerProxy mScroller -> b
    int mCurrentX -> c
    int mCurrentY -> d
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void cancelFling() -> a
    void fling(int,int,int,int) -> a
    void run() -> run
uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener -> che:
    void onMatrixChanged(android.graphics.RectF) -> a
uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener -> chf:
    void onPhotoTap(android.view.View,float,float) -> a
uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener -> chg:
    void onViewTap(android.view.View,float,float) -> a
uk.co.senab.photoview.gestures.CupcakeGestureDetector -> chh:
    uk.co.senab.photoview.gestures.OnGestureListener mListener -> a
    float mLastTouchX -> b
    float mLastTouchY -> c
    float mTouchSlop -> d
    float mMinimumVelocity -> e
    android.view.VelocityTracker mVelocityTracker -> f
    boolean mIsDragging -> g
    void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener) -> a
    float getActiveX(android.view.MotionEvent) -> a
    float getActiveY(android.view.MotionEvent) -> b
    boolean isScaling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.EclairGestureDetector -> chi:
    int mActivePointerId -> f
    int mActivePointerIndex -> g
    float getActiveX(android.view.MotionEvent) -> a
    float getActiveY(android.view.MotionEvent) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.FroyoGestureDetector -> chj:
    android.view.ScaleGestureDetector mDetector -> f
    boolean isScaling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.FroyoGestureDetector$1 -> chk:
    uk.co.senab.photoview.gestures.FroyoGestureDetector this$0 -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
uk.co.senab.photoview.gestures.GestureDetector -> chl:
    boolean onTouchEvent(android.view.MotionEvent) -> c
    boolean isScaling() -> a
    void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener) -> a
uk.co.senab.photoview.gestures.OnGestureListener -> chm:
    void onDrag(float,float) -> a
    void onFling(float,float,float,float) -> a
    void onScale(float,float,float) -> a
uk.co.senab.photoview.gestures.VersionedGestureDetector -> chn:
    uk.co.senab.photoview.gestures.GestureDetector newInstance(android.content.Context,uk.co.senab.photoview.gestures.OnGestureListener) -> a
uk.co.senab.photoview.log.LogManager -> cho:
    uk.co.senab.photoview.log.Logger logger -> a
    uk.co.senab.photoview.log.Logger getLogger() -> a
uk.co.senab.photoview.log.Logger -> chp:
    int d(java.lang.String,java.lang.String) -> a
    int i(java.lang.String,java.lang.String) -> b
uk.co.senab.photoview.log.LoggerDefault -> chq:
    int d(java.lang.String,java.lang.String) -> a
    int i(java.lang.String,java.lang.String) -> b
uk.co.senab.photoview.scrollerproxy.GingerScroller -> chr:
    android.widget.OverScroller mScroller -> a
    boolean mFirstScroll -> b
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
uk.co.senab.photoview.scrollerproxy.IcsScroller -> chs:
    boolean computeScrollOffset() -> a
uk.co.senab.photoview.scrollerproxy.PreGingerScroller -> cht:
    android.widget.Scroller mScroller -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
uk.co.senab.photoview.scrollerproxy.ScrollerProxy -> chu:
    uk.co.senab.photoview.scrollerproxy.ScrollerProxy getScroller(android.content.Context) -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
