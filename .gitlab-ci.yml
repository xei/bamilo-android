# Reference: https://about.gitlab.com/2018/10/24/setting-up-gitlab-ci-for-android-projects/

# tell Gitlab Runners what Docker image to use.
# https://hub.docker.com/_/openjdk/ (Debian + Java)
image: openjdk:8-jdk

# variables that we are going to use throughout the script.
# ANDROID_COMPILE_SDK is the version of Android you're compiling with. It should match compileSdkVersion.
# ANDROID_BUILD_TOOLS is the version of the Android build tools you are using. It should match buildToolsVersion.
# ANDROID_SDK_TOOLS is a little funny. It's what version of the command line tools we're going to download from the official site (https://developer.android.com/studio/). So, that number really just comes from the latest version available there.
variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"

# This starts the block of the commands that will be run before each job in our config.
before_script:
# installing packages.
- apt-get --quiet update --yes
- apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
# installing the Android SDK:
- wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
- unzip -d android-sdk-linux android-sdk.zip
- echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
- echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
- echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
# setting up the environment
- export ANDROID_HOME=$PWD/android-sdk-linux
- export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
- chmod +x ./gradlew
# temporarily disable checking for EPIPE error and use yes to accept all licenses
- set +o pipefail
- yes | android-sdk-linux/tools/bin/sdkmanager --licenses
- set -o pipefail

# the build stage ensures the app compiles, and the test stage runs our unit and functional tests.
stages:
- build
- test

lintDebug:
  stage: build
  script:
  - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

assembleDebug:
  stage: build
  script:
  - ./gradlew assembleDebug
  artifacts:
    paths:
    - app/build/outputs/

debugTests:
  stage: test
  script:
  - ./gradlew -Pci --console=plain :app:testDebug